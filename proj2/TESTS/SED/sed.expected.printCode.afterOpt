
FUNCTION gnu_dev_major

BASIC BLOCK entry
%1:	lshr	 __dev XXX
%2:	and	 %1 XXX
%3:	lshr	 __dev XXX
%4:	trunc	 %3
%5:	and	 %4 XXX
%6:	zext	 %5
%7:	or	 %2 %6
%8:	trunc	 %7
%9:	ret	 %8

FUNCTION gnu_dev_minor

BASIC BLOCK entry
%10:	and	 __dev XXX
%11:	lshr	 __dev XXX
%12:	trunc	 %11
%13:	and	 %12 XXX
%14:	zext	 %13
%15:	or	 %10 %14
%16:	trunc	 %15
%17:	ret	 %16

FUNCTION gnu_dev_makedev

BASIC BLOCK entry
%18:	and	 __minor XXX
%19:	and	 __major XXX
%20:	shl	 %19 XXX
%21:	or	 %18 %20
%22:	zext	 %21
%23:	and	 __minor XXX
%24:	zext	 %23
%25:	shl	 %24 XXX
%26:	or	 %22 %25
%27:	and	 __major XXX
%28:	zext	 %27
%29:	shl	 %28 XXX
%30:	or	 %26 %29
%31:	ret	 %30

FUNCTION main

BASIC BLOCK entry
%32:	call	 XXX re_set_syntax
%33:	store	 XXX myname
%34:	br	 while.cond

BASIC BLOCK while.cond
%35:	phi	 XXX %78
%36:	phi	 XXX %79
%37:	call	 argc argv XXX XXX XXX getopt_long
%38:	icmp	 %37 XXX
%39:	br	 %38 while.end while.body

BASIC BLOCK while.body
%40:	switch	 %37 sw.default XXX sw.bb XXX sw.bb2 XXX sw.bb15 XXX sw.bb16 XXX sw.bb18

BASIC BLOCK sw.bb
%41:	store	 XXX no_default_output
%42:	br	 sw.epilog

BASIC BLOCK sw.bb2
%43:	icmp	 %35 XXX
%44:	br	 %43 if.else if.then

BASIC BLOCK if.then
%45:	load	 optarg
%46:	call	 %45 strlen
%47:	add	 %46 XXX
%48:	trunc	 %47
%49:	call	 %48 ck_malloc
%50:	load	 optarg
%51:	call	 %49 %50 strcpy
%52:	br	 if.end

BASIC BLOCK if.else
%53:	call	 %35 strlen
%54:	load	 optarg
%55:	call	 %54 strlen
%56:	add	 %53 %55
%57:	add	 %56 XXX
%58:	trunc	 %57
%59:	call	 %35 %58 ck_realloc
%60:	load	 optarg
%61:	call	 %59 %60 strcat
%62:	br	 if.end

BASIC BLOCK if.end
%63:	phi	 %49 %59
%64:	call	 %63 XXX strcat
%65:	br	 sw.epilog

BASIC BLOCK sw.bb15
%66:	load	 optarg
%67:	call	 %66 compile_file
%68:	br	 sw.epilog

BASIC BLOCK sw.bb16
%69:	load	 stdout
%70:	load	 version_string
%71:	call	 %69 XXX %70 fprintf
%72:	call	 XXX exit
%73:	unreachable	

BASIC BLOCK sw.bb18
%74:	call	 XXX usage
%75:	br	 sw.epilog

BASIC BLOCK sw.default
%76:	call	 XXX usage
%77:	br	 sw.epilog

BASIC BLOCK sw.epilog
%78:	phi	 %35 %35 %35 %63 %35
%79:	phi	 %36 %36 XXX XXX %36
%80:	br	 while.cond

BASIC BLOCK while.end
%81:	icmp	 %35 XXX
%82:	br	 %81 if.end20 if.then19

BASIC BLOCK if.then19
%83:	call	 %35 compile_string
%84:	call	 %35 free
%85:	br	 if.end20

BASIC BLOCK if.end20
%86:	icmp	 %36 XXX
%87:	br	 %86 if.then22 if.end27

BASIC BLOCK if.then22
%88:	load	 optind
%89:	icmp	 %88 argc
%90:	br	 %89 if.end26 if.then25

BASIC BLOCK if.then25
%91:	call	 XXX usage
%92:	br	 if.end26

BASIC BLOCK if.end26
%93:	load	 optind
%94:	add	 %93 XXX
%95:	store	 %94 optind
%96:	sext	 %93
%97:	getelementptr	 argv %96
%98:	load	 %97
%99:	call	 %98 compile_string
%100:	br	 if.end27

BASIC BLOCK if.end27
%101:	load	 jumps
%102:	br	 for.cond

BASIC BLOCK for.cond
%103:	phi	 %101 %148
%104:	icmp	 %103 XXX
%105:	br	 %104 for.end49 for.body

BASIC BLOCK for.body
%106:	load	 labels
%107:	br	 for.cond29

BASIC BLOCK for.cond29
%108:	phi	 %106 %121
%109:	icmp	 %108 XXX
%110:	br	 %109 for.end for.body31

BASIC BLOCK for.body31
%111:	getelementptr	 %108 XXX XXX
%112:	load	 %111
%113:	getelementptr	 %103 XXX XXX
%114:	load	 %113
%115:	call	 %112 %114 strcmp
%116:	icmp	 %115 XXX
%117:	br	 %116 if.then35 if.end36

BASIC BLOCK if.then35
%118:	br	 for.end

BASIC BLOCK if.end36
%119:	br	 for.inc

BASIC BLOCK for.inc
%120:	getelementptr	 %108 XXX XXX
%121:	load	 %120
%122:	br	 for.cond29

BASIC BLOCK for.end
%123:	getelementptr	 %103 XXX XXX
%124:	load	 %123
%125:	load	 %124
%126:	sext	 %125
%127:	icmp	 %126 XXX
%128:	br	 %127 if.end43 land.lhs.true

BASIC BLOCK land.lhs.true
%129:	icmp	 %108 XXX
%130:	br	 %129 if.then41 if.end43

BASIC BLOCK if.then41
%131:	getelementptr	 %103 XXX XXX
%132:	load	 %131
%133:	call	 XXX %132 panic
%134:	br	 if.end43

BASIC BLOCK if.end43
%135:	getelementptr	 %103 XXX XXX
%136:	load	 %135
%137:	sext	 %136
%138:	getelementptr	 %103 XXX XXX
%139:	load	 %138
%140:	getelementptr	 %139 XXX XXX
%141:	load	 %140
%142:	getelementptr	 %141 %137
%143:	getelementptr	 %142 XXX XXX
%144:	bitcast	 %143
%145:	store	 %108 %144
%146:	br	 for.inc47

BASIC BLOCK for.inc47
%147:	getelementptr	 %103 XXX XXX
%148:	load	 %147
%149:	br	 for.cond

BASIC BLOCK for.end49
%150:	store	 XXX XXX
%151:	store	 XXX XXX
%152:	call	 XXX ck_malloc
%153:	store	 %152 XXX
%154:	store	 XXX XXX
%155:	store	 XXX XXX
%156:	call	 XXX ck_malloc
%157:	store	 %156 XXX
%158:	store	 XXX XXX
%159:	store	 XXX XXX
%160:	call	 XXX ck_malloc
%161:	store	 %160 XXX
%162:	load	 XXX
%163:	getelementptr	 %162 XXX
%164:	store	 XXX %163
%165:	load	 optind
%166:	icmp	 argc %165
%167:	br	 %166 if.else58 if.then56

BASIC BLOCK if.then56
%168:	load	 last_input_file
%169:	add	 %168 XXX
%170:	store	 %169 last_input_file
%171:	call	 XXX read_file
%172:	br	 if.end75

BASIC BLOCK if.else58
%173:	br	 while.cond59

BASIC BLOCK while.cond59
%174:	load	 optind
%175:	icmp	 %174 argc
%176:	br	 %175 while.end74 while.body62

BASIC BLOCK while.body62
%177:	load	 optind
%178:	sub	 argc XXX
%179:	icmp	 %177 %178
%180:	br	 %179 if.end67 if.then65

BASIC BLOCK if.then65
%181:	load	 last_input_file
%182:	add	 %181 XXX
%183:	store	 %182 last_input_file
%184:	br	 if.end67

BASIC BLOCK if.end67
%185:	load	 optind
%186:	sext	 %185
%187:	getelementptr	 argv %186
%188:	load	 %187
%189:	call	 %188 read_file
%190:	load	 optind
%191:	add	 %190 XXX
%192:	store	 %191 optind
%193:	load	 quit_cmd
%194:	icmp	 %193 XXX
%195:	br	 %194 if.end73 if.then72

BASIC BLOCK if.then72
%196:	br	 while.end74

BASIC BLOCK if.end73
%197:	br	 while.cond59

BASIC BLOCK while.end74
%198:	br	 if.end75

BASIC BLOCK if.end75
%199:	call	 close_files
%200:	load	 bad_input
%201:	icmp	 %200 XXX
%202:	br	 %201 if.end78 if.then77

BASIC BLOCK if.then77
%203:	call	 XXX exit
%204:	unreachable	

BASIC BLOCK if.end78
%205:	call	 XXX exit
%206:	unreachable	

BASIC BLOCK return
%207:	ret	 XXX

FUNCTION re_set_syntax

BASIC BLOCK entry
%208:	load	 re_syntax_options
%209:	store	 syntax re_syntax_options
%210:	ret	 %208

FUNCTION ck_malloc

BASIC BLOCK entry
%211:	icmp	 size XXX
%212:	br	 %211 if.then if.end

BASIC BLOCK if.then
%213:	add	 size XXX
%214:	br	 if.end

BASIC BLOCK if.end
%215:	phi	 size %213
%216:	sext	 %215
%217:	call	 %216 malloc
%218:	icmp	 %217 XXX
%219:	br	 %218 if.end3 if.then2

BASIC BLOCK if.then2
%220:	call	 XXX panic
%221:	br	 if.end3

BASIC BLOCK if.end3
%222:	ret	 %217

FUNCTION ck_realloc

BASIC BLOCK entry
%223:	sext	 size
%224:	call	 ptr %223 realloc
%225:	icmp	 %224 XXX
%226:	br	 %225 if.end if.then

BASIC BLOCK if.then
%227:	call	 XXX panic
%228:	br	 if.end

BASIC BLOCK if.end
%229:	ret	 %224

FUNCTION compile_file

BASIC BLOCK entry
%230:	store	 XXX prog_end
%231:	store	 XXX prog_cur
%232:	store	 XXX prog_start
%233:	store	 str prog_name
%234:	store	 XXX prog_line
%235:	getelementptr	 str XXX
%236:	load	 %235
%237:	sext	 %236
%238:	icmp	 %237 XXX
%239:	br	 %238 if.else land.lhs.true

BASIC BLOCK land.lhs.true
%240:	getelementptr	 str XXX
%241:	load	 %240
%242:	sext	 %241
%243:	icmp	 %242 XXX
%244:	br	 %243 if.else if.then

BASIC BLOCK if.then
%245:	load	 stdin
%246:	store	 %245 prog_file
%247:	br	 if.end

BASIC BLOCK if.else
%248:	call	 str XXX ck_fopen
%249:	store	 %248 prog_file
%250:	br	 if.end

BASIC BLOCK if.end
%251:	load	 prog_file
%252:	call	 %251 _IO_getc
%253:	icmp	 %252 XXX
%254:	br	 %253 if.else21 if.then9

BASIC BLOCK if.then9
%255:	load	 prog_file
%256:	call	 %255 _IO_getc
%257:	icmp	 %256 XXX
%258:	br	 %257 if.end14 if.then13

BASIC BLOCK if.then13
%259:	load	 no_default_output
%260:	add	 %259 XXX
%261:	store	 %260 no_default_output
%262:	br	 if.end14

BASIC BLOCK if.end14
%263:	br	 while.cond

BASIC BLOCK while.cond
%264:	phi	 %256 %272
%265:	icmp	 %264 XXX
%266:	br	 %265 land.end land.rhs

BASIC BLOCK land.rhs
%267:	icmp	 %264 XXX
%268:	br	 land.end

BASIC BLOCK land.end
%269:	phi	 XXX %267
%270:	br	 %269 while.end while.body

BASIC BLOCK while.body
%271:	load	 prog_file
%272:	call	 %271 _IO_getc
%273:	br	 while.cond

BASIC BLOCK while.end
%274:	load	 prog_line
%275:	add	 %274 XXX
%276:	store	 %275 prog_line
%277:	br	 if.end27

BASIC BLOCK if.else21
%278:	icmp	 %252 XXX
%279:	br	 %278 if.end26 if.then24

BASIC BLOCK if.then24
%280:	load	 prog_file
%281:	call	 %252 %280 ungetc
%282:	br	 if.end26

BASIC BLOCK if.end26
%283:	br	 if.end27

BASIC BLOCK if.end27
%284:	load	 the_program
%285:	load	 prog_line
%286:	call	 %284 %285 compile_program
%287:	store	 %286 the_program
%288:	ret	

FUNCTION usage

BASIC BLOCK entry
%289:	icmp	 status XXX
%290:	br	 %289 cond.false cond.true

BASIC BLOCK cond.true
%291:	load	 stdout
%292:	br	 cond.end

BASIC BLOCK cond.false
%293:	load	 stdout
%294:	br	 cond.end

BASIC BLOCK cond.end
%295:	phi	 %291 %293
%296:	load	 myname
%297:	call	 %295 XXX %296 fprintf
%298:	call	 status exit
%299:	unreachable	

BASIC BLOCK return
%300:	ret	

FUNCTION compile_string

BASIC BLOCK entry
%301:	store	 XXX prog_file
%302:	store	 XXX prog_line
%303:	store	 str prog_cur
%304:	store	 str prog_start
%305:	call	 str strlen
%306:	getelementptr	 str %305
%307:	store	 %306 prog_end
%308:	load	 the_program
%309:	load	 prog_line
%310:	call	 %308 %309 compile_program
%311:	store	 %310 the_program
%312:	ret	

FUNCTION panic

BASIC BLOCK entry
%313:	alloca	 XXX
%314:	load	 stdout
%315:	load	 myname
%316:	call	 %314 XXX %315 fprintf
%317:	getelementptr	 %313 XXX XXX
%318:	bitcast	 %317
%319:	call	 %318 llvm.va_start
%320:	load	 stdout
%321:	getelementptr	 %313 XXX XXX
%322:	call	 %320 str %321 vfprintf
%323:	getelementptr	 %313 XXX XXX
%324:	bitcast	 %323
%325:	call	 %324 llvm.va_end
%326:	load	 stdout
%327:	call	 XXX %326 _IO_putc
%328:	call	 XXX exit
%329:	unreachable	

BASIC BLOCK return
%330:	ret	

FUNCTION read_file

BASIC BLOCK entry
%331:	load	 name
%332:	sext	 %331
%333:	icmp	 %332 XXX
%334:	br	 %333 if.else land.lhs.true

BASIC BLOCK land.lhs.true
%335:	getelementptr	 name XXX
%336:	load	 %335
%337:	sext	 %336
%338:	icmp	 %337 XXX
%339:	br	 %338 if.else if.then

BASIC BLOCK if.then
%340:	load	 stdin
%341:	store	 %340 input_file
%342:	br	 if.end11

BASIC BLOCK if.else
%343:	call	 name XXX fopen
%344:	store	 %343 input_file
%345:	load	 input_file
%346:	icmp	 %345 XXX
%347:	br	 %346 if.end if.then7

BASIC BLOCK if.then7
%348:	call	 __errno_location
%349:	load	 %348
%350:	call	 %349 strerror
%351:	load	 bad_input
%352:	add	 %351 XXX
%353:	store	 %352 bad_input
%354:	load	 stdout
%355:	load	 myname
%356:	call	 %354 XXX %355 name %350 fprintf
%357:	br	 return

BASIC BLOCK if.end
%358:	br	 if.end11

BASIC BLOCK if.end11
%359:	br	 while.cond

BASIC BLOCK while.cond
%360:	call	 read_pattern_space
%361:	icmp	 %360 XXX
%362:	br	 %361 while.end while.body

BASIC BLOCK while.body
%363:	load	 the_program
%364:	call	 %363 execute_program
%365:	load	 no_default_output
%366:	icmp	 %365 XXX
%367:	br	 %366 if.then14 if.end15

BASIC BLOCK if.then14
%368:	load	 XXX
%369:	load	 XXX
%370:	load	 stdout
%371:	call	 %368 XXX %369 %370 ck_fwrite
%372:	br	 if.end15

BASIC BLOCK if.end15
%373:	load	 XXX
%374:	icmp	 %373 XXX
%375:	br	 %374 if.end18 if.then17

BASIC BLOCK if.then17
%376:	load	 XXX
%377:	load	 XXX
%378:	load	 stdout
%379:	call	 %376 XXX %377 %378 ck_fwrite
%380:	store	 XXX XXX
%381:	br	 if.end18

BASIC BLOCK if.end18
%382:	load	 quit_cmd
%383:	icmp	 %382 XXX
%384:	br	 %383 if.end21 if.then20

BASIC BLOCK if.then20
%385:	br	 while.end

BASIC BLOCK if.end21
%386:	br	 while.cond

BASIC BLOCK while.end
%387:	load	 input_file
%388:	call	 %387 ck_fclose
%389:	br	 return

BASIC BLOCK return
%390:	ret	

FUNCTION close_files

BASIC BLOCK entry
%391:	br	 for.cond

BASIC BLOCK for.cond
%392:	phi	 XXX %408
%393:	icmp	 %392 XXX
%394:	br	 %393 for.end for.body

BASIC BLOCK for.body
%395:	sext	 %392
%396:	getelementptr	 file_ptrs XXX %395
%397:	getelementptr	 %396 XXX XXX
%398:	load	 %397
%399:	icmp	 %398 XXX
%400:	br	 %399 if.end if.then

BASIC BLOCK if.then
%401:	sext	 %392
%402:	getelementptr	 file_ptrs XXX %401
%403:	getelementptr	 %402 XXX XXX
%404:	load	 %403
%405:	call	 %404 fclose
%406:	br	 if.end

BASIC BLOCK if.end
%407:	br	 for.inc

BASIC BLOCK for.inc
%408:	add	 %392 XXX
%409:	br	 for.cond

BASIC BLOCK for.end
%410:	ret	

FUNCTION compile_program

BASIC BLOCK entry
%411:	icmp	 vector XXX
%412:	br	 %411 if.then if.end

BASIC BLOCK if.then
%413:	call	 XXX ck_malloc
%414:	bitcast	 %413
%415:	call	 XXX ck_malloc
%416:	bitcast	 %415
%417:	getelementptr	 %414 XXX XXX
%418:	store	 %416 %417
%419:	getelementptr	 %414 XXX XXX
%420:	store	 XXX %419
%421:	getelementptr	 %414 XXX XXX
%422:	store	 XXX %421
%423:	getelementptr	 %414 XXX XXX
%424:	store	 XXX %423
%425:	getelementptr	 %414 XXX XXX
%426:	store	 XXX %425
%427:	br	 if.end

BASIC BLOCK if.end
%428:	phi	 vector %414
%429:	br	 for.cond

BASIC BLOCK for.cond
%430:	phi	 XXX %1118
%431:	br	 skip_comment

BASIC BLOCK skip_comment
%432:	phi	 %430 %587
%433:	br	 do.body

BASIC BLOCK do.body
%434:	phi	 %432 %442
%435:	call	 inchar
%436:	icmp	 %434 XXX
%437:	br	 %436 if.end6 land.lhs.true

BASIC BLOCK land.lhs.true
%438:	icmp	 %435 XXX
%439:	br	 %438 if.end6 if.then4

BASIC BLOCK if.then4
%440:	call	 inchar
%441:	br	 if.end6

BASIC BLOCK if.end6
%442:	phi	 %440 %435 %435
%443:	br	 do.cond

BASIC BLOCK do.cond
%444:	icmp	 %442 XXX
%445:	br	 %444 land.end land.rhs

BASIC BLOCK land.rhs
%446:	sext	 %442
%447:	call	 __ctype_b_loc
%448:	load	 %447
%449:	getelementptr	 %448 %446
%450:	load	 %449
%451:	zext	 %450
%452:	and	 %451 XXX
%453:	icmp	 %452 XXX
%454:	br	 %453 lor.lhs.false lor.end

BASIC BLOCK lor.lhs.false
%455:	icmp	 %442 XXX
%456:	br	 %455 lor.rhs lor.end

BASIC BLOCK lor.rhs
%457:	icmp	 %442 XXX
%458:	br	 lor.end

BASIC BLOCK lor.end
%459:	phi	 XXX XXX %457
%460:	br	 land.end

BASIC BLOCK land.end
%461:	phi	 XXX %459
%462:	br	 %461 do.end do.body

BASIC BLOCK do.end
%463:	icmp	 %442 XXX
%464:	br	 %463 if.end17 if.then16

BASIC BLOCK if.then16
%465:	br	 for.end521

BASIC BLOCK if.end17
%466:	call	 %442 savchar
%467:	getelementptr	 %428 XXX XXX
%468:	load	 %467
%469:	getelementptr	 %428 XXX XXX
%470:	load	 %469
%471:	icmp	 %468 %470
%472:	br	 %471 if.end31 if.then22

BASIC BLOCK if.then22
%473:	getelementptr	 %428 XXX XXX
%474:	load	 %473
%475:	bitcast	 %474
%476:	getelementptr	 %428 XXX XXX
%477:	load	 %476
%478:	add	 %477 XXX
%479:	sext	 %478
%480:	mul	 %479 XXX
%481:	trunc	 %480
%482:	call	 %475 %481 ck_realloc
%483:	bitcast	 %482
%484:	getelementptr	 %428 XXX XXX
%485:	store	 %483 %484
%486:	getelementptr	 %428 XXX XXX
%487:	load	 %486
%488:	add	 %487 XXX
%489:	store	 %488 %486
%490:	br	 if.end31

BASIC BLOCK if.end31
%491:	getelementptr	 %428 XXX XXX
%492:	load	 %491
%493:	getelementptr	 %428 XXX XXX
%494:	load	 %493
%495:	sext	 %494
%496:	getelementptr	 %492 %495
%497:	getelementptr	 %428 XXX XXX
%498:	load	 %497
%499:	add	 %498 XXX
%500:	store	 %499 %497
%501:	getelementptr	 %496 XXX XXX
%502:	getelementptr	 %501 XXX XXX
%503:	store	 XXX %502
%504:	getelementptr	 %496 XXX XXX
%505:	getelementptr	 %504 XXX XXX
%506:	store	 XXX %505
%507:	getelementptr	 %496 XXX XXX
%508:	store	 XXX %507
%509:	getelementptr	 %496 XXX XXX
%510:	store	 XXX %509
%511:	getelementptr	 %496 XXX XXX
%512:	call	 %511 compile_address
%513:	icmp	 %512 XXX
%514:	br	 %513 if.end65 if.then39

BASIC BLOCK if.then39
%515:	call	 inchar
%516:	icmp	 %515 XXX
%517:	br	 %516 if.else63 if.then43

BASIC BLOCK if.then43
%518:	br	 do.body44

BASIC BLOCK do.body44
%519:	call	 inchar
%520:	br	 do.cond46

BASIC BLOCK do.cond46
%521:	icmp	 %519 XXX
%522:	br	 %521 land.end56 land.rhs49

BASIC BLOCK land.rhs49
%523:	sext	 %519
%524:	call	 __ctype_b_loc
%525:	load	 %524
%526:	getelementptr	 %525 %523
%527:	load	 %526
%528:	zext	 %527
%529:	and	 %528 XXX
%530:	icmp	 %529 XXX
%531:	br	 land.end56

BASIC BLOCK land.end56
%532:	phi	 XXX %530
%533:	br	 %532 do.end57 do.body44

BASIC BLOCK do.end57
%534:	call	 %519 savchar
%535:	getelementptr	 %496 XXX XXX
%536:	call	 %535 compile_address
%537:	icmp	 %536 XXX
%538:	br	 %537 if.else if.then61

BASIC BLOCK if.then61
%539:	br	 if.end62

BASIC BLOCK if.else
%540:	call	 XXX bad_prog
%541:	br	 if.end62

BASIC BLOCK if.end62
%542:	br	 if.end64

BASIC BLOCK if.else63
%543:	call	 %515 savchar
%544:	br	 if.end64

BASIC BLOCK if.end64
%545:	br	 if.end65

BASIC BLOCK if.end65
%546:	getelementptr	 %496 XXX XXX
%547:	getelementptr	 %546 XXX XXX
%548:	load	 %547
%549:	icmp	 %548 XXX
%550:	br	 %549 if.end86 land.lhs.true70

BASIC BLOCK land.lhs.true70
%551:	getelementptr	 %496 XXX XXX
%552:	getelementptr	 %551 XXX XXX
%553:	load	 %552
%554:	icmp	 %553 XXX
%555:	br	 %554 if.end86 land.lhs.true75

BASIC BLOCK land.lhs.true75
%556:	getelementptr	 %496 XXX XXX
%557:	getelementptr	 %556 XXX XXX
%558:	load	 %557
%559:	getelementptr	 %496 XXX XXX
%560:	getelementptr	 %559 XXX XXX
%561:	load	 %560
%562:	icmp	 %558 %561
%563:	br	 %562 if.end86 if.then81

BASIC BLOCK if.then81
%564:	getelementptr	 %496 XXX XXX
%565:	getelementptr	 %564 XXX XXX
%566:	load	 %565
%567:	getelementptr	 %496 XXX XXX
%568:	getelementptr	 %567 XXX XXX
%569:	store	 %566 %568
%570:	br	 if.end86

BASIC BLOCK if.end86
%571:	call	 inchar
%572:	icmp	 %571 XXX
%573:	br	 %572 if.end91 if.then90

BASIC BLOCK if.then90
%574:	call	 XXX bad_prog
%575:	br	 if.end91

BASIC BLOCK if.end91
%576:	br	 new_cmd

BASIC BLOCK new_cmd
%577:	phi	 %571 %612
%578:	switch	 %577 sw.default519 XXX sw.bb XXX sw.bb109 XXX sw.bb134 XXX sw.bb134 XXX sw.bb141 XXX sw.bb176 XXX sw.bb190 XXX sw.bb224 XXX sw.bb234 XXX sw.bb234 XXX sw.bb238 XXX sw.bb238 XXX sw.bb244 XXX sw.bb244 XXX sw.bb244 XXX sw.bb244 XXX sw.bb244 XXX sw.bb244 XXX sw.bb244 XXX sw.bb244 XXX sw.bb244 XXX sw.bb244 XXX sw.bb244 XXX sw.bb244 XXX sw.bb277 XXX sw.bb284 XXX sw.bb291 XXX sw.bb458

BASIC BLOCK sw.bb
%579:	getelementptr	 %496 XXX XXX
%580:	getelementptr	 %579 XXX XXX
%581:	load	 %580
%582:	icmp	 %581 XXX
%583:	br	 %582 if.end97 if.then96

BASIC BLOCK if.then96
%584:	call	 XXX bad_prog
%585:	br	 if.end97

BASIC BLOCK if.end97
%586:	br	 do.body98

BASIC BLOCK do.body98
%587:	call	 inchar
%588:	br	 do.cond100

BASIC BLOCK do.cond100
%589:	icmp	 %587 XXX
%590:	br	 %589 land.end106 land.rhs103

BASIC BLOCK land.rhs103
%591:	icmp	 %587 XXX
%592:	br	 land.end106

BASIC BLOCK land.end106
%593:	phi	 XXX %591
%594:	br	 %593 do.end107 do.body98

BASIC BLOCK do.end107
%595:	getelementptr	 %428 XXX XXX
%596:	load	 %595
%597:	add	 %596 XXX
%598:	store	 %597 %595
%599:	br	 skip_comment

BASIC BLOCK sw.bb109
%600:	getelementptr	 %496 XXX XXX
%601:	load	 %600
%602:	and	 %601 XXX
%603:	icmp	 %602 XXX
%604:	br	 %603 if.end114 if.then113

BASIC BLOCK if.then113
%605:	call	 XXX bad_prog
%606:	br	 if.end114

BASIC BLOCK if.end114
%607:	getelementptr	 %496 XXX XXX
%608:	load	 %607
%609:	or	 %608 XXX
%610:	store	 %609 %607
%611:	br	 do.body116

BASIC BLOCK do.body116
%612:	call	 inchar
%613:	br	 do.cond118

BASIC BLOCK do.cond118
%614:	icmp	 %612 XXX
%615:	br	 %614 land.end128 land.rhs121

BASIC BLOCK land.rhs121
%616:	sext	 %612
%617:	call	 __ctype_b_loc
%618:	load	 %617
%619:	getelementptr	 %618 %616
%620:	load	 %619
%621:	zext	 %620
%622:	and	 %621 XXX
%623:	icmp	 %622 XXX
%624:	br	 land.end128

BASIC BLOCK land.end128
%625:	phi	 XXX %623
%626:	br	 %625 do.end129 do.body116

BASIC BLOCK do.end129
%627:	icmp	 %612 XXX
%628:	br	 %627 if.end133 if.then132

BASIC BLOCK if.then132
%629:	call	 XXX bad_prog
%630:	br	 if.end133

BASIC BLOCK if.end133
%631:	br	 new_cmd

BASIC BLOCK sw.bb134
%632:	getelementptr	 %496 XXX XXX
%633:	getelementptr	 %632 XXX XXX
%634:	load	 %633
%635:	icmp	 %634 XXX
%636:	br	 %635 if.end140 if.then139

BASIC BLOCK if.then139
%637:	call	 XXX bad_prog
%638:	br	 if.end140

BASIC BLOCK if.end140
%639:	br	 sw.bb141

BASIC BLOCK sw.bb141
%640:	trunc	 %577
%641:	getelementptr	 %496 XXX XXX
%642:	store	 %640 %641
%643:	call	 inchar
%644:	icmp	 %643 XXX
%645:	br	 %644 lor.lhs.false147 if.then151

BASIC BLOCK lor.lhs.false147
%646:	call	 inchar
%647:	icmp	 %646 XXX
%648:	br	 %647 if.end152 if.then151

BASIC BLOCK if.then151
%649:	call	 XXX bad_prog
%650:	br	 if.end152

BASIC BLOCK if.end152
%651:	call	 init_buffer
%652:	br	 while.cond

BASIC BLOCK while.cond
%653:	call	 inchar
%654:	icmp	 %653 XXX
%655:	br	 %654 land.end160 land.rhs157

BASIC BLOCK land.rhs157
%656:	icmp	 %653 XXX
%657:	br	 land.end160

BASIC BLOCK land.end160
%658:	phi	 XXX %656
%659:	br	 %658 while.end while.body

BASIC BLOCK while.body
%660:	icmp	 %653 XXX
%661:	br	 %660 if.end165 if.then163

BASIC BLOCK if.then163
%662:	call	 inchar
%663:	br	 if.end165

BASIC BLOCK if.end165
%664:	phi	 %662 %653
%665:	call	 %651 %664 add1_buffer
%666:	br	 while.cond

BASIC BLOCK while.end
%667:	icmp	 %653 XXX
%668:	br	 %667 if.end169 if.then168

BASIC BLOCK if.then168
%669:	call	 %651 %653 add1_buffer
%670:	br	 if.end169

BASIC BLOCK if.end169
%671:	call	 %651 size_buffer
%672:	call	 %671 ck_malloc
%673:	call	 %651 get_buffer
%674:	sext	 %671
%675:	call	 %673 %672 %674 bcopy
%676:	call	 %651 flush_buffer
%677:	getelementptr	 %496 XXX XXX
%678:	bitcast	 %677
%679:	getelementptr	 %678 XXX XXX
%680:	store	 %671 %679
%681:	getelementptr	 %496 XXX XXX
%682:	bitcast	 %681
%683:	getelementptr	 %682 XXX XXX
%684:	store	 %672 %683
%685:	br	 sw.epilog520

BASIC BLOCK sw.bb176
%686:	trunc	 %577
%687:	getelementptr	 %496 XXX XXX
%688:	store	 %686 %687
%689:	load	 program_depth
%690:	add	 %689 XXX
%691:	store	 %690 program_depth
%692:	load	 prog_line
%693:	call	 XXX %692 compile_program
%694:	getelementptr	 %496 XXX XXX
%695:	bitcast	 %694
%696:	store	 %693 %695
%697:	getelementptr	 %496 XXX XXX
%698:	bitcast	 %697
%699:	load	 %698
%700:	getelementptr	 %699 XXX XXX
%701:	store	 %428 %700
%702:	getelementptr	 %428 XXX XXX
%703:	load	 %702
%704:	sub	 %703 XXX
%705:	getelementptr	 %496 XXX XXX
%706:	bitcast	 %705
%707:	load	 %706
%708:	getelementptr	 %707 XXX XXX
%709:	store	 %704 %708
%710:	br	 sw.epilog520

BASIC BLOCK sw.bb190
%711:	load	 program_depth
%712:	icmp	 %711 XXX
%713:	br	 %712 if.then192 if.end193

BASIC BLOCK if.then192
%714:	call	 XXX bad_prog
%715:	br	 if.end193

BASIC BLOCK if.end193
%716:	load	 program_depth
%717:	add	 %716 XXX
%718:	store	 %717 program_depth
%719:	trunc	 %577
%720:	getelementptr	 %496 XXX XXX
%721:	store	 %719 %720
%722:	getelementptr	 %496 XXX XXX
%723:	getelementptr	 %722 XXX XXX
%724:	load	 %723
%725:	icmp	 %724 XXX
%726:	br	 %725 if.end202 if.then201

BASIC BLOCK if.then201
%727:	call	 XXX bad_prog
%728:	br	 if.end202

BASIC BLOCK if.end202
%729:	br	 while.cond203

BASIC BLOCK while.cond203
%730:	call	 inchar
%731:	icmp	 %730 XXX
%732:	br	 %731 land.end213 land.lhs.true207

BASIC BLOCK land.lhs.true207
%733:	icmp	 %730 XXX
%734:	br	 %733 land.end213 land.rhs210

BASIC BLOCK land.rhs210
%735:	icmp	 %730 XXX
%736:	br	 land.end213

BASIC BLOCK land.end213
%737:	phi	 XXX XXX %735
%738:	br	 %737 while.end223 while.body214

BASIC BLOCK while.body214
%739:	sext	 %730
%740:	call	 __ctype_b_loc
%741:	load	 %740
%742:	getelementptr	 %741 %739
%743:	load	 %742
%744:	zext	 %743
%745:	and	 %744 XXX
%746:	icmp	 %745 XXX
%747:	br	 %746 if.then221 if.end222

BASIC BLOCK if.then221
%748:	call	 XXX bad_prog
%749:	br	 if.end222

BASIC BLOCK if.end222
%750:	br	 while.cond203

BASIC BLOCK while.end223
%751:	br	 return

BASIC BLOCK sw.bb224
%752:	trunc	 %577
%753:	getelementptr	 %496 XXX XXX
%754:	store	 %752 %753
%755:	getelementptr	 %496 XXX XXX
%756:	getelementptr	 %755 XXX XXX
%757:	load	 %756
%758:	icmp	 %757 XXX
%759:	br	 %758 if.end232 if.then231

BASIC BLOCK if.then231
%760:	call	 XXX bad_prog
%761:	br	 if.end232

BASIC BLOCK if.end232
%762:	load	 labels
%763:	call	 %762 %496 %428 setup_jump
%764:	store	 %763 labels
%765:	br	 sw.epilog520

BASIC BLOCK sw.bb234
%766:	trunc	 %577
%767:	getelementptr	 %496 XXX XXX
%768:	store	 %766 %767
%769:	load	 jumps
%770:	call	 %769 %496 %428 setup_jump
%771:	store	 %770 jumps
%772:	br	 sw.epilog520

BASIC BLOCK sw.bb238
%773:	getelementptr	 %496 XXX XXX
%774:	getelementptr	 %773 XXX XXX
%775:	load	 %774
%776:	icmp	 %775 XXX
%777:	br	 %776 if.end243 if.then242

BASIC BLOCK if.then242
%778:	call	 XXX bad_prog
%779:	br	 if.end243

BASIC BLOCK if.end243
%780:	br	 sw.bb244

BASIC BLOCK sw.bb244
%781:	trunc	 %577
%782:	getelementptr	 %496 XXX XXX
%783:	store	 %781 %782
%784:	br	 do.body247

BASIC BLOCK do.body247
%785:	call	 inchar
%786:	br	 do.cond249

BASIC BLOCK do.cond249
%787:	icmp	 %785 XXX
%788:	br	 %787 land.end265 land.lhs.true252

BASIC BLOCK land.lhs.true252
%789:	sext	 %785
%790:	call	 __ctype_b_loc
%791:	load	 %790
%792:	getelementptr	 %791 %789
%793:	load	 %792
%794:	zext	 %793
%795:	and	 %794 XXX
%796:	icmp	 %795 XXX
%797:	br	 %796 land.end265 land.lhs.true259

BASIC BLOCK land.lhs.true259
%798:	icmp	 %785 XXX
%799:	br	 %798 land.end265 land.rhs262

BASIC BLOCK land.rhs262
%800:	icmp	 %785 XXX
%801:	br	 land.end265

BASIC BLOCK land.end265
%802:	phi	 XXX XXX XXX %800
%803:	br	 %802 do.end266 do.body247

BASIC BLOCK do.end266
%804:	icmp	 %785 XXX
%805:	br	 %804 if.end276 land.lhs.true269

BASIC BLOCK land.lhs.true269
%806:	icmp	 %785 XXX
%807:	br	 %806 if.end276 land.lhs.true272

BASIC BLOCK land.lhs.true272
%808:	icmp	 %785 XXX
%809:	br	 %808 if.end276 if.then275

BASIC BLOCK if.then275
%810:	call	 XXX bad_prog
%811:	br	 if.end276

BASIC BLOCK if.end276
%812:	br	 sw.epilog520

BASIC BLOCK sw.bb277
%813:	getelementptr	 %496 XXX XXX
%814:	getelementptr	 %813 XXX XXX
%815:	load	 %814
%816:	icmp	 %815 XXX
%817:	br	 %816 if.end283 if.then282

BASIC BLOCK if.then282
%818:	call	 XXX bad_prog
%819:	br	 if.end283

BASIC BLOCK if.end283
%820:	br	 sw.bb284

BASIC BLOCK sw.bb284
%821:	trunc	 %577
%822:	getelementptr	 %496 XXX XXX
%823:	store	 %821 %822
%824:	icmp	 %577 XXX
%825:	zext	 %824
%826:	call	 %825 compile_filename
%827:	getelementptr	 %496 XXX XXX
%828:	bitcast	 %827
%829:	store	 %826 %828
%830:	br	 sw.epilog520

BASIC BLOCK sw.bb291
%831:	trunc	 %577
%832:	getelementptr	 %496 XXX XXX
%833:	store	 %831 %832
%834:	call	 inchar
%835:	call	 %834 compile_regex
%836:	load	 last_regex
%837:	getelementptr	 %496 XXX XXX
%838:	bitcast	 %837
%839:	getelementptr	 %838 XXX XXX
%840:	store	 %836 %839
%841:	call	 init_buffer
%842:	br	 while.cond297

BASIC BLOCK while.cond297
%843:	call	 inchar
%844:	icmp	 %843 XXX
%845:	br	 %844 land.end307 land.lhs.true301

BASIC BLOCK land.lhs.true301
%846:	icmp	 %843 %834
%847:	br	 %846 land.end307 land.rhs304

BASIC BLOCK land.rhs304
%848:	icmp	 %843 XXX
%849:	br	 land.end307

BASIC BLOCK land.end307
%850:	phi	 XXX XXX %848
%851:	br	 %850 while.end323 while.body308

BASIC BLOCK while.body308
%852:	icmp	 %843 XXX
%853:	br	 %852 if.else321 if.then311

BASIC BLOCK if.then311
%854:	call	 inchar
%855:	icmp	 %854 XXX
%856:	br	 %855 if.end320 if.then315

BASIC BLOCK if.then315
%857:	icmp	 %854 XXX
%858:	br	 %857 if.end319 if.then318

BASIC BLOCK if.then318
%859:	call	 %841 %843 add1_buffer
%860:	br	 if.end319

BASIC BLOCK if.end319
%861:	call	 %841 %854 add1_buffer
%862:	br	 if.end320

BASIC BLOCK if.end320
%863:	br	 if.end322

BASIC BLOCK if.else321
%864:	call	 %841 %843 add1_buffer
%865:	br	 if.end322

BASIC BLOCK if.end322
%866:	br	 while.cond297

BASIC BLOCK while.end323
%867:	icmp	 %843 %834
%868:	br	 %867 if.end335 if.then326

BASIC BLOCK if.then326
%869:	icmp	 %843 XXX
%870:	br	 %869 if.end334 land.lhs.true329

BASIC BLOCK land.lhs.true329
%871:	load	 prog_line
%872:	icmp	 %871 XXX
%873:	br	 %872 if.end334 if.then332

BASIC BLOCK if.then332
%874:	load	 prog_line
%875:	add	 %874 XXX
%876:	store	 %875 prog_line
%877:	br	 if.end334

BASIC BLOCK if.end334
%878:	call	 XXX bad_prog
%879:	br	 if.end335

BASIC BLOCK if.end335
%880:	call	 %841 size_buffer
%881:	getelementptr	 %496 XXX XXX
%882:	bitcast	 %881
%883:	getelementptr	 %882 XXX XXX
%884:	store	 %880 %883
%885:	getelementptr	 %496 XXX XXX
%886:	bitcast	 %885
%887:	getelementptr	 %886 XXX XXX
%888:	load	 %887
%889:	call	 %888 ck_malloc
%890:	getelementptr	 %496 XXX XXX
%891:	bitcast	 %890
%892:	getelementptr	 %891 XXX XXX
%893:	store	 %889 %892
%894:	call	 %841 get_buffer
%895:	getelementptr	 %496 XXX XXX
%896:	bitcast	 %895
%897:	getelementptr	 %896 XXX XXX
%898:	load	 %897
%899:	getelementptr	 %496 XXX XXX
%900:	bitcast	 %899
%901:	getelementptr	 %900 XXX XXX
%902:	load	 %901
%903:	sext	 %902
%904:	call	 %894 %898 %903 bcopy
%905:	call	 %841 flush_buffer
%906:	getelementptr	 %496 XXX XXX
%907:	bitcast	 %906
%908:	getelementptr	 %907 XXX XXX
%909:	store	 XXX %908
%910:	getelementptr	 %496 XXX XXX
%911:	bitcast	 %910
%912:	getelementptr	 %911 XXX XXX
%913:	store	 XXX %912
%914:	icmp	 %843 XXX
%915:	br	 %914 if.end360 if.then359

BASIC BLOCK if.then359
%916:	br	 sw.epilog520

BASIC BLOCK if.end360
%917:	br	 do.body361

BASIC BLOCK do.body361
%918:	call	 inchar
%919:	switch	 %918 sw.default XXX sw.bb363 XXX sw.bb375 XXX sw.bb398 XXX sw.bb406 XXX sw.bb406 XXX sw.bb406 XXX sw.bb406 XXX sw.bb406 XXX sw.bb406 XXX sw.bb406 XXX sw.bb406 XXX sw.bb406 XXX sw.bb406 XXX sw.bb442 XXX sw.bb442 XXX sw.bb442

BASIC BLOCK sw.bb363
%920:	getelementptr	 %496 XXX XXX
%921:	bitcast	 %920
%922:	getelementptr	 %921 XXX XXX
%923:	load	 %922
%924:	and	 %923 XXX
%925:	icmp	 %924 XXX
%926:	br	 %925 if.end370 if.then369

BASIC BLOCK if.then369
%927:	call	 XXX bad_prog
%928:	br	 if.end370

BASIC BLOCK if.end370
%929:	getelementptr	 %496 XXX XXX
%930:	bitcast	 %929
%931:	getelementptr	 %930 XXX XXX
%932:	load	 %931
%933:	or	 %932 XXX
%934:	store	 %933 %931
%935:	br	 sw.epilog

BASIC BLOCK sw.bb375
%936:	getelementptr	 %496 XXX XXX
%937:	bitcast	 %936
%938:	getelementptr	 %937 XXX XXX
%939:	load	 %938
%940:	and	 %939 XXX
%941:	icmp	 %940 XXX
%942:	br	 %941 if.end386 if.then381

BASIC BLOCK if.then381
%943:	getelementptr	 %496 XXX XXX
%944:	bitcast	 %943
%945:	getelementptr	 %944 XXX XXX
%946:	load	 %945
%947:	and	 %946 XXX
%948:	store	 %947 %945
%949:	br	 if.end386

BASIC BLOCK if.end386
%950:	getelementptr	 %496 XXX XXX
%951:	bitcast	 %950
%952:	getelementptr	 %951 XXX XXX
%953:	load	 %952
%954:	and	 %953 XXX
%955:	icmp	 %954 XXX
%956:	br	 %955 if.end393 if.then392

BASIC BLOCK if.then392
%957:	call	 XXX bad_prog
%958:	br	 if.end393

BASIC BLOCK if.end393
%959:	getelementptr	 %496 XXX XXX
%960:	bitcast	 %959
%961:	getelementptr	 %960 XXX XXX
%962:	load	 %961
%963:	or	 %962 XXX
%964:	store	 %963 %961
%965:	br	 sw.epilog

BASIC BLOCK sw.bb398
%966:	getelementptr	 %496 XXX XXX
%967:	bitcast	 %966
%968:	getelementptr	 %967 XXX XXX
%969:	load	 %968
%970:	or	 %969 XXX
%971:	store	 %970 %968
%972:	call	 XXX compile_filename
%973:	getelementptr	 %496 XXX XXX
%974:	bitcast	 %973
%975:	getelementptr	 %974 XXX XXX
%976:	store	 %972 %975
%977:	br	 sw.epilog

BASIC BLOCK sw.bb406
%978:	getelementptr	 %496 XXX XXX
%979:	bitcast	 %978
%980:	getelementptr	 %979 XXX XXX
%981:	load	 %980
%982:	and	 %981 XXX
%983:	icmp	 %982 XXX
%984:	br	 %983 if.end413 if.then412

BASIC BLOCK if.then412
%985:	call	 XXX bad_prog
%986:	br	 if.end413

BASIC BLOCK if.end413
%987:	getelementptr	 %496 XXX XXX
%988:	bitcast	 %987
%989:	getelementptr	 %988 XXX XXX
%990:	load	 %989
%991:	and	 %990 XXX
%992:	icmp	 %991 XXX
%993:	br	 %992 if.end425 if.then420

BASIC BLOCK if.then420
%994:	getelementptr	 %496 XXX XXX
%995:	bitcast	 %994
%996:	getelementptr	 %995 XXX XXX
%997:	load	 %996
%998:	or	 %997 XXX
%999:	store	 %998 %996
%1000:	br	 if.end425

BASIC BLOCK if.end425
%1001:	br	 while.cond426

BASIC BLOCK while.cond426
%1002:	phi	 %918 %1016
%1003:	phi	 XXX %1015
%1004:	sext	 %1002
%1005:	call	 __ctype_b_loc
%1006:	load	 %1005
%1007:	getelementptr	 %1006 %1004
%1008:	load	 %1007
%1009:	zext	 %1008
%1010:	and	 %1009 XXX
%1011:	icmp	 %1010 XXX
%1012:	br	 %1011 while.end438 while.body433

BASIC BLOCK while.body433
%1013:	mul	 %1003 XXX
%1014:	add	 %1013 %1002
%1015:	sub	 %1014 XXX
%1016:	call	 inchar
%1017:	br	 while.cond426

BASIC BLOCK while.end438
%1018:	call	 %1002 savchar
%1019:	getelementptr	 %496 XXX XXX
%1020:	bitcast	 %1019
%1021:	getelementptr	 %1020 XXX XXX
%1022:	store	 %1003 %1021
%1023:	br	 sw.epilog

BASIC BLOCK sw.bb442
%1024:	br	 sw.epilog

BASIC BLOCK sw.default
%1025:	call	 XXX bad_prog
%1026:	br	 sw.epilog

BASIC BLOCK sw.epilog
%1027:	phi	 %918 %918 %1002 XXX %918 %918
%1028:	br	 do.cond443

BASIC BLOCK do.cond443
%1029:	icmp	 %1027 XXX
%1030:	br	 %1029 land.end452 land.lhs.true446

BASIC BLOCK land.lhs.true446
%1031:	icmp	 %1027 XXX
%1032:	br	 %1031 land.end452 land.rhs449

BASIC BLOCK land.rhs449
%1033:	icmp	 %1027 XXX
%1034:	br	 land.end452

BASIC BLOCK land.end452
%1035:	phi	 XXX XXX %1033
%1036:	br	 %1035 do.end453 do.body361

BASIC BLOCK do.end453
%1037:	icmp	 %1027 XXX
%1038:	br	 %1037 if.end457 if.then456

BASIC BLOCK if.then456
%1039:	br	 sw.epilog520

BASIC BLOCK if.end457
%1040:	br	 sw.epilog520

BASIC BLOCK sw.bb458
%1041:	trunc	 %577
%1042:	getelementptr	 %496 XXX XXX
%1043:	store	 %1041 %1042
%1044:	call	 XXX ck_malloc
%1045:	br	 for.cond462

BASIC BLOCK for.cond462
%1046:	phi	 XXX %1054
%1047:	icmp	 %1046 XXX
%1048:	br	 %1047 for.end for.body

BASIC BLOCK for.body
%1049:	trunc	 %1046
%1050:	sext	 %1046
%1051:	getelementptr	 %1044 %1050
%1052:	store	 %1049 %1051
%1053:	br	 for.inc

BASIC BLOCK for.inc
%1054:	add	 %1046 XXX
%1055:	br	 for.cond462

BASIC BLOCK for.end
%1056:	call	 init_buffer
%1057:	call	 inchar
%1058:	br	 while.cond471

BASIC BLOCK while.cond471
%1059:	call	 inchar
%1060:	icmp	 %1059 XXX
%1061:	br	 %1060 land.end478 land.rhs475

BASIC BLOCK land.rhs475
%1062:	icmp	 %1059 %1057
%1063:	br	 land.end478

BASIC BLOCK land.end478
%1064:	phi	 XXX %1062
%1065:	br	 %1064 while.end480 while.body479

BASIC BLOCK while.body479
%1066:	call	 %1056 %1059 add1_buffer
%1067:	br	 while.cond471

BASIC BLOCK while.end480
%1068:	getelementptr	 %496 XXX XXX
%1069:	bitcast	 %1068
%1070:	store	 %1044 %1069
%1071:	call	 %1056 get_buffer
%1072:	call	 %1056 size_buffer
%1073:	br	 for.cond484

BASIC BLOCK for.cond484
%1074:	phi	 %1059 %1079
%1075:	phi	 %1071 %1089
%1076:	phi	 %1072 %1098
%1077:	icmp	 %1076 XXX
%1078:	br	 %1077 for.end503 for.body486

BASIC BLOCK for.body486
%1079:	call	 inchar
%1080:	icmp	 %1079 XXX
%1081:	br	 %1080 if.end491 if.then490

BASIC BLOCK if.then490
%1082:	call	 XXX bad_prog
%1083:	br	 if.end491

BASIC BLOCK if.end491
%1084:	icmp	 %1079 %1057
%1085:	br	 %1084 if.end495 if.then494

BASIC BLOCK if.then494
%1086:	call	 XXX bad_prog
%1087:	br	 if.end495

BASIC BLOCK if.end495
%1088:	trunc	 %1079
%1089:	getelementptr	 %1075 XXX
%1090:	load	 %1075
%1091:	zext	 %1090
%1092:	getelementptr	 %496 XXX XXX
%1093:	bitcast	 %1092
%1094:	load	 %1093
%1095:	getelementptr	 %1094 %1091
%1096:	store	 %1088 %1095
%1097:	br	 for.inc501

BASIC BLOCK for.inc501
%1098:	add	 %1076 XXX
%1099:	br	 for.cond484

BASIC BLOCK for.end503
%1100:	call	 %1056 flush_buffer
%1101:	call	 inchar
%1102:	icmp	 %1101 %1057
%1103:	br	 %1102 lor.lhs.false507 if.then517

BASIC BLOCK lor.lhs.false507
%1104:	call	 inchar
%1105:	icmp	 %1104 XXX
%1106:	br	 %1105 if.end518 land.lhs.true511

BASIC BLOCK land.lhs.true511
%1107:	icmp	 %1104 XXX
%1108:	br	 %1107 if.end518 land.lhs.true514

BASIC BLOCK land.lhs.true514
%1109:	icmp	 %1104 XXX
%1110:	br	 %1109 if.end518 if.then517

BASIC BLOCK if.then517
%1111:	phi	 %1074 %1104
%1112:	call	 XXX bad_prog
%1113:	br	 if.end518

BASIC BLOCK if.end518
%1114:	phi	 %1111 %1104 %1104 %1104
%1115:	br	 sw.epilog520

BASIC BLOCK sw.default519
%1116:	call	 XXX bad_prog
%1117:	br	 sw.epilog520

BASIC BLOCK sw.epilog520
%1118:	phi	 %577 %1114 %843 %1027 %1027 %577 %785 %577 %577 %577 %653
%1119:	br	 for.cond

BASIC BLOCK for.end521
%1120:	load	 program_depth
%1121:	icmp	 %1120 XXX
%1122:	br	 %1121 if.end524 if.then523

BASIC BLOCK if.then523
%1123:	store	 open_line prog_line
%1124:	call	 XXX bad_prog
%1125:	br	 if.end524

BASIC BLOCK if.end524
%1126:	br	 return

BASIC BLOCK return
%1127:	ret	 %428

FUNCTION ck_fopen

BASIC BLOCK entry
%1128:	call	 name mode fopen
%1129:	icmp	 %1128 XXX
%1130:	br	 %1129 if.end if.then

BASIC BLOCK if.then
%1131:	call	 XXX name panic
%1132:	br	 if.end

BASIC BLOCK if.end
%1133:	br	 for.cond

BASIC BLOCK for.cond
%1134:	phi	 XXX %1163
%1135:	icmp	 %1134 XXX
%1136:	br	 %1135 for.end for.body

BASIC BLOCK for.body
%1137:	sext	 %1134
%1138:	getelementptr	 __id_s XXX %1137
%1139:	getelementptr	 %1138 XXX XXX
%1140:	load	 %1139
%1141:	icmp	 %1128 %1140
%1142:	br	 %1141 if.end16 if.then3

BASIC BLOCK if.then3
%1143:	sext	 %1134
%1144:	getelementptr	 __id_s XXX %1143
%1145:	getelementptr	 %1144 XXX XXX
%1146:	load	 %1145
%1147:	call	 %1146 free
%1148:	call	 name strlen
%1149:	add	 %1148 XXX
%1150:	trunc	 %1149
%1151:	call	 %1150 ck_malloc
%1152:	sext	 %1134
%1153:	getelementptr	 __id_s XXX %1152
%1154:	getelementptr	 %1153 XXX XXX
%1155:	store	 %1151 %1154
%1156:	sext	 %1134
%1157:	getelementptr	 __id_s XXX %1156
%1158:	getelementptr	 %1157 XXX XXX
%1159:	load	 %1158
%1160:	call	 %1159 name strcpy
%1161:	br	 for.end

BASIC BLOCK if.end16
%1162:	br	 for.inc

BASIC BLOCK for.inc
%1163:	add	 %1134 XXX
%1164:	br	 for.cond

BASIC BLOCK for.end
%1165:	icmp	 %1134 XXX
%1166:	br	 %1165 if.end52 if.then19

BASIC BLOCK if.then19
%1167:	br	 for.cond20

BASIC BLOCK for.cond20
%1168:	phi	 XXX %1179
%1169:	icmp	 %1168 XXX
%1170:	br	 %1169 for.end33 for.body23

BASIC BLOCK for.body23
%1171:	sext	 %1168
%1172:	getelementptr	 __id_s XXX %1171
%1173:	getelementptr	 %1172 XXX XXX
%1174:	load	 %1173
%1175:	icmp	 %1174 XXX
%1176:	br	 %1175 if.end30 if.then29

BASIC BLOCK if.then29
%1177:	br	 for.end33

BASIC BLOCK if.end30
%1178:	br	 for.inc31

BASIC BLOCK for.inc31
%1179:	add	 %1168 XXX
%1180:	br	 for.cond20

BASIC BLOCK for.end33
%1181:	icmp	 %1168 XXX
%1182:	br	 %1181 if.end37 if.then36

BASIC BLOCK if.then36
%1183:	call	 XXX panic
%1184:	br	 if.end37

BASIC BLOCK if.end37
%1185:	sext	 %1168
%1186:	getelementptr	 __id_s XXX %1185
%1187:	getelementptr	 %1186 XXX XXX
%1188:	store	 %1128 %1187
%1189:	call	 name strlen
%1190:	add	 %1189 XXX
%1191:	trunc	 %1190
%1192:	call	 %1191 ck_malloc
%1193:	sext	 %1168
%1194:	getelementptr	 __id_s XXX %1193
%1195:	getelementptr	 %1194 XXX XXX
%1196:	store	 %1192 %1195
%1197:	sext	 %1168
%1198:	getelementptr	 __id_s XXX %1197
%1199:	getelementptr	 %1198 XXX XXX
%1200:	load	 %1199
%1201:	call	 %1200 name strcpy
%1202:	br	 if.end52

BASIC BLOCK if.end52
%1203:	ret	 %1128

FUNCTION inchar

BASIC BLOCK entry
%1204:	load	 prog_file
%1205:	icmp	 %1204 XXX
%1206:	br	 %1205 if.else4 if.then

BASIC BLOCK if.then
%1207:	load	 prog_file
%1208:	call	 %1207 feof
%1209:	icmp	 %1208 XXX
%1210:	br	 %1209 if.else if.then2

BASIC BLOCK if.then2
%1211:	br	 return

BASIC BLOCK if.else
%1212:	load	 prog_file
%1213:	call	 %1212 _IO_getc
%1214:	br	 if.end

BASIC BLOCK if.end
%1215:	br	 if.end12

BASIC BLOCK if.else4
%1216:	load	 prog_cur
%1217:	icmp	 %1216 XXX
%1218:	br	 %1217 if.then6 if.else7

BASIC BLOCK if.then6
%1219:	br	 return

BASIC BLOCK if.else7
%1220:	load	 prog_cur
%1221:	load	 prog_end
%1222:	icmp	 %1220 %1221
%1223:	br	 %1222 if.else9 if.then8

BASIC BLOCK if.then8
%1224:	store	 XXX prog_cur
%1225:	br	 if.end10

BASIC BLOCK if.else9
%1226:	load	 prog_cur
%1227:	getelementptr	 %1226 XXX
%1228:	store	 %1227 prog_cur
%1229:	load	 %1226
%1230:	zext	 %1229
%1231:	br	 if.end10

BASIC BLOCK if.end10
%1232:	phi	 XXX %1230
%1233:	br	 if.end11

BASIC BLOCK if.end11
%1234:	br	 if.end12

BASIC BLOCK if.end12
%1235:	phi	 %1213 %1232
%1236:	icmp	 %1235 XXX
%1237:	br	 %1236 if.end17 land.lhs.true

BASIC BLOCK land.lhs.true
%1238:	load	 prog_line
%1239:	icmp	 %1238 XXX
%1240:	br	 %1239 if.end17 if.then16

BASIC BLOCK if.then16
%1241:	load	 prog_line
%1242:	add	 %1241 XXX
%1243:	store	 %1242 prog_line
%1244:	br	 if.end17

BASIC BLOCK if.end17
%1245:	br	 return

BASIC BLOCK return
%1246:	phi	 XXX %1235 XXX
%1247:	ret	 %1246

FUNCTION savchar

BASIC BLOCK entry
%1248:	icmp	 ch XXX
%1249:	br	 %1248 if.end if.then

BASIC BLOCK if.then
%1250:	br	 if.end6

BASIC BLOCK if.end
%1251:	icmp	 ch XXX
%1252:	br	 %1251 if.end4 land.lhs.true

BASIC BLOCK land.lhs.true
%1253:	load	 prog_line
%1254:	icmp	 %1253 XXX
%1255:	br	 %1254 if.end4 if.then3

BASIC BLOCK if.then3
%1256:	load	 prog_line
%1257:	add	 %1256 XXX
%1258:	store	 %1257 prog_line
%1259:	br	 if.end4

BASIC BLOCK if.end4
%1260:	load	 prog_file
%1261:	icmp	 %1260 XXX
%1262:	br	 %1261 if.else if.then5

BASIC BLOCK if.then5
%1263:	load	 prog_file
%1264:	call	 ch %1263 ungetc
%1265:	br	 if.end6

BASIC BLOCK if.else
%1266:	trunc	 ch
%1267:	load	 prog_cur
%1268:	getelementptr	 %1267 XXX
%1269:	store	 %1268 prog_cur
%1270:	store	 %1266 %1268
%1271:	br	 if.end6

BASIC BLOCK if.end6
%1272:	ret	

FUNCTION compile_address

BASIC BLOCK entry
%1273:	call	 inchar
%1274:	sext	 %1273
%1275:	call	 __ctype_b_loc
%1276:	load	 %1275
%1277:	getelementptr	 %1276 %1274
%1278:	load	 %1277
%1279:	zext	 %1278
%1280:	and	 %1279 XXX
%1281:	icmp	 %1280 XXX
%1282:	br	 %1281 if.else if.then

BASIC BLOCK if.then
%1283:	sub	 %1273 XXX
%1284:	br	 while.cond

BASIC BLOCK while.cond
%1285:	phi	 %1283 %1302
%1286:	call	 inchar
%1287:	icmp	 %1286 XXX
%1288:	br	 %1287 land.end land.rhs

BASIC BLOCK land.rhs
%1289:	sext	 %1286
%1290:	call	 __ctype_b_loc
%1291:	load	 %1290
%1292:	getelementptr	 %1291 %1289
%1293:	load	 %1292
%1294:	zext	 %1293
%1295:	and	 %1294 XXX
%1296:	icmp	 %1295 XXX
%1297:	br	 land.end

BASIC BLOCK land.end
%1298:	phi	 XXX %1296
%1299:	br	 %1298 while.end while.body

BASIC BLOCK while.body
%1300:	mul	 %1285 XXX
%1301:	add	 %1300 %1286
%1302:	sub	 %1301 XXX
%1303:	br	 while.cond

BASIC BLOCK while.end
%1304:	br	 while.cond11

BASIC BLOCK while.cond11
%1305:	phi	 %1286 %1319
%1306:	icmp	 %1305 XXX
%1307:	br	 %1306 land.end21 land.rhs14

BASIC BLOCK land.rhs14
%1308:	sext	 %1305
%1309:	call	 __ctype_b_loc
%1310:	load	 %1309
%1311:	getelementptr	 %1310 %1308
%1312:	load	 %1311
%1313:	zext	 %1312
%1314:	and	 %1313 XXX
%1315:	icmp	 %1314 XXX
%1316:	br	 land.end21

BASIC BLOCK land.end21
%1317:	phi	 XXX %1315
%1318:	br	 %1317 while.end24 while.body22

BASIC BLOCK while.body22
%1319:	call	 inchar
%1320:	br	 while.cond11

BASIC BLOCK while.end24
%1321:	call	 %1305 savchar
%1322:	getelementptr	 addr XXX XXX
%1323:	store	 XXX %1322
%1324:	getelementptr	 addr XXX XXX
%1325:	store	 %1285 %1324
%1326:	br	 return

BASIC BLOCK if.else
%1327:	icmp	 %1273 XXX
%1328:	br	 %1327 lor.lhs.false if.then29

BASIC BLOCK lor.lhs.false
%1329:	icmp	 %1273 XXX
%1330:	br	 %1329 if.else46 if.then29

BASIC BLOCK if.then29
%1331:	getelementptr	 addr XXX XXX
%1332:	store	 XXX %1331
%1333:	icmp	 %1273 XXX
%1334:	br	 %1333 if.end if.then33

BASIC BLOCK if.then33
%1335:	call	 inchar
%1336:	br	 if.end

BASIC BLOCK if.end
%1337:	phi	 %1335 %1273
%1338:	call	 %1337 compile_regex
%1339:	load	 last_regex
%1340:	getelementptr	 addr XXX XXX
%1341:	store	 %1339 %1340
%1342:	br	 do.body

BASIC BLOCK do.body
%1343:	call	 inchar
%1344:	br	 do.cond

BASIC BLOCK do.cond
%1345:	icmp	 %1343 XXX
%1346:	br	 %1345 land.end45 land.rhs38

BASIC BLOCK land.rhs38
%1347:	sext	 %1343
%1348:	call	 __ctype_b_loc
%1349:	load	 %1348
%1350:	getelementptr	 %1349 %1347
%1351:	load	 %1350
%1352:	zext	 %1351
%1353:	and	 %1352 XXX
%1354:	icmp	 %1353 XXX
%1355:	br	 land.end45

BASIC BLOCK land.end45
%1356:	phi	 XXX %1354
%1357:	br	 %1356 do.end do.body

BASIC BLOCK do.end
%1358:	call	 %1343 savchar
%1359:	br	 return

BASIC BLOCK if.else46
%1360:	icmp	 %1273 XXX
%1361:	br	 %1360 if.else65 if.then49

BASIC BLOCK if.then49
%1362:	getelementptr	 addr XXX XXX
%1363:	store	 XXX %1362
%1364:	br	 do.body51

BASIC BLOCK do.body51
%1365:	call	 inchar
%1366:	br	 do.cond53

BASIC BLOCK do.cond53
%1367:	icmp	 %1365 XXX
%1368:	br	 %1367 land.end63 land.rhs56

BASIC BLOCK land.rhs56
%1369:	sext	 %1365
%1370:	call	 __ctype_b_loc
%1371:	load	 %1370
%1372:	getelementptr	 %1371 %1369
%1373:	load	 %1372
%1374:	zext	 %1373
%1375:	and	 %1374 XXX
%1376:	icmp	 %1375 XXX
%1377:	br	 land.end63

BASIC BLOCK land.end63
%1378:	phi	 XXX %1376
%1379:	br	 %1378 do.end64 do.body51

BASIC BLOCK do.end64
%1380:	call	 %1365 savchar
%1381:	br	 return

BASIC BLOCK if.else65
%1382:	call	 %1273 savchar
%1383:	br	 if.end66

BASIC BLOCK if.end66
%1384:	br	 if.end67

BASIC BLOCK if.end67
%1385:	br	 if.end68

BASIC BLOCK if.end68
%1386:	br	 return

BASIC BLOCK return
%1387:	phi	 XXX XXX XXX XXX
%1388:	ret	 %1387

FUNCTION bad_prog

BASIC BLOCK entry
%1389:	load	 prog_line
%1390:	icmp	 %1389 XXX
%1391:	br	 %1390 if.else if.then

BASIC BLOCK if.then
%1392:	load	 stdout
%1393:	load	 myname
%1394:	load	 prog_name
%1395:	load	 prog_line
%1396:	call	 %1392 XXX %1393 %1394 %1395 why fprintf
%1397:	br	 if.end

BASIC BLOCK if.else
%1398:	load	 stdout
%1399:	load	 myname
%1400:	call	 %1398 XXX %1399 why fprintf
%1401:	br	 if.end

BASIC BLOCK if.end
%1402:	call	 XXX exit
%1403:	unreachable	

BASIC BLOCK return
%1404:	ret	

FUNCTION init_buffer

BASIC BLOCK entry
%1405:	call	 XXX ck_malloc
%1406:	bitcast	 %1405
%1407:	getelementptr	 %1406 XXX XXX
%1408:	store	 XXX %1407
%1409:	call	 XXX ck_malloc
%1410:	getelementptr	 %1406 XXX XXX
%1411:	store	 %1409 %1410
%1412:	getelementptr	 %1406 XXX XXX
%1413:	store	 XXX %1412
%1414:	bitcast	 %1406
%1415:	ret	 %1414

FUNCTION add1_buffer

BASIC BLOCK entry
%1416:	bitcast	 bb
%1417:	getelementptr	 %1416 XXX XXX
%1418:	load	 %1417
%1419:	add	 %1418 XXX
%1420:	getelementptr	 %1416 XXX XXX
%1421:	load	 %1420
%1422:	icmp	 %1419 %1421
%1423:	br	 %1422 if.end if.then

BASIC BLOCK if.then
%1424:	getelementptr	 %1416 XXX XXX
%1425:	load	 %1424
%1426:	mul	 %1425 XXX
%1427:	store	 %1426 %1424
%1428:	getelementptr	 %1416 XXX XXX
%1429:	load	 %1428
%1430:	getelementptr	 %1416 XXX XXX
%1431:	load	 %1430
%1432:	call	 %1429 %1431 ck_realloc
%1433:	getelementptr	 %1416 XXX XXX
%1434:	store	 %1432 %1433
%1435:	br	 if.end

BASIC BLOCK if.end
%1436:	trunc	 ch
%1437:	getelementptr	 %1416 XXX XXX
%1438:	load	 %1437
%1439:	sext	 %1438
%1440:	getelementptr	 %1416 XXX XXX
%1441:	load	 %1440
%1442:	getelementptr	 %1441 %1439
%1443:	store	 %1436 %1442
%1444:	getelementptr	 %1416 XXX XXX
%1445:	load	 %1444
%1446:	add	 %1445 XXX
%1447:	store	 %1446 %1444
%1448:	ret	

FUNCTION size_buffer

BASIC BLOCK entry
%1449:	bitcast	 b
%1450:	getelementptr	 %1449 XXX XXX
%1451:	load	 %1450
%1452:	ret	 %1451

FUNCTION get_buffer

BASIC BLOCK entry
%1453:	bitcast	 bb
%1454:	getelementptr	 %1453 XXX XXX
%1455:	load	 %1454
%1456:	ret	 %1455

FUNCTION flush_buffer

BASIC BLOCK entry
%1457:	bitcast	 bb
%1458:	getelementptr	 %1457 XXX XXX
%1459:	load	 %1458
%1460:	call	 %1459 free
%1461:	getelementptr	 %1457 XXX XXX
%1462:	store	 XXX %1461
%1463:	getelementptr	 %1457 XXX XXX
%1464:	store	 XXX %1463
%1465:	getelementptr	 %1457 XXX XXX
%1466:	store	 XXX %1465
%1467:	bitcast	 %1457
%1468:	call	 %1467 free
%1469:	ret	

FUNCTION setup_jump

BASIC BLOCK entry
%1470:	call	 init_buffer
%1471:	br	 while.cond

BASIC BLOCK while.cond
%1472:	call	 inchar
%1473:	icmp	 %1472 XXX
%1474:	br	 %1473 land.end land.rhs

BASIC BLOCK land.rhs
%1475:	sext	 %1472
%1476:	call	 __ctype_b_loc
%1477:	load	 %1476
%1478:	getelementptr	 %1477 %1475
%1479:	load	 %1478
%1480:	zext	 %1479
%1481:	and	 %1480 XXX
%1482:	icmp	 %1481 XXX
%1483:	br	 land.end

BASIC BLOCK land.end
%1484:	phi	 XXX %1482
%1485:	br	 %1484 while.end while.body

BASIC BLOCK while.body
%1486:	br	 while.cond

BASIC BLOCK while.end
%1487:	br	 while.cond5

BASIC BLOCK while.cond5
%1488:	phi	 %1472 %1509
%1489:	icmp	 %1488 XXX
%1490:	br	 %1489 land.end23 land.lhs.true

BASIC BLOCK land.lhs.true
%1491:	icmp	 %1488 XXX
%1492:	br	 %1491 land.end23 land.lhs.true10

BASIC BLOCK land.lhs.true10
%1493:	sext	 %1488
%1494:	call	 __ctype_b_loc
%1495:	load	 %1494
%1496:	getelementptr	 %1495 %1493
%1497:	load	 %1496
%1498:	zext	 %1497
%1499:	and	 %1498 XXX
%1500:	icmp	 %1499 XXX
%1501:	br	 %1500 land.lhs.true17 land.end23

BASIC BLOCK land.lhs.true17
%1502:	icmp	 %1488 XXX
%1503:	br	 %1502 land.end23 land.rhs20

BASIC BLOCK land.rhs20
%1504:	icmp	 %1488 XXX
%1505:	br	 land.end23

BASIC BLOCK land.end23
%1506:	phi	 XXX XXX XXX XXX %1504
%1507:	br	 %1506 while.end26 while.body24

BASIC BLOCK while.body24
%1508:	call	 %1470 %1488 add1_buffer
%1509:	call	 inchar
%1510:	br	 while.cond5

BASIC BLOCK while.end26
%1511:	call	 %1488 savchar
%1512:	call	 %1470 XXX add1_buffer
%1513:	call	 XXX ck_malloc
%1514:	bitcast	 %1513
%1515:	getelementptr	 %1514 XXX XXX
%1516:	store	 vec %1515
%1517:	getelementptr	 vec XXX XXX
%1518:	load	 %1517
%1519:	ptrtoint	 cmd
%1520:	ptrtoint	 %1518
%1521:	sub	 %1519 %1520
%1522:	sdiv	 %1521 XXX
%1523:	trunc	 %1522
%1524:	getelementptr	 %1514 XXX XXX
%1525:	store	 %1523 %1524
%1526:	call	 %1470 get_buffer
%1527:	call	 %1526 ck_strdup
%1528:	getelementptr	 %1514 XXX XXX
%1529:	store	 %1527 %1528
%1530:	getelementptr	 %1514 XXX XXX
%1531:	store	 list %1530
%1532:	call	 %1470 flush_buffer
%1533:	ret	 %1514

FUNCTION compile_filename

BASIC BLOCK entry
%1534:	call	 inchar
%1535:	icmp	 %1534 XXX
%1536:	br	 %1535 if.end if.then

BASIC BLOCK if.then
%1537:	call	 XXX bad_prog
%1538:	br	 if.end

BASIC BLOCK if.end
%1539:	call	 init_buffer
%1540:	br	 while.cond

BASIC BLOCK while.cond
%1541:	call	 inchar
%1542:	icmp	 %1541 XXX
%1543:	br	 %1542 land.end land.rhs

BASIC BLOCK land.rhs
%1544:	icmp	 %1541 XXX
%1545:	br	 land.end

BASIC BLOCK land.end
%1546:	phi	 XXX %1544
%1547:	br	 %1546 while.end while.body

BASIC BLOCK while.body
%1548:	call	 %1539 %1541 add1_buffer
%1549:	br	 while.cond

BASIC BLOCK while.end
%1550:	call	 %1539 XXX add1_buffer
%1551:	call	 %1539 get_buffer
%1552:	br	 for.cond

BASIC BLOCK for.cond
%1553:	phi	 XXX %1585
%1554:	icmp	 %1553 XXX
%1555:	br	 %1554 for.end for.body

BASIC BLOCK for.body
%1556:	sext	 %1553
%1557:	getelementptr	 file_ptrs XXX %1556
%1558:	getelementptr	 %1557 XXX XXX
%1559:	load	 %1558
%1560:	icmp	 %1559 XXX
%1561:	br	 %1560 if.then7 if.end8

BASIC BLOCK if.then7
%1562:	br	 for.end

BASIC BLOCK if.end8
%1563:	sext	 %1553
%1564:	getelementptr	 file_ptrs XXX %1563
%1565:	getelementptr	 %1564 XXX XXX
%1566:	load	 %1565
%1567:	call	 %1566 %1551 strcmp
%1568:	icmp	 %1567 XXX
%1569:	br	 %1568 if.then14 if.end23

BASIC BLOCK if.then14
%1570:	sext	 %1553
%1571:	getelementptr	 file_ptrs XXX %1570
%1572:	getelementptr	 %1571 XXX XXX
%1573:	load	 %1572
%1574:	icmp	 %1573 readit
%1575:	br	 %1574 if.end20 if.then19

BASIC BLOCK if.then19
%1576:	call	 XXX bad_prog
%1577:	br	 if.end20

BASIC BLOCK if.end20
%1578:	call	 %1539 flush_buffer
%1579:	sext	 %1553
%1580:	getelementptr	 file_ptrs XXX %1579
%1581:	getelementptr	 %1580 XXX XXX
%1582:	load	 %1581
%1583:	br	 return

BASIC BLOCK if.end23
%1584:	br	 for.inc

BASIC BLOCK for.inc
%1585:	add	 %1553 XXX
%1586:	br	 for.cond

BASIC BLOCK for.end
%1587:	icmp	 %1553 XXX
%1588:	br	 %1587 if.else47 if.then25

BASIC BLOCK if.then25
%1589:	call	 %1551 ck_strdup
%1590:	sext	 %1553
%1591:	getelementptr	 file_ptrs XXX %1590
%1592:	getelementptr	 %1591 XXX XXX
%1593:	store	 %1589 %1592
%1594:	sext	 %1553
%1595:	getelementptr	 file_ptrs XXX %1594
%1596:	getelementptr	 %1595 XXX XXX
%1597:	store	 readit %1596
%1598:	icmp	 readit XXX
%1599:	br	 %1598 if.then34 if.else

BASIC BLOCK if.then34
%1600:	call	 %1551 XXX ck_fopen
%1601:	sext	 %1553
%1602:	getelementptr	 file_ptrs XXX %1601
%1603:	getelementptr	 %1602 XXX XXX
%1604:	store	 %1600 %1603
%1605:	br	 if.end43

BASIC BLOCK if.else
%1606:	call	 %1551 XXX ck_fopen
%1607:	sext	 %1553
%1608:	getelementptr	 file_ptrs XXX %1607
%1609:	getelementptr	 %1608 XXX XXX
%1610:	store	 %1606 %1609
%1611:	br	 if.end43

BASIC BLOCK if.end43
%1612:	call	 %1539 flush_buffer
%1613:	sext	 %1553
%1614:	getelementptr	 file_ptrs XXX %1613
%1615:	getelementptr	 %1614 XXX XXX
%1616:	load	 %1615
%1617:	br	 return

BASIC BLOCK if.else47
%1618:	call	 XXX bad_prog
%1619:	br	 return

BASIC BLOCK return
%1620:	phi	 %1582 %1616 XXX
%1621:	ret	 %1620

FUNCTION compile_regex

BASIC BLOCK entry
%1622:	call	 init_buffer
%1623:	br	 while.cond

BASIC BLOCK while.cond
%1624:	phi	 XXX %1624 %1624 %1665 %1690 %1624 %1624
%1625:	call	 inchar
%1626:	icmp	 %1625 XXX
%1627:	br	 %1626 land.end land.rhs

BASIC BLOCK land.rhs
%1628:	icmp	 %1625 slash
%1629:	br	 %1628 lor.rhs lor.end

BASIC BLOCK lor.rhs
%1630:	icmp	 %1624 XXX
%1631:	br	 lor.end

BASIC BLOCK lor.end
%1632:	phi	 XXX %1630
%1633:	br	 land.end

BASIC BLOCK land.end
%1634:	phi	 XXX %1632
%1635:	br	 %1634 while.end while.body

BASIC BLOCK while.body
%1636:	icmp	 %1625 XXX
%1637:	br	 %1636 if.else8 if.then

BASIC BLOCK if.then
%1638:	call	 %1622 size_buffer
%1639:	icmp	 %1638 XXX
%1640:	br	 %1639 if.else if.then7

BASIC BLOCK if.then7
%1641:	call	 %1622 XXX add1_buffer
%1642:	call	 %1622 XXX add1_buffer
%1643:	br	 if.end

BASIC BLOCK if.else
%1644:	call	 %1622 %1625 add1_buffer
%1645:	br	 if.end

BASIC BLOCK if.end
%1646:	br	 while.cond

BASIC BLOCK if.else8
%1647:	icmp	 %1625 XXX
%1648:	br	 %1647 if.else16 if.then10

BASIC BLOCK if.then10
%1649:	call	 inchar
%1650:	call	 %1649 savchar
%1651:	icmp	 %1649 slash
%1652:	br	 %1651 if.else14 if.then13

BASIC BLOCK if.then13
%1653:	call	 %1622 XXX add1_buffer
%1654:	call	 %1622 XXX add1_buffer
%1655:	br	 if.end15

BASIC BLOCK if.else14
%1656:	call	 %1622 XXX add1_buffer
%1657:	br	 if.end15

BASIC BLOCK if.end15
%1658:	br	 while.cond

BASIC BLOCK if.else16
%1659:	icmp	 %1625 XXX
%1660:	br	 %1659 if.else23 if.then18

BASIC BLOCK if.then18
%1661:	icmp	 %1624 XXX
%1662:	br	 %1661 if.end22 if.then20

BASIC BLOCK if.then20
%1663:	call	 %1622 size_buffer
%1664:	br	 if.end22

BASIC BLOCK if.end22
%1665:	phi	 %1663 %1624
%1666:	call	 %1622 %1625 add1_buffer
%1667:	br	 while.cond

BASIC BLOCK if.else23
%1668:	icmp	 %1625 XXX
%1669:	br	 %1668 if.else38 if.then25

BASIC BLOCK if.then25
%1670:	call	 %1622 %1625 add1_buffer
%1671:	call	 %1622 get_buffer
%1672:	call	 %1622 size_buffer
%1673:	sub	 %1672 XXX
%1674:	icmp	 %1624 XXX
%1675:	br	 %1674 if.then36 land.lhs.true

BASIC BLOCK land.lhs.true
%1676:	add	 %1624 XXX
%1677:	icmp	 %1673 %1676
%1678:	br	 %1677 lor.lhs.false if.end37

BASIC BLOCK lor.lhs.false
%1679:	add	 %1624 XXX
%1680:	icmp	 %1673 %1679
%1681:	br	 %1680 if.then36 land.lhs.true32

BASIC BLOCK land.lhs.true32
%1682:	add	 %1624 XXX
%1683:	sext	 %1682
%1684:	getelementptr	 %1671 %1683
%1685:	load	 %1684
%1686:	sext	 %1685
%1687:	icmp	 %1686 XXX
%1688:	br	 %1687 if.then36 if.end37

BASIC BLOCK if.then36
%1689:	br	 if.end37

BASIC BLOCK if.end37
%1690:	phi	 %1624 %1624 XXX
%1691:	br	 while.cond

BASIC BLOCK if.else38
%1692:	icmp	 %1625 XXX
%1693:	br	 %1692 lor.lhs.false41 if.then44

BASIC BLOCK lor.lhs.false41
%1694:	icmp	 %1624 XXX
%1695:	br	 %1694 if.end45 if.then44

BASIC BLOCK if.then44
%1696:	call	 %1622 %1625 add1_buffer
%1697:	br	 while.cond

BASIC BLOCK if.end45
%1698:	br	 if.end46

BASIC BLOCK if.end46
%1699:	br	 if.end47

BASIC BLOCK if.end47
%1700:	br	 if.end48

BASIC BLOCK if.end48
%1701:	br	 if.end49

BASIC BLOCK if.end49
%1702:	call	 inchar
%1703:	switch	 %1702 sw.default XXX sw.bb XXX sw.bb51

BASIC BLOCK sw.bb
%1704:	call	 %1622 XXX add1_buffer
%1705:	br	 sw.epilog

BASIC BLOCK sw.bb51
%1706:	br	 sw.epilog

BASIC BLOCK sw.default
%1707:	call	 %1622 XXX add1_buffer
%1708:	call	 %1622 %1702 add1_buffer
%1709:	br	 sw.epilog

BASIC BLOCK sw.epilog
%1710:	br	 while.cond

BASIC BLOCK while.end
%1711:	icmp	 %1625 XXX
%1712:	br	 %1711 if.end55 if.then54

BASIC BLOCK if.then54
%1713:	call	 XXX bad_prog
%1714:	br	 if.end55

BASIC BLOCK if.end55
%1715:	call	 %1622 size_buffer
%1716:	icmp	 %1715 XXX
%1717:	br	 %1716 if.else69 if.then57

BASIC BLOCK if.then57
%1718:	call	 XXX ck_malloc
%1719:	bitcast	 %1718
%1720:	store	 %1719 last_regex
%1721:	call	 %1622 size_buffer
%1722:	add	 %1721 XXX
%1723:	sext	 %1722
%1724:	load	 last_regex
%1725:	getelementptr	 %1724 XXX XXX
%1726:	store	 %1723 %1725
%1727:	load	 last_regex
%1728:	getelementptr	 %1727 XXX XXX
%1729:	load	 %1728
%1730:	trunc	 %1729
%1731:	call	 %1730 ck_malloc
%1732:	load	 last_regex
%1733:	getelementptr	 %1732 XXX XXX
%1734:	store	 %1731 %1733
%1735:	call	 XXX ck_malloc
%1736:	load	 last_regex
%1737:	getelementptr	 %1736 XXX XXX
%1738:	store	 %1735 %1737
%1739:	load	 last_regex
%1740:	getelementptr	 %1739 XXX XXX
%1741:	store	 XXX %1740
%1742:	call	 %1622 get_buffer
%1743:	call	 %1622 size_buffer
%1744:	load	 last_regex
%1745:	call	 %1742 %1743 %1744 re_compile_pattern
%1746:	br	 if.end73

BASIC BLOCK if.else69
%1747:	load	 last_regex
%1748:	icmp	 %1747 XXX
%1749:	br	 %1748 if.then71 if.end72

BASIC BLOCK if.then71
%1750:	call	 XXX bad_prog
%1751:	br	 if.end72

BASIC BLOCK if.end72
%1752:	br	 if.end73

BASIC BLOCK if.end73
%1753:	call	 %1622 flush_buffer
%1754:	ret	

FUNCTION re_compile_pattern

BASIC BLOCK entry
%1755:	getelementptr	 bufp XXX XXX
%1756:	load	 %1755
%1757:	and	 %1756 XXX
%1758:	store	 %1757 %1755
%1759:	getelementptr	 bufp XXX XXX
%1760:	load	 %1759
%1761:	and	 %1760 XXX
%1762:	store	 %1761 %1759
%1763:	getelementptr	 bufp XXX XXX
%1764:	load	 %1763
%1765:	and	 %1764 XXX
%1766:	or	 %1765 XXX
%1767:	store	 %1766 %1763
%1768:	load	 re_syntax_options
%1769:	call	 pattern length %1768 bufp regex_compile
%1770:	sext	 %1769
%1771:	getelementptr	 re_error_msg XXX %1770
%1772:	load	 %1771
%1773:	ret	 %1772

FUNCTION ck_strdup

BASIC BLOCK entry
%1774:	call	 str strlen
%1775:	add	 %1774 XXX
%1776:	trunc	 %1775
%1777:	call	 %1776 ck_malloc
%1778:	call	 %1777 str strcpy
%1779:	ret	 %1777

FUNCTION read_pattern_space

BASIC BLOCK entry
%1780:	load	 XXX
%1781:	load	 XXX
%1782:	load	 input_file
%1783:	call	 %1782 feof
%1784:	icmp	 %1783 XXX
%1785:	br	 %1784 if.end if.then

BASIC BLOCK if.then
%1786:	br	 return

BASIC BLOCK if.end
%1787:	load	 input_line_number
%1788:	add	 %1787 XXX
%1789:	store	 %1788 input_line_number
%1790:	store	 XXX replaced
%1791:	br	 for.cond

BASIC BLOCK for.cond
%1792:	phi	 %1780 %1832
%1793:	phi	 %1781 %1834
%1794:	icmp	 %1793 XXX
%1795:	br	 %1794 if.end4 if.then1

BASIC BLOCK if.then1
%1796:	load	 XXX
%1797:	load	 XXX
%1798:	mul	 %1797 XXX
%1799:	call	 %1796 %1798 ck_realloc
%1800:	store	 %1799 XXX
%1801:	load	 XXX
%1802:	load	 XXX
%1803:	sext	 %1802
%1804:	getelementptr	 %1801 %1803
%1805:	load	 XXX
%1806:	load	 XXX
%1807:	mul	 %1806 XXX
%1808:	store	 %1807 XXX
%1809:	br	 if.end4

BASIC BLOCK if.end4
%1810:	phi	 %1804 %1792
%1811:	phi	 %1805 %1793
%1812:	load	 input_file
%1813:	call	 %1812 _IO_getc
%1814:	icmp	 %1813 XXX
%1815:	br	 %1814 if.end15 if.then7

BASIC BLOCK if.then7
%1816:	load	 XXX
%1817:	icmp	 %1811 %1816
%1818:	br	 %1817 if.end10 if.then9

BASIC BLOCK if.then9
%1819:	br	 return

BASIC BLOCK if.end10
%1820:	load	 XXX
%1821:	sub	 %1820 %1811
%1822:	store	 %1821 XXX
%1823:	load	 last_input_file
%1824:	icmp	 %1823 XXX
%1825:	br	 %1824 if.end14 if.then12

BASIC BLOCK if.then12
%1826:	load	 input_EOF
%1827:	add	 %1826 XXX
%1828:	store	 %1827 input_EOF
%1829:	br	 if.end14

BASIC BLOCK if.end14
%1830:	br	 return

BASIC BLOCK if.end15
%1831:	trunc	 %1813
%1832:	getelementptr	 %1810 XXX
%1833:	store	 %1831 %1810
%1834:	add	 %1811 XXX
%1835:	icmp	 %1813 XXX
%1836:	br	 %1835 if.end20 if.then18

BASIC BLOCK if.then18
%1837:	load	 XXX
%1838:	sub	 %1837 %1834
%1839:	store	 %1838 XXX
%1840:	br	 for.end

BASIC BLOCK if.end20
%1841:	br	 for.cond

BASIC BLOCK for.end
%1842:	load	 input_file
%1843:	call	 %1842 _IO_getc
%1844:	icmp	 %1843 XXX
%1845:	br	 %1844 if.else if.then24

BASIC BLOCK if.then24
%1846:	load	 input_file
%1847:	call	 %1843 %1846 ungetc
%1848:	br	 if.end30

BASIC BLOCK if.else
%1849:	load	 last_input_file
%1850:	icmp	 %1849 XXX
%1851:	br	 %1850 if.end29 if.then27

BASIC BLOCK if.then27
%1852:	load	 input_EOF
%1853:	add	 %1852 XXX
%1854:	store	 %1853 input_EOF
%1855:	br	 if.end29

BASIC BLOCK if.end29
%1856:	br	 if.end30

BASIC BLOCK if.end30
%1857:	br	 return

BASIC BLOCK return
%1858:	phi	 XXX XXX XXX XXX
%1859:	ret	 %1858

FUNCTION execute_program

BASIC BLOCK entry
%1860:	alloca	 XXX
%1861:	alloca	 XXX
%1862:	br	 restart

BASIC BLOCK restart
%1863:	store	 XXX execute_program.end_cycle
%1864:	getelementptr	 vec XXX XXX
%1865:	load	 %1864
%1866:	getelementptr	 vec XXX XXX
%1867:	load	 %1866
%1868:	br	 for.cond

BASIC BLOCK for.cond
%1869:	phi	 %1867 %2706
%1870:	phi	 %1865 %2705
%1871:	phi	 vec %2704
%1872:	icmp	 %1869 XXX
%1873:	br	 %1872 for.end513 for.body

BASIC BLOCK for.body
%1874:	br	 exe_loop

BASIC BLOCK exe_loop
%1875:	phi	 %1869 %2638 %2034 %1951
%1876:	phi	 %1870 %2646 %2042 %1949
%1877:	phi	 %1871 %1877 %1877 %1947
%1878:	getelementptr	 %1876 XXX XXX
%1879:	load	 %1878
%1880:	and	 %1879 XXX
%1881:	icmp	 %1880 XXX
%1882:	br	 %1881 if.else if.then

BASIC BLOCK if.then
%1883:	getelementptr	 %1876 XXX XXX
%1884:	call	 %1883 match_address
%1885:	icmp	 %1884 XXX
%1886:	br	 %1885 if.end if.then3

BASIC BLOCK if.then3
%1887:	getelementptr	 %1876 XXX XXX
%1888:	load	 %1887
%1889:	and	 %1888 XXX
%1890:	store	 %1889 %1887
%1891:	br	 if.end

BASIC BLOCK if.end
%1892:	br	 if.end22

BASIC BLOCK if.else
%1893:	getelementptr	 %1876 XXX XXX
%1894:	call	 %1893 match_address
%1895:	icmp	 %1894 XXX
%1896:	br	 %1895 if.end21 if.then8

BASIC BLOCK if.then8
%1897:	getelementptr	 %1876 XXX XXX
%1898:	getelementptr	 %1897 XXX XXX
%1899:	load	 %1898
%1900:	icmp	 %1899 XXX
%1901:	br	 %1900 if.end20 if.then10

BASIC BLOCK if.then10
%1902:	getelementptr	 %1876 XXX XXX
%1903:	getelementptr	 %1902 XXX XXX
%1904:	load	 %1903
%1905:	icmp	 %1904 XXX
%1906:	br	 %1905 lor.lhs.false if.then17

BASIC BLOCK lor.lhs.false
%1907:	getelementptr	 %1876 XXX XXX
%1908:	call	 %1907 match_address
%1909:	icmp	 %1908 XXX
%1910:	br	 %1909 if.then17 if.end19

BASIC BLOCK if.then17
%1911:	getelementptr	 %1876 XXX XXX
%1912:	load	 %1911
%1913:	or	 %1912 XXX
%1914:	store	 %1913 %1911
%1915:	br	 if.end19

BASIC BLOCK if.end19
%1916:	br	 if.end20

BASIC BLOCK if.end20
%1917:	br	 if.end21

BASIC BLOCK if.end21
%1918:	phi	 XXX XXX
%1919:	br	 if.end22

BASIC BLOCK if.end22
%1920:	phi	 XXX %1918
%1921:	getelementptr	 %1876 XXX XXX
%1922:	load	 %1921
%1923:	and	 %1922 XXX
%1924:	icmp	 %1923 XXX
%1925:	br	 %1924 if.end28 if.then26

BASIC BLOCK if.then26
%1926:	icmp	 %1920 XXX
%1927:	xor	 %1926 XXX
%1928:	zext	 %1927
%1929:	br	 if.end28

BASIC BLOCK if.end28
%1930:	phi	 %1928 %1920
%1931:	icmp	 %1930 XXX
%1932:	br	 %1931 if.then30 if.end31

BASIC BLOCK if.then30
%1933:	br	 for.inc510

BASIC BLOCK if.end31
%1934:	getelementptr	 %1876 XXX XXX
%1935:	load	 %1934
%1936:	sext	 %1935
%1937:	switch	 %1936 sw.default503 XXX sw.bb XXX sw.bb40 XXX sw.bb47 XXX sw.bb48 XXX sw.bb50 XXX sw.bb67 XXX sw.bb83 XXX sw.bb96 XXX sw.bb98 XXX sw.bb110 XXX sw.bb111 XXX sw.bb112 XXX sw.bb113 XXX sw.bb114 XXX sw.bb121 XXX sw.bb188 XXX sw.bb197 XXX sw.bb202 XXX sw.bb203 XXX sw.bb214 XXX sw.bb217 XXX sw.bb249 XXX sw.bb453 XXX sw.bb477 XXX sw.bb485 XXX sw.bb488

BASIC BLOCK sw.bb
%1938:	getelementptr	 %1876 XXX XXX
%1939:	bitcast	 %1938
%1940:	load	 %1939
%1941:	getelementptr	 %1940 XXX XXX
%1942:	load	 %1941
%1943:	icmp	 %1942 XXX
%1944:	br	 %1943 if.end39 if.then34

BASIC BLOCK if.then34
%1945:	getelementptr	 %1876 XXX XXX
%1946:	bitcast	 %1945
%1947:	load	 %1946
%1948:	getelementptr	 %1947 XXX XXX
%1949:	load	 %1948
%1950:	getelementptr	 %1947 XXX XXX
%1951:	load	 %1950
%1952:	br	 exe_loop

BASIC BLOCK if.end39
%1953:	br	 sw.epilog506

BASIC BLOCK sw.bb40
%1954:	getelementptr	 %1877 XXX XXX
%1955:	load	 %1954
%1956:	getelementptr	 %1955 XXX XXX
%1957:	load	 %1956
%1958:	getelementptr	 %1877 XXX XXX
%1959:	load	 %1958
%1960:	sext	 %1959
%1961:	getelementptr	 %1957 %1960
%1962:	getelementptr	 %1877 XXX XXX
%1963:	load	 %1962
%1964:	getelementptr	 %1963 XXX XXX
%1965:	load	 %1964
%1966:	getelementptr	 %1877 XXX XXX
%1967:	load	 %1966
%1968:	sub	 %1965 %1967
%1969:	getelementptr	 %1877 XXX XXX
%1970:	load	 %1969
%1971:	br	 sw.epilog506

BASIC BLOCK sw.bb47
%1972:	br	 sw.epilog506

BASIC BLOCK sw.bb48
%1973:	load	 input_line_number
%1974:	call	 XXX %1973 printf
%1975:	br	 sw.epilog506

BASIC BLOCK sw.bb50
%1976:	br	 while.cond

BASIC BLOCK while.cond
%1977:	load	 XXX
%1978:	load	 XXX
%1979:	sub	 %1977 %1978
%1980:	getelementptr	 %1876 XXX XXX
%1981:	bitcast	 %1980
%1982:	getelementptr	 %1981 XXX XXX
%1983:	load	 %1982
%1984:	icmp	 %1979 %1983
%1985:	br	 %1984 while.end while.body

BASIC BLOCK while.body
%1986:	load	 XXX
%1987:	mul	 %1986 XXX
%1988:	store	 %1987 XXX
%1989:	load	 XXX
%1990:	load	 XXX
%1991:	call	 %1989 %1990 ck_realloc
%1992:	store	 %1991 XXX
%1993:	br	 while.cond

BASIC BLOCK while.end
%1994:	getelementptr	 %1876 XXX XXX
%1995:	bitcast	 %1994
%1996:	getelementptr	 %1995 XXX XXX
%1997:	load	 %1996
%1998:	load	 XXX
%1999:	load	 XXX
%2000:	sext	 %1999
%2001:	getelementptr	 %1998 %2000
%2002:	getelementptr	 %1876 XXX XXX
%2003:	bitcast	 %2002
%2004:	getelementptr	 %2003 XXX XXX
%2005:	load	 %2004
%2006:	sext	 %2005
%2007:	call	 %1997 %2001 %2006 bcopy
%2008:	getelementptr	 %1876 XXX XXX
%2009:	bitcast	 %2008
%2010:	getelementptr	 %2009 XXX XXX
%2011:	load	 %2010
%2012:	load	 XXX
%2013:	add	 %2012 %2011
%2014:	store	 %2013 XXX
%2015:	br	 sw.epilog506

BASIC BLOCK sw.bb67
%2016:	getelementptr	 %1876 XXX XXX
%2017:	bitcast	 %2016
%2018:	load	 %2017
%2019:	icmp	 %2018 XXX
%2020:	br	 %2019 if.then70 if.else71

BASIC BLOCK if.then70
%2021:	load	 execute_program.end_cycle
%2022:	add	 %2021 XXX
%2023:	store	 %2022 execute_program.end_cycle
%2024:	br	 if.end82

BASIC BLOCK if.else71
%2025:	getelementptr	 %1876 XXX XXX
%2026:	bitcast	 %2025
%2027:	load	 %2026
%2028:	getelementptr	 %2027 XXX XXX
%2029:	load	 %2028
%2030:	getelementptr	 %2029 XXX XXX
%2031:	load	 %2030
%2032:	getelementptr	 %2027 XXX XXX
%2033:	load	 %2032
%2034:	sub	 %2031 %2033
%2035:	getelementptr	 %2027 XXX XXX
%2036:	load	 %2035
%2037:	getelementptr	 %2036 XXX XXX
%2038:	load	 %2037
%2039:	getelementptr	 %2027 XXX XXX
%2040:	load	 %2039
%2041:	sext	 %2040
%2042:	getelementptr	 %2038 %2041
%2043:	br	 exe_loop

BASIC BLOCK if.end82
%2044:	br	 sw.epilog506

BASIC BLOCK sw.bb83
%2045:	store	 XXX XXX
%2046:	getelementptr	 %1876 XXX XXX
%2047:	load	 %2046
%2048:	and	 %2047 XXX
%2049:	icmp	 %2048 XXX
%2050:	br	 %2049 if.then87 if.end94

BASIC BLOCK if.then87
%2051:	getelementptr	 %1876 XXX XXX
%2052:	bitcast	 %2051
%2053:	getelementptr	 %2052 XXX XXX
%2054:	load	 %2053
%2055:	getelementptr	 %1876 XXX XXX
%2056:	bitcast	 %2055
%2057:	getelementptr	 %2056 XXX XXX
%2058:	load	 %2057
%2059:	load	 stdout
%2060:	call	 %2054 XXX %2058 %2059 ck_fwrite
%2061:	br	 if.end94

BASIC BLOCK if.end94
%2062:	load	 execute_program.end_cycle
%2063:	add	 %2062 XXX
%2064:	store	 %2063 execute_program.end_cycle
%2065:	br	 sw.epilog506

BASIC BLOCK sw.bb96
%2066:	store	 XXX XXX
%2067:	load	 execute_program.end_cycle
%2068:	add	 %2067 XXX
%2069:	store	 %2068 execute_program.end_cycle
%2070:	br	 sw.epilog506

BASIC BLOCK sw.bb98
%2071:	load	 XXX
%2072:	load	 XXX
%2073:	call	 %2071 %2072 eol_pos
%2074:	load	 XXX
%2075:	sext	 %2074
%2076:	load	 XXX
%2077:	ptrtoint	 %2073
%2078:	ptrtoint	 %2076
%2079:	sub	 %2077 %2078
%2080:	sub	 %2075 %2079
%2081:	sub	 %2080 XXX
%2082:	trunc	 %2081
%2083:	icmp	 %2082 XXX
%2084:	br	 %2083 if.end108 if.then106

BASIC BLOCK if.then106
%2085:	load	 XXX
%2086:	getelementptr	 %2073 XXX
%2087:	call	 %2085 %2086 %2082 chr_copy
%2088:	store	 %2082 XXX
%2089:	br	 restart

BASIC BLOCK if.end108
%2090:	store	 XXX XXX
%2091:	load	 execute_program.end_cycle
%2092:	add	 %2091 XXX
%2093:	store	 %2092 execute_program.end_cycle
%2094:	br	 sw.epilog506

BASIC BLOCK sw.bb110
%2095:	call	 hold line line_copy
%2096:	br	 sw.epilog506

BASIC BLOCK sw.bb111
%2097:	call	 hold line line_append
%2098:	br	 sw.epilog506

BASIC BLOCK sw.bb112
%2099:	call	 line hold line_copy
%2100:	br	 sw.epilog506

BASIC BLOCK sw.bb113
%2101:	call	 line hold line_append
%2102:	br	 sw.epilog506

BASIC BLOCK sw.bb114
%2103:	getelementptr	 %1876 XXX XXX
%2104:	bitcast	 %2103
%2105:	getelementptr	 %2104 XXX XXX
%2106:	load	 %2105
%2107:	getelementptr	 %1876 XXX XXX
%2108:	bitcast	 %2107
%2109:	getelementptr	 %2108 XXX XXX
%2110:	load	 %2109
%2111:	load	 stdout
%2112:	call	 %2106 XXX %2110 %2111 ck_fwrite
%2113:	br	 sw.epilog506

BASIC BLOCK sw.bb121
%2114:	load	 XXX
%2115:	load	 XXX
%2116:	br	 while.cond127

BASIC BLOCK while.cond127
%2117:	phi	 %2115 %2193
%2118:	phi	 %2114 %2120
%2119:	phi	 XXX %2192
%2120:	add	 %2118 XXX
%2121:	icmp	 %2118 XXX
%2122:	br	 %2121 while.end186 while.body129

BASIC BLOCK while.body129
%2123:	icmp	 %2120 XXX
%2124:	br	 %2123 land.lhs.true if.end135

BASIC BLOCK land.lhs.true
%2125:	load	 %2117
%2126:	sext	 %2125
%2127:	icmp	 %2126 XXX
%2128:	br	 %2127 if.end135 if.then134

BASIC BLOCK if.then134
%2129:	br	 while.end186

BASIC BLOCK if.end135
%2130:	icmp	 %2119 XXX
%2131:	br	 %2130 if.end140 if.then138

BASIC BLOCK if.then138
%2132:	call	 XXX putchar
%2133:	br	 if.end140

BASIC BLOCK if.end140
%2134:	phi	 XXX %2119
%2135:	load	 %2117
%2136:	sext	 %2135
%2137:	icmp	 %2136 XXX
%2138:	br	 %2137 if.else147 if.then144

BASIC BLOCK if.then144
%2139:	call	 XXX printf
%2140:	add	 %2134 XXX
%2141:	br	 if.end185

BASIC BLOCK if.else147
%2142:	load	 %2117
%2143:	sext	 %2142
%2144:	sext	 %2143
%2145:	call	 __ctype_b_loc
%2146:	load	 %2145
%2147:	getelementptr	 %2146 %2144
%2148:	load	 %2147
%2149:	zext	 %2148
%2150:	and	 %2149 XXX
%2151:	icmp	 %2150 XXX
%2152:	br	 %2151 if.else157 if.then153

BASIC BLOCK if.then153
%2153:	load	 %2117
%2154:	sext	 %2153
%2155:	call	 %2154 putchar
%2156:	add	 %2134 XXX
%2157:	br	 if.end184

BASIC BLOCK if.else157
%2158:	load	 %2117
%2159:	sext	 %2158
%2160:	switch	 %2159 sw.default XXX sw.bb159 XXX sw.bb162 XXX sw.bb165 XXX sw.bb168 XXX sw.bb171 XXX sw.bb174 XXX sw.bb177

BASIC BLOCK sw.bb159
%2161:	call	 XXX printf
%2162:	add	 %2134 XXX
%2163:	br	 sw.epilog

BASIC BLOCK sw.bb162
%2164:	call	 XXX printf
%2165:	add	 %2134 XXX
%2166:	br	 sw.epilog

BASIC BLOCK sw.bb165
%2167:	call	 XXX printf
%2168:	add	 %2134 XXX
%2169:	br	 sw.epilog

BASIC BLOCK sw.bb168
%2170:	call	 XXX printf
%2171:	add	 %2134 XXX
%2172:	br	 sw.epilog

BASIC BLOCK sw.bb171
%2173:	call	 XXX printf
%2174:	add	 %2134 XXX
%2175:	br	 sw.epilog

BASIC BLOCK sw.bb174
%2176:	call	 XXX printf
%2177:	add	 %2134 XXX
%2178:	br	 sw.epilog

BASIC BLOCK sw.bb177
%2179:	call	 XXX printf
%2180:	add	 %2134 XXX
%2181:	br	 sw.epilog

BASIC BLOCK sw.default
%2182:	load	 %2117
%2183:	sext	 %2182
%2184:	and	 %2183 XXX
%2185:	call	 XXX %2184 printf
%2186:	add	 %2134 XXX
%2187:	br	 sw.epilog

BASIC BLOCK sw.epilog
%2188:	phi	 %2186 %2180 %2177 %2174 %2171 %2168 %2165 %2162
%2189:	br	 if.end184

BASIC BLOCK if.end184
%2190:	phi	 %2156 %2188
%2191:	br	 if.end185

BASIC BLOCK if.end185
%2192:	phi	 %2140 %2190
%2193:	getelementptr	 %2117 XXX
%2194:	br	 while.cond127

BASIC BLOCK while.end186
%2195:	call	 XXX putchar
%2196:	br	 sw.epilog506

BASIC BLOCK sw.bb188
%2197:	load	 input_file
%2198:	call	 %2197 feof
%2199:	icmp	 %2198 XXX
%2200:	br	 %2199 if.end192 if.then191

BASIC BLOCK if.then191
%2201:	br	 quit

BASIC BLOCK if.end192
%2202:	load	 no_default_output
%2203:	icmp	 %2202 XXX
%2204:	br	 %2203 if.then194 if.end195

BASIC BLOCK if.then194
%2205:	load	 XXX
%2206:	load	 XXX
%2207:	load	 stdout
%2208:	call	 %2205 XXX %2206 %2207 ck_fwrite
%2209:	br	 if.end195

BASIC BLOCK if.end195
%2210:	call	 read_pattern_space
%2211:	br	 sw.epilog506

BASIC BLOCK sw.bb197
%2212:	load	 input_file
%2213:	call	 %2212 feof
%2214:	icmp	 %2213 XXX
%2215:	br	 %2214 if.end201 if.then200

BASIC BLOCK if.then200
%2216:	store	 XXX XXX
%2217:	br	 quit

BASIC BLOCK if.end201
%2218:	call	 append_pattern_space
%2219:	br	 sw.epilog506

BASIC BLOCK sw.bb202
%2220:	load	 XXX
%2221:	load	 XXX
%2222:	load	 stdout
%2223:	call	 %2220 XXX %2221 %2222 ck_fwrite
%2224:	br	 sw.epilog506

BASIC BLOCK sw.bb203
%2225:	load	 XXX
%2226:	load	 XXX
%2227:	call	 %2225 %2226 eol_pos
%2228:	load	 XXX
%2229:	icmp	 %2227 XXX
%2230:	br	 %2229 cond.false cond.true

BASIC BLOCK cond.true
%2231:	load	 XXX
%2232:	ptrtoint	 %2227
%2233:	ptrtoint	 %2231
%2234:	sub	 %2232 %2233
%2235:	add	 %2234 XXX
%2236:	br	 cond.end

BASIC BLOCK cond.false
%2237:	load	 XXX
%2238:	sext	 %2237
%2239:	br	 cond.end

BASIC BLOCK cond.end
%2240:	phi	 %2235 %2238
%2241:	trunc	 %2240
%2242:	load	 stdout
%2243:	call	 %2228 XXX %2241 %2242 ck_fwrite
%2244:	br	 sw.epilog506

BASIC BLOCK sw.bb214
%2245:	br	 quit

BASIC BLOCK quit
%2246:	load	 quit_cmd
%2247:	add	 %2246 XXX
%2248:	store	 %2247 quit_cmd
%2249:	load	 execute_program.end_cycle
%2250:	add	 %2249 XXX
%2251:	store	 %2250 execute_program.end_cycle
%2252:	br	 sw.epilog506

BASIC BLOCK sw.bb217
%2253:	getelementptr	 %1876 XXX XXX
%2254:	bitcast	 %2253
%2255:	load	 %2254
%2256:	icmp	 %2255 XXX
%2257:	br	 %2256 if.end248 if.then222

BASIC BLOCK if.then222
%2258:	getelementptr	 %1876 XXX XXX
%2259:	bitcast	 %2258
%2260:	load	 %2259
%2261:	call	 %2260 rewind
%2262:	br	 do.body

BASIC BLOCK do.body
%2263:	phi	 XXX %2291
%2264:	load	 XXX
%2265:	add	 %2264 %2263
%2266:	store	 %2265 XXX
%2267:	load	 XXX
%2268:	load	 XXX
%2269:	icmp	 %2267 %2268
%2270:	br	 %2269 if.end231 if.then228

BASIC BLOCK if.then228
%2271:	load	 XXX
%2272:	mul	 %2271 XXX
%2273:	store	 %2272 XXX
%2274:	load	 XXX
%2275:	load	 XXX
%2276:	call	 %2274 %2275 ck_realloc
%2277:	store	 %2276 XXX
%2278:	br	 if.end231

BASIC BLOCK if.end231
%2279:	load	 XXX
%2280:	load	 XXX
%2281:	sext	 %2280
%2282:	getelementptr	 %2279 %2281
%2283:	load	 XXX
%2284:	load	 XXX
%2285:	sub	 %2283 %2284
%2286:	sext	 %2285
%2287:	getelementptr	 %1876 XXX XXX
%2288:	bitcast	 %2287
%2289:	load	 %2288
%2290:	call	 %2282 XXX %2286 %2289 fread
%2291:	trunc	 %2290
%2292:	br	 do.cond

BASIC BLOCK do.cond
%2293:	icmp	 %2291 XXX
%2294:	br	 %2293 do.end do.body

BASIC BLOCK do.end
%2295:	getelementptr	 %1876 XXX XXX
%2296:	bitcast	 %2295
%2297:	load	 %2296
%2298:	call	 %2297 ferror
%2299:	icmp	 %2298 XXX
%2300:	br	 %2299 if.end247 if.then246

BASIC BLOCK if.then246
%2301:	call	 XXX panic
%2302:	br	 if.end247

BASIC BLOCK if.end247
%2303:	br	 if.end248

BASIC BLOCK if.end248
%2304:	br	 sw.epilog506

BASIC BLOCK sw.bb249
%2305:	load	 XXX
%2306:	sub	 %2305 XXX
%2307:	sext	 %2306
%2308:	load	 XXX
%2309:	getelementptr	 %2308 %2307
%2310:	load	 %2309
%2311:	sext	 %2310
%2312:	icmp	 %2311 XXX
%2313:	zext	 %2312
%2314:	load	 XXX
%2315:	icmp	 %2314 XXX
%2316:	br	 %2315 if.then258 if.end260

BASIC BLOCK if.then258
%2317:	store	 XXX XXX
%2318:	call	 XXX ck_malloc
%2319:	store	 %2318 XXX
%2320:	br	 if.end260

BASIC BLOCK if.end260
%2321:	load	 XXX
%2322:	sub	 %2321 %2313
%2323:	store	 XXX XXX
%2324:	getelementptr	 %1876 XXX XXX
%2325:	bitcast	 %2324
%2326:	getelementptr	 %2325 XXX XXX
%2327:	load	 %2326
%2328:	getelementptr	 %1876 XXX XXX
%2329:	bitcast	 %2328
%2330:	getelementptr	 %2329 XXX XXX
%2331:	load	 %2330
%2332:	sext	 %2331
%2333:	getelementptr	 %2327 %2332
%2334:	br	 while.cond267

BASIC BLOCK while.cond267
%2335:	phi	 XXX %2348 %2348
%2336:	phi	 %2322 %2403 %2533
%2337:	phi	 XXX %2400 %2530
%2338:	getelementptr	 %1876 XXX XXX
%2339:	bitcast	 %2338
%2340:	getelementptr	 %2339 XXX XXX
%2341:	load	 %2340
%2342:	load	 XXX
%2343:	load	 XXX
%2344:	sub	 %2343 %2313
%2345:	call	 %2341 %2342 %2344 %2337 %2336 regs re_search
%2346:	icmp	 %2345 XXX
%2347:	br	 %2346 while.end421 while.body274

BASIC BLOCK while.body274
%2348:	add	 %2335 XXX
%2349:	sub	 %2345 %2337
%2350:	icmp	 %2349 XXX
%2351:	br	 %2350 if.end282 if.then278

BASIC BLOCK if.then278
%2352:	load	 XXX
%2353:	sext	 %2337
%2354:	getelementptr	 %2352 %2353
%2355:	sub	 %2345 %2337
%2356:	call	 execute_program.tmp %2354 %2355 str_append
%2357:	br	 if.end282

BASIC BLOCK if.end282
%2358:	getelementptr	 %1876 XXX XXX
%2359:	bitcast	 %2358
%2360:	getelementptr	 %2359 XXX XXX
%2361:	load	 %2360
%2362:	and	 %2361 XXX
%2363:	icmp	 %2362 XXX
%2364:	br	 %2363 if.end315 if.then287

BASIC BLOCK if.then287
%2365:	getelementptr	 %1876 XXX XXX
%2366:	bitcast	 %2365
%2367:	getelementptr	 %2366 XXX XXX
%2368:	load	 %2367
%2369:	icmp	 %2348 %2368
%2370:	br	 %2369 if.end314 if.then292

BASIC BLOCK if.then292
%2371:	load	 XXX
%2372:	getelementptr	 %2371 XXX
%2373:	load	 %2372
%2374:	load	 XXX
%2375:	getelementptr	 %2374 XXX
%2376:	load	 %2375
%2377:	sub	 %2373 %2376
%2378:	icmp	 %2377 XXX
%2379:	br	 %2378 if.then298 if.end299

BASIC BLOCK if.then298
%2380:	br	 if.end299

BASIC BLOCK if.end299
%2381:	phi	 %2377 XXX
%2382:	load	 XXX
%2383:	load	 XXX
%2384:	getelementptr	 %2383 XXX
%2385:	load	 %2384
%2386:	sext	 %2385
%2387:	getelementptr	 %2382 %2386
%2388:	call	 execute_program.tmp %2387 %2381 str_append
%2389:	load	 XXX
%2390:	getelementptr	 %2389 XXX
%2391:	load	 %2390
%2392:	icmp	 %2345 %2391
%2393:	br	 %2392 cond.false308 cond.true306

BASIC BLOCK cond.true306
%2394:	add	 %2345 XXX
%2395:	br	 cond.end310

BASIC BLOCK cond.false308
%2396:	load	 XXX
%2397:	getelementptr	 %2396 XXX
%2398:	load	 %2397
%2399:	br	 cond.end310

BASIC BLOCK cond.end310
%2400:	phi	 %2394 %2398
%2401:	load	 XXX
%2402:	sub	 %2401 %2313
%2403:	sub	 %2402 %2400
%2404:	br	 while.cond267

BASIC BLOCK if.end314
%2405:	br	 if.end315

BASIC BLOCK if.end315
%2406:	br	 for.cond316

BASIC BLOCK for.cond316
%2407:	phi	 %2327 %2497
%2408:	phi	 %2327 %2500
%2409:	icmp	 %2408 %2333
%2410:	br	 %2409 for.end for.body319

BASIC BLOCK for.body319
%2411:	load	 %2408
%2412:	sext	 %2411
%2413:	icmp	 %2412 XXX
%2414:	br	 %2413 if.else341 if.then323

BASIC BLOCK if.then323
%2415:	ptrtoint	 %2408
%2416:	ptrtoint	 %2407
%2417:	sub	 %2415 %2416
%2418:	icmp	 %2417 XXX
%2419:	br	 %2418 if.end333 if.then328

BASIC BLOCK if.then328
%2420:	ptrtoint	 %2408
%2421:	ptrtoint	 %2407
%2422:	sub	 %2420 %2421
%2423:	trunc	 %2422
%2424:	call	 execute_program.tmp %2407 %2423 str_append
%2425:	br	 if.end333

BASIC BLOCK if.end333
%2426:	load	 XXX
%2427:	load	 XXX
%2428:	getelementptr	 %2427 XXX
%2429:	load	 %2428
%2430:	sext	 %2429
%2431:	getelementptr	 %2426 %2430
%2432:	load	 XXX
%2433:	getelementptr	 %2432 XXX
%2434:	load	 %2433
%2435:	load	 XXX
%2436:	getelementptr	 %2435 XXX
%2437:	load	 %2436
%2438:	sub	 %2434 %2437
%2439:	call	 execute_program.tmp %2431 %2438 str_append
%2440:	getelementptr	 %2408 XXX
%2441:	br	 if.end386

BASIC BLOCK if.else341
%2442:	load	 %2408
%2443:	sext	 %2442
%2444:	icmp	 %2443 XXX
%2445:	br	 %2444 if.end385 if.then345

BASIC BLOCK if.then345
%2446:	ptrtoint	 %2408
%2447:	ptrtoint	 %2407
%2448:	sub	 %2446 %2447
%2449:	icmp	 %2448 XXX
%2450:	br	 %2449 if.end355 if.then350

BASIC BLOCK if.then350
%2451:	ptrtoint	 %2408
%2452:	ptrtoint	 %2407
%2453:	sub	 %2451 %2452
%2454:	trunc	 %2453
%2455:	call	 execute_program.tmp %2407 %2454 str_append
%2456:	br	 if.end355

BASIC BLOCK if.end355
%2457:	getelementptr	 %2408 XXX
%2458:	icmp	 %2457 %2333
%2459:	br	 %2458 if.end383 if.then359

BASIC BLOCK if.then359
%2460:	load	 %2457
%2461:	sext	 %2460
%2462:	icmp	 %2461 XXX
%2463:	br	 %2462 if.else381 land.lhs.true365

BASIC BLOCK land.lhs.true365
%2464:	load	 %2457
%2465:	sext	 %2464
%2466:	icmp	 %2465 XXX
%2467:	br	 %2466 if.else381 if.then369

BASIC BLOCK if.then369
%2468:	load	 %2457
%2469:	sext	 %2468
%2470:	sub	 %2469 XXX
%2471:	load	 XXX
%2472:	sext	 %2470
%2473:	load	 XXX
%2474:	getelementptr	 %2473 %2472
%2475:	load	 %2474
%2476:	sext	 %2475
%2477:	getelementptr	 %2471 %2476
%2478:	sext	 %2470
%2479:	load	 XXX
%2480:	getelementptr	 %2479 %2478
%2481:	load	 %2480
%2482:	sext	 %2470
%2483:	load	 XXX
%2484:	getelementptr	 %2483 %2482
%2485:	load	 %2484
%2486:	sub	 %2481 %2485
%2487:	call	 execute_program.tmp %2477 %2486 str_append
%2488:	br	 if.end382

BASIC BLOCK if.else381
%2489:	call	 execute_program.tmp %2457 XXX str_append
%2490:	br	 if.end382

BASIC BLOCK if.end382
%2491:	br	 if.end383

BASIC BLOCK if.end383
%2492:	getelementptr	 %2457 XXX
%2493:	br	 if.end385

BASIC BLOCK if.end385
%2494:	phi	 %2492 %2407
%2495:	phi	 %2457 %2408
%2496:	br	 if.end386

BASIC BLOCK if.end386
%2497:	phi	 %2440 %2494
%2498:	phi	 %2408 %2495
%2499:	br	 for.inc

BASIC BLOCK for.inc
%2500:	getelementptr	 %2498 XXX
%2501:	br	 for.cond316

BASIC BLOCK for.end
%2502:	ptrtoint	 %2408
%2503:	ptrtoint	 %2407
%2504:	sub	 %2502 %2503
%2505:	icmp	 %2504 XXX
%2506:	br	 %2505 if.end397 if.then392

BASIC BLOCK if.then392
%2507:	ptrtoint	 %2408
%2508:	ptrtoint	 %2407
%2509:	sub	 %2507 %2508
%2510:	trunc	 %2509
%2511:	call	 execute_program.tmp %2407 %2510 str_append
%2512:	br	 if.end397

BASIC BLOCK if.end397
%2513:	load	 XXX
%2514:	getelementptr	 %2513 XXX
%2515:	load	 %2514
%2516:	icmp	 %2345 %2515
%2517:	br	 %2516 if.end406 if.then401

BASIC BLOCK if.then401
%2518:	load	 XXX
%2519:	sext	 %2345
%2520:	getelementptr	 %2518 %2519
%2521:	call	 execute_program.tmp %2520 XXX str_append
%2522:	load	 XXX
%2523:	getelementptr	 %2522 XXX
%2524:	load	 %2523
%2525:	add	 %2524 XXX
%2526:	store	 %2525 %2523
%2527:	br	 if.end406

BASIC BLOCK if.end406
%2528:	load	 XXX
%2529:	getelementptr	 %2528 XXX
%2530:	load	 %2529
%2531:	load	 XXX
%2532:	sub	 %2531 %2313
%2533:	sub	 %2532 %2530
%2534:	icmp	 %2533 XXX
%2535:	br	 %2534 if.end413 if.then412

BASIC BLOCK if.then412
%2536:	br	 while.end421

BASIC BLOCK if.end413
%2537:	getelementptr	 %1876 XXX XXX
%2538:	bitcast	 %2537
%2539:	getelementptr	 %2538 XXX XXX
%2540:	load	 %2539
%2541:	and	 %2540 XXX
%2542:	icmp	 %2541 XXX
%2543:	br	 %2542 if.then419 if.end420

BASIC BLOCK if.then419
%2544:	br	 while.end421

BASIC BLOCK if.end420
%2545:	br	 while.cond267

BASIC BLOCK while.end421
%2546:	phi	 %2348 %2348 %2335
%2547:	phi	 %2533 %2533 %2336
%2548:	phi	 %2530 %2530 %2337
%2549:	icmp	 %2546 XXX
%2550:	br	 %2549 if.then423 if.end424

BASIC BLOCK if.then423
%2551:	br	 sw.epilog506

BASIC BLOCK if.end424
%2552:	store	 XXX replaced
%2553:	load	 XXX
%2554:	sext	 %2548
%2555:	getelementptr	 %2553 %2554
%2556:	add	 %2547 %2313
%2557:	call	 execute_program.tmp %2555 %2556 str_append
%2558:	load	 XXX
%2559:	getelementptr	 %1860 XXX XXX
%2560:	store	 %2558 %2559
%2561:	load	 XXX
%2562:	getelementptr	 %1860 XXX XXX
%2563:	store	 %2561 %2562
%2564:	load	 XXX
%2565:	getelementptr	 %1860 XXX XXX
%2566:	store	 %2564 %2565
%2567:	load	 XXX
%2568:	store	 %2567 XXX
%2569:	load	 XXX
%2570:	store	 %2569 XXX
%2571:	load	 XXX
%2572:	store	 %2571 XXX
%2573:	getelementptr	 %1860 XXX XXX
%2574:	load	 %2573
%2575:	store	 %2574 XXX
%2576:	getelementptr	 %1860 XXX XXX
%2577:	load	 %2576
%2578:	store	 %2577 XXX
%2579:	getelementptr	 %1860 XXX XXX
%2580:	load	 %2579
%2581:	store	 %2580 XXX
%2582:	getelementptr	 %1876 XXX XXX
%2583:	bitcast	 %2582
%2584:	getelementptr	 %2583 XXX XXX
%2585:	load	 %2584
%2586:	and	 %2585 XXX
%2587:	icmp	 %2586 XXX
%2588:	br	 %2587 if.end445 land.lhs.true437

BASIC BLOCK land.lhs.true437
%2589:	getelementptr	 %1876 XXX XXX
%2590:	bitcast	 %2589
%2591:	getelementptr	 %2590 XXX XXX
%2592:	load	 %2591
%2593:	icmp	 %2592 XXX
%2594:	br	 %2593 if.end445 if.then441

BASIC BLOCK if.then441
%2595:	load	 XXX
%2596:	load	 XXX
%2597:	getelementptr	 %1876 XXX XXX
%2598:	bitcast	 %2597
%2599:	getelementptr	 %2598 XXX XXX
%2600:	load	 %2599
%2601:	call	 %2595 XXX %2596 %2600 ck_fwrite
%2602:	br	 if.end445

BASIC BLOCK if.end445
%2603:	getelementptr	 %1876 XXX XXX
%2604:	bitcast	 %2603
%2605:	getelementptr	 %2604 XXX XXX
%2606:	load	 %2605
%2607:	and	 %2606 XXX
%2608:	icmp	 %2607 XXX
%2609:	br	 %2608 if.end452 if.then451

BASIC BLOCK if.then451
%2610:	load	 XXX
%2611:	load	 XXX
%2612:	load	 stdout
%2613:	call	 %2610 XXX %2611 %2612 ck_fwrite
%2614:	br	 if.end452

BASIC BLOCK if.end452
%2615:	br	 sw.epilog506

BASIC BLOCK sw.bb453
%2616:	load	 replaced
%2617:	icmp	 %2616 XXX
%2618:	br	 %2617 if.end476 if.then455

BASIC BLOCK if.then455
%2619:	store	 XXX replaced
%2620:	getelementptr	 %1876 XXX XXX
%2621:	bitcast	 %2620
%2622:	load	 %2621
%2623:	icmp	 %2622 XXX
%2624:	br	 %2623 if.then459 if.else461

BASIC BLOCK if.then459
%2625:	load	 execute_program.end_cycle
%2626:	add	 %2625 XXX
%2627:	store	 %2626 execute_program.end_cycle
%2628:	br	 if.end475

BASIC BLOCK if.else461
%2629:	getelementptr	 %1876 XXX XXX
%2630:	bitcast	 %2629
%2631:	load	 %2630
%2632:	getelementptr	 %2631 XXX XXX
%2633:	load	 %2632
%2634:	getelementptr	 %2633 XXX XXX
%2635:	load	 %2634
%2636:	getelementptr	 %2631 XXX XXX
%2637:	load	 %2636
%2638:	sub	 %2635 %2637
%2639:	getelementptr	 %2631 XXX XXX
%2640:	load	 %2639
%2641:	getelementptr	 %2640 XXX XXX
%2642:	load	 %2641
%2643:	getelementptr	 %2631 XXX XXX
%2644:	load	 %2643
%2645:	sext	 %2644
%2646:	getelementptr	 %2642 %2645
%2647:	br	 exe_loop

BASIC BLOCK if.end475
%2648:	br	 if.end476

BASIC BLOCK if.end476
%2649:	br	 sw.epilog506

BASIC BLOCK sw.bb477
%2650:	getelementptr	 %1876 XXX XXX
%2651:	bitcast	 %2650
%2652:	load	 %2651
%2653:	icmp	 %2652 XXX
%2654:	br	 %2653 if.end484 if.then481

BASIC BLOCK if.then481
%2655:	load	 XXX
%2656:	load	 XXX
%2657:	getelementptr	 %1876 XXX XXX
%2658:	bitcast	 %2657
%2659:	load	 %2658
%2660:	call	 %2655 XXX %2656 %2659 ck_fwrite
%2661:	br	 if.end484

BASIC BLOCK if.end484
%2662:	br	 sw.epilog506

BASIC BLOCK sw.bb485
%2663:	bitcast	 %1861
%2664:	call	 %2663 XXX XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2665:	call	 XXX XXX XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2666:	bitcast	 %1861
%2667:	call	 XXX %2666 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2668:	br	 sw.epilog506

BASIC BLOCK sw.bb488
%2669:	load	 XXX
%2670:	load	 XXX
%2671:	sext	 %2670
%2672:	getelementptr	 %2669 %2671
%2673:	br	 for.cond493

BASIC BLOCK for.cond493
%2674:	phi	 %2669 %2686
%2675:	icmp	 %2674 %2672
%2676:	br	 %2675 for.end502 for.body496

BASIC BLOCK for.body496
%2677:	load	 %2674
%2678:	zext	 %2677
%2679:	getelementptr	 %1876 XXX XXX
%2680:	bitcast	 %2679
%2681:	load	 %2680
%2682:	getelementptr	 %2681 %2678
%2683:	load	 %2682
%2684:	store	 %2683 %2674
%2685:	br	 for.inc500

BASIC BLOCK for.inc500
%2686:	getelementptr	 %2674 XXX
%2687:	br	 for.cond493

BASIC BLOCK for.end502
%2688:	br	 sw.epilog506

BASIC BLOCK sw.default503
%2689:	getelementptr	 %1876 XXX XXX
%2690:	load	 %2689
%2691:	sext	 %2690
%2692:	call	 XXX %2691 panic
%2693:	br	 sw.epilog506

BASIC BLOCK sw.epilog506
%2694:	phi	 %1875 %1875 %1875 %1875 %1875 %1875 %1875 %1875 %1875 %1875 %1875 %1875 %1875 %1875 %1875 %1875 %1875 %1875 %1875 %1875 %1875 %1875 %1875 %1875 %1875 %1875 %1968 %1875
%2695:	phi	 %1876 %1876 %1876 %1876 %1876 %1876 %1876 %1876 %1876 %1876 %1876 %1876 %1876 %1876 %1876 %1876 %1876 %1876 %1876 %1876 %1876 %1876 %1876 %1876 %1876 %1876 %1961 %1876
%2696:	phi	 %1877 %1877 %1877 %1877 %1877 %1877 %1877 %1877 %1877 %1877 %1877 %1877 %1877 %1877 %1877 %1877 %1877 %1877 %1877 %1877 %1877 %1877 %1877 %1877 %1877 %1877 %1970 %1877
%2697:	load	 execute_program.end_cycle
%2698:	icmp	 %2697 XXX
%2699:	br	 %2698 if.end509 if.then508

BASIC BLOCK if.then508
%2700:	br	 for.end513

BASIC BLOCK if.end509
%2701:	br	 for.inc510

BASIC BLOCK for.inc510
%2702:	phi	 %2694 %1875
%2703:	phi	 %2695 %1876
%2704:	phi	 %2696 %1877
%2705:	getelementptr	 %2703 XXX
%2706:	add	 %2702 XXX
%2707:	br	 for.cond

BASIC BLOCK for.end513
%2708:	ret	

FUNCTION ck_fwrite

BASIC BLOCK entry
%2709:	sext	 size
%2710:	sext	 nmemb
%2711:	call	 ptr %2709 %2710 stream fwrite
%2712:	sext	 nmemb
%2713:	icmp	 %2711 %2712
%2714:	br	 %2713 if.end if.then

BASIC BLOCK if.then
%2715:	call	 stream __fp_name
%2716:	call	 XXX nmemb %2715 panic
%2717:	br	 if.end

BASIC BLOCK if.end
%2718:	ret	

FUNCTION ck_fclose

BASIC BLOCK entry
%2719:	call	 stream fclose
%2720:	icmp	 %2719 XXX
%2721:	br	 %2720 if.end if.then

BASIC BLOCK if.then
%2722:	call	 stream __fp_name
%2723:	call	 XXX %2722 panic
%2724:	br	 if.end

BASIC BLOCK if.end
%2725:	ret	

FUNCTION match_address

BASIC BLOCK entry
%2726:	getelementptr	 addr XXX XXX
%2727:	load	 %2726
%2728:	switch	 %2727 sw.default XXX sw.bb XXX sw.bb1 XXX sw.bb2 XXX sw.bb10

BASIC BLOCK sw.bb
%2729:	br	 return

BASIC BLOCK sw.bb1
%2730:	load	 input_line_number
%2731:	getelementptr	 addr XXX XXX
%2732:	load	 %2731
%2733:	icmp	 %2730 %2732
%2734:	zext	 %2733
%2735:	br	 return

BASIC BLOCK sw.bb2
%2736:	load	 XXX
%2737:	sub	 %2736 XXX
%2738:	sext	 %2737
%2739:	load	 XXX
%2740:	getelementptr	 %2739 %2738
%2741:	load	 %2740
%2742:	sext	 %2741
%2743:	icmp	 %2742 XXX
%2744:	zext	 %2743
%2745:	getelementptr	 addr XXX XXX
%2746:	load	 %2745
%2747:	load	 XXX
%2748:	load	 XXX
%2749:	sub	 %2748 %2744
%2750:	load	 XXX
%2751:	sub	 %2750 %2744
%2752:	call	 %2746 %2747 %2749 XXX %2751 XXX re_search
%2753:	icmp	 %2752 XXX
%2754:	select	 %2753 XXX XXX
%2755:	br	 return

BASIC BLOCK sw.bb10
%2756:	load	 input_EOF
%2757:	icmp	 %2756 XXX
%2758:	select	 %2757 XXX XXX
%2759:	br	 return

BASIC BLOCK sw.default
%2760:	call	 XXX panic
%2761:	br	 sw.epilog

BASIC BLOCK sw.epilog
%2762:	br	 return

BASIC BLOCK return
%2763:	phi	 XXX %2758 %2754 %2734 XXX
%2764:	ret	 %2763

FUNCTION eol_pos

BASIC BLOCK entry
%2765:	br	 while.cond

BASIC BLOCK while.cond
%2766:	phi	 len %2768
%2767:	phi	 str %2771
%2768:	add	 %2766 XXX
%2769:	icmp	 %2766 XXX
%2770:	br	 %2769 while.end while.body

BASIC BLOCK while.body
%2771:	getelementptr	 %2767 XXX
%2772:	load	 %2767
%2773:	sext	 %2772
%2774:	icmp	 %2773 XXX
%2775:	br	 %2774 if.end if.then

BASIC BLOCK if.then
%2776:	getelementptr	 %2771 XXX
%2777:	br	 return

BASIC BLOCK if.end
%2778:	br	 while.cond

BASIC BLOCK while.end
%2779:	getelementptr	 %2767 XXX
%2780:	br	 return

BASIC BLOCK return
%2781:	phi	 %2776 %2779
%2782:	ret	 %2781

FUNCTION chr_copy

BASIC BLOCK entry
%2783:	br	 while.cond

BASIC BLOCK while.cond
%2784:	phi	 len %2787
%2785:	phi	 src %2790
%2786:	phi	 dest %2792
%2787:	add	 %2784 XXX
%2788:	icmp	 %2784 XXX
%2789:	br	 %2788 while.end while.body

BASIC BLOCK while.body
%2790:	getelementptr	 %2785 XXX
%2791:	load	 %2785
%2792:	getelementptr	 %2786 XXX
%2793:	store	 %2791 %2786
%2794:	br	 while.cond

BASIC BLOCK while.end
%2795:	ret	

FUNCTION line_copy

BASIC BLOCK entry
%2796:	getelementptr	 from XXX XXX
%2797:	load	 %2796
%2798:	getelementptr	 to XXX XXX
%2799:	load	 %2798
%2800:	icmp	 %2797 %2799
%2801:	br	 %2800 if.end if.then

BASIC BLOCK if.then
%2802:	getelementptr	 from XXX XXX
%2803:	load	 %2802
%2804:	getelementptr	 to XXX XXX
%2805:	store	 %2803 %2804
%2806:	getelementptr	 to XXX XXX
%2807:	load	 %2806
%2808:	getelementptr	 to XXX XXX
%2809:	load	 %2808
%2810:	call	 %2807 %2809 ck_realloc
%2811:	getelementptr	 to XXX XXX
%2812:	store	 %2810 %2811
%2813:	br	 if.end

BASIC BLOCK if.end
%2814:	getelementptr	 from XXX XXX
%2815:	load	 %2814
%2816:	getelementptr	 to XXX XXX
%2817:	load	 %2816
%2818:	getelementptr	 from XXX XXX
%2819:	load	 %2818
%2820:	sext	 %2819
%2821:	call	 %2815 %2817 %2820 bcopy
%2822:	getelementptr	 from XXX XXX
%2823:	load	 %2822
%2824:	getelementptr	 to XXX XXX
%2825:	store	 %2823 %2824
%2826:	ret	

FUNCTION line_append

BASIC BLOCK entry
%2827:	getelementptr	 from XXX XXX
%2828:	load	 %2827
%2829:	getelementptr	 to XXX XXX
%2830:	load	 %2829
%2831:	getelementptr	 to XXX XXX
%2832:	load	 %2831
%2833:	sub	 %2830 %2832
%2834:	icmp	 %2828 %2833
%2835:	br	 %2834 if.end if.then

BASIC BLOCK if.then
%2836:	getelementptr	 from XXX XXX
%2837:	load	 %2836
%2838:	getelementptr	 to XXX XXX
%2839:	load	 %2838
%2840:	add	 %2839 %2837
%2841:	store	 %2840 %2838
%2842:	getelementptr	 to XXX XXX
%2843:	load	 %2842
%2844:	getelementptr	 to XXX XXX
%2845:	load	 %2844
%2846:	call	 %2843 %2845 ck_realloc
%2847:	getelementptr	 to XXX XXX
%2848:	store	 %2846 %2847
%2849:	br	 if.end

BASIC BLOCK if.end
%2850:	getelementptr	 from XXX XXX
%2851:	load	 %2850
%2852:	getelementptr	 to XXX XXX
%2853:	load	 %2852
%2854:	getelementptr	 to XXX XXX
%2855:	load	 %2854
%2856:	sext	 %2855
%2857:	getelementptr	 %2853 %2856
%2858:	getelementptr	 from XXX XXX
%2859:	load	 %2858
%2860:	sext	 %2859
%2861:	call	 %2851 %2857 %2860 bcopy
%2862:	getelementptr	 from XXX XXX
%2863:	load	 %2862
%2864:	getelementptr	 to XXX XXX
%2865:	load	 %2864
%2866:	add	 %2865 %2863
%2867:	store	 %2866 %2864
%2868:	ret	

FUNCTION append_pattern_space

BASIC BLOCK entry
%2869:	load	 XXX
%2870:	load	 XXX
%2871:	sext	 %2870
%2872:	getelementptr	 %2869 %2871
%2873:	load	 XXX
%2874:	load	 XXX
%2875:	sub	 %2873 %2874
%2876:	load	 input_line_number
%2877:	add	 %2876 XXX
%2878:	store	 %2877 input_line_number
%2879:	store	 XXX replaced
%2880:	br	 for.cond

BASIC BLOCK for.cond
%2881:	phi	 %2875 %2923
%2882:	phi	 %2872 %2921
%2883:	load	 input_file
%2884:	call	 %2883 _IO_getc
%2885:	icmp	 %2884 XXX
%2886:	br	 %2885 if.end7 if.then

BASIC BLOCK if.then
%2887:	load	 XXX
%2888:	icmp	 %2881 %2887
%2889:	br	 %2888 if.end if.then2

BASIC BLOCK if.then2
%2890:	br	 if.end29

BASIC BLOCK if.end
%2891:	load	 XXX
%2892:	sub	 %2891 %2881
%2893:	store	 %2892 XXX
%2894:	load	 last_input_file
%2895:	icmp	 %2894 XXX
%2896:	br	 %2895 if.end6 if.then4

BASIC BLOCK if.then4
%2897:	load	 input_EOF
%2898:	add	 %2897 XXX
%2899:	store	 %2898 input_EOF
%2900:	br	 if.end6

BASIC BLOCK if.end6
%2901:	br	 if.end29

BASIC BLOCK if.end7
%2902:	icmp	 %2881 XXX
%2903:	br	 %2902 if.end14 if.then9

BASIC BLOCK if.then9
%2904:	load	 XXX
%2905:	load	 XXX
%2906:	mul	 %2905 XXX
%2907:	call	 %2904 %2906 ck_realloc
%2908:	store	 %2907 XXX
%2909:	load	 XXX
%2910:	load	 XXX
%2911:	sext	 %2910
%2912:	getelementptr	 %2909 %2911
%2913:	load	 XXX
%2914:	load	 XXX
%2915:	mul	 %2914 XXX
%2916:	store	 %2915 XXX
%2917:	br	 if.end14

BASIC BLOCK if.end14
%2918:	phi	 %2913 %2881
%2919:	phi	 %2912 %2882
%2920:	trunc	 %2884
%2921:	getelementptr	 %2919 XXX
%2922:	store	 %2920 %2919
%2923:	add	 %2918 XXX
%2924:	icmp	 %2884 XXX
%2925:	br	 %2924 if.end19 if.then17

BASIC BLOCK if.then17
%2926:	load	 XXX
%2927:	sub	 %2926 %2923
%2928:	store	 %2927 XXX
%2929:	br	 for.end

BASIC BLOCK if.end19
%2930:	br	 for.cond

BASIC BLOCK for.end
%2931:	load	 input_file
%2932:	call	 %2931 _IO_getc
%2933:	icmp	 %2932 XXX
%2934:	br	 %2933 if.else if.then23

BASIC BLOCK if.then23
%2935:	load	 input_file
%2936:	call	 %2932 %2935 ungetc
%2937:	br	 if.end29

BASIC BLOCK if.else
%2938:	load	 last_input_file
%2939:	icmp	 %2938 XXX
%2940:	br	 %2939 if.end28 if.then26

BASIC BLOCK if.then26
%2941:	load	 input_EOF
%2942:	add	 %2941 XXX
%2943:	store	 %2942 input_EOF
%2944:	br	 if.end28

BASIC BLOCK if.end28
%2945:	br	 if.end29

BASIC BLOCK if.end29
%2946:	ret	

FUNCTION re_search

BASIC BLOCK entry
%2947:	call	 bufp XXX XXX string size startpos range regs size re_search_2
%2948:	ret	 %2947

FUNCTION str_append

BASIC BLOCK entry
%2949:	getelementptr	 to XXX XXX
%2950:	load	 %2949
%2951:	getelementptr	 to XXX XXX
%2952:	load	 %2951
%2953:	sub	 %2950 %2952
%2954:	icmp	 length %2953
%2955:	br	 %2954 if.end if.then

BASIC BLOCK if.then
%2956:	getelementptr	 to XXX XXX
%2957:	load	 %2956
%2958:	add	 %2957 length
%2959:	store	 %2958 %2956
%2960:	getelementptr	 to XXX XXX
%2961:	load	 %2960
%2962:	getelementptr	 to XXX XXX
%2963:	load	 %2962
%2964:	call	 %2961 %2963 ck_realloc
%2965:	getelementptr	 to XXX XXX
%2966:	store	 %2964 %2965
%2967:	br	 if.end

BASIC BLOCK if.end
%2968:	getelementptr	 to XXX XXX
%2969:	load	 %2968
%2970:	getelementptr	 to XXX XXX
%2971:	load	 %2970
%2972:	sext	 %2971
%2973:	getelementptr	 %2969 %2972
%2974:	sext	 length
%2975:	call	 string %2973 %2974 bcopy
%2976:	getelementptr	 to XXX XXX
%2977:	load	 %2976
%2978:	add	 %2977 length
%2979:	store	 %2978 %2976
%2980:	ret	

FUNCTION __fp_name

BASIC BLOCK entry
%2981:	br	 for.cond

BASIC BLOCK for.cond
%2982:	phi	 XXX %2997
%2983:	icmp	 %2982 XXX
%2984:	br	 %2983 for.end for.body

BASIC BLOCK for.body
%2985:	sext	 %2982
%2986:	getelementptr	 __id_s XXX %2985
%2987:	getelementptr	 %2986 XXX XXX
%2988:	load	 %2987
%2989:	icmp	 %2988 fp
%2990:	br	 %2989 if.end if.then

BASIC BLOCK if.then
%2991:	sext	 %2982
%2992:	getelementptr	 __id_s XXX %2991
%2993:	getelementptr	 %2992 XXX XXX
%2994:	load	 %2993
%2995:	br	 return

BASIC BLOCK if.end
%2996:	br	 for.inc

BASIC BLOCK for.inc
%2997:	add	 %2982 XXX
%2998:	br	 for.cond

BASIC BLOCK for.end
%2999:	br	 return

BASIC BLOCK return
%3000:	phi	 %2994 XXX
%3001:	ret	 %3000

FUNCTION xmalloc

BASIC BLOCK entry
%3002:	call	 size ck_malloc
%3003:	ret	 %3002

FUNCTION add_buffer

BASIC BLOCK entry
%3004:	bitcast	 bb
%3005:	getelementptr	 %3004 XXX XXX
%3006:	load	 %3005
%3007:	add	 %3006 n
%3008:	getelementptr	 %3004 XXX XXX
%3009:	load	 %3008
%3010:	icmp	 %3007 %3009
%3011:	br	 %3010 if.end if.then

BASIC BLOCK if.then
%3012:	getelementptr	 %3004 XXX XXX
%3013:	load	 %3012
%3014:	mul	 %3013 XXX
%3015:	store	 %3014 %3012
%3016:	getelementptr	 %3004 XXX XXX
%3017:	load	 %3016
%3018:	getelementptr	 %3004 XXX XXX
%3019:	load	 %3018
%3020:	call	 %3017 %3019 ck_realloc
%3021:	getelementptr	 %3004 XXX XXX
%3022:	store	 %3020 %3021
%3023:	br	 if.end

BASIC BLOCK if.end
%3024:	getelementptr	 %3004 XXX XXX
%3025:	load	 %3024
%3026:	getelementptr	 %3004 XXX XXX
%3027:	load	 %3026
%3028:	sext	 %3027
%3029:	getelementptr	 %3025 %3028
%3030:	br	 while.cond

BASIC BLOCK while.cond
%3031:	phi	 n %3034
%3032:	phi	 p %3037
%3033:	phi	 %3029 %3039
%3034:	add	 %3031 XXX
%3035:	icmp	 %3031 XXX
%3036:	br	 %3035 while.end while.body

BASIC BLOCK while.body
%3037:	getelementptr	 %3032 XXX
%3038:	load	 %3032
%3039:	getelementptr	 %3033 XXX
%3040:	store	 %3038 %3033
%3041:	br	 while.cond

BASIC BLOCK while.end
%3042:	getelementptr	 %3004 XXX XXX
%3043:	load	 %3042
%3044:	add	 %3043 n
%3045:	store	 %3044 %3042
%3046:	ret	

FUNCTION re_compile_fastmap

BASIC BLOCK entry
%3047:	alloca	 XXX
%3048:	getelementptr	 bufp XXX XXX
%3049:	load	 %3048
%3050:	getelementptr	 bufp XXX XXX
%3051:	load	 %3050
%3052:	getelementptr	 bufp XXX XXX
%3053:	load	 %3052
%3054:	getelementptr	 %3051 %3053
%3055:	br	 do.body

BASIC BLOCK do.body
%3056:	alloca	 XXX
%3057:	bitcast	 %3056
%3058:	getelementptr	 %3047 XXX XXX
%3059:	store	 %3057 %3058
%3060:	getelementptr	 %3047 XXX XXX
%3061:	load	 %3060
%3062:	icmp	 %3061 XXX
%3063:	br	 %3062 if.end if.then

BASIC BLOCK if.then
%3064:	br	 return

BASIC BLOCK if.end
%3065:	getelementptr	 %3047 XXX XXX
%3066:	store	 XXX %3065
%3067:	getelementptr	 %3047 XXX XXX
%3068:	store	 XXX %3067
%3069:	br	 do.end

BASIC BLOCK do.end
%3070:	call	 %3049 XXX XXX XXX XXX llvm.memset.p0i8.i64
%3071:	getelementptr	 bufp XXX XXX
%3072:	load	 %3071
%3073:	and	 %3072 XXX
%3074:	or	 %3073 XXX
%3075:	store	 %3074 %3071
%3076:	getelementptr	 bufp XXX XXX
%3077:	load	 %3076
%3078:	and	 %3077 XXX
%3079:	store	 %3078 %3076
%3080:	br	 while.cond

BASIC BLOCK while.cond
%3081:	phi	 %3051 %3455 %3453 %3431 %3446 %3280 %3280 %3308 %3119 %3054
%3082:	phi	 XXX %3118 %3118 %3118 %3118 %3118 %3118 %3118 %3118 XXX
%3083:	phi	 XXX %3083 %3083 %3432 %3083 %3083 %3083 %3083 %3083 %3083
%3084:	icmp	 %3081 %3054
%3085:	br	 %3084 lor.rhs lor.end

BASIC BLOCK lor.rhs
%3086:	getelementptr	 %3047 XXX XXX
%3087:	load	 %3086
%3088:	icmp	 %3087 XXX
%3089:	xor	 %3088 XXX
%3090:	br	 lor.end

BASIC BLOCK lor.end
%3091:	phi	 XXX %3089
%3092:	br	 %3091 while.end while.body

BASIC BLOCK while.body
%3093:	icmp	 %3081 %3054
%3094:	br	 %3093 if.end19 if.then10

BASIC BLOCK if.then10
%3095:	sext	 %3082
%3096:	getelementptr	 bufp XXX XXX
%3097:	load	 %3096
%3098:	and	 %3097 XXX
%3099:	zext	 %3098
%3100:	or	 %3099 %3095
%3101:	trunc	 %3100
%3102:	load	 %3096
%3103:	and	 %3101 XXX
%3104:	and	 %3102 XXX
%3105:	or	 %3104 %3103
%3106:	store	 %3105 %3096
%3107:	getelementptr	 %3047 XXX XXX
%3108:	load	 %3107
%3109:	add	 %3108 XXX
%3110:	store	 %3109 %3107
%3111:	zext	 %3109
%3112:	getelementptr	 %3047 XXX XXX
%3113:	load	 %3112
%3114:	getelementptr	 %3113 %3111
%3115:	load	 %3114
%3116:	br	 if.end19

BASIC BLOCK if.end19
%3117:	phi	 %3115 %3081
%3118:	phi	 XXX %3082
%3119:	getelementptr	 %3117 XXX
%3120:	load	 %3117
%3121:	zext	 %3120
%3122:	switch	 %3121 sw.default XXX sw.bb XXX sw.bb25 XXX sw.bb29 XXX sw.bb42 XXX sw.bb76 XXX sw.bb93 XXX sw.bb110 XXX sw.bb132 XXX sw.bb132 XXX sw.bb132 XXX sw.bb132 XXX sw.bb132 XXX sw.bb132 XXX sw.bb132 XXX sw.bb132 XXX sw.bb132 XXX sw.bb132 XXX sw.bb133 XXX sw.bb133 XXX sw.bb133 XXX sw.bb133 XXX sw.bb133 XXX sw.bb133 XXX sw.bb186 XXX sw.bb186 XXX sw.bb263 XXX sw.bb281 XXX sw.bb283 XXX sw.bb283

BASIC BLOCK sw.bb
%3123:	getelementptr	 bufp XXX XXX
%3124:	load	 %3123
%3125:	and	 %3124 XXX
%3126:	or	 %3125 XXX
%3127:	store	 %3126 %3123
%3128:	br	 return

BASIC BLOCK sw.bb25
%3129:	getelementptr	 %3119 XXX
%3130:	load	 %3129
%3131:	zext	 %3130
%3132:	getelementptr	 %3049 %3131
%3133:	store	 XXX %3132
%3134:	br	 sw.epilog

BASIC BLOCK sw.bb29
%3135:	getelementptr	 %3119 XXX
%3136:	load	 %3119
%3137:	zext	 %3136
%3138:	mul	 %3137 XXX
%3139:	sub	 %3138 XXX
%3140:	br	 for.cond

BASIC BLOCK for.cond
%3141:	phi	 %3139 %3159
%3142:	icmp	 %3141 XXX
%3143:	br	 %3142 for.end for.body

BASIC BLOCK for.body
%3144:	sdiv	 %3141 XXX
%3145:	sext	 %3144
%3146:	getelementptr	 %3135 %3145
%3147:	load	 %3146
%3148:	zext	 %3147
%3149:	srem	 %3141 XXX
%3150:	shl	 XXX %3149
%3151:	and	 %3148 %3150
%3152:	icmp	 %3151 XXX
%3153:	br	 %3152 if.end40 if.then37

BASIC BLOCK if.then37
%3154:	sext	 %3141
%3155:	getelementptr	 %3049 %3154
%3156:	store	 XXX %3155
%3157:	br	 if.end40

BASIC BLOCK if.end40
%3158:	br	 for.inc

BASIC BLOCK for.inc
%3159:	add	 %3141 XXX
%3160:	br	 for.cond

BASIC BLOCK for.end
%3161:	br	 sw.epilog

BASIC BLOCK sw.bb42
%3162:	load	 %3119
%3163:	zext	 %3162
%3164:	mul	 %3163 XXX
%3165:	br	 for.cond45

BASIC BLOCK for.cond45
%3166:	phi	 %3164 %3173
%3167:	icmp	 %3166 XXX
%3168:	br	 %3167 for.end52 for.body48

BASIC BLOCK for.body48
%3169:	sext	 %3166
%3170:	getelementptr	 %3049 %3169
%3171:	store	 XXX %3170
%3172:	br	 for.inc51

BASIC BLOCK for.inc51
%3173:	add	 %3166 XXX
%3174:	br	 for.cond45

BASIC BLOCK for.end52
%3175:	getelementptr	 %3119 XXX
%3176:	load	 %3119
%3177:	zext	 %3176
%3178:	mul	 %3177 XXX
%3179:	sub	 %3178 XXX
%3180:	br	 for.cond57

BASIC BLOCK for.cond57
%3181:	phi	 %3179 %3199
%3182:	icmp	 %3181 XXX
%3183:	br	 %3182 for.end75 for.body60

BASIC BLOCK for.body60
%3184:	sdiv	 %3181 XXX
%3185:	sext	 %3184
%3186:	getelementptr	 %3175 %3185
%3187:	load	 %3186
%3188:	zext	 %3187
%3189:	srem	 %3181 XXX
%3190:	shl	 XXX %3189
%3191:	and	 %3188 %3190
%3192:	icmp	 %3191 XXX
%3193:	br	 %3192 if.then69 if.end72

BASIC BLOCK if.then69
%3194:	sext	 %3181
%3195:	getelementptr	 %3049 %3194
%3196:	store	 XXX %3195
%3197:	br	 if.end72

BASIC BLOCK if.end72
%3198:	br	 for.inc73

BASIC BLOCK for.inc73
%3199:	add	 %3181 XXX
%3200:	br	 for.cond57

BASIC BLOCK for.end75
%3201:	br	 sw.epilog

BASIC BLOCK sw.bb76
%3202:	br	 for.cond77

BASIC BLOCK for.cond77
%3203:	phi	 XXX %3217
%3204:	icmp	 %3203 XXX
%3205:	br	 %3204 for.end92 for.body80

BASIC BLOCK for.body80
%3206:	sext	 %3203
%3207:	getelementptr	 re_syntax_table XXX %3206
%3208:	load	 %3207
%3209:	sext	 %3208
%3210:	icmp	 %3209 XXX
%3211:	br	 %3210 if.end89 if.then86

BASIC BLOCK if.then86
%3212:	sext	 %3203
%3213:	getelementptr	 %3049 %3212
%3214:	store	 XXX %3213
%3215:	br	 if.end89

BASIC BLOCK if.end89
%3216:	br	 for.inc90

BASIC BLOCK for.inc90
%3217:	add	 %3203 XXX
%3218:	br	 for.cond77

BASIC BLOCK for.end92
%3219:	br	 sw.epilog

BASIC BLOCK sw.bb93
%3220:	br	 for.cond94

BASIC BLOCK for.cond94
%3221:	phi	 XXX %3235
%3222:	icmp	 %3221 XXX
%3223:	br	 %3222 for.end109 for.body97

BASIC BLOCK for.body97
%3224:	sext	 %3221
%3225:	getelementptr	 re_syntax_table XXX %3224
%3226:	load	 %3225
%3227:	sext	 %3226
%3228:	icmp	 %3227 XXX
%3229:	br	 %3228 if.end106 if.then103

BASIC BLOCK if.then103
%3230:	sext	 %3221
%3231:	getelementptr	 %3049 %3230
%3232:	store	 XXX %3231
%3233:	br	 if.end106

BASIC BLOCK if.end106
%3234:	br	 for.inc107

BASIC BLOCK for.inc107
%3235:	add	 %3221 XXX
%3236:	br	 for.cond94

BASIC BLOCK for.end109
%3237:	br	 sw.epilog

BASIC BLOCK sw.bb110
%3238:	br	 for.cond111

BASIC BLOCK for.cond111
%3239:	phi	 XXX %3246
%3240:	icmp	 %3239 XXX
%3241:	br	 %3240 for.end119 for.body114

BASIC BLOCK for.body114
%3242:	sext	 %3239
%3243:	getelementptr	 %3049 %3242
%3244:	store	 XXX %3243
%3245:	br	 for.inc117

BASIC BLOCK for.inc117
%3246:	add	 %3239 XXX
%3247:	br	 for.cond111

BASIC BLOCK for.end119
%3248:	getelementptr	 bufp XXX XXX
%3249:	load	 %3248
%3250:	and	 %3249 XXX
%3251:	icmp	 %3250 XXX
%3252:	br	 %3251 if.then122 if.else

BASIC BLOCK if.then122
%3253:	getelementptr	 %3049 XXX
%3254:	store	 XXX %3253
%3255:	br	 if.end131

BASIC BLOCK if.else
%3256:	getelementptr	 bufp XXX XXX
%3257:	load	 %3256
%3258:	and	 %3257 XXX
%3259:	zext	 %3258
%3260:	icmp	 %3259 XXX
%3261:	br	 %3260 if.end130 if.then129

BASIC BLOCK if.then129
%3262:	br	 return

BASIC BLOCK if.end130
%3263:	br	 if.end131

BASIC BLOCK if.end131
%3264:	br	 sw.epilog

BASIC BLOCK sw.bb132
%3265:	br	 while.cond

BASIC BLOCK sw.bb133
%3266:	br	 do.body134

BASIC BLOCK do.body134
%3267:	br	 do.body135

BASIC BLOCK do.body135
%3268:	load	 %3119
%3269:	zext	 %3268
%3270:	and	 %3269 XXX
%3271:	getelementptr	 %3119 XXX
%3272:	load	 %3271
%3273:	sext	 %3272
%3274:	shl	 %3273 XXX
%3275:	add	 %3270 %3274
%3276:	br	 do.end141

BASIC BLOCK do.end141
%3277:	getelementptr	 %3119 XXX
%3278:	br	 do.end143

BASIC BLOCK do.end143
%3279:	sext	 %3275
%3280:	getelementptr	 %3277 %3279
%3281:	icmp	 %3275 XXX
%3282:	br	 %3281 if.end148 if.then147

BASIC BLOCK if.then147
%3283:	br	 while.cond

BASIC BLOCK if.end148
%3284:	load	 %3280
%3285:	zext	 %3284
%3286:	icmp	 %3285 XXX
%3287:	br	 %3286 if.end156 land.lhs.true

BASIC BLOCK land.lhs.true
%3288:	load	 %3280
%3289:	zext	 %3288
%3290:	icmp	 %3289 XXX
%3291:	br	 %3290 if.end156 if.then155

BASIC BLOCK if.then155
%3292:	br	 while.cond

BASIC BLOCK if.end156
%3293:	getelementptr	 %3280 XXX
%3294:	br	 do.body158

BASIC BLOCK do.body158
%3295:	br	 do.body159

BASIC BLOCK do.body159
%3296:	load	 %3293
%3297:	zext	 %3296
%3298:	and	 %3297 XXX
%3299:	getelementptr	 %3293 XXX
%3300:	load	 %3299
%3301:	sext	 %3300
%3302:	shl	 %3301 XXX
%3303:	add	 %3298 %3302
%3304:	br	 do.end166

BASIC BLOCK do.end166
%3305:	getelementptr	 %3293 XXX
%3306:	br	 do.end168

BASIC BLOCK do.end168
%3307:	sext	 %3303
%3308:	getelementptr	 %3305 %3307
%3309:	getelementptr	 %3047 XXX XXX
%3310:	load	 %3309
%3311:	icmp	 %3310 XXX
%3312:	br	 %3311 land.lhs.true174 if.end185

BASIC BLOCK land.lhs.true174
%3313:	getelementptr	 %3047 XXX XXX
%3314:	load	 %3313
%3315:	sub	 %3314 XXX
%3316:	zext	 %3315
%3317:	getelementptr	 %3047 XXX XXX
%3318:	load	 %3317
%3319:	getelementptr	 %3318 %3316
%3320:	load	 %3319
%3321:	icmp	 %3320 %3308
%3322:	br	 %3321 if.end185 if.then182

BASIC BLOCK if.then182
%3323:	getelementptr	 %3047 XXX XXX
%3324:	load	 %3323
%3325:	add	 %3324 XXX
%3326:	store	 %3325 %3323
%3327:	br	 if.end185

BASIC BLOCK if.end185
%3328:	br	 while.cond

BASIC BLOCK sw.bb186
%3329:	br	 handle_on_failure_jump

BASIC BLOCK handle_on_failure_jump
%3330:	phi	 %3450 %3119
%3331:	phi	 XXX %3083
%3332:	br	 do.body187

BASIC BLOCK do.body187
%3333:	br	 do.body188

BASIC BLOCK do.body188
%3334:	load	 %3330
%3335:	zext	 %3334
%3336:	and	 %3335 XXX
%3337:	getelementptr	 %3330 XXX
%3338:	load	 %3337
%3339:	sext	 %3338
%3340:	shl	 %3339 XXX
%3341:	add	 %3336 %3340
%3342:	br	 do.end195

BASIC BLOCK do.end195
%3343:	getelementptr	 %3330 XXX
%3344:	br	 do.end197

BASIC BLOCK do.end197
%3345:	sext	 %3341
%3346:	getelementptr	 %3343 %3345
%3347:	icmp	 %3346 %3054
%3348:	br	 %3347 if.else243 if.then202

BASIC BLOCK if.then202
%3349:	getelementptr	 %3047 XXX XXX
%3350:	load	 %3349
%3351:	getelementptr	 %3047 XXX XXX
%3352:	load	 %3351
%3353:	icmp	 %3350 %3352
%3354:	br	 %3353 cond.false233 land.lhs.true207

BASIC BLOCK land.lhs.true207
%3355:	getelementptr	 %3047 XXX XXX
%3356:	load	 %3355
%3357:	load	 re_max_failures
%3358:	sub	 XXX XXX
%3359:	mul	 %3358 XXX
%3360:	add	 %3359 XXX
%3361:	mul	 %3357 %3360
%3362:	icmp	 %3356 %3361
%3363:	br	 %3362 cond.false cond.true

BASIC BLOCK cond.true
%3364:	br	 XXX cond.true232 cond.false233

BASIC BLOCK cond.false
%3365:	getelementptr	 %3047 XXX XXX
%3366:	load	 %3365
%3367:	shl	 %3366 XXX
%3368:	zext	 %3367
%3369:	mul	 %3368 XXX
%3370:	alloca	 %3369
%3371:	getelementptr	 %3047 XXX XXX
%3372:	load	 %3371
%3373:	bitcast	 %3372
%3374:	getelementptr	 %3047 XXX XXX
%3375:	load	 %3374
%3376:	zext	 %3375
%3377:	mul	 %3376 XXX
%3378:	call	 %3370 %3373 %3377 XXX XXX llvm.memcpy.p0i8.p0i8.i64
%3379:	bitcast	 %3370
%3380:	getelementptr	 %3047 XXX XXX
%3381:	store	 %3379 %3380
%3382:	getelementptr	 %3047 XXX XXX
%3383:	load	 %3382
%3384:	icmp	 %3383 XXX
%3385:	br	 %3384 cond.false228 cond.true227

BASIC BLOCK cond.true227
%3386:	br	 cond.end

BASIC BLOCK cond.false228
%3387:	getelementptr	 %3047 XXX XXX
%3388:	load	 %3387
%3389:	shl	 %3388 XXX
%3390:	store	 %3389 %3387
%3391:	br	 cond.end

BASIC BLOCK cond.end
%3392:	phi	 XXX XXX
%3393:	icmp	 %3392 XXX
%3394:	br	 %3393 cond.true232 cond.false233

BASIC BLOCK cond.true232
%3395:	br	 XXX if.then241 if.end242

BASIC BLOCK cond.false233
%3396:	sext	 %3341
%3397:	getelementptr	 %3343 %3396
%3398:	getelementptr	 %3047 XXX XXX
%3399:	load	 %3398
%3400:	add	 %3399 XXX
%3401:	store	 %3400 %3398
%3402:	zext	 %3399
%3403:	getelementptr	 %3047 XXX XXX
%3404:	load	 %3403
%3405:	getelementptr	 %3404 %3402
%3406:	store	 %3397 %3405
%3407:	br	 XXX if.then241 if.end242

BASIC BLOCK if.then241
%3408:	br	 return

BASIC BLOCK if.end242
%3409:	br	 if.end248

BASIC BLOCK if.else243
%3410:	getelementptr	 bufp XXX XXX
%3411:	load	 %3410
%3412:	and	 %3411 XXX
%3413:	or	 %3412 XXX
%3414:	store	 %3413 %3410
%3415:	br	 if.end248

BASIC BLOCK if.end248
%3416:	icmp	 %3331 XXX
%3417:	br	 %3416 if.end262 if.then250

BASIC BLOCK if.then250
%3418:	br	 do.body251

BASIC BLOCK do.body251
%3419:	br	 do.body252

BASIC BLOCK do.body252
%3420:	load	 %3343
%3421:	zext	 %3420
%3422:	and	 %3421 XXX
%3423:	getelementptr	 %3343 XXX
%3424:	load	 %3423
%3425:	sext	 %3424
%3426:	shl	 %3425 XXX
%3427:	br	 do.end259

BASIC BLOCK do.end259
%3428:	getelementptr	 %3343 XXX
%3429:	br	 do.end261

BASIC BLOCK do.end261
%3430:	br	 if.end262

BASIC BLOCK if.end262
%3431:	phi	 %3428 %3343
%3432:	phi	 XXX %3331
%3433:	br	 while.cond

BASIC BLOCK sw.bb263
%3434:	getelementptr	 %3119 XXX
%3435:	br	 do.body265

BASIC BLOCK do.body265
%3436:	br	 do.body266

BASIC BLOCK do.body266
%3437:	load	 %3434
%3438:	zext	 %3437
%3439:	and	 %3438 XXX
%3440:	getelementptr	 %3434 XXX
%3441:	load	 %3440
%3442:	sext	 %3441
%3443:	shl	 %3442 XXX
%3444:	add	 %3439 %3443
%3445:	br	 do.end273

BASIC BLOCK do.end273
%3446:	getelementptr	 %3434 XXX
%3447:	br	 do.end275

BASIC BLOCK do.end275
%3448:	icmp	 %3444 XXX
%3449:	br	 %3448 if.end280 if.then278

BASIC BLOCK if.then278
%3450:	getelementptr	 %3446 XXX
%3451:	br	 handle_on_failure_jump

BASIC BLOCK if.end280
%3452:	br	 while.cond

BASIC BLOCK sw.bb281
%3453:	getelementptr	 %3119 XXX
%3454:	br	 while.cond

BASIC BLOCK sw.bb283
%3455:	getelementptr	 %3119 XXX
%3456:	br	 while.cond

BASIC BLOCK sw.default
%3457:	call	 abort
%3458:	unreachable	

BASIC BLOCK sw.epilog
%3459:	br	 while.cond

BASIC BLOCK while.end
%3460:	sext	 %3082
%3461:	getelementptr	 bufp XXX XXX
%3462:	load	 %3461
%3463:	and	 %3462 XXX
%3464:	zext	 %3463
%3465:	or	 %3464 %3460
%3466:	trunc	 %3465
%3467:	load	 %3461
%3468:	and	 %3466 XXX
%3469:	and	 %3467 XXX
%3470:	or	 %3469 %3468
%3471:	store	 %3470 %3461
%3472:	br	 return

BASIC BLOCK return
%3473:	phi	 XXX XXX XXX XXX XXX
%3474:	ret	 %3473

FUNCTION re_set_registers

BASIC BLOCK entry
%3475:	icmp	 num_regs XXX
%3476:	br	 %3475 if.else if.then

BASIC BLOCK if.then
%3477:	getelementptr	 bufp XXX XXX
%3478:	load	 %3477
%3479:	and	 %3478 XXX
%3480:	or	 %3479 XXX
%3481:	store	 %3480 %3477
%3482:	getelementptr	 regs XXX XXX
%3483:	store	 num_regs %3482
%3484:	getelementptr	 regs XXX XXX
%3485:	store	 starts %3484
%3486:	getelementptr	 regs XXX XXX
%3487:	store	 ends %3486
%3488:	br	 if.end

BASIC BLOCK if.else
%3489:	getelementptr	 bufp XXX XXX
%3490:	load	 %3489
%3491:	and	 %3490 XXX
%3492:	store	 %3491 %3489
%3493:	getelementptr	 regs XXX XXX
%3494:	store	 XXX %3493
%3495:	getelementptr	 regs XXX XXX
%3496:	store	 XXX %3495
%3497:	getelementptr	 regs XXX XXX
%3498:	store	 XXX %3497
%3499:	br	 if.end

BASIC BLOCK if.end
%3500:	ret	

FUNCTION re_search_2

BASIC BLOCK entry
%3501:	getelementptr	 bufp XXX XXX
%3502:	load	 %3501
%3503:	getelementptr	 bufp XXX XXX
%3504:	load	 %3503
%3505:	add	 size1 size2
%3506:	add	 startpos range
%3507:	icmp	 startpos XXX
%3508:	br	 %3507 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%3509:	icmp	 startpos %3505
%3510:	br	 %3509 if.end if.then

BASIC BLOCK if.then
%3511:	br	 return

BASIC BLOCK if.end
%3512:	icmp	 %3506 XXX
%3513:	br	 %3512 if.else if.then6

BASIC BLOCK if.then6
%3514:	sub	 XXX startpos
%3515:	br	 if.end11

BASIC BLOCK if.else
%3516:	icmp	 %3506 %3505
%3517:	br	 %3516 if.end10 if.then8

BASIC BLOCK if.then8
%3518:	sub	 %3505 startpos
%3519:	br	 if.end10

BASIC BLOCK if.end10
%3520:	phi	 %3518 range
%3521:	br	 if.end11

BASIC BLOCK if.end11
%3522:	phi	 %3514 %3520
%3523:	getelementptr	 bufp XXX XXX
%3524:	load	 %3523
%3525:	icmp	 %3524 XXX
%3526:	br	 %3525 if.end24 land.lhs.true

BASIC BLOCK land.lhs.true
%3527:	getelementptr	 bufp XXX XXX
%3528:	load	 %3527
%3529:	getelementptr	 %3528 XXX
%3530:	load	 %3529
%3531:	zext	 %3530
%3532:	icmp	 %3531 XXX
%3533:	br	 %3532 if.end24 land.lhs.true15

BASIC BLOCK land.lhs.true15
%3534:	icmp	 %3522 XXX
%3535:	br	 %3534 if.end24 if.then18

BASIC BLOCK if.then18
%3536:	icmp	 startpos XXX
%3537:	br	 %3536 if.else22 if.then21

BASIC BLOCK if.then21
%3538:	br	 return

BASIC BLOCK if.else22
%3539:	br	 if.end23

BASIC BLOCK if.end23
%3540:	br	 if.end24

BASIC BLOCK if.end24
%3541:	phi	 XXX %3522 %3522 %3522
%3542:	icmp	 %3502 XXX
%3543:	br	 %3542 if.end32 land.lhs.true25

BASIC BLOCK land.lhs.true25
%3544:	getelementptr	 bufp XXX XXX
%3545:	load	 %3544
%3546:	lshr	 %3545 XXX
%3547:	and	 %3546 XXX
%3548:	zext	 %3547
%3549:	icmp	 %3548 XXX
%3550:	br	 %3549 if.then27 if.end32

BASIC BLOCK if.then27
%3551:	call	 bufp re_compile_fastmap
%3552:	icmp	 %3551 XXX
%3553:	br	 %3552 if.end31 if.then30

BASIC BLOCK if.then30
%3554:	br	 return

BASIC BLOCK if.end31
%3555:	br	 if.end32

BASIC BLOCK if.end32
%3556:	br	 for.cond

BASIC BLOCK for.cond
%3557:	phi	 startpos %3711
%3558:	phi	 %3541 %3712
%3559:	icmp	 %3502 XXX
%3560:	br	 %3559 if.end119 land.lhs.true34

BASIC BLOCK land.lhs.true34
%3561:	icmp	 %3557 %3505
%3562:	br	 %3561 if.end119 land.lhs.true37

BASIC BLOCK land.lhs.true37
%3563:	getelementptr	 bufp XXX XXX
%3564:	load	 %3563
%3565:	and	 %3564 XXX
%3566:	zext	 %3565
%3567:	icmp	 %3566 XXX
%3568:	br	 %3567 if.then42 if.end119

BASIC BLOCK if.then42
%3569:	icmp	 %3558 XXX
%3570:	br	 %3569 if.else85 if.then45

BASIC BLOCK if.then45
%3571:	icmp	 %3557 size1
%3572:	br	 %3571 if.end55 land.lhs.true48

BASIC BLOCK land.lhs.true48
%3573:	add	 %3557 %3558
%3574:	icmp	 %3573 size1
%3575:	br	 %3574 if.end55 if.then52

BASIC BLOCK if.then52
%3576:	sub	 size1 %3557
%3577:	sub	 %3558 %3576
%3578:	br	 if.end55

BASIC BLOCK if.end55
%3579:	phi	 %3577 XXX XXX
%3580:	icmp	 %3557 size1
%3581:	br	 %3580 cond.false cond.true

BASIC BLOCK cond.true
%3582:	sext	 size1
%3583:	sub	 XXX %3582
%3584:	getelementptr	 string2 %3583
%3585:	br	 cond.end

BASIC BLOCK cond.false
%3586:	br	 cond.end

BASIC BLOCK cond.end
%3587:	phi	 %3584 string1
%3588:	sext	 %3557
%3589:	getelementptr	 %3587 %3588
%3590:	icmp	 %3504 XXX
%3591:	br	 %3590 if.else68 if.then61

BASIC BLOCK if.then61
%3592:	br	 while.cond

BASIC BLOCK while.cond
%3593:	phi	 %3558 %3611
%3594:	phi	 %3589 %3608
%3595:	icmp	 %3593 %3579
%3596:	br	 %3595 land.end land.rhs

BASIC BLOCK land.rhs
%3597:	getelementptr	 %3594 XXX
%3598:	load	 %3594
%3599:	zext	 %3598
%3600:	getelementptr	 %3504 %3599
%3601:	load	 %3600
%3602:	zext	 %3601
%3603:	getelementptr	 %3502 %3602
%3604:	load	 %3603
%3605:	icmp	 %3604 XXX
%3606:	xor	 %3605 XXX
%3607:	br	 land.end

BASIC BLOCK land.end
%3608:	phi	 %3597 %3594
%3609:	phi	 XXX %3606
%3610:	br	 %3609 while.end while.body

BASIC BLOCK while.body
%3611:	add	 %3593 XXX
%3612:	br	 while.cond

BASIC BLOCK while.end
%3613:	br	 if.end82

BASIC BLOCK if.else68
%3614:	br	 while.cond69

BASIC BLOCK while.cond69
%3615:	phi	 %3558 %3630
%3616:	phi	 %3589 %3627
%3617:	icmp	 %3615 %3579
%3618:	br	 %3617 land.end78 land.rhs72

BASIC BLOCK land.rhs72
%3619:	getelementptr	 %3616 XXX
%3620:	load	 %3616
%3621:	zext	 %3620
%3622:	getelementptr	 %3502 %3621
%3623:	load	 %3622
%3624:	icmp	 %3623 XXX
%3625:	xor	 %3624 XXX
%3626:	br	 land.end78

BASIC BLOCK land.end78
%3627:	phi	 %3619 %3616
%3628:	phi	 XXX %3625
%3629:	br	 %3628 while.end81 while.body79

BASIC BLOCK while.body79
%3630:	add	 %3615 XXX
%3631:	br	 while.cond69

BASIC BLOCK while.end81
%3632:	br	 if.end82

BASIC BLOCK if.end82
%3633:	phi	 %3593 %3615
%3634:	sub	 %3558 %3633
%3635:	add	 %3557 %3634
%3636:	br	 if.end118

BASIC BLOCK if.else85
%3637:	icmp	 size1 XXX
%3638:	br	 %3637 lor.lhs.false88 cond.true91

BASIC BLOCK lor.lhs.false88
%3639:	icmp	 %3557 size1
%3640:	br	 %3639 cond.false96 cond.true91

BASIC BLOCK cond.true91
%3641:	sub	 %3557 size1
%3642:	sext	 %3641
%3643:	getelementptr	 string2 %3642
%3644:	load	 %3643
%3645:	sext	 %3644
%3646:	br	 cond.end100

BASIC BLOCK cond.false96
%3647:	sext	 %3557
%3648:	getelementptr	 string1 %3647
%3649:	load	 %3648
%3650:	sext	 %3649
%3651:	br	 cond.end100

BASIC BLOCK cond.end100
%3652:	phi	 %3645 %3650
%3653:	trunc	 %3652
%3654:	icmp	 %3504 XXX
%3655:	br	 %3654 cond.false108 cond.true104

BASIC BLOCK cond.true104
%3656:	zext	 %3653
%3657:	getelementptr	 %3504 %3656
%3658:	load	 %3657
%3659:	sext	 %3658
%3660:	br	 cond.end110

BASIC BLOCK cond.false108
%3661:	sext	 %3653
%3662:	br	 cond.end110

BASIC BLOCK cond.end110
%3663:	phi	 %3659 %3661
%3664:	trunc	 %3663
%3665:	zext	 %3664
%3666:	getelementptr	 %3502 %3665
%3667:	load	 %3666
%3668:	icmp	 %3667 XXX
%3669:	br	 %3668 if.then116 if.end117

BASIC BLOCK if.then116
%3670:	br	 advance

BASIC BLOCK if.end117
%3671:	br	 if.end118

BASIC BLOCK if.end118
%3672:	phi	 %3635 %3557
%3673:	phi	 %3633 %3558
%3674:	br	 if.end119

BASIC BLOCK if.end119
%3675:	phi	 %3557 %3672 %3557 %3557
%3676:	phi	 %3558 %3673 %3558 %3558
%3677:	icmp	 %3676 XXX
%3678:	br	 %3677 if.end134 land.lhs.true122

BASIC BLOCK land.lhs.true122
%3679:	icmp	 %3675 %3505
%3680:	br	 %3679 if.end134 land.lhs.true125

BASIC BLOCK land.lhs.true125
%3681:	icmp	 %3502 XXX
%3682:	br	 %3681 if.end134 land.lhs.true127

BASIC BLOCK land.lhs.true127
%3683:	getelementptr	 bufp XXX XXX
%3684:	load	 %3683
%3685:	and	 %3684 XXX
%3686:	zext	 %3685
%3687:	icmp	 %3686 XXX
%3688:	br	 %3687 if.then133 if.end134

BASIC BLOCK if.then133
%3689:	br	 return

BASIC BLOCK if.end134
%3690:	call	 bufp string1 size1 string2 size2 %3675 regs stop re_match_2
%3691:	icmp	 %3690 XXX
%3692:	br	 %3691 if.end139 if.then138

BASIC BLOCK if.then138
%3693:	br	 return

BASIC BLOCK if.end139
%3694:	icmp	 %3690 XXX
%3695:	br	 %3694 if.end143 if.then142

BASIC BLOCK if.then142
%3696:	br	 return

BASIC BLOCK if.end143
%3697:	br	 advance

BASIC BLOCK advance
%3698:	phi	 %3675 %3557
%3699:	phi	 %3676 %3558
%3700:	icmp	 %3699 XXX
%3701:	br	 %3700 if.then145 if.else146

BASIC BLOCK if.then145
%3702:	br	 for.end

BASIC BLOCK if.else146
%3703:	icmp	 %3699 XXX
%3704:	br	 %3703 if.else151 if.then149

BASIC BLOCK if.then149
%3705:	add	 %3699 XXX
%3706:	add	 %3698 XXX
%3707:	br	 if.end154

BASIC BLOCK if.else151
%3708:	add	 %3699 XXX
%3709:	add	 %3698 XXX
%3710:	br	 if.end154

BASIC BLOCK if.end154
%3711:	phi	 %3706 %3709
%3712:	phi	 %3705 %3708
%3713:	br	 if.end155

BASIC BLOCK if.end155
%3714:	br	 for.cond

BASIC BLOCK for.end
%3715:	br	 return

BASIC BLOCK return
%3716:	phi	 XXX XXX %3675 XXX XXX XXX XXX
%3717:	ret	 %3716

FUNCTION re_match_2

BASIC BLOCK entry
%3718:	alloca	 XXX
%3719:	alloca	 XXX
%3720:	getelementptr	 bufp XXX XXX
%3721:	load	 %3720
%3722:	getelementptr	 bufp XXX XXX
%3723:	load	 %3722
%3724:	getelementptr	 %3721 %3723
%3725:	getelementptr	 bufp XXX XXX
%3726:	load	 %3725
%3727:	getelementptr	 bufp XXX XXX
%3728:	load	 %3727
%3729:	add	 %3728 XXX
%3730:	trunc	 %3729
%3731:	br	 do.body

BASIC BLOCK do.body
%3732:	alloca	 XXX
%3733:	bitcast	 %3732
%3734:	getelementptr	 %3719 XXX XXX
%3735:	store	 %3733 %3734
%3736:	getelementptr	 %3719 XXX XXX
%3737:	load	 %3736
%3738:	icmp	 %3737 XXX
%3739:	br	 %3738 if.end if.then

BASIC BLOCK if.then
%3740:	br	 return

BASIC BLOCK if.end
%3741:	getelementptr	 %3719 XXX XXX
%3742:	store	 XXX %3741
%3743:	getelementptr	 %3719 XXX XXX
%3744:	store	 XXX %3743
%3745:	br	 do.end

BASIC BLOCK do.end
%3746:	getelementptr	 bufp XXX XXX
%3747:	load	 %3746
%3748:	icmp	 %3747 XXX
%3749:	br	 %3748 if.end41 if.then5

BASIC BLOCK if.then5
%3750:	zext	 %3730
%3751:	mul	 %3750 XXX
%3752:	alloca	 %3751
%3753:	bitcast	 %3752
%3754:	zext	 %3730
%3755:	mul	 %3754 XXX
%3756:	alloca	 %3755
%3757:	bitcast	 %3756
%3758:	zext	 %3730
%3759:	mul	 %3758 XXX
%3760:	alloca	 %3759
%3761:	bitcast	 %3760
%3762:	zext	 %3730
%3763:	mul	 %3762 XXX
%3764:	alloca	 %3763
%3765:	bitcast	 %3764
%3766:	zext	 %3730
%3767:	mul	 %3766 XXX
%3768:	alloca	 %3767
%3769:	bitcast	 %3768
%3770:	zext	 %3730
%3771:	mul	 %3770 XXX
%3772:	alloca	 %3771
%3773:	bitcast	 %3772
%3774:	zext	 %3730
%3775:	mul	 %3774 XXX
%3776:	alloca	 %3775
%3777:	bitcast	 %3776
%3778:	zext	 %3730
%3779:	mul	 %3778 XXX
%3780:	alloca	 %3779
%3781:	bitcast	 %3780
%3782:	zext	 %3730
%3783:	mul	 %3782 XXX
%3784:	alloca	 %3783
%3785:	bitcast	 %3784
%3786:	icmp	 %3753 XXX
%3787:	br	 %3786 if.then39 land.lhs.true

BASIC BLOCK land.lhs.true
%3788:	icmp	 %3757 XXX
%3789:	br	 %3788 if.then39 land.lhs.true25

BASIC BLOCK land.lhs.true25
%3790:	icmp	 %3761 XXX
%3791:	br	 %3790 if.then39 land.lhs.true27

BASIC BLOCK land.lhs.true27
%3792:	icmp	 %3765 XXX
%3793:	br	 %3792 if.then39 land.lhs.true29

BASIC BLOCK land.lhs.true29
%3794:	icmp	 %3777 XXX
%3795:	br	 %3794 if.then39 land.lhs.true31

BASIC BLOCK land.lhs.true31
%3796:	icmp	 %3769 XXX
%3797:	br	 %3796 if.then39 land.lhs.true33

BASIC BLOCK land.lhs.true33
%3798:	icmp	 %3773 XXX
%3799:	br	 %3798 if.then39 land.lhs.true35

BASIC BLOCK land.lhs.true35
%3800:	icmp	 %3781 XXX
%3801:	br	 %3800 if.then39 land.lhs.true37

BASIC BLOCK land.lhs.true37
%3802:	icmp	 %3785 XXX
%3803:	br	 %3802 if.then39 if.end40

BASIC BLOCK if.then39
%3804:	br	 return

BASIC BLOCK if.end40
%3805:	br	 if.end41

BASIC BLOCK if.end41
%3806:	phi	 %3785 XXX
%3807:	phi	 %3781 XXX
%3808:	phi	 %3773 XXX
%3809:	phi	 %3769 XXX
%3810:	phi	 %3777 XXX
%3811:	phi	 %3765 XXX
%3812:	phi	 %3761 XXX
%3813:	phi	 %3757 XXX
%3814:	phi	 %3753 XXX
%3815:	icmp	 pos XXX
%3816:	br	 %3815 lor.lhs.false if.then47

BASIC BLOCK lor.lhs.false
%3817:	add	 size1 size2
%3818:	icmp	 pos %3817
%3819:	br	 %3818 if.end48 if.then47

BASIC BLOCK if.then47
%3820:	br	 return

BASIC BLOCK if.end48
%3821:	br	 for.cond

BASIC BLOCK for.cond
%3822:	phi	 XXX %3867
%3823:	icmp	 %3822 %3730
%3824:	br	 %3823 for.end for.body

BASIC BLOCK for.body
%3825:	sext	 %3822
%3826:	getelementptr	 %3811 %3825
%3827:	store	 XXX %3826
%3828:	sext	 %3822
%3829:	getelementptr	 %3812 %3828
%3830:	store	 XXX %3829
%3831:	sext	 %3822
%3832:	getelementptr	 %3813 %3831
%3833:	store	 XXX %3832
%3834:	sext	 %3822
%3835:	getelementptr	 %3814 %3834
%3836:	store	 XXX %3835
%3837:	sext	 %3822
%3838:	getelementptr	 %3810 %3837
%3839:	bitcast	 %3838
%3840:	bitcast	 %3839
%3841:	load	 %3840
%3842:	and	 %3841 XXX
%3843:	or	 %3842 XXX
%3844:	store	 %3843 %3840
%3845:	sext	 %3822
%3846:	getelementptr	 %3810 %3845
%3847:	bitcast	 %3846
%3848:	bitcast	 %3847
%3849:	load	 %3848
%3850:	and	 %3849 XXX
%3851:	store	 %3850 %3848
%3852:	sext	 %3822
%3853:	getelementptr	 %3810 %3852
%3854:	bitcast	 %3853
%3855:	bitcast	 %3854
%3856:	load	 %3855
%3857:	and	 %3856 XXX
%3858:	store	 %3857 %3855
%3859:	sext	 %3822
%3860:	getelementptr	 %3810 %3859
%3861:	bitcast	 %3860
%3862:	bitcast	 %3861
%3863:	load	 %3862
%3864:	and	 %3863 XXX
%3865:	store	 %3864 %3862
%3866:	br	 for.inc

BASIC BLOCK for.inc
%3867:	add	 %3822 XXX
%3868:	br	 for.cond

BASIC BLOCK for.end
%3869:	icmp	 size2 XXX
%3870:	br	 %3869 if.end80 land.lhs.true76

BASIC BLOCK land.lhs.true76
%3871:	icmp	 string1 XXX
%3872:	br	 %3871 if.end80 if.then79

BASIC BLOCK if.then79
%3873:	br	 if.end80

BASIC BLOCK if.end80
%3874:	phi	 size1 size2 size2
%3875:	phi	 string1 string2 string2
%3876:	phi	 XXX size1 size1
%3877:	phi	 XXX string1 string1
%3878:	sext	 %3876
%3879:	getelementptr	 %3877 %3878
%3880:	sext	 %3874
%3881:	getelementptr	 %3875 %3880
%3882:	icmp	 stop %3876
%3883:	br	 %3882 if.else if.then86

BASIC BLOCK if.then86
%3884:	sext	 stop
%3885:	getelementptr	 %3877 %3884
%3886:	br	 if.end93

BASIC BLOCK if.else
%3887:	sext	 stop
%3888:	getelementptr	 %3875 %3887
%3889:	sext	 %3876
%3890:	sub	 XXX %3889
%3891:	getelementptr	 %3888 %3890
%3892:	br	 if.end93

BASIC BLOCK if.end93
%3893:	phi	 %3875 %3891
%3894:	phi	 %3885 %3879
%3895:	icmp	 %3876 XXX
%3896:	br	 %3895 if.else102 land.lhs.true96

BASIC BLOCK land.lhs.true96
%3897:	icmp	 pos %3876
%3898:	br	 %3897 if.else102 if.then99

BASIC BLOCK if.then99
%3899:	sext	 pos
%3900:	getelementptr	 %3877 %3899
%3901:	br	 if.end108

BASIC BLOCK if.else102
%3902:	sext	 pos
%3903:	getelementptr	 %3875 %3902
%3904:	sext	 %3876
%3905:	sub	 XXX %3904
%3906:	getelementptr	 %3903 %3905
%3907:	br	 if.end108

BASIC BLOCK if.end108
%3908:	phi	 %3894 %3893
%3909:	phi	 %3900 %3906
%3910:	br	 for.cond109

BASIC BLOCK for.cond109
%3911:	phi	 XXX %6628 %3911
%3912:	phi	 XXX %6629 %3912
%3913:	phi	 XXX %6667 %6622
%3914:	phi	 XXX %6677 %6623
%3915:	phi	 %3721 %6657 %6624
%3916:	phi	 %3908 %6779 %6625
%3917:	phi	 %3909 %6648 %6626
%3918:	icmp	 %3915 %3724
%3919:	br	 %3918 if.end422 if.then112

BASIC BLOCK if.then112
%3920:	icmp	 %3917 %3893
%3921:	br	 %3920 if.end187 if.then115

BASIC BLOCK if.then115
%3922:	getelementptr	 %3719 XXX XXX
%3923:	load	 %3922
%3924:	icmp	 %3923 XXX
%3925:	br	 %3924 if.then119 if.else162

BASIC BLOCK if.then119
%3926:	icmp	 %3876 XXX
%3927:	br	 %3926 land.end land.lhs.true121

BASIC BLOCK land.lhs.true121
%3928:	icmp	 %3877 %3911
%3929:	br	 %3928 land.end land.rhs

BASIC BLOCK land.rhs
%3930:	sext	 %3876
%3931:	getelementptr	 %3877 %3930
%3932:	icmp	 %3911 %3931
%3933:	br	 land.end

BASIC BLOCK land.end
%3934:	phi	 XXX XXX %3932
%3935:	zext	 %3934
%3936:	icmp	 %3916 %3894
%3937:	zext	 %3936
%3938:	icmp	 %3935 %3937
%3939:	zext	 %3938
%3940:	trunc	 %3939
%3941:	icmp	 %3912 XXX
%3942:	br	 %3941 if.then145 lor.lhs.false134

BASIC BLOCK lor.lhs.false134
%3943:	sext	 %3940
%3944:	icmp	 %3943 XXX
%3945:	br	 %3944 lor.lhs.false140 land.lhs.true137

BASIC BLOCK land.lhs.true137
%3946:	icmp	 %3917 %3911
%3947:	br	 %3946 lor.lhs.false140 if.then145

BASIC BLOCK lor.lhs.false140
%3948:	icmp	 %3940 XXX
%3949:	br	 %3948 land.lhs.true142 if.end161

BASIC BLOCK land.lhs.true142
%3950:	icmp	 %3916 %3894
%3951:	br	 %3950 if.then145 if.end161

BASIC BLOCK if.then145
%3952:	br	 for.cond146

BASIC BLOCK for.cond146
%3953:	phi	 XXX %3969
%3954:	icmp	 %3953 %3730
%3955:	br	 %3954 for.end160 for.body149

BASIC BLOCK for.body149
%3956:	sext	 %3953
%3957:	getelementptr	 %3814 %3956
%3958:	load	 %3957
%3959:	sext	 %3953
%3960:	getelementptr	 %3809 %3959
%3961:	store	 %3958 %3960
%3962:	sext	 %3953
%3963:	getelementptr	 %3813 %3962
%3964:	load	 %3963
%3965:	sext	 %3953
%3966:	getelementptr	 %3808 %3965
%3967:	store	 %3964 %3966
%3968:	br	 for.inc158

BASIC BLOCK for.inc158
%3969:	add	 %3953 XXX
%3970:	br	 for.cond146

BASIC BLOCK for.end160
%3971:	br	 if.end161

BASIC BLOCK if.end161
%3972:	phi	 %3917 %3911 %3911
%3973:	phi	 XXX %3912 %3912
%3974:	br	 fail

BASIC BLOCK if.else162
%3975:	icmp	 %3912 XXX
%3976:	br	 %3975 if.end185 if.then164

BASIC BLOCK if.then164
%3977:	br	 restore_best_regs

BASIC BLOCK restore_best_regs
%3978:	phi	 %3911 %6628
%3979:	icmp	 %3978 %3877
%3980:	br	 %3979 cond.false land.lhs.true167

BASIC BLOCK land.lhs.true167
%3981:	icmp	 %3978 %3879
%3982:	br	 %3981 cond.false cond.true

BASIC BLOCK cond.true
%3983:	br	 cond.end

BASIC BLOCK cond.false
%3984:	br	 cond.end

BASIC BLOCK cond.end
%3985:	phi	 %3894 %3893
%3986:	br	 for.cond170

BASIC BLOCK for.cond170
%3987:	phi	 XXX %4003
%3988:	icmp	 %3987 %3730
%3989:	br	 %3988 for.end184 for.body173

BASIC BLOCK for.body173
%3990:	sext	 %3987
%3991:	getelementptr	 %3809 %3990
%3992:	load	 %3991
%3993:	sext	 %3987
%3994:	getelementptr	 %3814 %3993
%3995:	store	 %3992 %3994
%3996:	sext	 %3987
%3997:	getelementptr	 %3808 %3996
%3998:	load	 %3997
%3999:	sext	 %3987
%4000:	getelementptr	 %3813 %3999
%4001:	store	 %3998 %4000
%4002:	br	 for.inc182

BASIC BLOCK for.inc182
%4003:	add	 %3987 XXX
%4004:	br	 for.cond170

BASIC BLOCK for.end184
%4005:	br	 if.end185

BASIC BLOCK if.end185
%4006:	phi	 %3985 %3916
%4007:	phi	 %3978 %3917
%4008:	br	 if.end186

BASIC BLOCK if.end186
%4009:	br	 if.end187

BASIC BLOCK if.end187
%4010:	phi	 %4006 %3916
%4011:	phi	 %4007 %3917
%4012:	icmp	 regs XXX
%4013:	br	 %4012 if.end405 land.lhs.true189

BASIC BLOCK land.lhs.true189
%4014:	getelementptr	 bufp XXX XXX
%4015:	load	 %4014
%4016:	lshr	 %4015 XXX
%4017:	and	 %4016 XXX
%4018:	zext	 %4017
%4019:	icmp	 %4018 XXX
%4020:	br	 %4019 if.then193 if.end405

BASIC BLOCK if.then193
%4021:	getelementptr	 bufp XXX XXX
%4022:	load	 %4021
%4023:	lshr	 %4022 XXX
%4024:	and	 %4023 XXX
%4025:	zext	 %4024
%4026:	icmp	 %4025 XXX
%4027:	br	 %4026 if.else230 if.then200

BASIC BLOCK if.then200
%4028:	add	 %3730 XXX
%4029:	icmp	 XXX %4028
%4030:	br	 %4029 cond.false205 cond.true204

BASIC BLOCK cond.true204
%4031:	br	 cond.end207

BASIC BLOCK cond.false205
%4032:	add	 %3730 XXX
%4033:	br	 cond.end207

BASIC BLOCK cond.end207
%4034:	phi	 XXX %4032
%4035:	getelementptr	 regs XXX XXX
%4036:	store	 %4034 %4035
%4037:	getelementptr	 regs XXX XXX
%4038:	load	 %4037
%4039:	zext	 %4038
%4040:	mul	 %4039 XXX
%4041:	call	 %4040 malloc
%4042:	bitcast	 %4041
%4043:	getelementptr	 regs XXX XXX
%4044:	store	 %4042 %4043
%4045:	getelementptr	 regs XXX XXX
%4046:	load	 %4045
%4047:	zext	 %4046
%4048:	mul	 %4047 XXX
%4049:	call	 %4048 malloc
%4050:	bitcast	 %4049
%4051:	getelementptr	 regs XXX XXX
%4052:	store	 %4050 %4051
%4053:	getelementptr	 regs XXX XXX
%4054:	load	 %4053
%4055:	icmp	 %4054 XXX
%4056:	br	 %4055 lor.lhs.false220 if.then224

BASIC BLOCK lor.lhs.false220
%4057:	getelementptr	 regs XXX XXX
%4058:	load	 %4057
%4059:	icmp	 %4058 XXX
%4060:	br	 %4059 if.end225 if.then224

BASIC BLOCK if.then224
%4061:	br	 return

BASIC BLOCK if.end225
%4062:	getelementptr	 bufp XXX XXX
%4063:	load	 %4062
%4064:	and	 %4063 XXX
%4065:	or	 %4064 XXX
%4066:	store	 %4065 %4062
%4067:	br	 if.end270

BASIC BLOCK if.else230
%4068:	getelementptr	 bufp XXX XXX
%4069:	load	 %4068
%4070:	lshr	 %4069 XXX
%4071:	and	 %4070 XXX
%4072:	zext	 %4071
%4073:	icmp	 %4072 XXX
%4074:	br	 %4073 if.else268 if.then238

BASIC BLOCK if.then238
%4075:	getelementptr	 regs XXX XXX
%4076:	load	 %4075
%4077:	add	 %3730 XXX
%4078:	icmp	 %4076 %4077
%4079:	br	 %4078 if.end267 if.then243

BASIC BLOCK if.then243
%4080:	add	 %3730 XXX
%4081:	getelementptr	 regs XXX XXX
%4082:	store	 %4080 %4081
%4083:	getelementptr	 regs XXX XXX
%4084:	load	 %4083
%4085:	bitcast	 %4084
%4086:	getelementptr	 regs XXX XXX
%4087:	load	 %4086
%4088:	zext	 %4087
%4089:	mul	 %4088 XXX
%4090:	call	 %4085 %4089 realloc
%4091:	bitcast	 %4090
%4092:	getelementptr	 regs XXX XXX
%4093:	store	 %4091 %4092
%4094:	getelementptr	 regs XXX XXX
%4095:	load	 %4094
%4096:	bitcast	 %4095
%4097:	getelementptr	 regs XXX XXX
%4098:	load	 %4097
%4099:	zext	 %4098
%4100:	mul	 %4099 XXX
%4101:	call	 %4096 %4100 realloc
%4102:	bitcast	 %4101
%4103:	getelementptr	 regs XXX XXX
%4104:	store	 %4102 %4103
%4105:	getelementptr	 regs XXX XXX
%4106:	load	 %4105
%4107:	icmp	 %4106 XXX
%4108:	br	 %4107 lor.lhs.false261 if.then265

BASIC BLOCK lor.lhs.false261
%4109:	getelementptr	 regs XXX XXX
%4110:	load	 %4109
%4111:	icmp	 %4110 XXX
%4112:	br	 %4111 if.end266 if.then265

BASIC BLOCK if.then265
%4113:	br	 return

BASIC BLOCK if.end266
%4114:	br	 if.end267

BASIC BLOCK if.end267
%4115:	br	 if.end269

BASIC BLOCK if.else268
%4116:	br	 if.end269

BASIC BLOCK if.end269
%4117:	br	 if.end270

BASIC BLOCK if.end270
%4118:	getelementptr	 regs XXX XXX
%4119:	load	 %4118
%4120:	icmp	 %4119 XXX
%4121:	br	 %4120 if.end291 if.then274

BASIC BLOCK if.then274
%4122:	getelementptr	 regs XXX XXX
%4123:	load	 %4122
%4124:	getelementptr	 %4123 XXX
%4125:	store	 pos %4124
%4126:	icmp	 %4010 %3894
%4127:	br	 %4126 cond.false280 cond.true279

BASIC BLOCK cond.true279
%4128:	ptrtoint	 %4011
%4129:	ptrtoint	 %3877
%4130:	sub	 %4128 %4129
%4131:	br	 cond.end286

BASIC BLOCK cond.false280
%4132:	ptrtoint	 %4011
%4133:	ptrtoint	 %3875
%4134:	sub	 %4132 %4133
%4135:	sext	 %3876
%4136:	add	 %4134 %4135
%4137:	br	 cond.end286

BASIC BLOCK cond.end286
%4138:	phi	 %4130 %4136
%4139:	trunc	 %4138
%4140:	getelementptr	 regs XXX XXX
%4141:	load	 %4140
%4142:	getelementptr	 %4141 XXX
%4143:	store	 %4139 %4142
%4144:	br	 if.end291

BASIC BLOCK if.end291
%4145:	br	 for.cond292

BASIC BLOCK for.cond292
%4146:	phi	 XXX %4255
%4147:	getelementptr	 regs XXX XXX
%4148:	load	 %4147
%4149:	icmp	 %3730 %4148
%4150:	br	 %4149 cond.false297 cond.true296

BASIC BLOCK cond.true296
%4151:	br	 cond.end299

BASIC BLOCK cond.false297
%4152:	getelementptr	 regs XXX XXX
%4153:	load	 %4152
%4154:	br	 cond.end299

BASIC BLOCK cond.end299
%4155:	phi	 %3730 %4153
%4156:	icmp	 %4146 %4155
%4157:	br	 %4156 for.end390 for.body303

BASIC BLOCK for.body303
%4158:	sext	 %4146
%4159:	getelementptr	 %3814 %4158
%4160:	load	 %4159
%4161:	icmp	 %4160 XXX
%4162:	br	 %4161 lor.lhs.false308 if.then313

BASIC BLOCK lor.lhs.false308
%4163:	sext	 %4146
%4164:	getelementptr	 %3813 %4163
%4165:	load	 %4164
%4166:	icmp	 %4165 XXX
%4167:	br	 %4166 if.else320 if.then313

BASIC BLOCK if.then313
%4168:	sext	 %4146
%4169:	getelementptr	 regs XXX XXX
%4170:	load	 %4169
%4171:	getelementptr	 %4170 %4168
%4172:	store	 XXX %4171
%4173:	sext	 %4146
%4174:	getelementptr	 regs XXX XXX
%4175:	load	 %4174
%4176:	getelementptr	 %4175 %4173
%4177:	store	 XXX %4176
%4178:	br	 if.end387

BASIC BLOCK if.else320
%4179:	icmp	 %3876 XXX
%4180:	br	 %4179 cond.false340 land.lhs.true322

BASIC BLOCK land.lhs.true322
%4181:	sext	 %4146
%4182:	getelementptr	 %3814 %4181
%4183:	load	 %4182
%4184:	icmp	 %3877 %4183
%4185:	br	 %4184 cond.false340 land.lhs.true327

BASIC BLOCK land.lhs.true327
%4186:	sext	 %4146
%4187:	getelementptr	 %3814 %4186
%4188:	load	 %4187
%4189:	sext	 %3876
%4190:	getelementptr	 %3877 %4189
%4191:	icmp	 %4188 %4190
%4192:	br	 %4191 cond.false340 cond.true334

BASIC BLOCK cond.true334
%4193:	sext	 %4146
%4194:	getelementptr	 %3814 %4193
%4195:	load	 %4194
%4196:	ptrtoint	 %4195
%4197:	ptrtoint	 %3877
%4198:	sub	 %4196 %4197
%4199:	br	 cond.end348

BASIC BLOCK cond.false340
%4200:	sext	 %4146
%4201:	getelementptr	 %3814 %4200
%4202:	load	 %4201
%4203:	ptrtoint	 %4202
%4204:	ptrtoint	 %3875
%4205:	sub	 %4203 %4204
%4206:	sext	 %3876
%4207:	add	 %4205 %4206
%4208:	br	 cond.end348

BASIC BLOCK cond.end348
%4209:	phi	 %4198 %4207
%4210:	trunc	 %4209
%4211:	sext	 %4146
%4212:	getelementptr	 regs XXX XXX
%4213:	load	 %4212
%4214:	getelementptr	 %4213 %4211
%4215:	store	 %4210 %4214
%4216:	icmp	 %3876 XXX
%4217:	br	 %4216 cond.false373 land.lhs.true355

BASIC BLOCK land.lhs.true355
%4218:	sext	 %4146
%4219:	getelementptr	 %3813 %4218
%4220:	load	 %4219
%4221:	icmp	 %3877 %4220
%4222:	br	 %4221 cond.false373 land.lhs.true360

BASIC BLOCK land.lhs.true360
%4223:	sext	 %4146
%4224:	getelementptr	 %3813 %4223
%4225:	load	 %4224
%4226:	sext	 %3876
%4227:	getelementptr	 %3877 %4226
%4228:	icmp	 %4225 %4227
%4229:	br	 %4228 cond.false373 cond.true367

BASIC BLOCK cond.true367
%4230:	sext	 %4146
%4231:	getelementptr	 %3813 %4230
%4232:	load	 %4231
%4233:	ptrtoint	 %4232
%4234:	ptrtoint	 %3877
%4235:	sub	 %4233 %4234
%4236:	br	 cond.end381

BASIC BLOCK cond.false373
%4237:	sext	 %4146
%4238:	getelementptr	 %3813 %4237
%4239:	load	 %4238
%4240:	ptrtoint	 %4239
%4241:	ptrtoint	 %3875
%4242:	sub	 %4240 %4241
%4243:	sext	 %3876
%4244:	add	 %4242 %4243
%4245:	br	 cond.end381

BASIC BLOCK cond.end381
%4246:	phi	 %4235 %4244
%4247:	trunc	 %4246
%4248:	sext	 %4146
%4249:	getelementptr	 regs XXX XXX
%4250:	load	 %4249
%4251:	getelementptr	 %4250 %4248
%4252:	store	 %4247 %4251
%4253:	br	 if.end387

BASIC BLOCK if.end387
%4254:	br	 for.inc388

BASIC BLOCK for.inc388
%4255:	add	 %4146 XXX
%4256:	br	 for.cond292

BASIC BLOCK for.end390
%4257:	br	 for.cond391

BASIC BLOCK for.cond391
%4258:	phi	 %3730 %4274
%4259:	getelementptr	 regs XXX XXX
%4260:	load	 %4259
%4261:	icmp	 %4258 %4260
%4262:	br	 %4261 for.end404 for.body395

BASIC BLOCK for.body395
%4263:	sext	 %4258
%4264:	getelementptr	 regs XXX XXX
%4265:	load	 %4264
%4266:	getelementptr	 %4265 %4263
%4267:	store	 XXX %4266
%4268:	sext	 %4258
%4269:	getelementptr	 regs XXX XXX
%4270:	load	 %4269
%4271:	getelementptr	 %4270 %4268
%4272:	store	 XXX %4271
%4273:	br	 for.inc402

BASIC BLOCK for.inc402
%4274:	add	 %4258 XXX
%4275:	br	 for.cond391

BASIC BLOCK for.end404
%4276:	br	 if.end405

BASIC BLOCK if.end405
%4277:	sext	 pos
%4278:	sub	 XXX %4277
%4279:	getelementptr	 %4011 %4278
%4280:	icmp	 %4010 %3894
%4281:	br	 %4280 cond.false412 cond.true411

BASIC BLOCK cond.true411
%4282:	br	 cond.end416

BASIC BLOCK cond.false412
%4283:	sext	 %3876
%4284:	sub	 XXX %4283
%4285:	getelementptr	 %3875 %4284
%4286:	br	 cond.end416

BASIC BLOCK cond.end416
%4287:	phi	 %3877 %4285
%4288:	ptrtoint	 %4279
%4289:	ptrtoint	 %4287
%4290:	sub	 %4288 %4289
%4291:	trunc	 %4290
%4292:	br	 return

BASIC BLOCK if.end422
%4293:	getelementptr	 %3915 XXX
%4294:	load	 %3915
%4295:	zext	 %4294
%4296:	switch	 %4295 sw.default2313 XXX sw.bb XXX sw.bb424 XXX sw.bb494 XXX sw.bb559 XXX sw.bb559 XXX sw.bb633 XXX sw.bb697 XXX sw.bb983 XXX sw.bb1099 XXX sw.bb1130 XXX sw.bb1161 XXX sw.bb1173 XXX sw.bb1178 XXX sw.bb1292 XXX sw.bb1437 XXX sw.bb1568 XXX sw.bb1623 XXX sw.bb1639 XXX sw.bb1640 XXX sw.bb1739 XXX sw.bb1838 XXX sw.bb1875 XXX sw.bb1904 XXX sw.bb1942 XXX sw.bb2007 XXX sw.bb2072 XXX sw.bb2133 XXX sw.bb2197 XXX sw.bb2255

BASIC BLOCK sw.bb
%4297:	br	 sw.epilog2314

BASIC BLOCK sw.bb424
%4298:	getelementptr	 %4293 XXX
%4299:	load	 %4293
%4300:	zext	 %4299
%4301:	icmp	 %3726 XXX
%4302:	br	 %4301 if.else448 if.then428

BASIC BLOCK if.then428
%4303:	br	 do.body429

BASIC BLOCK do.body429
%4304:	phi	 %4298 %4323
%4305:	phi	 %3916 %4309
%4306:	phi	 %3917 %4317
%4307:	phi	 %4300 %4330
%4308:	br	 while.cond

BASIC BLOCK while.cond
%4309:	phi	 %4305 %3893
%4310:	phi	 %4306 %3875
%4311:	icmp	 %4310 %4309
%4312:	br	 %4311 while.end while.body

BASIC BLOCK while.body
%4313:	icmp	 %4309 %3893
%4314:	br	 %4313 if.end435 if.then434

BASIC BLOCK if.then434
%4315:	br	 fail

BASIC BLOCK if.end435
%4316:	br	 while.cond

BASIC BLOCK while.end
%4317:	getelementptr	 %4310 XXX
%4318:	load	 %4310
%4319:	zext	 %4318
%4320:	getelementptr	 %3726 %4319
%4321:	load	 %4320
%4322:	sext	 %4321
%4323:	getelementptr	 %4304 XXX
%4324:	load	 %4304
%4325:	sext	 %4324
%4326:	icmp	 %4322 %4325
%4327:	br	 %4326 if.end445 if.then444

BASIC BLOCK if.then444
%4328:	br	 fail

BASIC BLOCK if.end445
%4329:	br	 do.cond

BASIC BLOCK do.cond
%4330:	add	 %4307 XXX
%4331:	icmp	 %4330 XXX
%4332:	br	 %4331 do.end447 do.body429

BASIC BLOCK do.end447
%4333:	br	 if.end471

BASIC BLOCK if.else448
%4334:	br	 do.body449

BASIC BLOCK do.body449
%4335:	phi	 %4298 %4351
%4336:	phi	 %3916 %4340
%4337:	phi	 %3917 %4348
%4338:	phi	 %4300 %4358
%4339:	br	 while.cond450

BASIC BLOCK while.cond450
%4340:	phi	 %4336 %3893
%4341:	phi	 %4337 %3875
%4342:	icmp	 %4341 %4340
%4343:	br	 %4342 while.end458 while.body453

BASIC BLOCK while.body453
%4344:	icmp	 %4340 %3893
%4345:	br	 %4344 if.end457 if.then456

BASIC BLOCK if.then456
%4346:	br	 fail

BASIC BLOCK if.end457
%4347:	br	 while.cond450

BASIC BLOCK while.end458
%4348:	getelementptr	 %4341 XXX
%4349:	load	 %4341
%4350:	sext	 %4349
%4351:	getelementptr	 %4335 XXX
%4352:	load	 %4335
%4353:	sext	 %4352
%4354:	icmp	 %4350 %4353
%4355:	br	 %4354 if.end466 if.then465

BASIC BLOCK if.then465
%4356:	br	 fail

BASIC BLOCK if.end466
%4357:	br	 do.cond467

BASIC BLOCK do.cond467
%4358:	add	 %4338 XXX
%4359:	icmp	 %4358 XXX
%4360:	br	 %4359 do.end470 do.body449

BASIC BLOCK do.end470
%4361:	br	 if.end471

BASIC BLOCK if.end471
%4362:	phi	 %4323 %4351
%4363:	phi	 %4309 %4340
%4364:	phi	 %4317 %4348
%4365:	br	 do.body472

BASIC BLOCK do.body472
%4366:	br	 for.cond473

BASIC BLOCK for.cond473
%4367:	phi	 %3914 %4387
%4368:	icmp	 %4367 %3913
%4369:	br	 %4368 for.end491 for.body476

BASIC BLOCK for.body476
%4370:	zext	 %4367
%4371:	getelementptr	 %3810 %4370
%4372:	bitcast	 %4371
%4373:	bitcast	 %4372
%4374:	load	 %4373
%4375:	and	 %4374 XXX
%4376:	or	 %4375 XXX
%4377:	store	 %4376 %4373
%4378:	zext	 %4367
%4379:	getelementptr	 %3810 %4378
%4380:	bitcast	 %4379
%4381:	bitcast	 %4380
%4382:	load	 %4381
%4383:	and	 %4382 XXX
%4384:	or	 %4383 XXX
%4385:	store	 %4384 %4381
%4386:	br	 for.inc489

BASIC BLOCK for.inc489
%4387:	add	 %4367 XXX
%4388:	br	 for.cond473

BASIC BLOCK for.end491
%4389:	br	 do.end493

BASIC BLOCK do.end493
%4390:	br	 sw.epilog2314

BASIC BLOCK sw.bb494
%4391:	br	 while.cond495

BASIC BLOCK while.cond495
%4392:	phi	 %3916 %3893
%4393:	phi	 %3917 %3875
%4394:	icmp	 %4393 %4392
%4395:	br	 %4394 while.end503 while.body498

BASIC BLOCK while.body498
%4396:	icmp	 %4392 %3893
%4397:	br	 %4396 if.end502 if.then501

BASIC BLOCK if.then501
%4398:	br	 fail

BASIC BLOCK if.end502
%4399:	br	 while.cond495

BASIC BLOCK while.end503
%4400:	getelementptr	 bufp XXX XXX
%4401:	load	 %4400
%4402:	and	 %4401 XXX
%4403:	icmp	 %4402 XXX
%4404:	br	 %4403 land.lhs.true505 lor.lhs.false517

BASIC BLOCK land.lhs.true505
%4405:	icmp	 %3726 XXX
%4406:	br	 %4405 cond.false511 cond.true507

BASIC BLOCK cond.true507
%4407:	load	 %4393
%4408:	zext	 %4407
%4409:	getelementptr	 %3726 %4408
%4410:	load	 %4409
%4411:	sext	 %4410
%4412:	br	 cond.end513

BASIC BLOCK cond.false511
%4413:	load	 %4393
%4414:	sext	 %4413
%4415:	br	 cond.end513

BASIC BLOCK cond.end513
%4416:	phi	 %4411 %4414
%4417:	icmp	 %4416 XXX
%4418:	br	 %4417 lor.lhs.false517 if.then533

BASIC BLOCK lor.lhs.false517
%4419:	getelementptr	 bufp XXX XXX
%4420:	load	 %4419
%4421:	and	 %4420 XXX
%4422:	icmp	 %4421 XXX
%4423:	br	 %4422 if.end534 land.lhs.true521

BASIC BLOCK land.lhs.true521
%4424:	icmp	 %3726 XXX
%4425:	br	 %4424 cond.false527 cond.true523

BASIC BLOCK cond.true523
%4426:	load	 %4393
%4427:	zext	 %4426
%4428:	getelementptr	 %3726 %4427
%4429:	load	 %4428
%4430:	sext	 %4429
%4431:	br	 cond.end529

BASIC BLOCK cond.false527
%4432:	load	 %4393
%4433:	sext	 %4432
%4434:	br	 cond.end529

BASIC BLOCK cond.end529
%4435:	phi	 %4430 %4433
%4436:	icmp	 %4435 XXX
%4437:	br	 %4436 if.end534 if.then533

BASIC BLOCK if.then533
%4438:	br	 fail

BASIC BLOCK if.end534
%4439:	br	 do.body535

BASIC BLOCK do.body535
%4440:	br	 for.cond537

BASIC BLOCK for.cond537
%4441:	phi	 %3914 %4461
%4442:	icmp	 %4441 %3913
%4443:	br	 %4442 for.end555 for.body540

BASIC BLOCK for.body540
%4444:	zext	 %4441
%4445:	getelementptr	 %3810 %4444
%4446:	bitcast	 %4445
%4447:	bitcast	 %4446
%4448:	load	 %4447
%4449:	and	 %4448 XXX
%4450:	or	 %4449 XXX
%4451:	store	 %4450 %4447
%4452:	zext	 %4441
%4453:	getelementptr	 %3810 %4452
%4454:	bitcast	 %4453
%4455:	bitcast	 %4454
%4456:	load	 %4455
%4457:	and	 %4456 XXX
%4458:	or	 %4457 XXX
%4459:	store	 %4458 %4455
%4460:	br	 for.inc553

BASIC BLOCK for.inc553
%4461:	add	 %4441 XXX
%4462:	br	 for.cond537

BASIC BLOCK for.end555
%4463:	br	 do.end557

BASIC BLOCK do.end557
%4464:	getelementptr	 %4393 XXX
%4465:	br	 sw.epilog2314

BASIC BLOCK sw.bb559
%4466:	getelementptr	 %4293 XXX
%4467:	load	 %4466
%4468:	zext	 %4467
%4469:	icmp	 %4468 XXX
%4470:	zext	 %4469
%4471:	trunc	 %4470
%4472:	br	 while.cond565

BASIC BLOCK while.cond565
%4473:	phi	 %3916 %3893
%4474:	phi	 %3917 %3875
%4475:	icmp	 %4474 %4473
%4476:	br	 %4475 while.end573 while.body568

BASIC BLOCK while.body568
%4477:	icmp	 %4473 %3893
%4478:	br	 %4477 if.end572 if.then571

BASIC BLOCK if.then571
%4479:	br	 fail

BASIC BLOCK if.end572
%4480:	br	 while.cond565

BASIC BLOCK while.end573
%4481:	icmp	 %3726 XXX
%4482:	br	 %4481 cond.false579 cond.true575

BASIC BLOCK cond.true575
%4483:	load	 %4474
%4484:	zext	 %4483
%4485:	getelementptr	 %3726 %4484
%4486:	load	 %4485
%4487:	sext	 %4486
%4488:	br	 cond.end581

BASIC BLOCK cond.false579
%4489:	load	 %4474
%4490:	sext	 %4489
%4491:	br	 cond.end581

BASIC BLOCK cond.end581
%4492:	phi	 %4487 %4490
%4493:	trunc	 %4492
%4494:	zext	 %4493
%4495:	load	 %4293
%4496:	zext	 %4495
%4497:	mul	 %4496 XXX
%4498:	icmp	 %4494 %4497
%4499:	br	 %4498 if.end601 land.lhs.true589

BASIC BLOCK land.lhs.true589
%4500:	zext	 %4493
%4501:	sdiv	 %4500 XXX
%4502:	add	 XXX %4501
%4503:	sext	 %4502
%4504:	getelementptr	 %4293 %4503
%4505:	load	 %4504
%4506:	zext	 %4505
%4507:	zext	 %4493
%4508:	srem	 %4507 XXX
%4509:	shl	 XXX %4508
%4510:	and	 %4506 %4509
%4511:	icmp	 %4510 XXX
%4512:	br	 %4511 if.end601 if.then598

BASIC BLOCK if.then598
%4513:	icmp	 %4471 XXX
%4514:	xor	 %4513 XXX
%4515:	zext	 %4514
%4516:	trunc	 %4515
%4517:	br	 if.end601

BASIC BLOCK if.end601
%4518:	phi	 %4516 %4471 %4471
%4519:	load	 %4293
%4520:	zext	 %4519
%4521:	add	 XXX %4520
%4522:	sext	 %4521
%4523:	getelementptr	 %4293 %4522
%4524:	icmp	 %4518 XXX
%4525:	br	 %4524 if.then607 if.end608

BASIC BLOCK if.then607
%4526:	br	 fail

BASIC BLOCK if.end608
%4527:	br	 do.body609

BASIC BLOCK do.body609
%4528:	br	 for.cond611

BASIC BLOCK for.cond611
%4529:	phi	 %3914 %4549
%4530:	icmp	 %4529 %3913
%4531:	br	 %4530 for.end629 for.body614

BASIC BLOCK for.body614
%4532:	zext	 %4529
%4533:	getelementptr	 %3810 %4532
%4534:	bitcast	 %4533
%4535:	bitcast	 %4534
%4536:	load	 %4535
%4537:	and	 %4536 XXX
%4538:	or	 %4537 XXX
%4539:	store	 %4538 %4535
%4540:	zext	 %4529
%4541:	getelementptr	 %3810 %4540
%4542:	bitcast	 %4541
%4543:	bitcast	 %4542
%4544:	load	 %4543
%4545:	and	 %4544 XXX
%4546:	or	 %4545 XXX
%4547:	store	 %4546 %4543
%4548:	br	 for.inc627

BASIC BLOCK for.inc627
%4549:	add	 %4529 XXX
%4550:	br	 for.cond611

BASIC BLOCK for.end629
%4551:	br	 do.end631

BASIC BLOCK do.end631
%4552:	getelementptr	 %4474 XXX
%4553:	br	 sw.epilog2314

BASIC BLOCK sw.bb633
%4554:	store	 %4293 %3718
%4555:	load	 %4293
%4556:	zext	 %4555
%4557:	getelementptr	 %3810 %4556
%4558:	bitcast	 %4557
%4559:	bitcast	 %4558
%4560:	load	 %4559
%4561:	and	 %4560 XXX
%4562:	zext	 %4561
%4563:	icmp	 %4562 XXX
%4564:	br	 %4563 if.end651 if.then642

BASIC BLOCK if.then642
%4565:	call	 %3718 %3724 %3810 group_match_null_string_p
%4566:	sext	 %4565
%4567:	load	 %4293
%4568:	zext	 %4567
%4569:	getelementptr	 %3810 %4568
%4570:	bitcast	 %4569
%4571:	bitcast	 %4570
%4572:	trunc	 %4566
%4573:	load	 %4571
%4574:	and	 %4572 XXX
%4575:	and	 %4573 XXX
%4576:	or	 %4575 %4574
%4577:	store	 %4576 %4571
%4578:	br	 if.end651

BASIC BLOCK if.end651
%4579:	load	 %4293
%4580:	zext	 %4579
%4581:	getelementptr	 %3810 %4580
%4582:	bitcast	 %4581
%4583:	bitcast	 %4582
%4584:	load	 %4583
%4585:	and	 %4584 XXX
%4586:	zext	 %4585
%4587:	icmp	 %4586 XXX
%4588:	br	 %4587 cond.false670 cond.true659

BASIC BLOCK cond.true659
%4589:	load	 %4293
%4590:	zext	 %4589
%4591:	getelementptr	 %3814 %4590
%4592:	load	 %4591
%4593:	icmp	 %4592 XXX
%4594:	br	 %4593 cond.false665 cond.true664

BASIC BLOCK cond.true664
%4595:	br	 cond.end668

BASIC BLOCK cond.false665
%4596:	load	 %4293
%4597:	zext	 %4596
%4598:	getelementptr	 %3814 %4597
%4599:	load	 %4598
%4600:	br	 cond.end668

BASIC BLOCK cond.end668
%4601:	phi	 %3917 %4599
%4602:	br	 cond.end673

BASIC BLOCK cond.false670
%4603:	load	 %4293
%4604:	zext	 %4603
%4605:	getelementptr	 %3814 %4604
%4606:	load	 %4605
%4607:	br	 cond.end673

BASIC BLOCK cond.end673
%4608:	phi	 %4601 %4606
%4609:	load	 %4293
%4610:	zext	 %4609
%4611:	getelementptr	 %3812 %4610
%4612:	store	 %4608 %4611
%4613:	load	 %4293
%4614:	zext	 %4613
%4615:	getelementptr	 %3814 %4614
%4616:	store	 %3917 %4615
%4617:	load	 %4293
%4618:	zext	 %4617
%4619:	getelementptr	 %3810 %4618
%4620:	bitcast	 %4619
%4621:	bitcast	 %4620
%4622:	load	 %4621
%4623:	and	 %4622 XXX
%4624:	or	 %4623 XXX
%4625:	store	 %4624 %4621
%4626:	load	 %4293
%4627:	zext	 %4626
%4628:	getelementptr	 %3810 %4627
%4629:	bitcast	 %4628
%4630:	bitcast	 %4629
%4631:	load	 %4630
%4632:	and	 %4631 XXX
%4633:	store	 %4632 %4630
%4634:	load	 %4293
%4635:	zext	 %4634
%4636:	icmp	 %3914 XXX
%4637:	br	 %4636 if.end695 if.then693

BASIC BLOCK if.then693
%4638:	load	 %4293
%4639:	zext	 %4638
%4640:	br	 if.end695

BASIC BLOCK if.end695
%4641:	phi	 %4639 %3914
%4642:	getelementptr	 %4293 XXX
%4643:	br	 sw.epilog2314

BASIC BLOCK sw.bb697
%4644:	load	 %4293
%4645:	zext	 %4644
%4646:	getelementptr	 %3810 %4645
%4647:	bitcast	 %4646
%4648:	bitcast	 %4647
%4649:	load	 %4648
%4650:	and	 %4649 XXX
%4651:	zext	 %4650
%4652:	icmp	 %4651 XXX
%4653:	br	 %4652 cond.false716 cond.true705

BASIC BLOCK cond.true705
%4654:	load	 %4293
%4655:	zext	 %4654
%4656:	getelementptr	 %3813 %4655
%4657:	load	 %4656
%4658:	icmp	 %4657 XXX
%4659:	br	 %4658 cond.false711 cond.true710

BASIC BLOCK cond.true710
%4660:	br	 cond.end714

BASIC BLOCK cond.false711
%4661:	load	 %4293
%4662:	zext	 %4661
%4663:	getelementptr	 %3813 %4662
%4664:	load	 %4663
%4665:	br	 cond.end714

BASIC BLOCK cond.end714
%4666:	phi	 %3917 %4664
%4667:	br	 cond.end719

BASIC BLOCK cond.false716
%4668:	load	 %4293
%4669:	zext	 %4668
%4670:	getelementptr	 %3813 %4669
%4671:	load	 %4670
%4672:	br	 cond.end719

BASIC BLOCK cond.end719
%4673:	phi	 %4666 %4671
%4674:	load	 %4293
%4675:	zext	 %4674
%4676:	getelementptr	 %3811 %4675
%4677:	store	 %4673 %4676
%4678:	load	 %4293
%4679:	zext	 %4678
%4680:	getelementptr	 %3813 %4679
%4681:	store	 %3917 %4680
%4682:	load	 %4293
%4683:	zext	 %4682
%4684:	getelementptr	 %3810 %4683
%4685:	bitcast	 %4684
%4686:	bitcast	 %4685
%4687:	load	 %4686
%4688:	and	 %4687 XXX
%4689:	store	 %4688 %4686
%4690:	icmp	 %3914 %3913
%4691:	br	 %4690 if.else733 if.then732

BASIC BLOCK if.then732
%4692:	br	 if.end764

BASIC BLOCK if.else733
%4693:	load	 %4293
%4694:	zext	 %4693
%4695:	sub	 %4694 XXX
%4696:	trunc	 %4695
%4697:	br	 while.cond737

BASIC BLOCK while.cond737
%4698:	phi	 %4696 %4715
%4699:	zext	 %4698
%4700:	icmp	 %4699 XXX
%4701:	br	 %4700 land.end752 land.rhs741

BASIC BLOCK land.rhs741
%4702:	zext	 %4698
%4703:	getelementptr	 %3810 %4702
%4704:	bitcast	 %4703
%4705:	bitcast	 %4704
%4706:	load	 %4705
%4707:	lshr	 %4706 XXX
%4708:	and	 %4707 XXX
%4709:	zext	 %4708
%4710:	icmp	 %4709 XXX
%4711:	xor	 %4710 XXX
%4712:	br	 land.end752

BASIC BLOCK land.end752
%4713:	phi	 XXX %4711
%4714:	br	 %4713 while.end756 while.body754

BASIC BLOCK while.body754
%4715:	add	 %4698 XXX
%4716:	br	 while.cond737

BASIC BLOCK while.end756
%4717:	zext	 %4698
%4718:	icmp	 %4717 XXX
%4719:	br	 %4718 if.else761 if.then760

BASIC BLOCK if.then760
%4720:	br	 if.end763

BASIC BLOCK if.else761
%4721:	zext	 %4698
%4722:	br	 if.end763

BASIC BLOCK if.end763
%4723:	phi	 XXX %4721
%4724:	phi	 XXX %3914
%4725:	br	 if.end764

BASIC BLOCK if.end764
%4726:	phi	 XXX %4723
%4727:	phi	 XXX %4724
%4728:	load	 %4293
%4729:	zext	 %4728
%4730:	getelementptr	 %3810 %4729
%4731:	bitcast	 %4730
%4732:	bitcast	 %4731
%4733:	load	 %4732
%4734:	lshr	 %4733 XXX
%4735:	and	 %4734 XXX
%4736:	zext	 %4735
%4737:	icmp	 %4736 XXX
%4738:	br	 %4737 land.lhs.true778 lor.lhs.false773

BASIC BLOCK lor.lhs.false773
%4739:	getelementptr	 %4293 XXX
%4740:	load	 %4739
%4741:	zext	 %4740
%4742:	icmp	 %4741 XXX
%4743:	br	 %4742 if.end981 land.lhs.true778

BASIC BLOCK land.lhs.true778
%4744:	getelementptr	 %4293 XXX
%4745:	icmp	 %4744 %3724
%4746:	br	 %4745 if.end981 if.then782

BASIC BLOCK if.then782
%4747:	getelementptr	 %4293 XXX
%4748:	store	 %4747 %3718
%4749:	load	 %3718
%4750:	getelementptr	 %4749 XXX
%4751:	store	 %4750 %3718
%4752:	load	 %4749
%4753:	zext	 %4752
%4754:	switch	 %4753 sw.default XXX sw.bb786 XXX sw.bb787 XXX sw.bb787 XXX sw.bb787 XXX sw.bb787

BASIC BLOCK sw.bb786
%4755:	br	 sw.bb787

BASIC BLOCK sw.bb787
%4756:	phi	 XXX XXX XXX XXX XXX
%4757:	br	 do.body788

BASIC BLOCK do.body788
%4758:	br	 do.body789

BASIC BLOCK do.body789
%4759:	load	 %3718
%4760:	load	 %4759
%4761:	zext	 %4760
%4762:	and	 %4761 XXX
%4763:	load	 %3718
%4764:	getelementptr	 %4763 XXX
%4765:	load	 %4764
%4766:	sext	 %4765
%4767:	shl	 %4766 XXX
%4768:	add	 %4762 %4767
%4769:	br	 do.end797

BASIC BLOCK do.end797
%4770:	load	 %3718
%4771:	getelementptr	 %4770 XXX
%4772:	store	 %4771 %3718
%4773:	br	 do.end800

BASIC BLOCK do.end800
%4774:	icmp	 %4756 XXX
%4775:	br	 %4774 if.end804 if.then802

BASIC BLOCK if.then802
%4776:	load	 %3718
%4777:	getelementptr	 %4776 XXX
%4778:	store	 %4777 %3718
%4779:	br	 if.end804

BASIC BLOCK if.end804
%4780:	br	 sw.epilog

BASIC BLOCK sw.default
%4781:	br	 sw.epilog

BASIC BLOCK sw.epilog
%4782:	phi	 XXX %4768
%4783:	load	 %3718
%4784:	sext	 %4782
%4785:	getelementptr	 %4783 %4784
%4786:	store	 %4785 %3718
%4787:	icmp	 %4782 XXX
%4788:	br	 %4787 if.end980 land.lhs.true809

BASIC BLOCK land.lhs.true809
%4789:	load	 %3718
%4790:	load	 %4789
%4791:	zext	 %4790
%4792:	icmp	 %4791 XXX
%4793:	br	 %4792 if.end980 land.lhs.true813

BASIC BLOCK land.lhs.true813
%4794:	load	 %3718
%4795:	getelementptr	 %4794 XXX
%4796:	load	 %4795
%4797:	zext	 %4796
%4798:	icmp	 %4797 XXX
%4799:	br	 %4798 if.end980 land.lhs.true818

BASIC BLOCK land.lhs.true818
%4800:	load	 %3718
%4801:	getelementptr	 %4800 XXX
%4802:	load	 %4801
%4803:	zext	 %4802
%4804:	load	 %4293
%4805:	zext	 %4804
%4806:	icmp	 %4803 %4805
%4807:	br	 %4806 if.end980 if.then824

BASIC BLOCK if.then824
%4808:	load	 %4293
%4809:	zext	 %4808
%4810:	getelementptr	 %3810 %4809
%4811:	bitcast	 %4810
%4812:	bitcast	 %4811
%4813:	load	 %4812
%4814:	lshr	 %4813 XXX
%4815:	and	 %4814 XXX
%4816:	zext	 %4815
%4817:	icmp	 %4816 XXX
%4818:	br	 %4817 if.end868 if.then833

BASIC BLOCK if.then833
%4819:	load	 %4293
%4820:	zext	 %4819
%4821:	getelementptr	 %3810 %4820
%4822:	bitcast	 %4821
%4823:	bitcast	 %4822
%4824:	load	 %4823
%4825:	and	 %4824 XXX
%4826:	store	 %4825 %4823
%4827:	load	 %4293
%4828:	zext	 %4827
%4829:	br	 for.cond841

BASIC BLOCK for.cond841
%4830:	phi	 %4828 %4863
%4831:	load	 %4293
%4832:	zext	 %4831
%4833:	getelementptr	 %4293 XXX
%4834:	load	 %4833
%4835:	zext	 %4834
%4836:	add	 %4832 %4835
%4837:	icmp	 %4830 %4836
%4838:	br	 %4837 for.end867 for.body848

BASIC BLOCK for.body848
%4839:	zext	 %4830
%4840:	getelementptr	 %3812 %4839
%4841:	load	 %4840
%4842:	zext	 %4830
%4843:	getelementptr	 %3814 %4842
%4844:	store	 %4841 %4843
%4845:	zext	 %4830
%4846:	getelementptr	 %3811 %4845
%4847:	load	 %4846
%4848:	ptrtoint	 %4847
%4849:	zext	 %4830
%4850:	getelementptr	 %3814 %4849
%4851:	load	 %4850
%4852:	ptrtoint	 %4851
%4853:	icmp	 %4848 %4852
%4854:	br	 %4853 if.end864 if.then859

BASIC BLOCK if.then859
%4855:	zext	 %4830
%4856:	getelementptr	 %3811 %4855
%4857:	load	 %4856
%4858:	zext	 %4830
%4859:	getelementptr	 %3813 %4858
%4860:	store	 %4857 %4859
%4861:	br	 if.end864

BASIC BLOCK if.end864
%4862:	br	 for.inc865

BASIC BLOCK for.inc865
%4863:	add	 %4830 XXX
%4864:	br	 for.cond841

BASIC BLOCK for.end867
%4865:	br	 if.end868

BASIC BLOCK if.end868
%4866:	load	 %3718
%4867:	getelementptr	 %4866 XXX
%4868:	store	 %4867 %3718
%4869:	br	 do.body870

BASIC BLOCK do.body870
%4870:	br	 do.body871

BASIC BLOCK do.body871
%4871:	load	 %3718
%4872:	load	 %4871
%4873:	zext	 %4872
%4874:	and	 %4873 XXX
%4875:	load	 %3718
%4876:	getelementptr	 %4875 XXX
%4877:	load	 %4876
%4878:	sext	 %4877
%4879:	shl	 %4878 XXX
%4880:	add	 %4874 %4879
%4881:	br	 do.end879

BASIC BLOCK do.end879
%4882:	load	 %3718
%4883:	getelementptr	 %4882 XXX
%4884:	store	 %4883 %3718
%4885:	br	 do.end882

BASIC BLOCK do.end882
%4886:	br	 do.body883

BASIC BLOCK do.body883
%4887:	br	 while.cond884

BASIC BLOCK while.cond884
%4888:	getelementptr	 %3719 XXX XXX
%4889:	load	 %4888
%4890:	getelementptr	 %3719 XXX XXX
%4891:	load	 %4890
%4892:	sub	 %4889 %4891
%4893:	sub	 %4726 %4727
%4894:	add	 %4893 XXX
%4895:	mul	 %4894 XXX
%4896:	add	 %4895 XXX
%4897:	icmp	 %4892 %4896
%4898:	br	 %4897 while.end925 while.body894

BASIC BLOCK while.body894
%4899:	getelementptr	 %3719 XXX XXX
%4900:	load	 %4899
%4901:	load	 re_max_failures
%4902:	sub	 %3730 XXX
%4903:	mul	 %4902 XXX
%4904:	add	 %4903 XXX
%4905:	mul	 %4901 %4904
%4906:	icmp	 %4900 %4905
%4907:	br	 %4906 cond.false903 cond.true902

BASIC BLOCK cond.true902
%4908:	br	 XXX if.then923 if.end924

BASIC BLOCK cond.false903
%4909:	getelementptr	 %3719 XXX XXX
%4910:	load	 %4909
%4911:	shl	 %4910 XXX
%4912:	zext	 %4911
%4913:	mul	 %4912 XXX
%4914:	alloca	 %4913
%4915:	getelementptr	 %3719 XXX XXX
%4916:	load	 %4915
%4917:	bitcast	 %4916
%4918:	getelementptr	 %3719 XXX XXX
%4919:	load	 %4918
%4920:	zext	 %4919
%4921:	mul	 %4920 XXX
%4922:	call	 %4914 %4917 %4921 XXX XXX llvm.memcpy.p0i8.p0i8.i64
%4923:	bitcast	 %4914
%4924:	getelementptr	 %3719 XXX XXX
%4925:	store	 %4923 %4924
%4926:	getelementptr	 %3719 XXX XXX
%4927:	load	 %4926
%4928:	icmp	 %4927 XXX
%4929:	br	 %4928 cond.false917 cond.true916

BASIC BLOCK cond.true916
%4930:	br	 cond.end920

BASIC BLOCK cond.false917
%4931:	getelementptr	 %3719 XXX XXX
%4932:	load	 %4931
%4933:	shl	 %4932 XXX
%4934:	store	 %4933 %4931
%4935:	br	 cond.end920

BASIC BLOCK cond.end920
%4936:	phi	 XXX XXX
%4937:	icmp	 %4936 XXX
%4938:	br	 %4937 if.then923 if.end924

BASIC BLOCK if.then923
%4939:	br	 return

BASIC BLOCK if.end924
%4940:	br	 while.cond884

BASIC BLOCK while.end925
%4941:	br	 for.cond926

BASIC BLOCK for.cond926
%4942:	phi	 %4727 %4983
%4943:	icmp	 %4942 %4726
%4944:	br	 %4943 for.end953 for.body929

BASIC BLOCK for.body929
%4945:	sext	 %4942
%4946:	getelementptr	 %3814 %4945
%4947:	load	 %4946
%4948:	getelementptr	 %3719 XXX XXX
%4949:	load	 %4948
%4950:	add	 %4949 XXX
%4951:	store	 %4950 %4948
%4952:	zext	 %4949
%4953:	getelementptr	 %3719 XXX XXX
%4954:	load	 %4953
%4955:	getelementptr	 %4954 %4952
%4956:	store	 %4947 %4955
%4957:	sext	 %4942
%4958:	getelementptr	 %3813 %4957
%4959:	load	 %4958
%4960:	getelementptr	 %3719 XXX XXX
%4961:	load	 %4960
%4962:	add	 %4961 XXX
%4963:	store	 %4962 %4960
%4964:	zext	 %4961
%4965:	getelementptr	 %3719 XXX XXX
%4966:	load	 %4965
%4967:	getelementptr	 %4966 %4964
%4968:	store	 %4959 %4967
%4969:	sext	 %4942
%4970:	getelementptr	 %3810 %4969
%4971:	bitcast	 %4970
%4972:	load	 %4971
%4973:	getelementptr	 %3719 XXX XXX
%4974:	load	 %4973
%4975:	add	 %4974 XXX
%4976:	store	 %4975 %4973
%4977:	zext	 %4974
%4978:	getelementptr	 %3719 XXX XXX
%4979:	load	 %4978
%4980:	getelementptr	 %4979 %4977
%4981:	store	 %4972 %4980
%4982:	br	 for.inc951

BASIC BLOCK for.inc951
%4983:	add	 %4942 XXX
%4984:	br	 for.cond926

BASIC BLOCK for.end953
%4985:	zext	 %4727
%4986:	inttoptr	 %4985
%4987:	getelementptr	 %3719 XXX XXX
%4988:	load	 %4987
%4989:	add	 %4988 XXX
%4990:	store	 %4989 %4987
%4991:	zext	 %4988
%4992:	getelementptr	 %3719 XXX XXX
%4993:	load	 %4992
%4994:	getelementptr	 %4993 %4991
%4995:	store	 %4986 %4994
%4996:	zext	 %4726
%4997:	inttoptr	 %4996
%4998:	getelementptr	 %3719 XXX XXX
%4999:	load	 %4998
%5000:	add	 %4999 XXX
%5001:	store	 %5000 %4998
%5002:	zext	 %4999
%5003:	getelementptr	 %3719 XXX XXX
%5004:	load	 %5003
%5005:	getelementptr	 %5004 %5002
%5006:	store	 %4997 %5005
%5007:	load	 %3718
%5008:	sext	 %4880
%5009:	getelementptr	 %5007 %5008
%5010:	getelementptr	 %3719 XXX XXX
%5011:	load	 %5010
%5012:	add	 %5011 XXX
%5013:	store	 %5012 %5010
%5014:	zext	 %5011
%5015:	getelementptr	 %3719 XXX XXX
%5016:	load	 %5015
%5017:	getelementptr	 %5016 %5014
%5018:	store	 %5009 %5017
%5019:	getelementptr	 %3719 XXX XXX
%5020:	load	 %5019
%5021:	add	 %5020 XXX
%5022:	store	 %5021 %5019
%5023:	zext	 %5020
%5024:	getelementptr	 %3719 XXX XXX
%5025:	load	 %5024
%5026:	getelementptr	 %5025 %5023
%5027:	store	 %3917 %5026
%5028:	br	 do.end979

BASIC BLOCK do.end979
%5029:	br	 fail

BASIC BLOCK if.end980
%5030:	br	 if.end981

BASIC BLOCK if.end981
%5031:	getelementptr	 %4293 XXX
%5032:	br	 sw.epilog2314

BASIC BLOCK sw.bb983
%5033:	getelementptr	 %4293 XXX
%5034:	load	 %4293
%5035:	zext	 %5034
%5036:	sext	 %5035
%5037:	getelementptr	 %3814 %5036
%5038:	load	 %5037
%5039:	icmp	 %5038 XXX
%5040:	br	 %5039 lor.lhs.false990 if.then995

BASIC BLOCK lor.lhs.false990
%5041:	sext	 %5035
%5042:	getelementptr	 %3813 %5041
%5043:	load	 %5042
%5044:	icmp	 %5043 XXX
%5045:	br	 %5044 if.end996 if.then995

BASIC BLOCK if.then995
%5046:	br	 fail

BASIC BLOCK if.end996
%5047:	sext	 %5035
%5048:	getelementptr	 %3814 %5047
%5049:	load	 %5048
%5050:	icmp	 %3876 XXX
%5051:	br	 %5050 land.end1012 land.lhs.true1000

BASIC BLOCK land.lhs.true1000
%5052:	sext	 %5035
%5053:	getelementptr	 %3814 %5052
%5054:	load	 %5053
%5055:	icmp	 %3877 %5054
%5056:	br	 %5055 land.end1012 land.rhs1005

BASIC BLOCK land.rhs1005
%5057:	sext	 %5035
%5058:	getelementptr	 %3814 %5057
%5059:	load	 %5058
%5060:	sext	 %3876
%5061:	getelementptr	 %3877 %5060
%5062:	icmp	 %5059 %5061
%5063:	br	 land.end1012

BASIC BLOCK land.end1012
%5064:	phi	 XXX XXX %5062
%5065:	zext	 %5064
%5066:	icmp	 %3876 XXX
%5067:	br	 %5066 land.end1027 land.lhs.true1015

BASIC BLOCK land.lhs.true1015
%5068:	sext	 %5035
%5069:	getelementptr	 %3813 %5068
%5070:	load	 %5069
%5071:	icmp	 %3877 %5070
%5072:	br	 %5071 land.end1027 land.rhs1020

BASIC BLOCK land.rhs1020
%5073:	sext	 %5035
%5074:	getelementptr	 %3813 %5073
%5075:	load	 %5074
%5076:	sext	 %3876
%5077:	getelementptr	 %3877 %5076
%5078:	icmp	 %5075 %5077
%5079:	br	 land.end1027

BASIC BLOCK land.end1027
%5080:	phi	 XXX XXX %5078
%5081:	zext	 %5080
%5082:	icmp	 %5065 %5081
%5083:	br	 %5082 cond.false1034 cond.true1031

BASIC BLOCK cond.true1031
%5084:	sext	 %5035
%5085:	getelementptr	 %3813 %5084
%5086:	load	 %5085
%5087:	br	 cond.end1035

BASIC BLOCK cond.false1034
%5088:	br	 cond.end1035

BASIC BLOCK cond.end1035
%5089:	phi	 %5086 %3894
%5090:	br	 for.cond1037

BASIC BLOCK for.cond1037
%5091:	phi	 %5049 %5154
%5092:	phi	 %5089 %5097
%5093:	phi	 %3916 %5117
%5094:	phi	 %3917 %5152
%5095:	br	 while.cond1038

BASIC BLOCK while.cond1038
%5096:	phi	 %5091 %3875
%5097:	phi	 %5092 %5111
%5098:	icmp	 %5096 %5097
%5099:	br	 %5098 while.end1054 while.body1041

BASIC BLOCK while.body1041
%5100:	icmp	 %5097 %3893
%5101:	br	 %5100 if.end1045 if.then1044

BASIC BLOCK if.then1044
%5102:	br	 while.end1054

BASIC BLOCK if.end1045
%5103:	sext	 %5035
%5104:	getelementptr	 %3813 %5103
%5105:	load	 %5104
%5106:	icmp	 %5097 %5105
%5107:	br	 %5106 if.end1051 if.then1050

BASIC BLOCK if.then1050
%5108:	br	 while.end1054

BASIC BLOCK if.end1051
%5109:	sext	 %5035
%5110:	getelementptr	 %3813 %5109
%5111:	load	 %5110
%5112:	br	 while.cond1038

BASIC BLOCK while.end1054
%5113:	icmp	 %5096 %5097
%5114:	br	 %5113 if.end1058 if.then1057

BASIC BLOCK if.then1057
%5115:	br	 for.end1098

BASIC BLOCK if.end1058
%5116:	br	 while.cond1059

BASIC BLOCK while.cond1059
%5117:	phi	 %5093 %3893
%5118:	phi	 %5094 %3875
%5119:	icmp	 %5118 %5117
%5120:	br	 %5119 while.end1067 while.body1062

BASIC BLOCK while.body1062
%5121:	icmp	 %5117 %3893
%5122:	br	 %5121 if.end1066 if.then1065

BASIC BLOCK if.then1065
%5123:	br	 fail

BASIC BLOCK if.end1066
%5124:	br	 while.cond1059

BASIC BLOCK while.end1067
%5125:	ptrtoint	 %5117
%5126:	ptrtoint	 %5118
%5127:	sub	 %5125 %5126
%5128:	trunc	 %5127
%5129:	sext	 %5128
%5130:	ptrtoint	 %5097
%5131:	ptrtoint	 %5096
%5132:	sub	 %5130 %5131
%5133:	icmp	 %5129 %5132
%5134:	br	 %5133 if.end1083 if.then1078

BASIC BLOCK if.then1078
%5135:	ptrtoint	 %5097
%5136:	ptrtoint	 %5096
%5137:	sub	 %5135 %5136
%5138:	trunc	 %5137
%5139:	br	 if.end1083

BASIC BLOCK if.end1083
%5140:	phi	 %5138 %5128
%5141:	icmp	 %3726 XXX
%5142:	br	 %5141 cond.false1088 cond.true1085

BASIC BLOCK cond.true1085
%5143:	call	 %5118 %5096 %5140 %3726 bcmp_translate
%5144:	icmp	 %5143 XXX
%5145:	br	 %5144 if.end1093 if.then1092

BASIC BLOCK cond.false1088
%5146:	sext	 %5140
%5147:	call	 %5118 %5096 %5146 memcmp
%5148:	icmp	 %5147 XXX
%5149:	br	 %5148 if.end1093 if.then1092

BASIC BLOCK if.then1092
%5150:	br	 fail

BASIC BLOCK if.end1093
%5151:	sext	 %5140
%5152:	getelementptr	 %5118 %5151
%5153:	sext	 %5140
%5154:	getelementptr	 %5096 %5153
%5155:	br	 for.cond1037

BASIC BLOCK for.end1098
%5156:	br	 sw.epilog2314

BASIC BLOCK sw.bb1099
%5157:	icmp	 %3876 XXX
%5158:	br	 %5157 cond.false1102 cond.true1101

BASIC BLOCK cond.true1101
%5159:	br	 cond.end1103

BASIC BLOCK cond.false1102
%5160:	br	 cond.end1103

BASIC BLOCK cond.end1103
%5161:	phi	 %3877 %3875
%5162:	icmp	 %3917 %5161
%5163:	br	 %5162 lor.lhs.false1107 if.then1109

BASIC BLOCK lor.lhs.false1107
%5164:	icmp	 %3874 XXX
%5165:	br	 %5164 if.then1109 if.else1117

BASIC BLOCK if.then1109
%5166:	getelementptr	 bufp XXX XXX
%5167:	load	 %5166
%5168:	lshr	 %5167 XXX
%5169:	and	 %5168 XXX
%5170:	zext	 %5169
%5171:	icmp	 %5170 XXX
%5172:	br	 %5171 if.then1115 if.end1116

BASIC BLOCK if.then1115
%5173:	br	 sw.epilog2314

BASIC BLOCK if.end1116
%5174:	br	 if.end1129

BASIC BLOCK if.else1117
%5175:	getelementptr	 %3917 XXX
%5176:	load	 %5175
%5177:	sext	 %5176
%5178:	icmp	 %5177 XXX
%5179:	br	 %5178 if.end1128 land.lhs.true1122

BASIC BLOCK land.lhs.true1122
%5180:	getelementptr	 bufp XXX XXX
%5181:	load	 %5180
%5182:	lshr	 %5181 XXX
%5183:	zext	 %5182
%5184:	icmp	 %5183 XXX
%5185:	br	 %5184 if.end1128 if.then1127

BASIC BLOCK if.then1127
%5186:	br	 sw.epilog2314

BASIC BLOCK if.end1128
%5187:	br	 if.end1129

BASIC BLOCK if.end1129
%5188:	br	 fail

BASIC BLOCK sw.bb1130
%5189:	icmp	 %3917 %3881
%5190:	br	 %5189 if.else1141 if.then1133

BASIC BLOCK if.then1133
%5191:	getelementptr	 bufp XXX XXX
%5192:	load	 %5191
%5193:	lshr	 %5192 XXX
%5194:	and	 %5193 XXX
%5195:	zext	 %5194
%5196:	icmp	 %5195 XXX
%5197:	br	 %5196 if.then1139 if.end1140

BASIC BLOCK if.then1139
%5198:	br	 sw.epilog2314

BASIC BLOCK if.end1140
%5199:	br	 if.end1160

BASIC BLOCK if.else1141
%5200:	icmp	 %3917 %3879
%5201:	br	 %5200 cond.false1146 cond.true1144

BASIC BLOCK cond.true1144
%5202:	load	 %3875
%5203:	sext	 %5202
%5204:	br	 cond.end1148

BASIC BLOCK cond.false1146
%5205:	load	 %3917
%5206:	sext	 %5205
%5207:	br	 cond.end1148

BASIC BLOCK cond.end1148
%5208:	phi	 %5203 %5206
%5209:	icmp	 %5208 XXX
%5210:	br	 %5209 if.end1159 land.lhs.true1152

BASIC BLOCK land.lhs.true1152
%5211:	getelementptr	 bufp XXX XXX
%5212:	load	 %5211
%5213:	lshr	 %5212 XXX
%5214:	zext	 %5213
%5215:	icmp	 %5214 XXX
%5216:	br	 %5215 if.end1159 if.then1158

BASIC BLOCK if.then1158
%5217:	br	 sw.epilog2314

BASIC BLOCK if.end1159
%5218:	br	 if.end1160

BASIC BLOCK if.end1160
%5219:	br	 fail

BASIC BLOCK sw.bb1161
%5220:	icmp	 %3876 XXX
%5221:	br	 %5220 cond.false1164 cond.true1163

BASIC BLOCK cond.true1163
%5222:	br	 cond.end1165

BASIC BLOCK cond.false1164
%5223:	br	 cond.end1165

BASIC BLOCK cond.end1165
%5224:	phi	 %3877 %3875
%5225:	icmp	 %3917 %5224
%5226:	br	 %5225 lor.lhs.false1169 if.then1171

BASIC BLOCK lor.lhs.false1169
%5227:	icmp	 %3874 XXX
%5228:	br	 %5227 if.then1171 if.end1172

BASIC BLOCK if.then1171
%5229:	br	 sw.epilog2314

BASIC BLOCK if.end1172
%5230:	br	 fail

BASIC BLOCK sw.bb1173
%5231:	icmp	 %3917 %3881
%5232:	br	 %5231 if.end1177 if.then1176

BASIC BLOCK if.then1176
%5233:	br	 sw.epilog2314

BASIC BLOCK if.end1177
%5234:	br	 fail

BASIC BLOCK sw.bb1178
%5235:	br	 do.body1179

BASIC BLOCK do.body1179
%5236:	br	 do.body1180

BASIC BLOCK do.body1180
%5237:	load	 %4293
%5238:	zext	 %5237
%5239:	and	 %5238 XXX
%5240:	getelementptr	 %4293 XXX
%5241:	load	 %5240
%5242:	sext	 %5241
%5243:	shl	 %5242 XXX
%5244:	add	 %5239 %5243
%5245:	br	 do.end1188

BASIC BLOCK do.end1188
%5246:	getelementptr	 %4293 XXX
%5247:	br	 do.end1191

BASIC BLOCK do.end1191
%5248:	br	 do.body1192

BASIC BLOCK do.body1192
%5249:	br	 while.cond1195

BASIC BLOCK while.cond1195
%5250:	getelementptr	 %3719 XXX XXX
%5251:	load	 %5250
%5252:	getelementptr	 %3719 XXX XXX
%5253:	load	 %5252
%5254:	sub	 %5251 %5253
%5255:	sub	 %3913 %3914
%5256:	add	 %5255 XXX
%5257:	mul	 %5256 XXX
%5258:	add	 %5257 XXX
%5259:	icmp	 %5254 %5258
%5260:	br	 %5259 while.end1236 while.body1205

BASIC BLOCK while.body1205
%5261:	getelementptr	 %3719 XXX XXX
%5262:	load	 %5261
%5263:	load	 re_max_failures
%5264:	sub	 %3730 XXX
%5265:	mul	 %5264 XXX
%5266:	add	 %5265 XXX
%5267:	mul	 %5263 %5266
%5268:	icmp	 %5262 %5267
%5269:	br	 %5268 cond.false1214 cond.true1213

BASIC BLOCK cond.true1213
%5270:	br	 XXX if.then1234 if.end1235

BASIC BLOCK cond.false1214
%5271:	getelementptr	 %3719 XXX XXX
%5272:	load	 %5271
%5273:	shl	 %5272 XXX
%5274:	zext	 %5273
%5275:	mul	 %5274 XXX
%5276:	alloca	 %5275
%5277:	getelementptr	 %3719 XXX XXX
%5278:	load	 %5277
%5279:	bitcast	 %5278
%5280:	getelementptr	 %3719 XXX XXX
%5281:	load	 %5280
%5282:	zext	 %5281
%5283:	mul	 %5282 XXX
%5284:	call	 %5276 %5279 %5283 XXX XXX llvm.memcpy.p0i8.p0i8.i64
%5285:	bitcast	 %5276
%5286:	getelementptr	 %3719 XXX XXX
%5287:	store	 %5285 %5286
%5288:	getelementptr	 %3719 XXX XXX
%5289:	load	 %5288
%5290:	icmp	 %5289 XXX
%5291:	br	 %5290 cond.false1228 cond.true1227

BASIC BLOCK cond.true1227
%5292:	br	 cond.end1231

BASIC BLOCK cond.false1228
%5293:	getelementptr	 %3719 XXX XXX
%5294:	load	 %5293
%5295:	shl	 %5294 XXX
%5296:	store	 %5295 %5293
%5297:	br	 cond.end1231

BASIC BLOCK cond.end1231
%5298:	phi	 XXX XXX
%5299:	icmp	 %5298 XXX
%5300:	br	 %5299 if.then1234 if.end1235

BASIC BLOCK if.then1234
%5301:	br	 return

BASIC BLOCK if.end1235
%5302:	br	 while.cond1195

BASIC BLOCK while.end1236
%5303:	br	 for.cond1237

BASIC BLOCK for.cond1237
%5304:	phi	 %3914 %5345
%5305:	icmp	 %5304 %3913
%5306:	br	 %5305 for.end1265 for.body1240

BASIC BLOCK for.body1240
%5307:	sext	 %5304
%5308:	getelementptr	 %3814 %5307
%5309:	load	 %5308
%5310:	getelementptr	 %3719 XXX XXX
%5311:	load	 %5310
%5312:	add	 %5311 XXX
%5313:	store	 %5312 %5310
%5314:	zext	 %5311
%5315:	getelementptr	 %3719 XXX XXX
%5316:	load	 %5315
%5317:	getelementptr	 %5316 %5314
%5318:	store	 %5309 %5317
%5319:	sext	 %5304
%5320:	getelementptr	 %3813 %5319
%5321:	load	 %5320
%5322:	getelementptr	 %3719 XXX XXX
%5323:	load	 %5322
%5324:	add	 %5323 XXX
%5325:	store	 %5324 %5322
%5326:	zext	 %5323
%5327:	getelementptr	 %3719 XXX XXX
%5328:	load	 %5327
%5329:	getelementptr	 %5328 %5326
%5330:	store	 %5321 %5329
%5331:	sext	 %5304
%5332:	getelementptr	 %3810 %5331
%5333:	bitcast	 %5332
%5334:	load	 %5333
%5335:	getelementptr	 %3719 XXX XXX
%5336:	load	 %5335
%5337:	add	 %5336 XXX
%5338:	store	 %5337 %5335
%5339:	zext	 %5336
%5340:	getelementptr	 %3719 XXX XXX
%5341:	load	 %5340
%5342:	getelementptr	 %5341 %5339
%5343:	store	 %5334 %5342
%5344:	br	 for.inc1263

BASIC BLOCK for.inc1263
%5345:	add	 %5304 XXX
%5346:	br	 for.cond1237

BASIC BLOCK for.end1265
%5347:	zext	 %3914
%5348:	inttoptr	 %5347
%5349:	getelementptr	 %3719 XXX XXX
%5350:	load	 %5349
%5351:	add	 %5350 XXX
%5352:	store	 %5351 %5349
%5353:	zext	 %5350
%5354:	getelementptr	 %3719 XXX XXX
%5355:	load	 %5354
%5356:	getelementptr	 %5355 %5353
%5357:	store	 %5348 %5356
%5358:	zext	 %3913
%5359:	inttoptr	 %5358
%5360:	getelementptr	 %3719 XXX XXX
%5361:	load	 %5360
%5362:	add	 %5361 XXX
%5363:	store	 %5362 %5360
%5364:	zext	 %5361
%5365:	getelementptr	 %3719 XXX XXX
%5366:	load	 %5365
%5367:	getelementptr	 %5366 %5364
%5368:	store	 %5359 %5367
%5369:	sext	 %5244
%5370:	getelementptr	 %5246 %5369
%5371:	getelementptr	 %3719 XXX XXX
%5372:	load	 %5371
%5373:	add	 %5372 XXX
%5374:	store	 %5373 %5371
%5375:	zext	 %5372
%5376:	getelementptr	 %3719 XXX XXX
%5377:	load	 %5376
%5378:	getelementptr	 %5377 %5375
%5379:	store	 %5370 %5378
%5380:	getelementptr	 %3719 XXX XXX
%5381:	load	 %5380
%5382:	add	 %5381 XXX
%5383:	store	 %5382 %5380
%5384:	zext	 %5381
%5385:	getelementptr	 %3719 XXX XXX
%5386:	load	 %5385
%5387:	getelementptr	 %5386 %5384
%5388:	store	 XXX %5387
%5389:	br	 do.end1291

BASIC BLOCK do.end1291
%5390:	br	 sw.epilog2314

BASIC BLOCK sw.bb1292
%5391:	br	 on_failure

BASIC BLOCK on_failure
%5392:	br	 do.body1293

BASIC BLOCK do.body1293
%5393:	br	 do.body1294

BASIC BLOCK do.body1294
%5394:	load	 %4293
%5395:	zext	 %5394
%5396:	and	 %5395 XXX
%5397:	getelementptr	 %4293 XXX
%5398:	load	 %5397
%5399:	sext	 %5398
%5400:	shl	 %5399 XXX
%5401:	add	 %5396 %5400
%5402:	br	 do.end1302

BASIC BLOCK do.end1302
%5403:	getelementptr	 %4293 XXX
%5404:	br	 do.end1305

BASIC BLOCK do.end1305
%5405:	store	 %5403 %3718
%5406:	br	 while.cond1306

BASIC BLOCK while.cond1306
%5407:	load	 %3718
%5408:	icmp	 %5407 %3724
%5409:	br	 %5408 land.end1313 land.rhs1309

BASIC BLOCK land.rhs1309
%5410:	load	 %3718
%5411:	load	 %5410
%5412:	zext	 %5411
%5413:	icmp	 %5412 XXX
%5414:	br	 land.end1313

BASIC BLOCK land.end1313
%5415:	phi	 XXX %5413
%5416:	br	 %5415 while.end1317 while.body1315

BASIC BLOCK while.body1315
%5417:	load	 %3718
%5418:	getelementptr	 %5417 XXX
%5419:	store	 %5418 %3718
%5420:	br	 while.cond1306

BASIC BLOCK while.end1317
%5421:	load	 %3718
%5422:	icmp	 %5421 %3724
%5423:	br	 %5422 if.end1336 land.lhs.true1320

BASIC BLOCK land.lhs.true1320
%5424:	load	 %3718
%5425:	load	 %5424
%5426:	zext	 %5425
%5427:	icmp	 %5426 XXX
%5428:	br	 %5427 if.end1336 if.then1324

BASIC BLOCK if.then1324
%5429:	load	 %3718
%5430:	getelementptr	 %5429 XXX
%5431:	load	 %5430
%5432:	zext	 %5431
%5433:	load	 %3718
%5434:	getelementptr	 %5433 XXX
%5435:	load	 %5434
%5436:	zext	 %5435
%5437:	add	 %5432 %5436
%5438:	icmp	 %3914 XXX
%5439:	br	 %5438 if.end1335 if.then1332

BASIC BLOCK if.then1332
%5440:	load	 %3718
%5441:	getelementptr	 %5440 XXX
%5442:	load	 %5441
%5443:	zext	 %5442
%5444:	br	 if.end1335

BASIC BLOCK if.end1335
%5445:	phi	 %5443 %3914
%5446:	br	 if.end1336

BASIC BLOCK if.end1336
%5447:	phi	 %5437 %3913 %3913
%5448:	phi	 %5445 %3914 %3914
%5449:	br	 do.body1337

BASIC BLOCK do.body1337
%5450:	br	 while.cond1340

BASIC BLOCK while.cond1340
%5451:	getelementptr	 %3719 XXX XXX
%5452:	load	 %5451
%5453:	getelementptr	 %3719 XXX XXX
%5454:	load	 %5453
%5455:	sub	 %5452 %5454
%5456:	sub	 %5447 %5448
%5457:	add	 %5456 XXX
%5458:	mul	 %5457 XXX
%5459:	add	 %5458 XXX
%5460:	icmp	 %5455 %5459
%5461:	br	 %5460 while.end1381 while.body1350

BASIC BLOCK while.body1350
%5462:	getelementptr	 %3719 XXX XXX
%5463:	load	 %5462
%5464:	load	 re_max_failures
%5465:	sub	 %3730 XXX
%5466:	mul	 %5465 XXX
%5467:	add	 %5466 XXX
%5468:	mul	 %5464 %5467
%5469:	icmp	 %5463 %5468
%5470:	br	 %5469 cond.false1359 cond.true1358

BASIC BLOCK cond.true1358
%5471:	br	 XXX if.then1379 if.end1380

BASIC BLOCK cond.false1359
%5472:	getelementptr	 %3719 XXX XXX
%5473:	load	 %5472
%5474:	shl	 %5473 XXX
%5475:	zext	 %5474
%5476:	mul	 %5475 XXX
%5477:	alloca	 %5476
%5478:	getelementptr	 %3719 XXX XXX
%5479:	load	 %5478
%5480:	bitcast	 %5479
%5481:	getelementptr	 %3719 XXX XXX
%5482:	load	 %5481
%5483:	zext	 %5482
%5484:	mul	 %5483 XXX
%5485:	call	 %5477 %5480 %5484 XXX XXX llvm.memcpy.p0i8.p0i8.i64
%5486:	bitcast	 %5477
%5487:	getelementptr	 %3719 XXX XXX
%5488:	store	 %5486 %5487
%5489:	getelementptr	 %3719 XXX XXX
%5490:	load	 %5489
%5491:	icmp	 %5490 XXX
%5492:	br	 %5491 cond.false1373 cond.true1372

BASIC BLOCK cond.true1372
%5493:	br	 cond.end1376

BASIC BLOCK cond.false1373
%5494:	getelementptr	 %3719 XXX XXX
%5495:	load	 %5494
%5496:	shl	 %5495 XXX
%5497:	store	 %5496 %5494
%5498:	br	 cond.end1376

BASIC BLOCK cond.end1376
%5499:	phi	 XXX XXX
%5500:	icmp	 %5499 XXX
%5501:	br	 %5500 if.then1379 if.end1380

BASIC BLOCK if.then1379
%5502:	br	 return

BASIC BLOCK if.end1380
%5503:	br	 while.cond1340

BASIC BLOCK while.end1381
%5504:	br	 for.cond1382

BASIC BLOCK for.cond1382
%5505:	phi	 %5448 %5546
%5506:	icmp	 %5505 %5447
%5507:	br	 %5506 for.end1410 for.body1385

BASIC BLOCK for.body1385
%5508:	sext	 %5505
%5509:	getelementptr	 %3814 %5508
%5510:	load	 %5509
%5511:	getelementptr	 %3719 XXX XXX
%5512:	load	 %5511
%5513:	add	 %5512 XXX
%5514:	store	 %5513 %5511
%5515:	zext	 %5512
%5516:	getelementptr	 %3719 XXX XXX
%5517:	load	 %5516
%5518:	getelementptr	 %5517 %5515
%5519:	store	 %5510 %5518
%5520:	sext	 %5505
%5521:	getelementptr	 %3813 %5520
%5522:	load	 %5521
%5523:	getelementptr	 %3719 XXX XXX
%5524:	load	 %5523
%5525:	add	 %5524 XXX
%5526:	store	 %5525 %5523
%5527:	zext	 %5524
%5528:	getelementptr	 %3719 XXX XXX
%5529:	load	 %5528
%5530:	getelementptr	 %5529 %5527
%5531:	store	 %5522 %5530
%5532:	sext	 %5505
%5533:	getelementptr	 %3810 %5532
%5534:	bitcast	 %5533
%5535:	load	 %5534
%5536:	getelementptr	 %3719 XXX XXX
%5537:	load	 %5536
%5538:	add	 %5537 XXX
%5539:	store	 %5538 %5536
%5540:	zext	 %5537
%5541:	getelementptr	 %3719 XXX XXX
%5542:	load	 %5541
%5543:	getelementptr	 %5542 %5540
%5544:	store	 %5535 %5543
%5545:	br	 for.inc1408

BASIC BLOCK for.inc1408
%5546:	add	 %5505 XXX
%5547:	br	 for.cond1382

BASIC BLOCK for.end1410
%5548:	zext	 %5448
%5549:	inttoptr	 %5548
%5550:	getelementptr	 %3719 XXX XXX
%5551:	load	 %5550
%5552:	add	 %5551 XXX
%5553:	store	 %5552 %5550
%5554:	zext	 %5551
%5555:	getelementptr	 %3719 XXX XXX
%5556:	load	 %5555
%5557:	getelementptr	 %5556 %5554
%5558:	store	 %5549 %5557
%5559:	zext	 %5447
%5560:	inttoptr	 %5559
%5561:	getelementptr	 %3719 XXX XXX
%5562:	load	 %5561
%5563:	add	 %5562 XXX
%5564:	store	 %5563 %5561
%5565:	zext	 %5562
%5566:	getelementptr	 %3719 XXX XXX
%5567:	load	 %5566
%5568:	getelementptr	 %5567 %5565
%5569:	store	 %5560 %5568
%5570:	sext	 %5401
%5571:	getelementptr	 %5403 %5570
%5572:	getelementptr	 %3719 XXX XXX
%5573:	load	 %5572
%5574:	add	 %5573 XXX
%5575:	store	 %5574 %5572
%5576:	zext	 %5573
%5577:	getelementptr	 %3719 XXX XXX
%5578:	load	 %5577
%5579:	getelementptr	 %5578 %5576
%5580:	store	 %5571 %5579
%5581:	getelementptr	 %3719 XXX XXX
%5582:	load	 %5581
%5583:	add	 %5582 XXX
%5584:	store	 %5583 %5581
%5585:	zext	 %5582
%5586:	getelementptr	 %3719 XXX XXX
%5587:	load	 %5586
%5588:	getelementptr	 %5587 %5585
%5589:	store	 %3917 %5588
%5590:	br	 do.end1436

BASIC BLOCK do.end1436
%5591:	br	 sw.epilog2314

BASIC BLOCK sw.bb1437
%5592:	br	 do.body1438

BASIC BLOCK do.body1438
%5593:	br	 do.body1439

BASIC BLOCK do.body1439
%5594:	load	 %4293
%5595:	zext	 %5594
%5596:	and	 %5595 XXX
%5597:	getelementptr	 %4293 XXX
%5598:	load	 %5597
%5599:	sext	 %5598
%5600:	shl	 %5599 XXX
%5601:	add	 %5596 %5600
%5602:	br	 do.end1447

BASIC BLOCK do.end1447
%5603:	getelementptr	 %4293 XXX
%5604:	br	 do.end1450

BASIC BLOCK do.end1450
%5605:	br	 while.cond1451

BASIC BLOCK while.cond1451
%5606:	phi	 %5603 %5622
%5607:	getelementptr	 %5606 XXX
%5608:	icmp	 %5607 %3724
%5609:	br	 %5608 land.end1462 land.rhs1455

BASIC BLOCK land.rhs1455
%5610:	load	 %5606
%5611:	zext	 %5610
%5612:	icmp	 %5611 XXX
%5613:	br	 %5612 lor.rhs lor.end

BASIC BLOCK lor.rhs
%5614:	load	 %5606
%5615:	zext	 %5614
%5616:	icmp	 %5615 XXX
%5617:	br	 lor.end

BASIC BLOCK lor.end
%5618:	phi	 XXX %5616
%5619:	br	 land.end1462

BASIC BLOCK land.end1462
%5620:	phi	 XXX %5618
%5621:	br	 %5620 while.end1466 while.body1464

BASIC BLOCK while.body1464
%5622:	getelementptr	 %5606 XXX
%5623:	br	 while.cond1451

BASIC BLOCK while.end1466
%5624:	icmp	 %5606 %3724
%5625:	br	 %5624 if.else1471 if.then1469

BASIC BLOCK if.then1469
%5626:	getelementptr	 %5603 XXX
%5627:	store	 XXX %5626
%5628:	br	 if.end1559

BASIC BLOCK if.else1471
%5629:	load	 %5606
%5630:	zext	 %5629
%5631:	icmp	 %5630 XXX
%5632:	br	 %5631 lor.lhs.false1475 if.then1485

BASIC BLOCK lor.lhs.false1475
%5633:	getelementptr	 bufp XXX XXX
%5634:	load	 %5633
%5635:	lshr	 %5634 XXX
%5636:	zext	 %5635
%5637:	icmp	 %5636 XXX
%5638:	br	 %5637 if.end1558 land.lhs.true1481

BASIC BLOCK land.lhs.true1481
%5639:	load	 %5606
%5640:	zext	 %5639
%5641:	icmp	 %5640 XXX
%5642:	br	 %5641 if.end1558 if.then1485

BASIC BLOCK if.then1485
%5643:	load	 %5606
%5644:	zext	 %5643
%5645:	icmp	 %5644 XXX
%5646:	br	 %5645 cond.false1491 cond.true1490

BASIC BLOCK cond.true1490
%5647:	br	 cond.end1494

BASIC BLOCK cond.false1491
%5648:	getelementptr	 %5606 XXX
%5649:	load	 %5648
%5650:	zext	 %5649
%5651:	br	 cond.end1494

BASIC BLOCK cond.end1494
%5652:	phi	 XXX %5650
%5653:	trunc	 %5652
%5654:	sext	 %5601
%5655:	getelementptr	 %5603 %5654
%5656:	store	 %5655 %3718
%5657:	load	 %3718
%5658:	getelementptr	 %5657 XXX
%5659:	load	 %5658
%5660:	zext	 %5659
%5661:	icmp	 %5660 XXX
%5662:	br	 %5661 if.else1511 land.lhs.true1503

BASIC BLOCK land.lhs.true1503
%5663:	load	 %3718
%5664:	getelementptr	 %5663 XXX
%5665:	load	 %5664
%5666:	zext	 %5665
%5667:	zext	 %5653
%5668:	icmp	 %5666 %5667
%5669:	br	 %5668 if.else1511 if.then1509

BASIC BLOCK if.then1509
%5670:	getelementptr	 %5603 XXX
%5671:	store	 XXX %5670
%5672:	br	 if.end1557

BASIC BLOCK if.else1511
%5673:	load	 %3718
%5674:	getelementptr	 %5673 XXX
%5675:	load	 %5674
%5676:	zext	 %5675
%5677:	icmp	 %5676 XXX
%5678:	br	 %5677 lor.lhs.false1516 if.then1521

BASIC BLOCK lor.lhs.false1516
%5679:	load	 %3718
%5680:	getelementptr	 %5679 XXX
%5681:	load	 %5680
%5682:	zext	 %5681
%5683:	icmp	 %5682 XXX
%5684:	br	 %5683 if.end1556 if.then1521

BASIC BLOCK if.then1521
%5685:	load	 %3718
%5686:	getelementptr	 %5685 XXX
%5687:	load	 %5686
%5688:	zext	 %5687
%5689:	icmp	 %5688 XXX
%5690:	zext	 %5689
%5691:	zext	 %5653
%5692:	load	 %3718
%5693:	getelementptr	 %5692 XXX
%5694:	load	 %5693
%5695:	zext	 %5694
%5696:	mul	 %5695 XXX
%5697:	trunc	 %5696
%5698:	zext	 %5697
%5699:	icmp	 %5691 %5698
%5700:	br	 %5699 if.end1551 land.lhs.true1535

BASIC BLOCK land.lhs.true1535
%5701:	zext	 %5653
%5702:	sdiv	 %5701 XXX
%5703:	add	 XXX %5702
%5704:	sext	 %5703
%5705:	load	 %3718
%5706:	getelementptr	 %5705 %5704
%5707:	load	 %5706
%5708:	zext	 %5707
%5709:	zext	 %5653
%5710:	srem	 %5709 XXX
%5711:	shl	 XXX %5710
%5712:	and	 %5708 %5711
%5713:	icmp	 %5712 XXX
%5714:	br	 %5713 if.end1551 if.then1547

BASIC BLOCK if.then1547
%5715:	icmp	 %5690 XXX
%5716:	xor	 %5715 XXX
%5717:	zext	 %5716
%5718:	br	 if.end1551

BASIC BLOCK if.end1551
%5719:	phi	 %5717 %5690 %5690
%5720:	icmp	 %5719 XXX
%5721:	br	 %5720 if.then1553 if.end1555

BASIC BLOCK if.then1553
%5722:	getelementptr	 %5603 XXX
%5723:	store	 XXX %5722
%5724:	br	 if.end1555

BASIC BLOCK if.end1555
%5725:	br	 if.end1556

BASIC BLOCK if.end1556
%5726:	br	 if.end1557

BASIC BLOCK if.end1557
%5727:	br	 if.end1558

BASIC BLOCK if.end1558
%5728:	br	 if.end1559

BASIC BLOCK if.end1559
%5729:	getelementptr	 %5603 XXX
%5730:	getelementptr	 %5729 XXX
%5731:	load	 %5730
%5732:	zext	 %5731
%5733:	icmp	 %5732 XXX
%5734:	br	 %5733 if.end1567 if.then1565

BASIC BLOCK if.then1565
%5735:	getelementptr	 %5729 XXX
%5736:	store	 XXX %5735
%5737:	br	 unconditional_jump

BASIC BLOCK if.end1567
%5738:	br	 sw.bb1568

BASIC BLOCK sw.bb1568
%5739:	phi	 %4293 %5729
%5740:	getelementptr	 %3719 XXX XXX
%5741:	load	 %5740
%5742:	add	 %5741 XXX
%5743:	store	 %5742 %5740
%5744:	zext	 %5742
%5745:	getelementptr	 %3719 XXX XXX
%5746:	load	 %5745
%5747:	getelementptr	 %5746 %5744
%5748:	load	 %5747
%5749:	icmp	 %5748 XXX
%5750:	br	 %5749 if.end1578 if.then1577

BASIC BLOCK if.then1577
%5751:	br	 if.end1578

BASIC BLOCK if.end1578
%5752:	getelementptr	 %3719 XXX XXX
%5753:	load	 %5752
%5754:	add	 %5753 XXX
%5755:	store	 %5754 %5752
%5756:	zext	 %5754
%5757:	getelementptr	 %3719 XXX XXX
%5758:	load	 %5757
%5759:	getelementptr	 %5758 %5756
%5760:	getelementptr	 %3719 XXX XXX
%5761:	load	 %5760
%5762:	add	 %5761 XXX
%5763:	store	 %5762 %5760
%5764:	zext	 %5762
%5765:	getelementptr	 %3719 XXX XXX
%5766:	load	 %5765
%5767:	getelementptr	 %5766 %5764
%5768:	load	 %5767
%5769:	ptrtoint	 %5768
%5770:	getelementptr	 %3719 XXX XXX
%5771:	load	 %5770
%5772:	add	 %5771 XXX
%5773:	store	 %5772 %5770
%5774:	zext	 %5772
%5775:	getelementptr	 %3719 XXX XXX
%5776:	load	 %5775
%5777:	getelementptr	 %5776 %5774
%5778:	load	 %5777
%5779:	ptrtoint	 %5778
%5780:	br	 for.cond1594

BASIC BLOCK for.cond1594
%5781:	phi	 %5769 %5822
%5782:	icmp	 %5781 %5779
%5783:	br	 %5782 for.end1622 for.body1597

BASIC BLOCK for.body1597
%5784:	getelementptr	 %3719 XXX XXX
%5785:	load	 %5784
%5786:	add	 %5785 XXX
%5787:	store	 %5786 %5784
%5788:	zext	 %5786
%5789:	getelementptr	 %3719 XXX XXX
%5790:	load	 %5789
%5791:	getelementptr	 %5790 %5788
%5792:	load	 %5791
%5793:	sext	 %5781
%5794:	getelementptr	 %3806 %5793
%5795:	bitcast	 %5794
%5796:	store	 %5792 %5795
%5797:	getelementptr	 %3719 XXX XXX
%5798:	load	 %5797
%5799:	add	 %5798 XXX
%5800:	store	 %5799 %5797
%5801:	zext	 %5799
%5802:	getelementptr	 %3719 XXX XXX
%5803:	load	 %5802
%5804:	getelementptr	 %5803 %5801
%5805:	load	 %5804
%5806:	sext	 %5781
%5807:	getelementptr	 %3807 %5806
%5808:	store	 %5805 %5807
%5809:	getelementptr	 %3719 XXX XXX
%5810:	load	 %5809
%5811:	add	 %5810 XXX
%5812:	store	 %5811 %5809
%5813:	zext	 %5811
%5814:	getelementptr	 %3719 XXX XXX
%5815:	load	 %5814
%5816:	getelementptr	 %5815 %5813
%5817:	load	 %5816
%5818:	sext	 %5781
%5819:	getelementptr	 %3807 %5818
%5820:	store	 %5817 %5819
%5821:	br	 for.inc1620

BASIC BLOCK for.inc1620
%5822:	add	 %5781 XXX
%5823:	br	 for.cond1594

BASIC BLOCK for.end1622
%5824:	br	 sw.bb1623

BASIC BLOCK sw.bb1623
%5825:	phi	 %4293 %5739
%5826:	br	 unconditional_jump

BASIC BLOCK unconditional_jump
%5827:	phi	 %4293 %4293 %4293 %5825 %5729
%5828:	br	 do.body1624

BASIC BLOCK do.body1624
%5829:	br	 do.body1625

BASIC BLOCK do.body1625
%5830:	load	 %5827
%5831:	zext	 %5830
%5832:	and	 %5831 XXX
%5833:	getelementptr	 %5827 XXX
%5834:	load	 %5833
%5835:	sext	 %5834
%5836:	shl	 %5835 XXX
%5837:	add	 %5832 %5836
%5838:	br	 do.end1633

BASIC BLOCK do.end1633
%5839:	getelementptr	 %5827 XXX
%5840:	br	 do.end1636

BASIC BLOCK do.end1636
%5841:	sext	 %5837
%5842:	getelementptr	 %5839 %5841
%5843:	br	 sw.epilog2314

BASIC BLOCK sw.bb1639
%5844:	br	 unconditional_jump

BASIC BLOCK sw.bb1640
%5845:	br	 do.body1641

BASIC BLOCK do.body1641
%5846:	br	 while.cond1644

BASIC BLOCK while.cond1644
%5847:	getelementptr	 %3719 XXX XXX
%5848:	load	 %5847
%5849:	getelementptr	 %3719 XXX XXX
%5850:	load	 %5849
%5851:	sub	 %5848 %5850
%5852:	sub	 %3913 %3914
%5853:	add	 %5852 XXX
%5854:	mul	 %5853 XXX
%5855:	add	 %5854 XXX
%5856:	icmp	 %5851 %5855
%5857:	br	 %5856 while.end1685 while.body1654

BASIC BLOCK while.body1654
%5858:	getelementptr	 %3719 XXX XXX
%5859:	load	 %5858
%5860:	load	 re_max_failures
%5861:	sub	 %3730 XXX
%5862:	mul	 %5861 XXX
%5863:	add	 %5862 XXX
%5864:	mul	 %5860 %5863
%5865:	icmp	 %5859 %5864
%5866:	br	 %5865 cond.false1663 cond.true1662

BASIC BLOCK cond.true1662
%5867:	br	 XXX if.then1683 if.end1684

BASIC BLOCK cond.false1663
%5868:	getelementptr	 %3719 XXX XXX
%5869:	load	 %5868
%5870:	shl	 %5869 XXX
%5871:	zext	 %5870
%5872:	mul	 %5871 XXX
%5873:	alloca	 %5872
%5874:	getelementptr	 %3719 XXX XXX
%5875:	load	 %5874
%5876:	bitcast	 %5875
%5877:	getelementptr	 %3719 XXX XXX
%5878:	load	 %5877
%5879:	zext	 %5878
%5880:	mul	 %5879 XXX
%5881:	call	 %5873 %5876 %5880 XXX XXX llvm.memcpy.p0i8.p0i8.i64
%5882:	bitcast	 %5873
%5883:	getelementptr	 %3719 XXX XXX
%5884:	store	 %5882 %5883
%5885:	getelementptr	 %3719 XXX XXX
%5886:	load	 %5885
%5887:	icmp	 %5886 XXX
%5888:	br	 %5887 cond.false1677 cond.true1676

BASIC BLOCK cond.true1676
%5889:	br	 cond.end1680

BASIC BLOCK cond.false1677
%5890:	getelementptr	 %3719 XXX XXX
%5891:	load	 %5890
%5892:	shl	 %5891 XXX
%5893:	store	 %5892 %5890
%5894:	br	 cond.end1680

BASIC BLOCK cond.end1680
%5895:	phi	 XXX XXX
%5896:	icmp	 %5895 XXX
%5897:	br	 %5896 if.then1683 if.end1684

BASIC BLOCK if.then1683
%5898:	br	 return

BASIC BLOCK if.end1684
%5899:	br	 while.cond1644

BASIC BLOCK while.end1685
%5900:	br	 for.cond1686

BASIC BLOCK for.cond1686
%5901:	phi	 %3914 %5942
%5902:	icmp	 %5901 %3913
%5903:	br	 %5902 for.end1714 for.body1689

BASIC BLOCK for.body1689
%5904:	sext	 %5901
%5905:	getelementptr	 %3814 %5904
%5906:	load	 %5905
%5907:	getelementptr	 %3719 XXX XXX
%5908:	load	 %5907
%5909:	add	 %5908 XXX
%5910:	store	 %5909 %5907
%5911:	zext	 %5908
%5912:	getelementptr	 %3719 XXX XXX
%5913:	load	 %5912
%5914:	getelementptr	 %5913 %5911
%5915:	store	 %5906 %5914
%5916:	sext	 %5901
%5917:	getelementptr	 %3813 %5916
%5918:	load	 %5917
%5919:	getelementptr	 %3719 XXX XXX
%5920:	load	 %5919
%5921:	add	 %5920 XXX
%5922:	store	 %5921 %5919
%5923:	zext	 %5920
%5924:	getelementptr	 %3719 XXX XXX
%5925:	load	 %5924
%5926:	getelementptr	 %5925 %5923
%5927:	store	 %5918 %5926
%5928:	sext	 %5901
%5929:	getelementptr	 %3810 %5928
%5930:	bitcast	 %5929
%5931:	load	 %5930
%5932:	getelementptr	 %3719 XXX XXX
%5933:	load	 %5932
%5934:	add	 %5933 XXX
%5935:	store	 %5934 %5932
%5936:	zext	 %5933
%5937:	getelementptr	 %3719 XXX XXX
%5938:	load	 %5937
%5939:	getelementptr	 %5938 %5936
%5940:	store	 %5931 %5939
%5941:	br	 for.inc1712

BASIC BLOCK for.inc1712
%5942:	add	 %5901 XXX
%5943:	br	 for.cond1686

BASIC BLOCK for.end1714
%5944:	zext	 %3914
%5945:	inttoptr	 %5944
%5946:	getelementptr	 %3719 XXX XXX
%5947:	load	 %5946
%5948:	add	 %5947 XXX
%5949:	store	 %5948 %5946
%5950:	zext	 %5947
%5951:	getelementptr	 %3719 XXX XXX
%5952:	load	 %5951
%5953:	getelementptr	 %5952 %5950
%5954:	store	 %5945 %5953
%5955:	zext	 %3913
%5956:	inttoptr	 %5955
%5957:	getelementptr	 %3719 XXX XXX
%5958:	load	 %5957
%5959:	add	 %5958 XXX
%5960:	store	 %5959 %5957
%5961:	zext	 %5958
%5962:	getelementptr	 %3719 XXX XXX
%5963:	load	 %5962
%5964:	getelementptr	 %5963 %5961
%5965:	store	 %5956 %5964
%5966:	getelementptr	 %3719 XXX XXX
%5967:	load	 %5966
%5968:	add	 %5967 XXX
%5969:	store	 %5968 %5966
%5970:	zext	 %5967
%5971:	getelementptr	 %3719 XXX XXX
%5972:	load	 %5971
%5973:	getelementptr	 %5972 %5970
%5974:	store	 XXX %5973
%5975:	getelementptr	 %3719 XXX XXX
%5976:	load	 %5975
%5977:	add	 %5976 XXX
%5978:	store	 %5977 %5975
%5979:	zext	 %5976
%5980:	getelementptr	 %3719 XXX XXX
%5981:	load	 %5980
%5982:	getelementptr	 %5981 %5979
%5983:	store	 XXX %5982
%5984:	br	 do.end1738

BASIC BLOCK do.end1738
%5985:	br	 unconditional_jump

BASIC BLOCK sw.bb1739
%5986:	br	 do.body1740

BASIC BLOCK do.body1740
%5987:	br	 while.cond1743

BASIC BLOCK while.cond1743
%5988:	getelementptr	 %3719 XXX XXX
%5989:	load	 %5988
%5990:	getelementptr	 %3719 XXX XXX
%5991:	load	 %5990
%5992:	sub	 %5989 %5991
%5993:	sub	 %3913 %3914
%5994:	add	 %5993 XXX
%5995:	mul	 %5994 XXX
%5996:	add	 %5995 XXX
%5997:	icmp	 %5992 %5996
%5998:	br	 %5997 while.end1784 while.body1753

BASIC BLOCK while.body1753
%5999:	getelementptr	 %3719 XXX XXX
%6000:	load	 %5999
%6001:	load	 re_max_failures
%6002:	sub	 %3730 XXX
%6003:	mul	 %6002 XXX
%6004:	add	 %6003 XXX
%6005:	mul	 %6001 %6004
%6006:	icmp	 %6000 %6005
%6007:	br	 %6006 cond.false1762 cond.true1761

BASIC BLOCK cond.true1761
%6008:	br	 XXX if.then1782 if.end1783

BASIC BLOCK cond.false1762
%6009:	getelementptr	 %3719 XXX XXX
%6010:	load	 %6009
%6011:	shl	 %6010 XXX
%6012:	zext	 %6011
%6013:	mul	 %6012 XXX
%6014:	alloca	 %6013
%6015:	getelementptr	 %3719 XXX XXX
%6016:	load	 %6015
%6017:	bitcast	 %6016
%6018:	getelementptr	 %3719 XXX XXX
%6019:	load	 %6018
%6020:	zext	 %6019
%6021:	mul	 %6020 XXX
%6022:	call	 %6014 %6017 %6021 XXX XXX llvm.memcpy.p0i8.p0i8.i64
%6023:	bitcast	 %6014
%6024:	getelementptr	 %3719 XXX XXX
%6025:	store	 %6023 %6024
%6026:	getelementptr	 %3719 XXX XXX
%6027:	load	 %6026
%6028:	icmp	 %6027 XXX
%6029:	br	 %6028 cond.false1776 cond.true1775

BASIC BLOCK cond.true1775
%6030:	br	 cond.end1779

BASIC BLOCK cond.false1776
%6031:	getelementptr	 %3719 XXX XXX
%6032:	load	 %6031
%6033:	shl	 %6032 XXX
%6034:	store	 %6033 %6031
%6035:	br	 cond.end1779

BASIC BLOCK cond.end1779
%6036:	phi	 XXX XXX
%6037:	icmp	 %6036 XXX
%6038:	br	 %6037 if.then1782 if.end1783

BASIC BLOCK if.then1782
%6039:	br	 return

BASIC BLOCK if.end1783
%6040:	br	 while.cond1743

BASIC BLOCK while.end1784
%6041:	br	 for.cond1785

BASIC BLOCK for.cond1785
%6042:	phi	 %3914 %6083
%6043:	icmp	 %6042 %3913
%6044:	br	 %6043 for.end1813 for.body1788

BASIC BLOCK for.body1788
%6045:	sext	 %6042
%6046:	getelementptr	 %3814 %6045
%6047:	load	 %6046
%6048:	getelementptr	 %3719 XXX XXX
%6049:	load	 %6048
%6050:	add	 %6049 XXX
%6051:	store	 %6050 %6048
%6052:	zext	 %6049
%6053:	getelementptr	 %3719 XXX XXX
%6054:	load	 %6053
%6055:	getelementptr	 %6054 %6052
%6056:	store	 %6047 %6055
%6057:	sext	 %6042
%6058:	getelementptr	 %3813 %6057
%6059:	load	 %6058
%6060:	getelementptr	 %3719 XXX XXX
%6061:	load	 %6060
%6062:	add	 %6061 XXX
%6063:	store	 %6062 %6060
%6064:	zext	 %6061
%6065:	getelementptr	 %3719 XXX XXX
%6066:	load	 %6065
%6067:	getelementptr	 %6066 %6064
%6068:	store	 %6059 %6067
%6069:	sext	 %6042
%6070:	getelementptr	 %3810 %6069
%6071:	bitcast	 %6070
%6072:	load	 %6071
%6073:	getelementptr	 %3719 XXX XXX
%6074:	load	 %6073
%6075:	add	 %6074 XXX
%6076:	store	 %6075 %6073
%6077:	zext	 %6074
%6078:	getelementptr	 %3719 XXX XXX
%6079:	load	 %6078
%6080:	getelementptr	 %6079 %6077
%6081:	store	 %6072 %6080
%6082:	br	 for.inc1811

BASIC BLOCK for.inc1811
%6083:	add	 %6042 XXX
%6084:	br	 for.cond1785

BASIC BLOCK for.end1813
%6085:	zext	 %3914
%6086:	inttoptr	 %6085
%6087:	getelementptr	 %3719 XXX XXX
%6088:	load	 %6087
%6089:	add	 %6088 XXX
%6090:	store	 %6089 %6087
%6091:	zext	 %6088
%6092:	getelementptr	 %3719 XXX XXX
%6093:	load	 %6092
%6094:	getelementptr	 %6093 %6091
%6095:	store	 %6086 %6094
%6096:	zext	 %3913
%6097:	inttoptr	 %6096
%6098:	getelementptr	 %3719 XXX XXX
%6099:	load	 %6098
%6100:	add	 %6099 XXX
%6101:	store	 %6100 %6098
%6102:	zext	 %6099
%6103:	getelementptr	 %3719 XXX XXX
%6104:	load	 %6103
%6105:	getelementptr	 %6104 %6102
%6106:	store	 %6097 %6105
%6107:	getelementptr	 %3719 XXX XXX
%6108:	load	 %6107
%6109:	add	 %6108 XXX
%6110:	store	 %6109 %6107
%6111:	zext	 %6108
%6112:	getelementptr	 %3719 XXX XXX
%6113:	load	 %6112
%6114:	getelementptr	 %6113 %6111
%6115:	store	 XXX %6114
%6116:	getelementptr	 %3719 XXX XXX
%6117:	load	 %6116
%6118:	add	 %6117 XXX
%6119:	store	 %6118 %6116
%6120:	zext	 %6117
%6121:	getelementptr	 %3719 XXX XXX
%6122:	load	 %6121
%6123:	getelementptr	 %6122 %6120
%6124:	store	 XXX %6123
%6125:	br	 do.end1837

BASIC BLOCK do.end1837
%6126:	br	 sw.epilog2314

BASIC BLOCK sw.bb1838
%6127:	br	 do.body1839

BASIC BLOCK do.body1839
%6128:	getelementptr	 %4293 XXX
%6129:	load	 %6128
%6130:	zext	 %6129
%6131:	and	 %6130 XXX
%6132:	getelementptr	 %4293 XXX
%6133:	getelementptr	 %6132 XXX
%6134:	load	 %6133
%6135:	sext	 %6134
%6136:	shl	 %6135 XXX
%6137:	add	 %6131 %6136
%6138:	br	 do.end1849

BASIC BLOCK do.end1849
%6139:	icmp	 %6137 XXX
%6140:	br	 %6139 if.else1867 if.then1852

BASIC BLOCK if.then1852
%6141:	add	 %6137 XXX
%6142:	getelementptr	 %4293 XXX
%6143:	br	 do.body1855

BASIC BLOCK do.body1855
%6144:	br	 do.body1856

BASIC BLOCK do.body1856
%6145:	and	 %6141 XXX
%6146:	trunc	 %6145
%6147:	getelementptr	 %6142 XXX
%6148:	store	 %6146 %6147
%6149:	ashr	 %6141 XXX
%6150:	trunc	 %6149
%6151:	getelementptr	 %6142 XXX
%6152:	store	 %6150 %6151
%6153:	br	 do.end1863

BASIC BLOCK do.end1863
%6154:	getelementptr	 %6142 XXX
%6155:	br	 do.end1866

BASIC BLOCK do.end1866
%6156:	br	 if.end1874

BASIC BLOCK if.else1867
%6157:	icmp	 %6137 XXX
%6158:	br	 %6157 if.end1873 if.then1870

BASIC BLOCK if.then1870
%6159:	getelementptr	 %4293 XXX
%6160:	store	 XXX %6159
%6161:	getelementptr	 %4293 XXX
%6162:	store	 XXX %6161
%6163:	br	 on_failure

BASIC BLOCK if.end1873
%6164:	br	 if.end1874

BASIC BLOCK if.end1874
%6165:	phi	 %6154 %4293
%6166:	br	 sw.epilog2314

BASIC BLOCK sw.bb1875
%6167:	br	 do.body1876

BASIC BLOCK do.body1876
%6168:	getelementptr	 %4293 XXX
%6169:	load	 %6168
%6170:	zext	 %6169
%6171:	and	 %6170 XXX
%6172:	getelementptr	 %4293 XXX
%6173:	getelementptr	 %6172 XXX
%6174:	load	 %6173
%6175:	sext	 %6174
%6176:	shl	 %6175 XXX
%6177:	add	 %6171 %6176
%6178:	br	 do.end1886

BASIC BLOCK do.end1886
%6179:	icmp	 %6177 XXX
%6180:	br	 %6179 if.else1901 if.then1888

BASIC BLOCK if.then1888
%6181:	add	 %6177 XXX
%6182:	br	 do.body1890

BASIC BLOCK do.body1890
%6183:	and	 %6181 XXX
%6184:	trunc	 %6183
%6185:	getelementptr	 %4293 XXX
%6186:	getelementptr	 %6185 XXX
%6187:	store	 %6184 %6186
%6188:	ashr	 %6181 XXX
%6189:	trunc	 %6188
%6190:	getelementptr	 %4293 XXX
%6191:	getelementptr	 %6190 XXX
%6192:	store	 %6189 %6191
%6193:	br	 do.end1900

BASIC BLOCK do.end1900
%6194:	br	 unconditional_jump

BASIC BLOCK if.else1901
%6195:	getelementptr	 %4293 XXX
%6196:	br	 if.end1903

BASIC BLOCK if.end1903
%6197:	br	 sw.epilog2314

BASIC BLOCK sw.bb1904
%6198:	br	 do.body1905

BASIC BLOCK do.body1905
%6199:	br	 do.body1906

BASIC BLOCK do.body1906
%6200:	load	 %4293
%6201:	zext	 %6200
%6202:	and	 %6201 XXX
%6203:	getelementptr	 %4293 XXX
%6204:	load	 %6203
%6205:	sext	 %6204
%6206:	shl	 %6205 XXX
%6207:	add	 %6202 %6206
%6208:	br	 do.end1914

BASIC BLOCK do.end1914
%6209:	getelementptr	 %4293 XXX
%6210:	br	 do.end1917

BASIC BLOCK do.end1917
%6211:	sext	 %6207
%6212:	getelementptr	 %6209 %6211
%6213:	store	 %6212 %3718
%6214:	br	 do.body1920

BASIC BLOCK do.body1920
%6215:	br	 do.body1921

BASIC BLOCK do.body1921
%6216:	load	 %6209
%6217:	zext	 %6216
%6218:	and	 %6217 XXX
%6219:	getelementptr	 %6209 XXX
%6220:	load	 %6219
%6221:	sext	 %6220
%6222:	shl	 %6221 XXX
%6223:	add	 %6218 %6222
%6224:	br	 do.end1929

BASIC BLOCK do.end1929
%6225:	getelementptr	 %6209 XXX
%6226:	br	 do.end1932

BASIC BLOCK do.end1932
%6227:	br	 do.body1933

BASIC BLOCK do.body1933
%6228:	and	 %6223 XXX
%6229:	trunc	 %6228
%6230:	load	 %3718
%6231:	getelementptr	 %6230 XXX
%6232:	store	 %6229 %6231
%6233:	ashr	 %6223 XXX
%6234:	trunc	 %6233
%6235:	load	 %3718
%6236:	getelementptr	 %6235 XXX
%6237:	store	 %6234 %6236
%6238:	br	 do.end1941

BASIC BLOCK do.end1941
%6239:	br	 sw.epilog2314

BASIC BLOCK sw.bb1942
%6240:	icmp	 %3876 XXX
%6241:	br	 %6240 cond.false1945 cond.true1944

BASIC BLOCK cond.true1944
%6242:	br	 cond.end1946

BASIC BLOCK cond.false1945
%6243:	br	 cond.end1946

BASIC BLOCK cond.end1946
%6244:	phi	 %3877 %3875
%6245:	icmp	 %3917 %6244
%6246:	br	 %6245 lor.lhs.false1950 if.then2005

BASIC BLOCK lor.lhs.false1950
%6247:	icmp	 %3874 XXX
%6248:	br	 %6247 if.then2005 lor.lhs.false1952

BASIC BLOCK lor.lhs.false1952
%6249:	icmp	 %3917 %3881
%6250:	br	 %6249 lor.lhs.false1955 if.then2005

BASIC BLOCK lor.lhs.false1955
%6251:	getelementptr	 %3917 XXX
%6252:	icmp	 %6251 %3879
%6253:	br	 %6252 cond.false1961 cond.true1959

BASIC BLOCK cond.true1959
%6254:	load	 %3875
%6255:	sext	 %6254
%6256:	br	 cond.end1974

BASIC BLOCK cond.false1961
%6257:	getelementptr	 %3917 XXX
%6258:	getelementptr	 %3875 XXX
%6259:	icmp	 %6257 %6258
%6260:	br	 %6259 cond.false1969 cond.true1966

BASIC BLOCK cond.true1966
%6261:	getelementptr	 %3879 XXX
%6262:	load	 %6261
%6263:	sext	 %6262
%6264:	br	 cond.end1972

BASIC BLOCK cond.false1969
%6265:	getelementptr	 %3917 XXX
%6266:	load	 %6265
%6267:	sext	 %6266
%6268:	br	 cond.end1972

BASIC BLOCK cond.end1972
%6269:	phi	 %6263 %6267
%6270:	br	 cond.end1974

BASIC BLOCK cond.end1974
%6271:	phi	 %6255 %6269
%6272:	sext	 %6271
%6273:	getelementptr	 re_syntax_table XXX %6272
%6274:	load	 %6273
%6275:	sext	 %6274
%6276:	icmp	 %6275 XXX
%6277:	zext	 %6276
%6278:	icmp	 %3917 %3879
%6279:	br	 %6278 cond.false1985 cond.true1983

BASIC BLOCK cond.true1983
%6280:	load	 %3875
%6281:	sext	 %6280
%6282:	br	 cond.end1996

BASIC BLOCK cond.false1985
%6283:	getelementptr	 %3875 XXX
%6284:	icmp	 %3917 %6283
%6285:	br	 %6284 cond.false1992 cond.true1989

BASIC BLOCK cond.true1989
%6286:	getelementptr	 %3879 XXX
%6287:	load	 %6286
%6288:	sext	 %6287
%6289:	br	 cond.end1994

BASIC BLOCK cond.false1992
%6290:	load	 %3917
%6291:	sext	 %6290
%6292:	br	 cond.end1994

BASIC BLOCK cond.end1994
%6293:	phi	 %6288 %6291
%6294:	br	 cond.end1996

BASIC BLOCK cond.end1996
%6295:	phi	 %6281 %6293
%6296:	sext	 %6295
%6297:	getelementptr	 re_syntax_table XXX %6296
%6298:	load	 %6297
%6299:	sext	 %6298
%6300:	icmp	 %6299 XXX
%6301:	zext	 %6300
%6302:	icmp	 %6277 %6301
%6303:	br	 %6302 if.end2006 if.then2005

BASIC BLOCK if.then2005
%6304:	br	 sw.epilog2314

BASIC BLOCK if.end2006
%6305:	br	 fail

BASIC BLOCK sw.bb2007
%6306:	icmp	 %3876 XXX
%6307:	br	 %6306 cond.false2010 cond.true2009

BASIC BLOCK cond.true2009
%6308:	br	 cond.end2011

BASIC BLOCK cond.false2010
%6309:	br	 cond.end2011

BASIC BLOCK cond.end2011
%6310:	phi	 %3877 %3875
%6311:	icmp	 %3917 %6310
%6312:	br	 %6311 lor.lhs.false2015 if.then2070

BASIC BLOCK lor.lhs.false2015
%6313:	icmp	 %3874 XXX
%6314:	br	 %6313 if.then2070 lor.lhs.false2017

BASIC BLOCK lor.lhs.false2017
%6315:	icmp	 %3917 %3881
%6316:	br	 %6315 lor.lhs.false2020 if.then2070

BASIC BLOCK lor.lhs.false2020
%6317:	getelementptr	 %3917 XXX
%6318:	icmp	 %6317 %3879
%6319:	br	 %6318 cond.false2026 cond.true2024

BASIC BLOCK cond.true2024
%6320:	load	 %3875
%6321:	sext	 %6320
%6322:	br	 cond.end2039

BASIC BLOCK cond.false2026
%6323:	getelementptr	 %3917 XXX
%6324:	getelementptr	 %3875 XXX
%6325:	icmp	 %6323 %6324
%6326:	br	 %6325 cond.false2034 cond.true2031

BASIC BLOCK cond.true2031
%6327:	getelementptr	 %3879 XXX
%6328:	load	 %6327
%6329:	sext	 %6328
%6330:	br	 cond.end2037

BASIC BLOCK cond.false2034
%6331:	getelementptr	 %3917 XXX
%6332:	load	 %6331
%6333:	sext	 %6332
%6334:	br	 cond.end2037

BASIC BLOCK cond.end2037
%6335:	phi	 %6329 %6333
%6336:	br	 cond.end2039

BASIC BLOCK cond.end2039
%6337:	phi	 %6321 %6335
%6338:	sext	 %6337
%6339:	getelementptr	 re_syntax_table XXX %6338
%6340:	load	 %6339
%6341:	sext	 %6340
%6342:	icmp	 %6341 XXX
%6343:	zext	 %6342
%6344:	icmp	 %3917 %3879
%6345:	br	 %6344 cond.false2050 cond.true2048

BASIC BLOCK cond.true2048
%6346:	load	 %3875
%6347:	sext	 %6346
%6348:	br	 cond.end2061

BASIC BLOCK cond.false2050
%6349:	getelementptr	 %3875 XXX
%6350:	icmp	 %3917 %6349
%6351:	br	 %6350 cond.false2057 cond.true2054

BASIC BLOCK cond.true2054
%6352:	getelementptr	 %3879 XXX
%6353:	load	 %6352
%6354:	sext	 %6353
%6355:	br	 cond.end2059

BASIC BLOCK cond.false2057
%6356:	load	 %3917
%6357:	sext	 %6356
%6358:	br	 cond.end2059

BASIC BLOCK cond.end2059
%6359:	phi	 %6354 %6357
%6360:	br	 cond.end2061

BASIC BLOCK cond.end2061
%6361:	phi	 %6347 %6359
%6362:	sext	 %6361
%6363:	getelementptr	 re_syntax_table XXX %6362
%6364:	load	 %6363
%6365:	sext	 %6364
%6366:	icmp	 %6365 XXX
%6367:	zext	 %6366
%6368:	icmp	 %6343 %6367
%6369:	br	 %6368 if.end2071 if.then2070

BASIC BLOCK if.then2070
%6370:	br	 fail

BASIC BLOCK if.end2071
%6371:	br	 sw.epilog2314

BASIC BLOCK sw.bb2072
%6372:	icmp	 %3917 %3879
%6373:	br	 %6372 cond.false2077 cond.true2075

BASIC BLOCK cond.true2075
%6374:	load	 %3875
%6375:	sext	 %6374
%6376:	br	 cond.end2088

BASIC BLOCK cond.false2077
%6377:	getelementptr	 %3875 XXX
%6378:	icmp	 %3917 %6377
%6379:	br	 %6378 cond.false2084 cond.true2081

BASIC BLOCK cond.true2081
%6380:	getelementptr	 %3879 XXX
%6381:	load	 %6380
%6382:	sext	 %6381
%6383:	br	 cond.end2086

BASIC BLOCK cond.false2084
%6384:	load	 %3917
%6385:	sext	 %6384
%6386:	br	 cond.end2086

BASIC BLOCK cond.end2086
%6387:	phi	 %6382 %6385
%6388:	br	 cond.end2088

BASIC BLOCK cond.end2088
%6389:	phi	 %6375 %6387
%6390:	sext	 %6389
%6391:	getelementptr	 re_syntax_table XXX %6390
%6392:	load	 %6391
%6393:	sext	 %6392
%6394:	icmp	 %6393 XXX
%6395:	br	 %6394 if.end2132 land.lhs.true2095

BASIC BLOCK land.lhs.true2095
%6396:	icmp	 %3876 XXX
%6397:	br	 %6396 cond.false2098 cond.true2097

BASIC BLOCK cond.true2097
%6398:	br	 cond.end2099

BASIC BLOCK cond.false2098
%6399:	br	 cond.end2099

BASIC BLOCK cond.end2099
%6400:	phi	 %3877 %3875
%6401:	icmp	 %3917 %6400
%6402:	br	 %6401 lor.lhs.false2103 if.then2131

BASIC BLOCK lor.lhs.false2103
%6403:	icmp	 %3874 XXX
%6404:	br	 %6403 if.then2131 lor.lhs.false2105

BASIC BLOCK lor.lhs.false2105
%6405:	getelementptr	 %3917 XXX
%6406:	icmp	 %6405 %3879
%6407:	br	 %6406 cond.false2111 cond.true2109

BASIC BLOCK cond.true2109
%6408:	load	 %3875
%6409:	sext	 %6408
%6410:	br	 cond.end2124

BASIC BLOCK cond.false2111
%6411:	getelementptr	 %3917 XXX
%6412:	getelementptr	 %3875 XXX
%6413:	icmp	 %6411 %6412
%6414:	br	 %6413 cond.false2119 cond.true2116

BASIC BLOCK cond.true2116
%6415:	getelementptr	 %3879 XXX
%6416:	load	 %6415
%6417:	sext	 %6416
%6418:	br	 cond.end2122

BASIC BLOCK cond.false2119
%6419:	getelementptr	 %3917 XXX
%6420:	load	 %6419
%6421:	sext	 %6420
%6422:	br	 cond.end2122

BASIC BLOCK cond.end2122
%6423:	phi	 %6417 %6421
%6424:	br	 cond.end2124

BASIC BLOCK cond.end2124
%6425:	phi	 %6409 %6423
%6426:	sext	 %6425
%6427:	getelementptr	 re_syntax_table XXX %6426
%6428:	load	 %6427
%6429:	sext	 %6428
%6430:	icmp	 %6429 XXX
%6431:	br	 %6430 if.then2131 if.end2132

BASIC BLOCK if.then2131
%6432:	br	 sw.epilog2314

BASIC BLOCK if.end2132
%6433:	br	 fail

BASIC BLOCK sw.bb2133
%6434:	icmp	 %3876 XXX
%6435:	br	 %6434 cond.false2136 cond.true2135

BASIC BLOCK cond.true2135
%6436:	br	 cond.end2137

BASIC BLOCK cond.false2136
%6437:	br	 cond.end2137

BASIC BLOCK cond.end2137
%6438:	phi	 %3877 %3875
%6439:	icmp	 %3917 %6438
%6440:	br	 %6439 lor.lhs.false2141 if.end2196

BASIC BLOCK lor.lhs.false2141
%6441:	icmp	 %3874 XXX
%6442:	br	 %6441 if.end2196 land.lhs.true2143

BASIC BLOCK land.lhs.true2143
%6443:	getelementptr	 %3917 XXX
%6444:	icmp	 %6443 %3879
%6445:	br	 %6444 cond.false2149 cond.true2147

BASIC BLOCK cond.true2147
%6446:	load	 %3875
%6447:	sext	 %6446
%6448:	br	 cond.end2162

BASIC BLOCK cond.false2149
%6449:	getelementptr	 %3917 XXX
%6450:	getelementptr	 %3875 XXX
%6451:	icmp	 %6449 %6450
%6452:	br	 %6451 cond.false2157 cond.true2154

BASIC BLOCK cond.true2154
%6453:	getelementptr	 %3879 XXX
%6454:	load	 %6453
%6455:	sext	 %6454
%6456:	br	 cond.end2160

BASIC BLOCK cond.false2157
%6457:	getelementptr	 %3917 XXX
%6458:	load	 %6457
%6459:	sext	 %6458
%6460:	br	 cond.end2160

BASIC BLOCK cond.end2160
%6461:	phi	 %6455 %6459
%6462:	br	 cond.end2162

BASIC BLOCK cond.end2162
%6463:	phi	 %6447 %6461
%6464:	sext	 %6463
%6465:	getelementptr	 re_syntax_table XXX %6464
%6466:	load	 %6465
%6467:	sext	 %6466
%6468:	icmp	 %6467 XXX
%6469:	br	 %6468 if.end2196 land.lhs.true2169

BASIC BLOCK land.lhs.true2169
%6470:	icmp	 %3917 %3879
%6471:	br	 %6470 cond.false2174 cond.true2172

BASIC BLOCK cond.true2172
%6472:	load	 %3875
%6473:	sext	 %6472
%6474:	br	 cond.end2185

BASIC BLOCK cond.false2174
%6475:	getelementptr	 %3875 XXX
%6476:	icmp	 %3917 %6475
%6477:	br	 %6476 cond.false2181 cond.true2178

BASIC BLOCK cond.true2178
%6478:	getelementptr	 %3879 XXX
%6479:	load	 %6478
%6480:	sext	 %6479
%6481:	br	 cond.end2183

BASIC BLOCK cond.false2181
%6482:	load	 %3917
%6483:	sext	 %6482
%6484:	br	 cond.end2183

BASIC BLOCK cond.end2183
%6485:	phi	 %6480 %6483
%6486:	br	 cond.end2185

BASIC BLOCK cond.end2185
%6487:	phi	 %6473 %6485
%6488:	sext	 %6487
%6489:	getelementptr	 re_syntax_table XXX %6488
%6490:	load	 %6489
%6491:	sext	 %6490
%6492:	icmp	 %6491 XXX
%6493:	br	 %6492 if.then2195 lor.lhs.false2192

BASIC BLOCK lor.lhs.false2192
%6494:	icmp	 %3917 %3881
%6495:	br	 %6494 if.end2196 if.then2195

BASIC BLOCK if.then2195
%6496:	br	 sw.epilog2314

BASIC BLOCK if.end2196
%6497:	br	 fail

BASIC BLOCK sw.bb2197
%6498:	br	 while.cond2198

BASIC BLOCK while.cond2198
%6499:	phi	 %3916 %3893
%6500:	phi	 %3917 %3875
%6501:	icmp	 %6500 %6499
%6502:	br	 %6501 while.end2206 while.body2201

BASIC BLOCK while.body2201
%6503:	icmp	 %6499 %3893
%6504:	br	 %6503 if.end2205 if.then2204

BASIC BLOCK if.then2204
%6505:	br	 fail

BASIC BLOCK if.end2205
%6506:	br	 while.cond2198

BASIC BLOCK while.end2206
%6507:	icmp	 %6500 %3879
%6508:	br	 %6507 cond.false2211 cond.true2209

BASIC BLOCK cond.true2209
%6509:	load	 %3875
%6510:	sext	 %6509
%6511:	br	 cond.end2222

BASIC BLOCK cond.false2211
%6512:	getelementptr	 %3875 XXX
%6513:	icmp	 %6500 %6512
%6514:	br	 %6513 cond.false2218 cond.true2215

BASIC BLOCK cond.true2215
%6515:	getelementptr	 %3879 XXX
%6516:	load	 %6515
%6517:	sext	 %6516
%6518:	br	 cond.end2220

BASIC BLOCK cond.false2218
%6519:	load	 %6500
%6520:	sext	 %6519
%6521:	br	 cond.end2220

BASIC BLOCK cond.end2220
%6522:	phi	 %6517 %6520
%6523:	br	 cond.end2222

BASIC BLOCK cond.end2222
%6524:	phi	 %6510 %6522
%6525:	sext	 %6524
%6526:	getelementptr	 re_syntax_table XXX %6525
%6527:	load	 %6526
%6528:	sext	 %6527
%6529:	icmp	 %6528 XXX
%6530:	br	 %6529 if.then2229 if.end2230

BASIC BLOCK if.then2229
%6531:	br	 fail

BASIC BLOCK if.end2230
%6532:	br	 do.body2231

BASIC BLOCK do.body2231
%6533:	br	 for.cond2233

BASIC BLOCK for.cond2233
%6534:	phi	 %3914 %6554
%6535:	icmp	 %6534 %3913
%6536:	br	 %6535 for.end2251 for.body2236

BASIC BLOCK for.body2236
%6537:	zext	 %6534
%6538:	getelementptr	 %3810 %6537
%6539:	bitcast	 %6538
%6540:	bitcast	 %6539
%6541:	load	 %6540
%6542:	and	 %6541 XXX
%6543:	or	 %6542 XXX
%6544:	store	 %6543 %6540
%6545:	zext	 %6534
%6546:	getelementptr	 %3810 %6545
%6547:	bitcast	 %6546
%6548:	bitcast	 %6547
%6549:	load	 %6548
%6550:	and	 %6549 XXX
%6551:	or	 %6550 XXX
%6552:	store	 %6551 %6548
%6553:	br	 for.inc2249

BASIC BLOCK for.inc2249
%6554:	add	 %6534 XXX
%6555:	br	 for.cond2233

BASIC BLOCK for.end2251
%6556:	br	 do.end2253

BASIC BLOCK do.end2253
%6557:	getelementptr	 %6500 XXX
%6558:	br	 sw.epilog2314

BASIC BLOCK sw.bb2255
%6559:	br	 while.cond2256

BASIC BLOCK while.cond2256
%6560:	phi	 %3916 %3893
%6561:	phi	 %3917 %3875
%6562:	icmp	 %6561 %6560
%6563:	br	 %6562 while.end2264 while.body2259

BASIC BLOCK while.body2259
%6564:	icmp	 %6560 %3893
%6565:	br	 %6564 if.end2263 if.then2262

BASIC BLOCK if.then2262
%6566:	br	 fail

BASIC BLOCK if.end2263
%6567:	br	 while.cond2256

BASIC BLOCK while.end2264
%6568:	icmp	 %6561 %3879
%6569:	br	 %6568 cond.false2269 cond.true2267

BASIC BLOCK cond.true2267
%6570:	load	 %3875
%6571:	sext	 %6570
%6572:	br	 cond.end2280

BASIC BLOCK cond.false2269
%6573:	getelementptr	 %3875 XXX
%6574:	icmp	 %6561 %6573
%6575:	br	 %6574 cond.false2276 cond.true2273

BASIC BLOCK cond.true2273
%6576:	getelementptr	 %3879 XXX
%6577:	load	 %6576
%6578:	sext	 %6577
%6579:	br	 cond.end2278

BASIC BLOCK cond.false2276
%6580:	load	 %6561
%6581:	sext	 %6580
%6582:	br	 cond.end2278

BASIC BLOCK cond.end2278
%6583:	phi	 %6578 %6581
%6584:	br	 cond.end2280

BASIC BLOCK cond.end2280
%6585:	phi	 %6571 %6583
%6586:	sext	 %6585
%6587:	getelementptr	 re_syntax_table XXX %6586
%6588:	load	 %6587
%6589:	sext	 %6588
%6590:	icmp	 %6589 XXX
%6591:	br	 %6590 if.end2288 if.then2287

BASIC BLOCK if.then2287
%6592:	br	 fail

BASIC BLOCK if.end2288
%6593:	br	 do.body2289

BASIC BLOCK do.body2289
%6594:	br	 for.cond2291

BASIC BLOCK for.cond2291
%6595:	phi	 %3914 %6615
%6596:	icmp	 %6595 %3913
%6597:	br	 %6596 for.end2309 for.body2294

BASIC BLOCK for.body2294
%6598:	zext	 %6595
%6599:	getelementptr	 %3810 %6598
%6600:	bitcast	 %6599
%6601:	bitcast	 %6600
%6602:	load	 %6601
%6603:	and	 %6602 XXX
%6604:	or	 %6603 XXX
%6605:	store	 %6604 %6601
%6606:	zext	 %6595
%6607:	getelementptr	 %3810 %6606
%6608:	bitcast	 %6607
%6609:	bitcast	 %6608
%6610:	load	 %6609
%6611:	and	 %6610 XXX
%6612:	or	 %6611 XXX
%6613:	store	 %6612 %6609
%6614:	br	 for.inc2307

BASIC BLOCK for.inc2307
%6615:	add	 %6595 XXX
%6616:	br	 for.cond2291

BASIC BLOCK for.end2309
%6617:	br	 do.end2311

BASIC BLOCK do.end2311
%6618:	getelementptr	 %6561 XXX
%6619:	br	 sw.epilog2314

BASIC BLOCK sw.default2313
%6620:	call	 abort
%6621:	unreachable	

BASIC BLOCK sw.epilog2314
%6622:	phi	 %3913 %3913 %3913 %3913 %3913 %3913 %3913 %3913 %3913 %3913 %5447 %3913 %3913 %3913 %3913 %3913 %3913 %3913 %3913 %3913 %4726 %4635 %3913 %3913 %3913 %3913
%6623:	phi	 %3914 %3914 %3914 %3914 %3914 %3914 %3914 %3914 %3914 %3914 %5448 %3914 %3914 %3914 %3914 %3914 %3914 %3914 %3914 %3914 %4727 %4641 %3914 %3914 %3914 %3914
%6624:	phi	 %4293 %4293 %4293 %4293 %4293 %4293 %6225 %5842 %6195 %6165 %5403 %4293 %5246 %4293 %4293 %4293 %4293 %4293 %4293 %5033 %5031 %4642 %4523 %4293 %4362 %4293
%6625:	phi	 %6560 %6499 %3916 %3916 %3916 %3916 %3916 %3916 %3916 %3916 %3916 %3916 %3916 %3916 %3916 %3916 %3916 %3916 %3916 %5093 %3916 %3916 %4473 %4392 %4363 %3916
%6626:	phi	 %6618 %6557 %3917 %3917 %3917 %3917 %3917 %3917 %3917 %3917 %3917 %3917 %3917 %3917 %3917 %3917 %3917 %3917 %3917 %5094 %3917 %3917 %4552 %4464 %4364 %3917
%6627:	br	 for.cond109

BASIC BLOCK fail
%6628:	phi	 %3972 %6628 %6628 %3911 %3911 %3911 %3911 %3911 %3911 %3911 %3911 %3911 %3911 %3911 %3911 %3911 %3911 %3911 %3911 %3911 %3911 %3911 %3911 %3911 %3911 %3911 %3911
%6629:	phi	 %3973 %6629 %6629 %3912 %3912 %3912 %3912 %3912 %3912 %3912 %3912 %3912 %3912 %3912 %3912 %3912 %3912 %3912 %3912 %3912 %3912 %3912 %3912 %3912 %3912 %3912 %3912
%6630:	phi	 %3916 %6630 %6630 %6560 %6560 %6499 %6499 %3916 %3916 %3916 %3916 %3916 %3916 %3916 %3916 %3916 %5117 %5117 %3916 %4473 %4473 %4392 %4392 %4309 %4309 %4340 %4340
%6631:	phi	 %3917 %6648 %6648 %6561 %6561 %6500 %6500 %3917 %3917 %3917 %3917 %3917 %3917 %3917 %3917 %3917 %5118 %5118 %3917 %4474 %4474 %4393 %4393 %4310 %4317 %4341 %4348
%6632:	getelementptr	 %3719 XXX XXX
%6633:	load	 %6632
%6634:	icmp	 %6633 XXX
%6635:	br	 %6634 if.then2318 if.else2424

BASIC BLOCK if.then2318
%6636:	getelementptr	 %3719 XXX XXX
%6637:	load	 %6636
%6638:	add	 %6637 XXX
%6639:	store	 %6638 %6636
%6640:	zext	 %6638
%6641:	getelementptr	 %3719 XXX XXX
%6642:	load	 %6641
%6643:	getelementptr	 %6642 %6640
%6644:	load	 %6643
%6645:	icmp	 %6644 XXX
%6646:	br	 %6645 if.end2329 if.then2328

BASIC BLOCK if.then2328
%6647:	br	 if.end2329

BASIC BLOCK if.end2329
%6648:	phi	 %6644 %6631
%6649:	getelementptr	 %3719 XXX XXX
%6650:	load	 %6649
%6651:	add	 %6650 XXX
%6652:	store	 %6651 %6649
%6653:	zext	 %6651
%6654:	getelementptr	 %3719 XXX XXX
%6655:	load	 %6654
%6656:	getelementptr	 %6655 %6653
%6657:	load	 %6656
%6658:	getelementptr	 %3719 XXX XXX
%6659:	load	 %6658
%6660:	add	 %6659 XXX
%6661:	store	 %6660 %6658
%6662:	zext	 %6660
%6663:	getelementptr	 %3719 XXX XXX
%6664:	load	 %6663
%6665:	getelementptr	 %6664 %6662
%6666:	load	 %6665
%6667:	ptrtoint	 %6666
%6668:	getelementptr	 %3719 XXX XXX
%6669:	load	 %6668
%6670:	add	 %6669 XXX
%6671:	store	 %6670 %6668
%6672:	zext	 %6670
%6673:	getelementptr	 %3719 XXX XXX
%6674:	load	 %6673
%6675:	getelementptr	 %6674 %6672
%6676:	load	 %6675
%6677:	ptrtoint	 %6676
%6678:	br	 for.cond2345

BASIC BLOCK for.cond2345
%6679:	phi	 %6667 %6720
%6680:	icmp	 %6679 %6677
%6681:	br	 %6680 for.end2373 for.body2348

BASIC BLOCK for.body2348
%6682:	getelementptr	 %3719 XXX XXX
%6683:	load	 %6682
%6684:	add	 %6683 XXX
%6685:	store	 %6684 %6682
%6686:	zext	 %6684
%6687:	getelementptr	 %3719 XXX XXX
%6688:	load	 %6687
%6689:	getelementptr	 %6688 %6686
%6690:	load	 %6689
%6691:	sext	 %6679
%6692:	getelementptr	 %3810 %6691
%6693:	bitcast	 %6692
%6694:	store	 %6690 %6693
%6695:	getelementptr	 %3719 XXX XXX
%6696:	load	 %6695
%6697:	add	 %6696 XXX
%6698:	store	 %6697 %6695
%6699:	zext	 %6697
%6700:	getelementptr	 %3719 XXX XXX
%6701:	load	 %6700
%6702:	getelementptr	 %6701 %6699
%6703:	load	 %6702
%6704:	sext	 %6679
%6705:	getelementptr	 %3813 %6704
%6706:	store	 %6703 %6705
%6707:	getelementptr	 %3719 XXX XXX
%6708:	load	 %6707
%6709:	add	 %6708 XXX
%6710:	store	 %6709 %6707
%6711:	zext	 %6709
%6712:	getelementptr	 %3719 XXX XXX
%6713:	load	 %6712
%6714:	getelementptr	 %6713 %6711
%6715:	load	 %6714
%6716:	sext	 %6679
%6717:	getelementptr	 %3814 %6716
%6718:	store	 %6715 %6717
%6719:	br	 for.inc2371

BASIC BLOCK for.inc2371
%6720:	add	 %6679 XXX
%6721:	br	 for.cond2345

BASIC BLOCK for.end2373
%6722:	icmp	 %6657 XXX
%6723:	br	 %6722 if.then2375 if.end2376

BASIC BLOCK if.then2375
%6724:	br	 fail

BASIC BLOCK if.end2376
%6725:	icmp	 %6657 %3724
%6726:	br	 %6725 if.end2416 if.then2379

BASIC BLOCK if.then2379
%6727:	load	 %6657
%6728:	zext	 %6727
%6729:	switch	 %6728 sw.default2414 XXX sw.bb2382 XXX sw.bb2383 XXX sw.bb2383 XXX sw.bb2383

BASIC BLOCK sw.bb2382
%6730:	br	 sw.bb2383

BASIC BLOCK sw.bb2383
%6731:	phi	 XXX XXX XXX XXX
%6732:	getelementptr	 %6657 XXX
%6733:	store	 %6732 %3718
%6734:	br	 do.body2385

BASIC BLOCK do.body2385
%6735:	br	 do.body2386

BASIC BLOCK do.body2386
%6736:	load	 %3718
%6737:	load	 %6736
%6738:	zext	 %6737
%6739:	and	 %6738 XXX
%6740:	load	 %3718
%6741:	getelementptr	 %6740 XXX
%6742:	load	 %6741
%6743:	sext	 %6742
%6744:	shl	 %6743 XXX
%6745:	add	 %6739 %6744
%6746:	br	 do.end2394

BASIC BLOCK do.end2394
%6747:	load	 %3718
%6748:	getelementptr	 %6747 XXX
%6749:	store	 %6748 %3718
%6750:	br	 do.end2397

BASIC BLOCK do.end2397
%6751:	load	 %3718
%6752:	sext	 %6745
%6753:	getelementptr	 %6751 %6752
%6754:	store	 %6753 %3718
%6755:	sext	 %6731
%6756:	icmp	 %6755 XXX
%6757:	br	 %6756 lor.lhs.false2406 land.lhs.true2402

BASIC BLOCK land.lhs.true2402
%6758:	load	 %3718
%6759:	load	 %6758
%6760:	zext	 %6759
%6761:	icmp	 %6760 XXX
%6762:	br	 %6761 lor.lhs.false2406 if.then2412

BASIC BLOCK lor.lhs.false2406
%6763:	icmp	 %6731 XXX
%6764:	br	 %6763 land.lhs.true2408 if.end2413

BASIC BLOCK land.lhs.true2408
%6765:	load	 %3718
%6766:	load	 %6765
%6767:	zext	 %6766
%6768:	icmp	 %6767 XXX
%6769:	br	 %6768 if.end2413 if.then2412

BASIC BLOCK if.then2412
%6770:	br	 fail

BASIC BLOCK if.end2413
%6771:	br	 sw.epilog2415

BASIC BLOCK sw.default2414
%6772:	br	 sw.epilog2415

BASIC BLOCK sw.epilog2415
%6773:	br	 if.end2416

BASIC BLOCK if.end2416
%6774:	icmp	 %6648 %3877
%6775:	br	 %6774 if.end2423 land.lhs.true2419

BASIC BLOCK land.lhs.true2419
%6776:	icmp	 %6648 %3879
%6777:	br	 %6776 if.end2423 if.then2422

BASIC BLOCK if.then2422
%6778:	br	 if.end2423

BASIC BLOCK if.end2423
%6779:	phi	 %3894 %6630 %6630
%6780:	br	 if.end2425

BASIC BLOCK if.else2424
%6781:	br	 for.end2426

BASIC BLOCK if.end2425
%6782:	br	 for.cond109

BASIC BLOCK for.end2426
%6783:	icmp	 %6629 XXX
%6784:	br	 %6783 if.end2429 if.then2428

BASIC BLOCK if.then2428
%6785:	br	 restore_best_regs

BASIC BLOCK if.end2429
%6786:	br	 return

BASIC BLOCK return
%6787:	phi	 XXX XXX %4291 XXX XXX XXX XXX XXX XXX XXX XXX XXX
%6788:	ret	 %6787

FUNCTION re_match

BASIC BLOCK entry
%6789:	call	 bufp XXX XXX string size pos regs size re_match_2
%6790:	ret	 %6789

FUNCTION regex_compile

BASIC BLOCK entry
%6791:	alloca	 XXX
%6792:	alloca	 XXX
%6793:	alloca	 XXX
%6794:	store	 pattern %6792
%6795:	sext	 size
%6796:	getelementptr	 pattern %6795
%6797:	getelementptr	 bufp XXX XXX
%6798:	load	 %6797
%6799:	call	 XXX malloc
%6800:	bitcast	 %6799
%6801:	getelementptr	 %6791 XXX XXX
%6802:	store	 %6800 %6801
%6803:	getelementptr	 %6791 XXX XXX
%6804:	load	 %6803
%6805:	icmp	 %6804 XXX
%6806:	br	 %6805 if.end if.then

BASIC BLOCK if.then
%6807:	br	 return

BASIC BLOCK if.end
%6808:	getelementptr	 %6791 XXX XXX
%6809:	store	 XXX %6808
%6810:	getelementptr	 %6791 XXX XXX
%6811:	store	 XXX %6810
%6812:	getelementptr	 bufp XXX XXX
%6813:	store	 syntax %6812
%6814:	getelementptr	 bufp XXX XXX
%6815:	load	 %6814
%6816:	and	 %6815 XXX
%6817:	store	 %6816 %6814
%6818:	getelementptr	 bufp XXX XXX
%6819:	load	 %6818
%6820:	and	 %6819 XXX
%6821:	store	 %6820 %6818
%6822:	getelementptr	 bufp XXX XXX
%6823:	load	 %6822
%6824:	and	 %6823 XXX
%6825:	store	 %6824 %6822
%6826:	getelementptr	 bufp XXX XXX
%6827:	store	 XXX %6826
%6828:	getelementptr	 bufp XXX XXX
%6829:	store	 XXX %6828
%6830:	call	 init_syntax_once
%6831:	getelementptr	 bufp XXX XXX
%6832:	load	 %6831
%6833:	icmp	 %6832 XXX
%6834:	br	 %6833 if.end23 if.then10

BASIC BLOCK if.then10
%6835:	getelementptr	 bufp XXX XXX
%6836:	load	 %6835
%6837:	icmp	 %6836 XXX
%6838:	br	 %6837 if.else if.then11

BASIC BLOCK if.then11
%6839:	getelementptr	 bufp XXX XXX
%6840:	load	 %6839
%6841:	call	 %6840 XXX realloc
%6842:	getelementptr	 bufp XXX XXX
%6843:	store	 %6841 %6842
%6844:	br	 if.end17

BASIC BLOCK if.else
%6845:	call	 XXX malloc
%6846:	getelementptr	 bufp XXX XXX
%6847:	store	 %6845 %6846
%6848:	br	 if.end17

BASIC BLOCK if.end17
%6849:	getelementptr	 bufp XXX XXX
%6850:	load	 %6849
%6851:	icmp	 %6850 XXX
%6852:	br	 %6851 if.then20 if.end21

BASIC BLOCK if.then20
%6853:	br	 return

BASIC BLOCK if.end21
%6854:	getelementptr	 bufp XXX XXX
%6855:	store	 XXX %6854
%6856:	br	 if.end23

BASIC BLOCK if.end23
%6857:	getelementptr	 bufp XXX XXX
%6858:	load	 %6857
%6859:	br	 while.cond

BASIC BLOCK while.cond
%6860:	phi	 XXX %11439
%6861:	phi	 XXX %11440
%6862:	phi	 %6858 %11441
%6863:	phi	 XXX %11442
%6864:	phi	 XXX %11443
%6865:	phi	 %6858 %11444
%6866:	load	 %6792
%6867:	icmp	 %6866 %6796
%6868:	br	 %6867 while.end3581 while.body

BASIC BLOCK while.body
%6869:	br	 do.body

BASIC BLOCK do.body
%6870:	load	 %6792
%6871:	icmp	 %6870 %6796
%6872:	br	 %6871 if.end28 if.then27

BASIC BLOCK if.then27
%6873:	br	 return

BASIC BLOCK if.end28
%6874:	load	 %6792
%6875:	getelementptr	 %6874 XXX
%6876:	store	 %6875 %6792
%6877:	load	 %6874
%6878:	icmp	 %6798 XXX
%6879:	br	 %6878 if.end31 if.then30

BASIC BLOCK if.then30
%6880:	zext	 %6877
%6881:	getelementptr	 %6798 %6880
%6882:	load	 %6881
%6883:	br	 if.end31

BASIC BLOCK if.end31
%6884:	phi	 %6882 %6877
%6885:	br	 do.end

BASIC BLOCK do.end
%6886:	zext	 %6884
%6887:	switch	 %6886 sw.default3351 XXX sw.bb XXX sw.bb115 XXX sw.bb207 XXX sw.bb207 XXX sw.bb215 XXX sw.bb616 XXX sw.bb696 XXX sw.bb1538 XXX sw.bb1543 XXX sw.bb1548 XXX sw.bb1553 XXX sw.bb1558 XXX sw.bb1566

BASIC BLOCK sw.bb
%6888:	load	 %6792
%6889:	getelementptr	 pattern XXX
%6890:	icmp	 %6888 %6889
%6891:	br	 %6890 lor.lhs.false if.then40

BASIC BLOCK lor.lhs.false
%6892:	and	 syntax XXX
%6893:	icmp	 %6892 XXX
%6894:	br	 %6893 lor.lhs.false36 if.then40

BASIC BLOCK lor.lhs.false36
%6895:	load	 %6792
%6896:	call	 pattern %6895 syntax at_begline_loc_p
%6897:	sext	 %6896
%6898:	icmp	 %6897 XXX
%6899:	br	 %6898 if.else113 if.then40

BASIC BLOCK if.then40
%6900:	br	 do.body41

BASIC BLOCK do.body41
%6901:	br	 while.cond42

BASIC BLOCK while.cond42
%6902:	phi	 %6861 %6995
%6903:	phi	 %6862 %6996
%6904:	phi	 %6863 %6997
%6905:	phi	 %6864 %6998
%6906:	phi	 %6865 %6999
%6907:	getelementptr	 bufp XXX XXX
%6908:	load	 %6907
%6909:	ptrtoint	 %6906
%6910:	ptrtoint	 %6908
%6911:	sub	 %6909 %6910
%6912:	add	 %6911 XXX
%6913:	getelementptr	 bufp XXX XXX
%6914:	load	 %6913
%6915:	icmp	 %6912 %6914
%6916:	br	 %6915 while.end while.body47

BASIC BLOCK while.body47
%6917:	br	 do.body48

BASIC BLOCK do.body48
%6918:	getelementptr	 bufp XXX XXX
%6919:	load	 %6918
%6920:	getelementptr	 bufp XXX XXX
%6921:	load	 %6920
%6922:	icmp	 %6921 XXX
%6923:	br	 %6922 if.end54 if.then53

BASIC BLOCK if.then53
%6924:	br	 return

BASIC BLOCK if.end54
%6925:	getelementptr	 bufp XXX XXX
%6926:	load	 %6925
%6927:	shl	 %6926 XXX
%6928:	store	 %6927 %6925
%6929:	getelementptr	 bufp XXX XXX
%6930:	load	 %6929
%6931:	icmp	 %6930 XXX
%6932:	br	 %6931 if.end61 if.then59

BASIC BLOCK if.then59
%6933:	getelementptr	 bufp XXX XXX
%6934:	store	 XXX %6933
%6935:	br	 if.end61

BASIC BLOCK if.end61
%6936:	getelementptr	 bufp XXX XXX
%6937:	load	 %6936
%6938:	getelementptr	 bufp XXX XXX
%6939:	load	 %6938
%6940:	call	 %6937 %6939 realloc
%6941:	getelementptr	 bufp XXX XXX
%6942:	store	 %6940 %6941
%6943:	getelementptr	 bufp XXX XXX
%6944:	load	 %6943
%6945:	icmp	 %6944 XXX
%6946:	br	 %6945 if.end70 if.then69

BASIC BLOCK if.then69
%6947:	br	 return

BASIC BLOCK if.end70
%6948:	getelementptr	 bufp XXX XXX
%6949:	load	 %6948
%6950:	icmp	 %6919 %6949
%6951:	br	 %6950 if.end109 if.then74

BASIC BLOCK if.then74
%6952:	ptrtoint	 %6906
%6953:	ptrtoint	 %6919
%6954:	sub	 %6952 %6953
%6955:	getelementptr	 bufp XXX XXX
%6956:	load	 %6955
%6957:	getelementptr	 %6956 %6954
%6958:	ptrtoint	 %6903
%6959:	ptrtoint	 %6919
%6960:	sub	 %6958 %6959
%6961:	getelementptr	 bufp XXX XXX
%6962:	load	 %6961
%6963:	getelementptr	 %6962 %6960
%6964:	icmp	 %6902 XXX
%6965:	br	 %6964 if.end92 if.then86

BASIC BLOCK if.then86
%6966:	ptrtoint	 %6902
%6967:	ptrtoint	 %6919
%6968:	sub	 %6966 %6967
%6969:	getelementptr	 bufp XXX XXX
%6970:	load	 %6969
%6971:	getelementptr	 %6970 %6968
%6972:	br	 if.end92

BASIC BLOCK if.end92
%6973:	phi	 %6971 %6902
%6974:	icmp	 %6904 XXX
%6975:	br	 %6974 if.end100 if.then94

BASIC BLOCK if.then94
%6976:	ptrtoint	 %6904
%6977:	ptrtoint	 %6919
%6978:	sub	 %6976 %6977
%6979:	getelementptr	 bufp XXX XXX
%6980:	load	 %6979
%6981:	getelementptr	 %6980 %6978
%6982:	br	 if.end100

BASIC BLOCK if.end100
%6983:	phi	 %6981 %6904
%6984:	icmp	 %6905 XXX
%6985:	br	 %6984 if.end108 if.then102

BASIC BLOCK if.then102
%6986:	ptrtoint	 %6905
%6987:	ptrtoint	 %6919
%6988:	sub	 %6986 %6987
%6989:	getelementptr	 bufp XXX XXX
%6990:	load	 %6989
%6991:	getelementptr	 %6990 %6988
%6992:	br	 if.end108

BASIC BLOCK if.end108
%6993:	phi	 %6991 %6905
%6994:	br	 if.end109

BASIC BLOCK if.end109
%6995:	phi	 %6973 %6902
%6996:	phi	 %6963 %6903
%6997:	phi	 %6983 %6904
%6998:	phi	 %6993 %6905
%6999:	phi	 %6957 %6906
%7000:	br	 do.end110

BASIC BLOCK do.end110
%7001:	br	 while.cond42

BASIC BLOCK while.end
%7002:	getelementptr	 %6906 XXX
%7003:	store	 XXX %6906
%7004:	br	 do.end112

BASIC BLOCK do.end112
%7005:	br	 if.end114

BASIC BLOCK if.else113
%7006:	br	 normal_char

BASIC BLOCK if.end114
%7007:	br	 sw.epilog3580

BASIC BLOCK sw.bb115
%7008:	load	 %6792
%7009:	icmp	 %7008 %6796
%7010:	br	 %7009 lor.lhs.false118 if.then125

BASIC BLOCK lor.lhs.false118
%7011:	and	 syntax XXX
%7012:	icmp	 %7011 XXX
%7013:	br	 %7012 lor.lhs.false121 if.then125

BASIC BLOCK lor.lhs.false121
%7014:	load	 %6792
%7015:	call	 %7014 %6796 syntax at_endline_loc_p
%7016:	sext	 %7015
%7017:	icmp	 %7016 XXX
%7018:	br	 %7017 if.else205 if.then125

BASIC BLOCK if.then125
%7019:	br	 do.body126

BASIC BLOCK do.body126
%7020:	br	 while.cond127

BASIC BLOCK while.cond127
%7021:	phi	 %6861 %7114
%7022:	phi	 %6862 %7115
%7023:	phi	 %6863 %7116
%7024:	phi	 %6864 %7117
%7025:	phi	 %6865 %7118
%7026:	getelementptr	 bufp XXX XXX
%7027:	load	 %7026
%7028:	ptrtoint	 %7025
%7029:	ptrtoint	 %7027
%7030:	sub	 %7028 %7029
%7031:	add	 %7030 XXX
%7032:	getelementptr	 bufp XXX XXX
%7033:	load	 %7032
%7034:	icmp	 %7031 %7033
%7035:	br	 %7034 while.end202 while.body136

BASIC BLOCK while.body136
%7036:	br	 do.body137

BASIC BLOCK do.body137
%7037:	getelementptr	 bufp XXX XXX
%7038:	load	 %7037
%7039:	getelementptr	 bufp XXX XXX
%7040:	load	 %7039
%7041:	icmp	 %7040 XXX
%7042:	br	 %7041 if.end144 if.then143

BASIC BLOCK if.then143
%7043:	br	 return

BASIC BLOCK if.end144
%7044:	getelementptr	 bufp XXX XXX
%7045:	load	 %7044
%7046:	shl	 %7045 XXX
%7047:	store	 %7046 %7044
%7048:	getelementptr	 bufp XXX XXX
%7049:	load	 %7048
%7050:	icmp	 %7049 XXX
%7051:	br	 %7050 if.end152 if.then150

BASIC BLOCK if.then150
%7052:	getelementptr	 bufp XXX XXX
%7053:	store	 XXX %7052
%7054:	br	 if.end152

BASIC BLOCK if.end152
%7055:	getelementptr	 bufp XXX XXX
%7056:	load	 %7055
%7057:	getelementptr	 bufp XXX XXX
%7058:	load	 %7057
%7059:	call	 %7056 %7058 realloc
%7060:	getelementptr	 bufp XXX XXX
%7061:	store	 %7059 %7060
%7062:	getelementptr	 bufp XXX XXX
%7063:	load	 %7062
%7064:	icmp	 %7063 XXX
%7065:	br	 %7064 if.end161 if.then160

BASIC BLOCK if.then160
%7066:	br	 return

BASIC BLOCK if.end161
%7067:	getelementptr	 bufp XXX XXX
%7068:	load	 %7067
%7069:	icmp	 %7038 %7068
%7070:	br	 %7069 if.end200 if.then165

BASIC BLOCK if.then165
%7071:	ptrtoint	 %7025
%7072:	ptrtoint	 %7038
%7073:	sub	 %7071 %7072
%7074:	getelementptr	 bufp XXX XXX
%7075:	load	 %7074
%7076:	getelementptr	 %7075 %7073
%7077:	ptrtoint	 %7022
%7078:	ptrtoint	 %7038
%7079:	sub	 %7077 %7078
%7080:	getelementptr	 bufp XXX XXX
%7081:	load	 %7080
%7082:	getelementptr	 %7081 %7079
%7083:	icmp	 %7021 XXX
%7084:	br	 %7083 if.end183 if.then177

BASIC BLOCK if.then177
%7085:	ptrtoint	 %7021
%7086:	ptrtoint	 %7038
%7087:	sub	 %7085 %7086
%7088:	getelementptr	 bufp XXX XXX
%7089:	load	 %7088
%7090:	getelementptr	 %7089 %7087
%7091:	br	 if.end183

BASIC BLOCK if.end183
%7092:	phi	 %7090 %7021
%7093:	icmp	 %7023 XXX
%7094:	br	 %7093 if.end191 if.then185

BASIC BLOCK if.then185
%7095:	ptrtoint	 %7023
%7096:	ptrtoint	 %7038
%7097:	sub	 %7095 %7096
%7098:	getelementptr	 bufp XXX XXX
%7099:	load	 %7098
%7100:	getelementptr	 %7099 %7097
%7101:	br	 if.end191

BASIC BLOCK if.end191
%7102:	phi	 %7100 %7023
%7103:	icmp	 %7024 XXX
%7104:	br	 %7103 if.end199 if.then193

BASIC BLOCK if.then193
%7105:	ptrtoint	 %7024
%7106:	ptrtoint	 %7038
%7107:	sub	 %7105 %7106
%7108:	getelementptr	 bufp XXX XXX
%7109:	load	 %7108
%7110:	getelementptr	 %7109 %7107
%7111:	br	 if.end199

BASIC BLOCK if.end199
%7112:	phi	 %7110 %7024
%7113:	br	 if.end200

BASIC BLOCK if.end200
%7114:	phi	 %7092 %7021
%7115:	phi	 %7082 %7022
%7116:	phi	 %7102 %7023
%7117:	phi	 %7112 %7024
%7118:	phi	 %7076 %7025
%7119:	br	 do.end201

BASIC BLOCK do.end201
%7120:	br	 while.cond127

BASIC BLOCK while.end202
%7121:	getelementptr	 %7025 XXX
%7122:	store	 XXX %7025
%7123:	br	 do.end204

BASIC BLOCK do.end204
%7124:	br	 if.end206

BASIC BLOCK if.else205
%7125:	br	 normal_char

BASIC BLOCK if.end206
%7126:	br	 sw.epilog3580

BASIC BLOCK sw.bb207
%7127:	and	 syntax XXX
%7128:	icmp	 %7127 XXX
%7129:	br	 %7128 lor.lhs.false210 if.then213

BASIC BLOCK lor.lhs.false210
%7130:	and	 syntax XXX
%7131:	icmp	 %7130 XXX
%7132:	br	 %7131 if.end214 if.then213

BASIC BLOCK if.then213
%7133:	br	 normal_char

BASIC BLOCK if.end214
%7134:	br	 handle_plus

BASIC BLOCK handle_plus
%7135:	phi	 %8792 %6884
%7136:	br	 sw.bb215

BASIC BLOCK sw.bb215
%7137:	phi	 %7135 %6884
%7138:	icmp	 %6863 XXX
%7139:	br	 %7138 if.then217 if.end227

BASIC BLOCK if.then217
%7140:	and	 syntax XXX
%7141:	icmp	 %7140 XXX
%7142:	br	 %7141 if.else221 if.then220

BASIC BLOCK if.then220
%7143:	br	 return

BASIC BLOCK if.else221
%7144:	and	 syntax XXX
%7145:	icmp	 %7144 XXX
%7146:	br	 %7145 if.then224 if.end225

BASIC BLOCK if.then224
%7147:	br	 normal_char

BASIC BLOCK if.end225
%7148:	br	 if.end226

BASIC BLOCK if.end226
%7149:	br	 if.end227

BASIC BLOCK if.end227
%7150:	br	 for.cond

BASIC BLOCK for.cond
%7151:	phi	 XXX %7159
%7152:	phi	 XXX %7165
%7153:	phi	 %7137 %7246
%7154:	zext	 %7153
%7155:	icmp	 %7154 XXX
%7156:	zext	 %7155
%7157:	sext	 %7151
%7158:	or	 %7157 %7156
%7159:	trunc	 %7158
%7160:	zext	 %7153
%7161:	icmp	 %7160 XXX
%7162:	zext	 %7161
%7163:	sext	 %7152
%7164:	or	 %7163 %7162
%7165:	trunc	 %7164
%7166:	load	 %6792
%7167:	icmp	 %7166 %6796
%7168:	br	 %7167 if.end242 if.then241

BASIC BLOCK if.then241
%7169:	br	 for.end

BASIC BLOCK if.end242
%7170:	br	 do.body243

BASIC BLOCK do.body243
%7171:	load	 %6792
%7172:	icmp	 %7171 %6796
%7173:	br	 %7172 if.end247 if.then246

BASIC BLOCK if.then246
%7174:	br	 return

BASIC BLOCK if.end247
%7175:	load	 %6792
%7176:	getelementptr	 %7175 XXX
%7177:	store	 %7176 %6792
%7178:	load	 %7175
%7179:	icmp	 %6798 XXX
%7180:	br	 %7179 if.end253 if.then250

BASIC BLOCK if.then250
%7181:	zext	 %7178
%7182:	getelementptr	 %6798 %7181
%7183:	load	 %7182
%7184:	br	 if.end253

BASIC BLOCK if.end253
%7185:	phi	 %7183 %7178
%7186:	br	 do.end254

BASIC BLOCK do.end254
%7187:	zext	 %7185
%7188:	icmp	 %7187 XXX
%7189:	br	 %7188 lor.lhs.false258 if.then268

BASIC BLOCK lor.lhs.false258
%7190:	and	 syntax XXX
%7191:	icmp	 %7190 XXX
%7192:	br	 %7191 land.lhs.true if.else269

BASIC BLOCK land.lhs.true
%7193:	zext	 %7185
%7194:	icmp	 %7193 XXX
%7195:	br	 %7194 lor.lhs.false264 if.then268

BASIC BLOCK lor.lhs.false264
%7196:	zext	 %7185
%7197:	icmp	 %7196 XXX
%7198:	br	 %7197 if.else269 if.then268

BASIC BLOCK if.then268
%7199:	br	 if.end307

BASIC BLOCK if.else269
%7200:	and	 syntax XXX
%7201:	icmp	 %7200 XXX
%7202:	br	 %7201 if.else304 land.lhs.true272

BASIC BLOCK land.lhs.true272
%7203:	zext	 %7185
%7204:	icmp	 %7203 XXX
%7205:	br	 %7204 if.else304 if.then276

BASIC BLOCK if.then276
%7206:	load	 %6792
%7207:	icmp	 %7206 %6796
%7208:	br	 %7207 if.end280 if.then279

BASIC BLOCK if.then279
%7209:	br	 return

BASIC BLOCK if.end280
%7210:	br	 do.body281

BASIC BLOCK do.body281
%7211:	load	 %6792
%7212:	icmp	 %7211 %6796
%7213:	br	 %7212 if.end285 if.then284

BASIC BLOCK if.then284
%7214:	br	 return

BASIC BLOCK if.end285
%7215:	load	 %6792
%7216:	getelementptr	 %7215 XXX
%7217:	store	 %7216 %6792
%7218:	load	 %7215
%7219:	icmp	 %6798 XXX
%7220:	br	 %7219 if.end291 if.then288

BASIC BLOCK if.then288
%7221:	zext	 %7218
%7222:	getelementptr	 %6798 %7221
%7223:	load	 %7222
%7224:	br	 if.end291

BASIC BLOCK if.end291
%7225:	phi	 %7223 %7218
%7226:	br	 do.end292

BASIC BLOCK do.end292
%7227:	zext	 %7225
%7228:	icmp	 %7227 XXX
%7229:	br	 %7228 lor.lhs.false296 if.end303

BASIC BLOCK lor.lhs.false296
%7230:	zext	 %7225
%7231:	icmp	 %7230 XXX
%7232:	br	 %7231 if.then300 if.end303

BASIC BLOCK if.then300
%7233:	load	 %6792
%7234:	getelementptr	 %7233 XXX
%7235:	store	 %7234 %6792
%7236:	load	 %6792
%7237:	getelementptr	 %7236 XXX
%7238:	store	 %7237 %6792
%7239:	br	 for.end

BASIC BLOCK if.end303
%7240:	br	 if.end306

BASIC BLOCK if.else304
%7241:	load	 %6792
%7242:	getelementptr	 %7241 XXX
%7243:	store	 %7242 %6792
%7244:	br	 for.end

BASIC BLOCK if.end306
%7245:	br	 if.end307

BASIC BLOCK if.end307
%7246:	phi	 %7185 %7225
%7247:	br	 for.cond

BASIC BLOCK for.end
%7248:	icmp	 %6863 XXX
%7249:	br	 %7248 if.then309 if.end310

BASIC BLOCK if.then309
%7250:	br	 sw.epilog3580

BASIC BLOCK if.end310
%7251:	icmp	 %7165 XXX
%7252:	br	 %7251 if.end445 if.then312

BASIC BLOCK if.then312
%7253:	br	 while.cond313

BASIC BLOCK while.cond313
%7254:	phi	 %6861 %7347
%7255:	phi	 %6862 %7348
%7256:	phi	 %6863 %7349
%7257:	phi	 %6864 %7350
%7258:	phi	 %6865 %7351
%7259:	getelementptr	 bufp XXX XXX
%7260:	load	 %7259
%7261:	ptrtoint	 %7258
%7262:	ptrtoint	 %7260
%7263:	sub	 %7261 %7262
%7264:	add	 %7263 XXX
%7265:	getelementptr	 bufp XXX XXX
%7266:	load	 %7265
%7267:	icmp	 %7264 %7266
%7268:	br	 %7267 while.end388 while.body322

BASIC BLOCK while.body322
%7269:	br	 do.body323

BASIC BLOCK do.body323
%7270:	getelementptr	 bufp XXX XXX
%7271:	load	 %7270
%7272:	getelementptr	 bufp XXX XXX
%7273:	load	 %7272
%7274:	icmp	 %7273 XXX
%7275:	br	 %7274 if.end330 if.then329

BASIC BLOCK if.then329
%7276:	br	 return

BASIC BLOCK if.end330
%7277:	getelementptr	 bufp XXX XXX
%7278:	load	 %7277
%7279:	shl	 %7278 XXX
%7280:	store	 %7279 %7277
%7281:	getelementptr	 bufp XXX XXX
%7282:	load	 %7281
%7283:	icmp	 %7282 XXX
%7284:	br	 %7283 if.end338 if.then336

BASIC BLOCK if.then336
%7285:	getelementptr	 bufp XXX XXX
%7286:	store	 XXX %7285
%7287:	br	 if.end338

BASIC BLOCK if.end338
%7288:	getelementptr	 bufp XXX XXX
%7289:	load	 %7288
%7290:	getelementptr	 bufp XXX XXX
%7291:	load	 %7290
%7292:	call	 %7289 %7291 realloc
%7293:	getelementptr	 bufp XXX XXX
%7294:	store	 %7292 %7293
%7295:	getelementptr	 bufp XXX XXX
%7296:	load	 %7295
%7297:	icmp	 %7296 XXX
%7298:	br	 %7297 if.end347 if.then346

BASIC BLOCK if.then346
%7299:	br	 return

BASIC BLOCK if.end347
%7300:	getelementptr	 bufp XXX XXX
%7301:	load	 %7300
%7302:	icmp	 %7271 %7301
%7303:	br	 %7302 if.end386 if.then351

BASIC BLOCK if.then351
%7304:	ptrtoint	 %7258
%7305:	ptrtoint	 %7271
%7306:	sub	 %7304 %7305
%7307:	getelementptr	 bufp XXX XXX
%7308:	load	 %7307
%7309:	getelementptr	 %7308 %7306
%7310:	ptrtoint	 %7255
%7311:	ptrtoint	 %7271
%7312:	sub	 %7310 %7311
%7313:	getelementptr	 bufp XXX XXX
%7314:	load	 %7313
%7315:	getelementptr	 %7314 %7312
%7316:	icmp	 %7254 XXX
%7317:	br	 %7316 if.end369 if.then363

BASIC BLOCK if.then363
%7318:	ptrtoint	 %7254
%7319:	ptrtoint	 %7271
%7320:	sub	 %7318 %7319
%7321:	getelementptr	 bufp XXX XXX
%7322:	load	 %7321
%7323:	getelementptr	 %7322 %7320
%7324:	br	 if.end369

BASIC BLOCK if.end369
%7325:	phi	 %7323 %7254
%7326:	icmp	 %7256 XXX
%7327:	br	 %7326 if.end377 if.then371

BASIC BLOCK if.then371
%7328:	ptrtoint	 %7256
%7329:	ptrtoint	 %7271
%7330:	sub	 %7328 %7329
%7331:	getelementptr	 bufp XXX XXX
%7332:	load	 %7331
%7333:	getelementptr	 %7332 %7330
%7334:	br	 if.end377

BASIC BLOCK if.end377
%7335:	phi	 %7333 %7256
%7336:	icmp	 %7257 XXX
%7337:	br	 %7336 if.end385 if.then379

BASIC BLOCK if.then379
%7338:	ptrtoint	 %7257
%7339:	ptrtoint	 %7271
%7340:	sub	 %7338 %7339
%7341:	getelementptr	 bufp XXX XXX
%7342:	load	 %7341
%7343:	getelementptr	 %7342 %7340
%7344:	br	 if.end385

BASIC BLOCK if.end385
%7345:	phi	 %7343 %7257
%7346:	br	 if.end386

BASIC BLOCK if.end386
%7347:	phi	 %7325 %7254
%7348:	phi	 %7315 %7255
%7349:	phi	 %7335 %7256
%7350:	phi	 %7345 %7257
%7351:	phi	 %7309 %7258
%7352:	br	 do.end387

BASIC BLOCK do.end387
%7353:	br	 while.cond313

BASIC BLOCK while.end388
%7354:	icmp	 %6798 XXX
%7355:	br	 %7354 cond.false cond.true

BASIC BLOCK cond.true
%7356:	load	 %6792
%7357:	getelementptr	 %7356 XXX
%7358:	load	 %7357
%7359:	zext	 %7358
%7360:	getelementptr	 %6798 %7359
%7361:	load	 %7360
%7362:	sext	 %7361
%7363:	br	 cond.end

BASIC BLOCK cond.false
%7364:	load	 %6792
%7365:	getelementptr	 %7364 XXX
%7366:	load	 %7365
%7367:	sext	 %7366
%7368:	br	 cond.end

BASIC BLOCK cond.end
%7369:	phi	 %7362 %7367
%7370:	icmp	 %6798 XXX
%7371:	br	 %7370 cond.false400 cond.true397

BASIC BLOCK cond.true397
%7372:	getelementptr	 %6798 XXX
%7373:	load	 %7372
%7374:	sext	 %7373
%7375:	br	 cond.end401

BASIC BLOCK cond.false400
%7376:	br	 cond.end401

BASIC BLOCK cond.end401
%7377:	phi	 %7374 XXX
%7378:	icmp	 %7369 %7377
%7379:	br	 %7378 if.else437 land.lhs.true405

BASIC BLOCK land.lhs.true405
%7380:	sext	 %7159
%7381:	icmp	 %7380 XXX
%7382:	br	 %7381 if.else437 land.lhs.true408

BASIC BLOCK land.lhs.true408
%7383:	load	 %6792
%7384:	icmp	 %7383 %6796
%7385:	br	 %7384 if.else437 land.lhs.true411

BASIC BLOCK land.lhs.true411
%7386:	icmp	 %6798 XXX
%7387:	br	 %7386 cond.false417 cond.true413

BASIC BLOCK cond.true413
%7388:	load	 %6792
%7389:	load	 %7388
%7390:	zext	 %7389
%7391:	getelementptr	 %6798 %7390
%7392:	load	 %7391
%7393:	sext	 %7392
%7394:	br	 cond.end419

BASIC BLOCK cond.false417
%7395:	load	 %6792
%7396:	load	 %7395
%7397:	sext	 %7396
%7398:	br	 cond.end419

BASIC BLOCK cond.end419
%7399:	phi	 %7393 %7397
%7400:	icmp	 %6798 XXX
%7401:	br	 %7400 cond.false425 cond.true422

BASIC BLOCK cond.true422
%7402:	getelementptr	 %6798 XXX
%7403:	load	 %7402
%7404:	sext	 %7403
%7405:	br	 cond.end426

BASIC BLOCK cond.false425
%7406:	br	 cond.end426

BASIC BLOCK cond.end426
%7407:	phi	 %7404 XXX
%7408:	icmp	 %7399 %7407
%7409:	br	 %7408 if.else437 land.lhs.true430

BASIC BLOCK land.lhs.true430
%7410:	and	 syntax XXX
%7411:	icmp	 %7410 XXX
%7412:	br	 %7411 if.then433 if.else437

BASIC BLOCK if.then433
%7413:	ptrtoint	 %7256
%7414:	ptrtoint	 %7258
%7415:	sub	 %7413 %7414
%7416:	sub	 %7415 XXX
%7417:	call	 XXX %7258 %7416 XXX
%7418:	br	 if.end443

BASIC BLOCK if.else437
%7419:	getelementptr	 %7256 XXX
%7420:	ptrtoint	 %7419
%7421:	ptrtoint	 %7258
%7422:	sub	 %7420 %7421
%7423:	sub	 %7422 XXX
%7424:	call	 XXX %7258 %7423 XXX
%7425:	br	 if.end443

BASIC BLOCK if.end443
%7426:	phi	 XXX XXX
%7427:	getelementptr	 %7258 XXX
%7428:	br	 if.end445

BASIC BLOCK if.end445
%7429:	phi	 %7254 %6861
%7430:	phi	 %7255 %6862
%7431:	phi	 %7256 %6863
%7432:	phi	 %7257 %6864
%7433:	phi	 %7426 XXX
%7434:	phi	 %7427 %6865
%7435:	br	 while.cond446

BASIC BLOCK while.cond446
%7436:	phi	 %7429 %7529
%7437:	phi	 %7430 %7530
%7438:	phi	 %7431 %7531
%7439:	phi	 %7432 %7532
%7440:	phi	 %7434 %7533
%7441:	getelementptr	 bufp XXX XXX
%7442:	load	 %7441
%7443:	ptrtoint	 %7440
%7444:	ptrtoint	 %7442
%7445:	sub	 %7443 %7444
%7446:	add	 %7445 XXX
%7447:	getelementptr	 bufp XXX XXX
%7448:	load	 %7447
%7449:	icmp	 %7446 %7448
%7450:	br	 %7449 while.end521 while.body455

BASIC BLOCK while.body455
%7451:	br	 do.body456

BASIC BLOCK do.body456
%7452:	getelementptr	 bufp XXX XXX
%7453:	load	 %7452
%7454:	getelementptr	 bufp XXX XXX
%7455:	load	 %7454
%7456:	icmp	 %7455 XXX
%7457:	br	 %7456 if.end463 if.then462

BASIC BLOCK if.then462
%7458:	br	 return

BASIC BLOCK if.end463
%7459:	getelementptr	 bufp XXX XXX
%7460:	load	 %7459
%7461:	shl	 %7460 XXX
%7462:	store	 %7461 %7459
%7463:	getelementptr	 bufp XXX XXX
%7464:	load	 %7463
%7465:	icmp	 %7464 XXX
%7466:	br	 %7465 if.end471 if.then469

BASIC BLOCK if.then469
%7467:	getelementptr	 bufp XXX XXX
%7468:	store	 XXX %7467
%7469:	br	 if.end471

BASIC BLOCK if.end471
%7470:	getelementptr	 bufp XXX XXX
%7471:	load	 %7470
%7472:	getelementptr	 bufp XXX XXX
%7473:	load	 %7472
%7474:	call	 %7471 %7473 realloc
%7475:	getelementptr	 bufp XXX XXX
%7476:	store	 %7474 %7475
%7477:	getelementptr	 bufp XXX XXX
%7478:	load	 %7477
%7479:	icmp	 %7478 XXX
%7480:	br	 %7479 if.end480 if.then479

BASIC BLOCK if.then479
%7481:	br	 return

BASIC BLOCK if.end480
%7482:	getelementptr	 bufp XXX XXX
%7483:	load	 %7482
%7484:	icmp	 %7453 %7483
%7485:	br	 %7484 if.end519 if.then484

BASIC BLOCK if.then484
%7486:	ptrtoint	 %7440
%7487:	ptrtoint	 %7453
%7488:	sub	 %7486 %7487
%7489:	getelementptr	 bufp XXX XXX
%7490:	load	 %7489
%7491:	getelementptr	 %7490 %7488
%7492:	ptrtoint	 %7437
%7493:	ptrtoint	 %7453
%7494:	sub	 %7492 %7493
%7495:	getelementptr	 bufp XXX XXX
%7496:	load	 %7495
%7497:	getelementptr	 %7496 %7494
%7498:	icmp	 %7436 XXX
%7499:	br	 %7498 if.end502 if.then496

BASIC BLOCK if.then496
%7500:	ptrtoint	 %7436
%7501:	ptrtoint	 %7453
%7502:	sub	 %7500 %7501
%7503:	getelementptr	 bufp XXX XXX
%7504:	load	 %7503
%7505:	getelementptr	 %7504 %7502
%7506:	br	 if.end502

BASIC BLOCK if.end502
%7507:	phi	 %7505 %7436
%7508:	icmp	 %7438 XXX
%7509:	br	 %7508 if.end510 if.then504

BASIC BLOCK if.then504
%7510:	ptrtoint	 %7438
%7511:	ptrtoint	 %7453
%7512:	sub	 %7510 %7511
%7513:	getelementptr	 bufp XXX XXX
%7514:	load	 %7513
%7515:	getelementptr	 %7514 %7512
%7516:	br	 if.end510

BASIC BLOCK if.end510
%7517:	phi	 %7515 %7438
%7518:	icmp	 %7439 XXX
%7519:	br	 %7518 if.end518 if.then512

BASIC BLOCK if.then512
%7520:	ptrtoint	 %7439
%7521:	ptrtoint	 %7453
%7522:	sub	 %7520 %7521
%7523:	getelementptr	 bufp XXX XXX
%7524:	load	 %7523
%7525:	getelementptr	 %7524 %7522
%7526:	br	 if.end518

BASIC BLOCK if.end518
%7527:	phi	 %7525 %7439
%7528:	br	 if.end519

BASIC BLOCK if.end519
%7529:	phi	 %7507 %7436
%7530:	phi	 %7497 %7437
%7531:	phi	 %7517 %7438
%7532:	phi	 %7527 %7439
%7533:	phi	 %7491 %7440
%7534:	br	 do.end520

BASIC BLOCK do.end520
%7535:	br	 while.cond446

BASIC BLOCK while.end521
%7536:	sext	 %7433
%7537:	icmp	 %7536 XXX
%7538:	select	 %7537 XXX XXX
%7539:	getelementptr	 %7440 XXX
%7540:	ptrtoint	 %7539
%7541:	ptrtoint	 %7438
%7542:	sub	 %7540 %7541
%7543:	sub	 %7542 XXX
%7544:	call	 %7538 %7438 %7543 %7440 XXX
%7545:	getelementptr	 %7440 XXX
%7546:	icmp	 %7159 XXX
%7547:	br	 %7546 if.then532 if.end615

BASIC BLOCK if.then532
%7548:	br	 while.cond533

BASIC BLOCK while.cond533
%7549:	phi	 %7436 %7642
%7550:	phi	 %7437 %7643
%7551:	phi	 %7438 %7644
%7552:	phi	 XXX %7645
%7553:	phi	 %7545 %7646
%7554:	getelementptr	 bufp XXX XXX
%7555:	load	 %7554
%7556:	ptrtoint	 %7553
%7557:	ptrtoint	 %7555
%7558:	sub	 %7556 %7557
%7559:	add	 %7558 XXX
%7560:	getelementptr	 bufp XXX XXX
%7561:	load	 %7560
%7562:	icmp	 %7559 %7561
%7563:	br	 %7562 while.end608 while.body542

BASIC BLOCK while.body542
%7564:	br	 do.body543

BASIC BLOCK do.body543
%7565:	getelementptr	 bufp XXX XXX
%7566:	load	 %7565
%7567:	getelementptr	 bufp XXX XXX
%7568:	load	 %7567
%7569:	icmp	 %7568 XXX
%7570:	br	 %7569 if.end550 if.then549

BASIC BLOCK if.then549
%7571:	br	 return

BASIC BLOCK if.end550
%7572:	getelementptr	 bufp XXX XXX
%7573:	load	 %7572
%7574:	shl	 %7573 XXX
%7575:	store	 %7574 %7572
%7576:	getelementptr	 bufp XXX XXX
%7577:	load	 %7576
%7578:	icmp	 %7577 XXX
%7579:	br	 %7578 if.end558 if.then556

BASIC BLOCK if.then556
%7580:	getelementptr	 bufp XXX XXX
%7581:	store	 XXX %7580
%7582:	br	 if.end558

BASIC BLOCK if.end558
%7583:	getelementptr	 bufp XXX XXX
%7584:	load	 %7583
%7585:	getelementptr	 bufp XXX XXX
%7586:	load	 %7585
%7587:	call	 %7584 %7586 realloc
%7588:	getelementptr	 bufp XXX XXX
%7589:	store	 %7587 %7588
%7590:	getelementptr	 bufp XXX XXX
%7591:	load	 %7590
%7592:	icmp	 %7591 XXX
%7593:	br	 %7592 if.end567 if.then566

BASIC BLOCK if.then566
%7594:	br	 return

BASIC BLOCK if.end567
%7595:	getelementptr	 bufp XXX XXX
%7596:	load	 %7595
%7597:	icmp	 %7566 %7596
%7598:	br	 %7597 if.end606 if.then571

BASIC BLOCK if.then571
%7599:	ptrtoint	 %7553
%7600:	ptrtoint	 %7566
%7601:	sub	 %7599 %7600
%7602:	getelementptr	 bufp XXX XXX
%7603:	load	 %7602
%7604:	getelementptr	 %7603 %7601
%7605:	ptrtoint	 %7550
%7606:	ptrtoint	 %7566
%7607:	sub	 %7605 %7606
%7608:	getelementptr	 bufp XXX XXX
%7609:	load	 %7608
%7610:	getelementptr	 %7609 %7607
%7611:	icmp	 %7549 XXX
%7612:	br	 %7611 if.end589 if.then583

BASIC BLOCK if.then583
%7613:	ptrtoint	 %7549
%7614:	ptrtoint	 %7566
%7615:	sub	 %7613 %7614
%7616:	getelementptr	 bufp XXX XXX
%7617:	load	 %7616
%7618:	getelementptr	 %7617 %7615
%7619:	br	 if.end589

BASIC BLOCK if.end589
%7620:	phi	 %7618 %7549
%7621:	icmp	 %7551 XXX
%7622:	br	 %7621 if.end597 if.then591

BASIC BLOCK if.then591
%7623:	ptrtoint	 %7551
%7624:	ptrtoint	 %7566
%7625:	sub	 %7623 %7624
%7626:	getelementptr	 bufp XXX XXX
%7627:	load	 %7626
%7628:	getelementptr	 %7627 %7625
%7629:	br	 if.end597

BASIC BLOCK if.end597
%7630:	phi	 %7628 %7551
%7631:	icmp	 %7552 XXX
%7632:	br	 %7631 if.end605 if.then599

BASIC BLOCK if.then599
%7633:	ptrtoint	 %7552
%7634:	ptrtoint	 %7566
%7635:	sub	 %7633 %7634
%7636:	getelementptr	 bufp XXX XXX
%7637:	load	 %7636
%7638:	getelementptr	 %7637 %7635
%7639:	br	 if.end605

BASIC BLOCK if.end605
%7640:	phi	 %7638 %7552
%7641:	br	 if.end606

BASIC BLOCK if.end606
%7642:	phi	 %7620 %7549
%7643:	phi	 %7610 %7550
%7644:	phi	 %7630 %7551
%7645:	phi	 %7640 %7552
%7646:	phi	 %7604 %7553
%7647:	br	 do.end607

BASIC BLOCK do.end607
%7648:	br	 while.cond533

BASIC BLOCK while.end608
%7649:	getelementptr	 %7551 XXX
%7650:	ptrtoint	 %7649
%7651:	ptrtoint	 %7551
%7652:	sub	 %7650 %7651
%7653:	sub	 %7652 XXX
%7654:	call	 XXX %7551 %7653 %7553 XXX
%7655:	getelementptr	 %7553 XXX
%7656:	br	 if.end615

BASIC BLOCK if.end615
%7657:	phi	 %7436 %7549
%7658:	phi	 %7437 %7550
%7659:	phi	 %7438 %7551
%7660:	phi	 XXX %7552
%7661:	phi	 %7545 %7655
%7662:	br	 sw.epilog3580

BASIC BLOCK sw.bb616
%7663:	br	 do.body617

BASIC BLOCK do.body617
%7664:	br	 while.cond618

BASIC BLOCK while.cond618
%7665:	phi	 %6861 %7758
%7666:	phi	 %6862 %7759
%7667:	phi	 %6865 %7760
%7668:	phi	 %6864 %7761
%7669:	phi	 %6865 %7762
%7670:	getelementptr	 bufp XXX XXX
%7671:	load	 %7670
%7672:	ptrtoint	 %7669
%7673:	ptrtoint	 %7671
%7674:	sub	 %7672 %7673
%7675:	add	 %7674 XXX
%7676:	getelementptr	 bufp XXX XXX
%7677:	load	 %7676
%7678:	icmp	 %7675 %7677
%7679:	br	 %7678 while.end693 while.body627

BASIC BLOCK while.body627
%7680:	br	 do.body628

BASIC BLOCK do.body628
%7681:	getelementptr	 bufp XXX XXX
%7682:	load	 %7681
%7683:	getelementptr	 bufp XXX XXX
%7684:	load	 %7683
%7685:	icmp	 %7684 XXX
%7686:	br	 %7685 if.end635 if.then634

BASIC BLOCK if.then634
%7687:	br	 return

BASIC BLOCK if.end635
%7688:	getelementptr	 bufp XXX XXX
%7689:	load	 %7688
%7690:	shl	 %7689 XXX
%7691:	store	 %7690 %7688
%7692:	getelementptr	 bufp XXX XXX
%7693:	load	 %7692
%7694:	icmp	 %7693 XXX
%7695:	br	 %7694 if.end643 if.then641

BASIC BLOCK if.then641
%7696:	getelementptr	 bufp XXX XXX
%7697:	store	 XXX %7696
%7698:	br	 if.end643

BASIC BLOCK if.end643
%7699:	getelementptr	 bufp XXX XXX
%7700:	load	 %7699
%7701:	getelementptr	 bufp XXX XXX
%7702:	load	 %7701
%7703:	call	 %7700 %7702 realloc
%7704:	getelementptr	 bufp XXX XXX
%7705:	store	 %7703 %7704
%7706:	getelementptr	 bufp XXX XXX
%7707:	load	 %7706
%7708:	icmp	 %7707 XXX
%7709:	br	 %7708 if.end652 if.then651

BASIC BLOCK if.then651
%7710:	br	 return

BASIC BLOCK if.end652
%7711:	getelementptr	 bufp XXX XXX
%7712:	load	 %7711
%7713:	icmp	 %7682 %7712
%7714:	br	 %7713 if.end691 if.then656

BASIC BLOCK if.then656
%7715:	ptrtoint	 %7669
%7716:	ptrtoint	 %7682
%7717:	sub	 %7715 %7716
%7718:	getelementptr	 bufp XXX XXX
%7719:	load	 %7718
%7720:	getelementptr	 %7719 %7717
%7721:	ptrtoint	 %7666
%7722:	ptrtoint	 %7682
%7723:	sub	 %7721 %7722
%7724:	getelementptr	 bufp XXX XXX
%7725:	load	 %7724
%7726:	getelementptr	 %7725 %7723
%7727:	icmp	 %7665 XXX
%7728:	br	 %7727 if.end674 if.then668

BASIC BLOCK if.then668
%7729:	ptrtoint	 %7665
%7730:	ptrtoint	 %7682
%7731:	sub	 %7729 %7730
%7732:	getelementptr	 bufp XXX XXX
%7733:	load	 %7732
%7734:	getelementptr	 %7733 %7731
%7735:	br	 if.end674

BASIC BLOCK if.end674
%7736:	phi	 %7734 %7665
%7737:	icmp	 %7667 XXX
%7738:	br	 %7737 if.end682 if.then676

BASIC BLOCK if.then676
%7739:	ptrtoint	 %7667
%7740:	ptrtoint	 %7682
%7741:	sub	 %7739 %7740
%7742:	getelementptr	 bufp XXX XXX
%7743:	load	 %7742
%7744:	getelementptr	 %7743 %7741
%7745:	br	 if.end682

BASIC BLOCK if.end682
%7746:	phi	 %7744 %7667
%7747:	icmp	 %7668 XXX
%7748:	br	 %7747 if.end690 if.then684

BASIC BLOCK if.then684
%7749:	ptrtoint	 %7668
%7750:	ptrtoint	 %7682
%7751:	sub	 %7749 %7750
%7752:	getelementptr	 bufp XXX XXX
%7753:	load	 %7752
%7754:	getelementptr	 %7753 %7751
%7755:	br	 if.end690

BASIC BLOCK if.end690
%7756:	phi	 %7754 %7668
%7757:	br	 if.end691

BASIC BLOCK if.end691
%7758:	phi	 %7736 %7665
%7759:	phi	 %7726 %7666
%7760:	phi	 %7746 %7667
%7761:	phi	 %7756 %7668
%7762:	phi	 %7720 %7669
%7763:	br	 do.end692

BASIC BLOCK do.end692
%7764:	br	 while.cond618

BASIC BLOCK while.end693
%7765:	getelementptr	 %7669 XXX
%7766:	store	 XXX %7669
%7767:	br	 do.end695

BASIC BLOCK do.end695
%7768:	br	 sw.epilog3580

BASIC BLOCK sw.bb696
%7769:	load	 %6792
%7770:	icmp	 %7769 %6796
%7771:	br	 %7770 if.end700 if.then699

BASIC BLOCK if.then699
%7772:	br	 return

BASIC BLOCK if.end700
%7773:	br	 while.cond701

BASIC BLOCK while.cond701
%7774:	phi	 %6861 %7867
%7775:	phi	 %6862 %7868
%7776:	phi	 %6863 %7869
%7777:	phi	 %6864 %7870
%7778:	phi	 %6865 %7871
%7779:	getelementptr	 bufp XXX XXX
%7780:	load	 %7779
%7781:	ptrtoint	 %7778
%7782:	ptrtoint	 %7780
%7783:	sub	 %7781 %7782
%7784:	add	 %7783 XXX
%7785:	getelementptr	 bufp XXX XXX
%7786:	load	 %7785
%7787:	icmp	 %7784 %7786
%7788:	br	 %7787 while.end776 while.body710

BASIC BLOCK while.body710
%7789:	br	 do.body711

BASIC BLOCK do.body711
%7790:	getelementptr	 bufp XXX XXX
%7791:	load	 %7790
%7792:	getelementptr	 bufp XXX XXX
%7793:	load	 %7792
%7794:	icmp	 %7793 XXX
%7795:	br	 %7794 if.end718 if.then717

BASIC BLOCK if.then717
%7796:	br	 return

BASIC BLOCK if.end718
%7797:	getelementptr	 bufp XXX XXX
%7798:	load	 %7797
%7799:	shl	 %7798 XXX
%7800:	store	 %7799 %7797
%7801:	getelementptr	 bufp XXX XXX
%7802:	load	 %7801
%7803:	icmp	 %7802 XXX
%7804:	br	 %7803 if.end726 if.then724

BASIC BLOCK if.then724
%7805:	getelementptr	 bufp XXX XXX
%7806:	store	 XXX %7805
%7807:	br	 if.end726

BASIC BLOCK if.end726
%7808:	getelementptr	 bufp XXX XXX
%7809:	load	 %7808
%7810:	getelementptr	 bufp XXX XXX
%7811:	load	 %7810
%7812:	call	 %7809 %7811 realloc
%7813:	getelementptr	 bufp XXX XXX
%7814:	store	 %7812 %7813
%7815:	getelementptr	 bufp XXX XXX
%7816:	load	 %7815
%7817:	icmp	 %7816 XXX
%7818:	br	 %7817 if.end735 if.then734

BASIC BLOCK if.then734
%7819:	br	 return

BASIC BLOCK if.end735
%7820:	getelementptr	 bufp XXX XXX
%7821:	load	 %7820
%7822:	icmp	 %7791 %7821
%7823:	br	 %7822 if.end774 if.then739

BASIC BLOCK if.then739
%7824:	ptrtoint	 %7778
%7825:	ptrtoint	 %7791
%7826:	sub	 %7824 %7825
%7827:	getelementptr	 bufp XXX XXX
%7828:	load	 %7827
%7829:	getelementptr	 %7828 %7826
%7830:	ptrtoint	 %7775
%7831:	ptrtoint	 %7791
%7832:	sub	 %7830 %7831
%7833:	getelementptr	 bufp XXX XXX
%7834:	load	 %7833
%7835:	getelementptr	 %7834 %7832
%7836:	icmp	 %7774 XXX
%7837:	br	 %7836 if.end757 if.then751

BASIC BLOCK if.then751
%7838:	ptrtoint	 %7774
%7839:	ptrtoint	 %7791
%7840:	sub	 %7838 %7839
%7841:	getelementptr	 bufp XXX XXX
%7842:	load	 %7841
%7843:	getelementptr	 %7842 %7840
%7844:	br	 if.end757

BASIC BLOCK if.end757
%7845:	phi	 %7843 %7774
%7846:	icmp	 %7776 XXX
%7847:	br	 %7846 if.end765 if.then759

BASIC BLOCK if.then759
%7848:	ptrtoint	 %7776
%7849:	ptrtoint	 %7791
%7850:	sub	 %7848 %7849
%7851:	getelementptr	 bufp XXX XXX
%7852:	load	 %7851
%7853:	getelementptr	 %7852 %7850
%7854:	br	 if.end765

BASIC BLOCK if.end765
%7855:	phi	 %7853 %7776
%7856:	icmp	 %7777 XXX
%7857:	br	 %7856 if.end773 if.then767

BASIC BLOCK if.then767
%7858:	ptrtoint	 %7777
%7859:	ptrtoint	 %7791
%7860:	sub	 %7858 %7859
%7861:	getelementptr	 bufp XXX XXX
%7862:	load	 %7861
%7863:	getelementptr	 %7862 %7860
%7864:	br	 if.end773

BASIC BLOCK if.end773
%7865:	phi	 %7863 %7777
%7866:	br	 if.end774

BASIC BLOCK if.end774
%7867:	phi	 %7845 %7774
%7868:	phi	 %7835 %7775
%7869:	phi	 %7855 %7776
%7870:	phi	 %7865 %7777
%7871:	phi	 %7829 %7778
%7872:	br	 do.end775

BASIC BLOCK do.end775
%7873:	br	 while.cond701

BASIC BLOCK while.end776
%7874:	br	 do.body777

BASIC BLOCK do.body777
%7875:	br	 while.cond778

BASIC BLOCK while.cond778
%7876:	phi	 %7774 %7969
%7877:	phi	 %7775 %7970
%7878:	phi	 %7778 %7971
%7879:	phi	 %7777 %7972
%7880:	phi	 %7778 %7973
%7881:	getelementptr	 bufp XXX XXX
%7882:	load	 %7881
%7883:	ptrtoint	 %7880
%7884:	ptrtoint	 %7882
%7885:	sub	 %7883 %7884
%7886:	add	 %7885 XXX
%7887:	getelementptr	 bufp XXX XXX
%7888:	load	 %7887
%7889:	icmp	 %7886 %7888
%7890:	br	 %7889 while.end853 while.body787

BASIC BLOCK while.body787
%7891:	br	 do.body788

BASIC BLOCK do.body788
%7892:	getelementptr	 bufp XXX XXX
%7893:	load	 %7892
%7894:	getelementptr	 bufp XXX XXX
%7895:	load	 %7894
%7896:	icmp	 %7895 XXX
%7897:	br	 %7896 if.end795 if.then794

BASIC BLOCK if.then794
%7898:	br	 return

BASIC BLOCK if.end795
%7899:	getelementptr	 bufp XXX XXX
%7900:	load	 %7899
%7901:	shl	 %7900 XXX
%7902:	store	 %7901 %7899
%7903:	getelementptr	 bufp XXX XXX
%7904:	load	 %7903
%7905:	icmp	 %7904 XXX
%7906:	br	 %7905 if.end803 if.then801

BASIC BLOCK if.then801
%7907:	getelementptr	 bufp XXX XXX
%7908:	store	 XXX %7907
%7909:	br	 if.end803

BASIC BLOCK if.end803
%7910:	getelementptr	 bufp XXX XXX
%7911:	load	 %7910
%7912:	getelementptr	 bufp XXX XXX
%7913:	load	 %7912
%7914:	call	 %7911 %7913 realloc
%7915:	getelementptr	 bufp XXX XXX
%7916:	store	 %7914 %7915
%7917:	getelementptr	 bufp XXX XXX
%7918:	load	 %7917
%7919:	icmp	 %7918 XXX
%7920:	br	 %7919 if.end812 if.then811

BASIC BLOCK if.then811
%7921:	br	 return

BASIC BLOCK if.end812
%7922:	getelementptr	 bufp XXX XXX
%7923:	load	 %7922
%7924:	icmp	 %7893 %7923
%7925:	br	 %7924 if.end851 if.then816

BASIC BLOCK if.then816
%7926:	ptrtoint	 %7880
%7927:	ptrtoint	 %7893
%7928:	sub	 %7926 %7927
%7929:	getelementptr	 bufp XXX XXX
%7930:	load	 %7929
%7931:	getelementptr	 %7930 %7928
%7932:	ptrtoint	 %7877
%7933:	ptrtoint	 %7893
%7934:	sub	 %7932 %7933
%7935:	getelementptr	 bufp XXX XXX
%7936:	load	 %7935
%7937:	getelementptr	 %7936 %7934
%7938:	icmp	 %7876 XXX
%7939:	br	 %7938 if.end834 if.then828

BASIC BLOCK if.then828
%7940:	ptrtoint	 %7876
%7941:	ptrtoint	 %7893
%7942:	sub	 %7940 %7941
%7943:	getelementptr	 bufp XXX XXX
%7944:	load	 %7943
%7945:	getelementptr	 %7944 %7942
%7946:	br	 if.end834

BASIC BLOCK if.end834
%7947:	phi	 %7945 %7876
%7948:	icmp	 %7878 XXX
%7949:	br	 %7948 if.end842 if.then836

BASIC BLOCK if.then836
%7950:	ptrtoint	 %7878
%7951:	ptrtoint	 %7893
%7952:	sub	 %7950 %7951
%7953:	getelementptr	 bufp XXX XXX
%7954:	load	 %7953
%7955:	getelementptr	 %7954 %7952
%7956:	br	 if.end842

BASIC BLOCK if.end842
%7957:	phi	 %7955 %7878
%7958:	icmp	 %7879 XXX
%7959:	br	 %7958 if.end850 if.then844

BASIC BLOCK if.then844
%7960:	ptrtoint	 %7879
%7961:	ptrtoint	 %7893
%7962:	sub	 %7960 %7961
%7963:	getelementptr	 bufp XXX XXX
%7964:	load	 %7963
%7965:	getelementptr	 %7964 %7962
%7966:	br	 if.end850

BASIC BLOCK if.end850
%7967:	phi	 %7965 %7879
%7968:	br	 if.end851

BASIC BLOCK if.end851
%7969:	phi	 %7947 %7876
%7970:	phi	 %7937 %7877
%7971:	phi	 %7957 %7878
%7972:	phi	 %7967 %7879
%7973:	phi	 %7931 %7880
%7974:	br	 do.end852

BASIC BLOCK do.end852
%7975:	br	 while.cond778

BASIC BLOCK while.end853
%7976:	load	 %6792
%7977:	load	 %7976
%7978:	sext	 %7977
%7979:	icmp	 %7978 XXX
%7980:	select	 %7979 XXX XXX
%7981:	trunc	 %7980
%7982:	getelementptr	 %7880 XXX
%7983:	store	 %7981 %7880
%7984:	br	 do.end860

BASIC BLOCK do.end860
%7985:	load	 %6792
%7986:	load	 %7985
%7987:	sext	 %7986
%7988:	icmp	 %7987 XXX
%7989:	br	 %7988 if.end866 if.then864

BASIC BLOCK if.then864
%7990:	load	 %6792
%7991:	getelementptr	 %7990 XXX
%7992:	store	 %7991 %6792
%7993:	br	 if.end866

BASIC BLOCK if.end866
%7994:	load	 %6792
%7995:	br	 do.body867

BASIC BLOCK do.body867
%7996:	br	 while.cond868

BASIC BLOCK while.cond868
%7997:	phi	 %7876 %8090
%7998:	phi	 %7877 %8091
%7999:	phi	 %7878 %8092
%8000:	phi	 %7879 %8093
%8001:	phi	 %7982 %8094
%8002:	getelementptr	 bufp XXX XXX
%8003:	load	 %8002
%8004:	ptrtoint	 %8001
%8005:	ptrtoint	 %8003
%8006:	sub	 %8004 %8005
%8007:	add	 %8006 XXX
%8008:	getelementptr	 bufp XXX XXX
%8009:	load	 %8008
%8010:	icmp	 %8007 %8009
%8011:	br	 %8010 while.end943 while.body877

BASIC BLOCK while.body877
%8012:	br	 do.body878

BASIC BLOCK do.body878
%8013:	getelementptr	 bufp XXX XXX
%8014:	load	 %8013
%8015:	getelementptr	 bufp XXX XXX
%8016:	load	 %8015
%8017:	icmp	 %8016 XXX
%8018:	br	 %8017 if.end885 if.then884

BASIC BLOCK if.then884
%8019:	br	 return

BASIC BLOCK if.end885
%8020:	getelementptr	 bufp XXX XXX
%8021:	load	 %8020
%8022:	shl	 %8021 XXX
%8023:	store	 %8022 %8020
%8024:	getelementptr	 bufp XXX XXX
%8025:	load	 %8024
%8026:	icmp	 %8025 XXX
%8027:	br	 %8026 if.end893 if.then891

BASIC BLOCK if.then891
%8028:	getelementptr	 bufp XXX XXX
%8029:	store	 XXX %8028
%8030:	br	 if.end893

BASIC BLOCK if.end893
%8031:	getelementptr	 bufp XXX XXX
%8032:	load	 %8031
%8033:	getelementptr	 bufp XXX XXX
%8034:	load	 %8033
%8035:	call	 %8032 %8034 realloc
%8036:	getelementptr	 bufp XXX XXX
%8037:	store	 %8035 %8036
%8038:	getelementptr	 bufp XXX XXX
%8039:	load	 %8038
%8040:	icmp	 %8039 XXX
%8041:	br	 %8040 if.end902 if.then901

BASIC BLOCK if.then901
%8042:	br	 return

BASIC BLOCK if.end902
%8043:	getelementptr	 bufp XXX XXX
%8044:	load	 %8043
%8045:	icmp	 %8014 %8044
%8046:	br	 %8045 if.end941 if.then906

BASIC BLOCK if.then906
%8047:	ptrtoint	 %8001
%8048:	ptrtoint	 %8014
%8049:	sub	 %8047 %8048
%8050:	getelementptr	 bufp XXX XXX
%8051:	load	 %8050
%8052:	getelementptr	 %8051 %8049
%8053:	ptrtoint	 %7998
%8054:	ptrtoint	 %8014
%8055:	sub	 %8053 %8054
%8056:	getelementptr	 bufp XXX XXX
%8057:	load	 %8056
%8058:	getelementptr	 %8057 %8055
%8059:	icmp	 %7997 XXX
%8060:	br	 %8059 if.end924 if.then918

BASIC BLOCK if.then918
%8061:	ptrtoint	 %7997
%8062:	ptrtoint	 %8014
%8063:	sub	 %8061 %8062
%8064:	getelementptr	 bufp XXX XXX
%8065:	load	 %8064
%8066:	getelementptr	 %8065 %8063
%8067:	br	 if.end924

BASIC BLOCK if.end924
%8068:	phi	 %8066 %7997
%8069:	icmp	 %7999 XXX
%8070:	br	 %8069 if.end932 if.then926

BASIC BLOCK if.then926
%8071:	ptrtoint	 %7999
%8072:	ptrtoint	 %8014
%8073:	sub	 %8071 %8072
%8074:	getelementptr	 bufp XXX XXX
%8075:	load	 %8074
%8076:	getelementptr	 %8075 %8073
%8077:	br	 if.end932

BASIC BLOCK if.end932
%8078:	phi	 %8076 %7999
%8079:	icmp	 %8000 XXX
%8080:	br	 %8079 if.end940 if.then934

BASIC BLOCK if.then934
%8081:	ptrtoint	 %8000
%8082:	ptrtoint	 %8014
%8083:	sub	 %8081 %8082
%8084:	getelementptr	 bufp XXX XXX
%8085:	load	 %8084
%8086:	getelementptr	 %8085 %8083
%8087:	br	 if.end940

BASIC BLOCK if.end940
%8088:	phi	 %8086 %8000
%8089:	br	 if.end941

BASIC BLOCK if.end941
%8090:	phi	 %8068 %7997
%8091:	phi	 %8058 %7998
%8092:	phi	 %8078 %7999
%8093:	phi	 %8088 %8000
%8094:	phi	 %8052 %8001
%8095:	br	 do.end942

BASIC BLOCK do.end942
%8096:	br	 while.cond868

BASIC BLOCK while.end943
%8097:	getelementptr	 %8001 XXX
%8098:	store	 XXX %8001
%8099:	br	 do.end945

BASIC BLOCK do.end945
%8100:	call	 %8097 XXX XXX XXX XXX llvm.memset.p0i8.i64
%8101:	getelementptr	 %8097 XXX
%8102:	load	 %8101
%8103:	zext	 %8102
%8104:	icmp	 %8103 XXX
%8105:	br	 %8104 if.end958 land.lhs.true950

BASIC BLOCK land.lhs.true950
%8106:	and	 syntax XXX
%8107:	icmp	 %8106 XXX
%8108:	br	 %8107 if.end958 if.then953

BASIC BLOCK if.then953
%8109:	getelementptr	 %8097 XXX
%8110:	load	 %8109
%8111:	zext	 %8110
%8112:	or	 %8111 XXX
%8113:	trunc	 %8112
%8114:	store	 %8113 %8109
%8115:	br	 if.end958

BASIC BLOCK if.end958
%8116:	br	 for.cond959

BASIC BLOCK for.cond959
%8117:	phi	 XXX %8117 %8721
%8118:	load	 %6792
%8119:	icmp	 %8118 %6796
%8120:	br	 %8119 if.end963 if.then962

BASIC BLOCK if.then962
%8121:	br	 return

BASIC BLOCK if.end963
%8122:	br	 do.body964

BASIC BLOCK do.body964
%8123:	load	 %6792
%8124:	icmp	 %8123 %6796
%8125:	br	 %8124 if.end968 if.then967

BASIC BLOCK if.then967
%8126:	br	 return

BASIC BLOCK if.end968
%8127:	load	 %6792
%8128:	getelementptr	 %8127 XXX
%8129:	store	 %8128 %6792
%8130:	load	 %8127
%8131:	icmp	 %6798 XXX
%8132:	br	 %8131 if.end974 if.then971

BASIC BLOCK if.then971
%8133:	zext	 %8130
%8134:	getelementptr	 %6798 %8133
%8135:	load	 %8134
%8136:	br	 if.end974

BASIC BLOCK if.end974
%8137:	phi	 %8135 %8130
%8138:	br	 do.end975

BASIC BLOCK do.end975
%8139:	and	 syntax XXX
%8140:	icmp	 %8139 XXX
%8141:	br	 %8140 if.end1007 land.lhs.true978

BASIC BLOCK land.lhs.true978
%8142:	zext	 %8137
%8143:	icmp	 %8142 XXX
%8144:	br	 %8143 if.end1007 if.then982

BASIC BLOCK if.then982
%8145:	load	 %6792
%8146:	icmp	 %8145 %6796
%8147:	br	 %8146 if.end986 if.then985

BASIC BLOCK if.then985
%8148:	br	 return

BASIC BLOCK if.end986
%8149:	br	 do.body987

BASIC BLOCK do.body987
%8150:	load	 %6792
%8151:	icmp	 %8150 %6796
%8152:	br	 %8151 if.end991 if.then990

BASIC BLOCK if.then990
%8153:	br	 return

BASIC BLOCK if.end991
%8154:	load	 %6792
%8155:	getelementptr	 %8154 XXX
%8156:	store	 %8155 %6792
%8157:	load	 %8154
%8158:	icmp	 %6798 XXX
%8159:	br	 %8158 if.end997 if.then994

BASIC BLOCK if.then994
%8160:	zext	 %8157
%8161:	getelementptr	 %6798 %8160
%8162:	load	 %8161
%8163:	br	 if.end997

BASIC BLOCK if.end997
%8164:	phi	 %8162 %8157
%8165:	br	 do.end998

BASIC BLOCK do.end998
%8166:	zext	 %8164
%8167:	srem	 %8166 XXX
%8168:	shl	 XXX %8167
%8169:	zext	 %8164
%8170:	sdiv	 %8169 XXX
%8171:	sext	 %8170
%8172:	getelementptr	 %8097 %8171
%8173:	load	 %8172
%8174:	zext	 %8173
%8175:	or	 %8174 %8168
%8176:	trunc	 %8175
%8177:	store	 %8176 %8172
%8178:	br	 for.cond959

BASIC BLOCK if.end1007
%8179:	zext	 %8137
%8180:	icmp	 %8179 XXX
%8181:	br	 %8180 if.end1016 land.lhs.true1011

BASIC BLOCK land.lhs.true1011
%8182:	load	 %6792
%8183:	getelementptr	 %7994 XXX
%8184:	icmp	 %8182 %8183
%8185:	br	 %8184 if.end1016 if.then1015

BASIC BLOCK if.then1015
%8186:	br	 for.end1516

BASIC BLOCK if.end1016
%8187:	sext	 %8117
%8188:	icmp	 %8187 XXX
%8189:	br	 %8188 if.end1028 land.lhs.true1019

BASIC BLOCK land.lhs.true1019
%8190:	zext	 %8137
%8191:	icmp	 %8190 XXX
%8192:	br	 %8191 if.end1028 land.lhs.true1023

BASIC BLOCK land.lhs.true1023
%8193:	load	 %6792
%8194:	load	 %8193
%8195:	sext	 %8194
%8196:	icmp	 %8195 XXX
%8197:	br	 %8196 if.end1028 if.then1027

BASIC BLOCK if.then1027
%8198:	br	 return

BASIC BLOCK if.end1028
%8199:	zext	 %8137
%8200:	icmp	 %8199 XXX
%8201:	br	 %8200 if.else1065 land.lhs.true1032

BASIC BLOCK land.lhs.true1032
%8202:	load	 %6792
%8203:	getelementptr	 %8202 XXX
%8204:	icmp	 %8203 pattern
%8205:	br	 %8204 land.lhs.true1041 land.lhs.true1036

BASIC BLOCK land.lhs.true1036
%8206:	load	 %6792
%8207:	getelementptr	 %8206 XXX
%8208:	load	 %8207
%8209:	sext	 %8208
%8210:	icmp	 %8209 XXX
%8211:	br	 %8210 land.lhs.true1041 if.else1065

BASIC BLOCK land.lhs.true1041
%8212:	load	 %6792
%8213:	getelementptr	 %8212 XXX
%8214:	icmp	 %8213 pattern
%8215:	br	 %8214 land.lhs.true1055 land.lhs.true1045

BASIC BLOCK land.lhs.true1045
%8216:	load	 %6792
%8217:	getelementptr	 %8216 XXX
%8218:	load	 %8217
%8219:	sext	 %8218
%8220:	icmp	 %8219 XXX
%8221:	br	 %8220 land.lhs.true1055 land.lhs.true1050

BASIC BLOCK land.lhs.true1050
%8222:	load	 %6792
%8223:	getelementptr	 %8222 XXX
%8224:	load	 %8223
%8225:	sext	 %8224
%8226:	icmp	 %8225 XXX
%8227:	br	 %8226 land.lhs.true1055 if.else1065

BASIC BLOCK land.lhs.true1055
%8228:	load	 %6792
%8229:	load	 %8228
%8230:	sext	 %8229
%8231:	icmp	 %8230 XXX
%8232:	br	 %8231 if.else1065 if.then1059

BASIC BLOCK if.then1059
%8233:	call	 %6792 %6796 %6798 syntax %8097 compile_range
%8234:	icmp	 %8233 XXX
%8235:	br	 %8234 if.end1064 if.then1063

BASIC BLOCK if.then1063
%8236:	br	 return

BASIC BLOCK if.end1064
%8237:	br	 if.end1515

BASIC BLOCK if.else1065
%8238:	load	 %6792
%8239:	getelementptr	 %8238 XXX
%8240:	load	 %8239
%8241:	sext	 %8240
%8242:	icmp	 %8241 XXX
%8243:	br	 %8242 if.else1094 land.lhs.true1070

BASIC BLOCK land.lhs.true1070
%8244:	load	 %6792
%8245:	getelementptr	 %8244 XXX
%8246:	load	 %8245
%8247:	sext	 %8246
%8248:	icmp	 %8247 XXX
%8249:	br	 %8248 if.else1094 if.then1075

BASIC BLOCK if.then1075
%8250:	br	 do.body1077

BASIC BLOCK do.body1077
%8251:	load	 %6792
%8252:	icmp	 %8251 %6796
%8253:	br	 %8252 if.end1081 if.then1080

BASIC BLOCK if.then1080
%8254:	br	 return

BASIC BLOCK if.end1081
%8255:	load	 %6792
%8256:	getelementptr	 %8255 XXX
%8257:	store	 %8256 %6792
%8258:	load	 %8255
%8259:	icmp	 %6798 XXX
%8260:	br	 %8259 if.end1087 if.then1084

BASIC BLOCK if.then1084
%8261:	zext	 %8258
%8262:	getelementptr	 %6798 %8261
%8263:	br	 if.end1087

BASIC BLOCK if.end1087
%8264:	br	 do.end1088

BASIC BLOCK do.end1088
%8265:	call	 %6792 %6796 %6798 syntax %8097 compile_range
%8266:	icmp	 %8265 XXX
%8267:	br	 %8266 if.end1093 if.then1092

BASIC BLOCK if.then1092
%8268:	br	 return

BASIC BLOCK if.end1093
%8269:	br	 if.end1514

BASIC BLOCK if.else1094
%8270:	and	 syntax XXX
%8271:	icmp	 %8270 XXX
%8272:	br	 %8271 if.else1502 land.lhs.true1097

BASIC BLOCK land.lhs.true1097
%8273:	zext	 %8137
%8274:	icmp	 %8273 XXX
%8275:	br	 %8274 if.else1502 land.lhs.true1101

BASIC BLOCK land.lhs.true1101
%8276:	load	 %6792
%8277:	load	 %8276
%8278:	sext	 %8277
%8279:	icmp	 %8278 XXX
%8280:	br	 %8279 if.else1502 if.then1105

BASIC BLOCK if.then1105
%8281:	br	 do.body1106

BASIC BLOCK do.body1106
%8282:	load	 %6792
%8283:	icmp	 %8282 %6796
%8284:	br	 %8283 if.end1110 if.then1109

BASIC BLOCK if.then1109
%8285:	br	 return

BASIC BLOCK if.end1110
%8286:	load	 %6792
%8287:	getelementptr	 %8286 XXX
%8288:	store	 %8287 %6792
%8289:	load	 %8286
%8290:	icmp	 %6798 XXX
%8291:	br	 %8290 if.end1116 if.then1113

BASIC BLOCK if.then1113
%8292:	zext	 %8289
%8293:	getelementptr	 %6798 %8292
%8294:	br	 if.end1116

BASIC BLOCK if.end1116
%8295:	br	 do.end1117

BASIC BLOCK do.end1117
%8296:	load	 %6792
%8297:	icmp	 %8296 %6796
%8298:	br	 %8297 if.end1121 if.then1120

BASIC BLOCK if.then1120
%8299:	br	 return

BASIC BLOCK if.end1121
%8300:	br	 for.cond1122

BASIC BLOCK for.cond1122
%8301:	phi	 XXX %8332
%8302:	br	 do.body1123

BASIC BLOCK do.body1123
%8303:	load	 %6792
%8304:	icmp	 %8303 %6796
%8305:	br	 %8304 if.end1127 if.then1126

BASIC BLOCK if.then1126
%8306:	br	 return

BASIC BLOCK if.end1127
%8307:	load	 %6792
%8308:	getelementptr	 %8307 XXX
%8309:	store	 %8308 %6792
%8310:	load	 %8307
%8311:	icmp	 %6798 XXX
%8312:	br	 %8311 if.end1133 if.then1130

BASIC BLOCK if.then1130
%8313:	zext	 %8310
%8314:	getelementptr	 %6798 %8313
%8315:	load	 %8314
%8316:	br	 if.end1133

BASIC BLOCK if.end1133
%8317:	phi	 %8315 %8310
%8318:	br	 do.end1134

BASIC BLOCK do.end1134
%8319:	zext	 %8317
%8320:	icmp	 %8319 XXX
%8321:	br	 %8320 lor.lhs.false1138 if.then1149

BASIC BLOCK lor.lhs.false1138
%8322:	zext	 %8317
%8323:	icmp	 %8322 XXX
%8324:	br	 %8323 lor.lhs.false1142 if.then1149

BASIC BLOCK lor.lhs.false1142
%8325:	load	 %6792
%8326:	icmp	 %8325 %6796
%8327:	br	 %8326 lor.lhs.false1145 if.then1149

BASIC BLOCK lor.lhs.false1145
%8328:	zext	 %8301
%8329:	icmp	 %8328 XXX
%8330:	br	 %8329 if.end1150 if.then1149

BASIC BLOCK if.then1149
%8331:	br	 for.end1153

BASIC BLOCK if.end1150
%8332:	add	 %8301 XXX
%8333:	zext	 %8301
%8334:	getelementptr	 %6793 XXX %8333
%8335:	store	 %8317 %8334
%8336:	br	 for.cond1122

BASIC BLOCK for.end1153
%8337:	zext	 %8301
%8338:	getelementptr	 %6793 XXX %8337
%8339:	store	 XXX %8338
%8340:	zext	 %8317
%8341:	icmp	 %8340 XXX
%8342:	br	 %8341 if.else1486 land.lhs.true1159

BASIC BLOCK land.lhs.true1159
%8343:	load	 %6792
%8344:	load	 %8343
%8345:	sext	 %8344
%8346:	icmp	 %8345 XXX
%8347:	br	 %8346 if.else1486 if.then1163

BASIC BLOCK if.then1163
%8348:	getelementptr	 %6793 XXX XXX
%8349:	call	 %8348 XXX strcmp
%8350:	icmp	 %8349 XXX
%8351:	zext	 %8350
%8352:	trunc	 %8351
%8353:	getelementptr	 %6793 XXX XXX
%8354:	call	 %8353 XXX strcmp
%8355:	icmp	 %8354 XXX
%8356:	zext	 %8355
%8357:	trunc	 %8356
%8358:	getelementptr	 %6793 XXX XXX
%8359:	call	 %8358 XXX strcmp
%8360:	icmp	 %8359 XXX
%8361:	zext	 %8360
%8362:	trunc	 %8361
%8363:	getelementptr	 %6793 XXX XXX
%8364:	call	 %8363 XXX strcmp
%8365:	icmp	 %8364 XXX
%8366:	zext	 %8365
%8367:	trunc	 %8366
%8368:	getelementptr	 %6793 XXX XXX
%8369:	call	 %8368 XXX strcmp
%8370:	icmp	 %8369 XXX
%8371:	zext	 %8370
%8372:	trunc	 %8371
%8373:	getelementptr	 %6793 XXX XXX
%8374:	call	 %8373 XXX strcmp
%8375:	icmp	 %8374 XXX
%8376:	zext	 %8375
%8377:	trunc	 %8376
%8378:	getelementptr	 %6793 XXX XXX
%8379:	call	 %8378 XXX strcmp
%8380:	icmp	 %8379 XXX
%8381:	zext	 %8380
%8382:	trunc	 %8381
%8383:	getelementptr	 %6793 XXX XXX
%8384:	call	 %8383 XXX strcmp
%8385:	icmp	 %8384 XXX
%8386:	zext	 %8385
%8387:	trunc	 %8386
%8388:	getelementptr	 %6793 XXX XXX
%8389:	call	 %8388 XXX strcmp
%8390:	icmp	 %8389 XXX
%8391:	zext	 %8390
%8392:	trunc	 %8391
%8393:	getelementptr	 %6793 XXX XXX
%8394:	call	 %8393 XXX strcmp
%8395:	icmp	 %8394 XXX
%8396:	zext	 %8395
%8397:	trunc	 %8396
%8398:	getelementptr	 %6793 XXX XXX
%8399:	call	 %8398 XXX strcmp
%8400:	icmp	 %8399 XXX
%8401:	zext	 %8400
%8402:	trunc	 %8401
%8403:	getelementptr	 %6793 XXX XXX
%8404:	call	 %8403 XXX strcmp
%8405:	icmp	 %8404 XXX
%8406:	zext	 %8405
%8407:	trunc	 %8406
%8408:	getelementptr	 %6793 XXX XXX
%8409:	call	 %8408 XXX strcmp
%8410:	icmp	 %8409 XXX
%8411:	br	 %8410 lor.lhs.false1227 if.end1283

BASIC BLOCK lor.lhs.false1227
%8412:	getelementptr	 %6793 XXX XXX
%8413:	call	 %8412 XXX strcmp
%8414:	icmp	 %8413 XXX
%8415:	br	 %8414 lor.lhs.false1232 if.end1283

BASIC BLOCK lor.lhs.false1232
%8416:	getelementptr	 %6793 XXX XXX
%8417:	call	 %8416 XXX strcmp
%8418:	icmp	 %8417 XXX
%8419:	br	 %8418 lor.lhs.false1237 if.end1283

BASIC BLOCK lor.lhs.false1237
%8420:	getelementptr	 %6793 XXX XXX
%8421:	call	 %8420 XXX strcmp
%8422:	icmp	 %8421 XXX
%8423:	br	 %8422 lor.lhs.false1242 if.end1283

BASIC BLOCK lor.lhs.false1242
%8424:	getelementptr	 %6793 XXX XXX
%8425:	call	 %8424 XXX strcmp
%8426:	icmp	 %8425 XXX
%8427:	br	 %8426 lor.lhs.false1247 if.end1283

BASIC BLOCK lor.lhs.false1247
%8428:	getelementptr	 %6793 XXX XXX
%8429:	call	 %8428 XXX strcmp
%8430:	icmp	 %8429 XXX
%8431:	br	 %8430 lor.lhs.false1252 if.end1283

BASIC BLOCK lor.lhs.false1252
%8432:	getelementptr	 %6793 XXX XXX
%8433:	call	 %8432 XXX strcmp
%8434:	icmp	 %8433 XXX
%8435:	br	 %8434 lor.lhs.false1257 if.end1283

BASIC BLOCK lor.lhs.false1257
%8436:	getelementptr	 %6793 XXX XXX
%8437:	call	 %8436 XXX strcmp
%8438:	icmp	 %8437 XXX
%8439:	br	 %8438 lor.lhs.false1262 if.end1283

BASIC BLOCK lor.lhs.false1262
%8440:	getelementptr	 %6793 XXX XXX
%8441:	call	 %8440 XXX strcmp
%8442:	icmp	 %8441 XXX
%8443:	br	 %8442 lor.lhs.false1267 if.end1283

BASIC BLOCK lor.lhs.false1267
%8444:	getelementptr	 %6793 XXX XXX
%8445:	call	 %8444 XXX strcmp
%8446:	icmp	 %8445 XXX
%8447:	br	 %8446 lor.lhs.false1272 if.end1283

BASIC BLOCK lor.lhs.false1272
%8448:	getelementptr	 %6793 XXX XXX
%8449:	call	 %8448 XXX strcmp
%8450:	icmp	 %8449 XXX
%8451:	br	 %8450 lor.lhs.false1277 if.end1283

BASIC BLOCK lor.lhs.false1277
%8452:	getelementptr	 %6793 XXX XXX
%8453:	call	 %8452 XXX strcmp
%8454:	icmp	 %8453 XXX
%8455:	br	 %8454 if.then1282 if.end1283

BASIC BLOCK if.then1282
%8456:	br	 return

BASIC BLOCK if.end1283
%8457:	br	 do.body1284

BASIC BLOCK do.body1284
%8458:	load	 %6792
%8459:	icmp	 %8458 %6796
%8460:	br	 %8459 if.end1288 if.then1287

BASIC BLOCK if.then1287
%8461:	br	 return

BASIC BLOCK if.end1288
%8462:	load	 %6792
%8463:	getelementptr	 %8462 XXX
%8464:	store	 %8463 %6792
%8465:	load	 %8462
%8466:	icmp	 %6798 XXX
%8467:	br	 %8466 if.end1294 if.then1291

BASIC BLOCK if.then1291
%8468:	zext	 %8465
%8469:	getelementptr	 %6798 %8468
%8470:	br	 if.end1294

BASIC BLOCK if.end1294
%8471:	br	 do.end1295

BASIC BLOCK do.end1295
%8472:	load	 %6792
%8473:	icmp	 %8472 %6796
%8474:	br	 %8473 if.end1299 if.then1298

BASIC BLOCK if.then1298
%8475:	br	 return

BASIC BLOCK if.end1299
%8476:	br	 for.cond1300

BASIC BLOCK for.cond1300
%8477:	phi	 XXX %8676
%8478:	icmp	 %8477 XXX
%8479:	br	 %8478 for.end1485 for.body

BASIC BLOCK for.body
%8480:	sext	 %8352
%8481:	icmp	 %8480 XXX
%8482:	br	 %8481 lor.lhs.false1316 land.lhs.true1305

BASIC BLOCK land.lhs.true1305
%8483:	and	 %8477 XXX
%8484:	icmp	 %8483 XXX
%8485:	br	 %8484 lor.lhs.false1316 land.lhs.true1309

BASIC BLOCK land.lhs.true1309
%8486:	sext	 %8477
%8487:	call	 __ctype_b_loc
%8488:	load	 %8487
%8489:	getelementptr	 %8488 %8486
%8490:	load	 %8489
%8491:	zext	 %8490
%8492:	and	 %8491 XXX
%8493:	icmp	 %8492 XXX
%8494:	br	 %8493 lor.lhs.false1316 if.then1470

BASIC BLOCK lor.lhs.false1316
%8495:	sext	 %8357
%8496:	icmp	 %8495 XXX
%8497:	br	 %8496 lor.lhs.false1330 land.lhs.true1319

BASIC BLOCK land.lhs.true1319
%8498:	and	 %8477 XXX
%8499:	icmp	 %8498 XXX
%8500:	br	 %8499 lor.lhs.false1330 land.lhs.true1323

BASIC BLOCK land.lhs.true1323
%8501:	sext	 %8477
%8502:	call	 __ctype_b_loc
%8503:	load	 %8502
%8504:	getelementptr	 %8503 %8501
%8505:	load	 %8504
%8506:	zext	 %8505
%8507:	and	 %8506 XXX
%8508:	icmp	 %8507 XXX
%8509:	br	 %8508 lor.lhs.false1330 if.then1470

BASIC BLOCK lor.lhs.false1330
%8510:	sext	 %8362
%8511:	icmp	 %8510 XXX
%8512:	br	 %8511 lor.lhs.false1344 land.lhs.true1333

BASIC BLOCK land.lhs.true1333
%8513:	and	 %8477 XXX
%8514:	icmp	 %8513 XXX
%8515:	br	 %8514 lor.lhs.false1344 land.lhs.true1337

BASIC BLOCK land.lhs.true1337
%8516:	sext	 %8477
%8517:	call	 __ctype_b_loc
%8518:	load	 %8517
%8519:	getelementptr	 %8518 %8516
%8520:	load	 %8519
%8521:	zext	 %8520
%8522:	and	 %8521 XXX
%8523:	icmp	 %8522 XXX
%8524:	br	 %8523 lor.lhs.false1344 if.then1470

BASIC BLOCK lor.lhs.false1344
%8525:	sext	 %8367
%8526:	icmp	 %8525 XXX
%8527:	br	 %8526 lor.lhs.false1358 land.lhs.true1347

BASIC BLOCK land.lhs.true1347
%8528:	and	 %8477 XXX
%8529:	icmp	 %8528 XXX
%8530:	br	 %8529 lor.lhs.false1358 land.lhs.true1351

BASIC BLOCK land.lhs.true1351
%8531:	sext	 %8477
%8532:	call	 __ctype_b_loc
%8533:	load	 %8532
%8534:	getelementptr	 %8533 %8531
%8535:	load	 %8534
%8536:	zext	 %8535
%8537:	and	 %8536 XXX
%8538:	icmp	 %8537 XXX
%8539:	br	 %8538 lor.lhs.false1358 if.then1470

BASIC BLOCK lor.lhs.false1358
%8540:	sext	 %8372
%8541:	icmp	 %8540 XXX
%8542:	br	 %8541 lor.lhs.false1372 land.lhs.true1361

BASIC BLOCK land.lhs.true1361
%8543:	and	 %8477 XXX
%8544:	icmp	 %8543 XXX
%8545:	br	 %8544 lor.lhs.false1372 land.lhs.true1365

BASIC BLOCK land.lhs.true1365
%8546:	sext	 %8477
%8547:	call	 __ctype_b_loc
%8548:	load	 %8547
%8549:	getelementptr	 %8548 %8546
%8550:	load	 %8549
%8551:	zext	 %8550
%8552:	and	 %8551 XXX
%8553:	icmp	 %8552 XXX
%8554:	br	 %8553 lor.lhs.false1372 if.then1470

BASIC BLOCK lor.lhs.false1372
%8555:	sext	 %8377
%8556:	icmp	 %8555 XXX
%8557:	br	 %8556 lor.lhs.false1386 land.lhs.true1375

BASIC BLOCK land.lhs.true1375
%8558:	and	 %8477 XXX
%8559:	icmp	 %8558 XXX
%8560:	br	 %8559 lor.lhs.false1386 land.lhs.true1379

BASIC BLOCK land.lhs.true1379
%8561:	sext	 %8477
%8562:	call	 __ctype_b_loc
%8563:	load	 %8562
%8564:	getelementptr	 %8563 %8561
%8565:	load	 %8564
%8566:	zext	 %8565
%8567:	and	 %8566 XXX
%8568:	icmp	 %8567 XXX
%8569:	br	 %8568 lor.lhs.false1386 if.then1470

BASIC BLOCK lor.lhs.false1386
%8570:	sext	 %8382
%8571:	icmp	 %8570 XXX
%8572:	br	 %8571 lor.lhs.false1400 land.lhs.true1389

BASIC BLOCK land.lhs.true1389
%8573:	and	 %8477 XXX
%8574:	icmp	 %8573 XXX
%8575:	br	 %8574 lor.lhs.false1400 land.lhs.true1393

BASIC BLOCK land.lhs.true1393
%8576:	sext	 %8477
%8577:	call	 __ctype_b_loc
%8578:	load	 %8577
%8579:	getelementptr	 %8578 %8576
%8580:	load	 %8579
%8581:	zext	 %8580
%8582:	and	 %8581 XXX
%8583:	icmp	 %8582 XXX
%8584:	br	 %8583 lor.lhs.false1400 if.then1470

BASIC BLOCK lor.lhs.false1400
%8585:	sext	 %8387
%8586:	icmp	 %8585 XXX
%8587:	br	 %8586 lor.lhs.false1414 land.lhs.true1403

BASIC BLOCK land.lhs.true1403
%8588:	and	 %8477 XXX
%8589:	icmp	 %8588 XXX
%8590:	br	 %8589 lor.lhs.false1414 land.lhs.true1407

BASIC BLOCK land.lhs.true1407
%8591:	sext	 %8477
%8592:	call	 __ctype_b_loc
%8593:	load	 %8592
%8594:	getelementptr	 %8593 %8591
%8595:	load	 %8594
%8596:	zext	 %8595
%8597:	and	 %8596 XXX
%8598:	icmp	 %8597 XXX
%8599:	br	 %8598 lor.lhs.false1414 if.then1470

BASIC BLOCK lor.lhs.false1414
%8600:	sext	 %8392
%8601:	icmp	 %8600 XXX
%8602:	br	 %8601 lor.lhs.false1428 land.lhs.true1417

BASIC BLOCK land.lhs.true1417
%8603:	and	 %8477 XXX
%8604:	icmp	 %8603 XXX
%8605:	br	 %8604 lor.lhs.false1428 land.lhs.true1421

BASIC BLOCK land.lhs.true1421
%8606:	sext	 %8477
%8607:	call	 __ctype_b_loc
%8608:	load	 %8607
%8609:	getelementptr	 %8608 %8606
%8610:	load	 %8609
%8611:	zext	 %8610
%8612:	and	 %8611 XXX
%8613:	icmp	 %8612 XXX
%8614:	br	 %8613 lor.lhs.false1428 if.then1470

BASIC BLOCK lor.lhs.false1428
%8615:	sext	 %8397
%8616:	icmp	 %8615 XXX
%8617:	br	 %8616 lor.lhs.false1442 land.lhs.true1431

BASIC BLOCK land.lhs.true1431
%8618:	and	 %8477 XXX
%8619:	icmp	 %8618 XXX
%8620:	br	 %8619 lor.lhs.false1442 land.lhs.true1435

BASIC BLOCK land.lhs.true1435
%8621:	sext	 %8477
%8622:	call	 __ctype_b_loc
%8623:	load	 %8622
%8624:	getelementptr	 %8623 %8621
%8625:	load	 %8624
%8626:	zext	 %8625
%8627:	and	 %8626 XXX
%8628:	icmp	 %8627 XXX
%8629:	br	 %8628 lor.lhs.false1442 if.then1470

BASIC BLOCK lor.lhs.false1442
%8630:	sext	 %8402
%8631:	icmp	 %8630 XXX
%8632:	br	 %8631 lor.lhs.false1456 land.lhs.true1445

BASIC BLOCK land.lhs.true1445
%8633:	and	 %8477 XXX
%8634:	icmp	 %8633 XXX
%8635:	br	 %8634 lor.lhs.false1456 land.lhs.true1449

BASIC BLOCK land.lhs.true1449
%8636:	sext	 %8477
%8637:	call	 __ctype_b_loc
%8638:	load	 %8637
%8639:	getelementptr	 %8638 %8636
%8640:	load	 %8639
%8641:	zext	 %8640
%8642:	and	 %8641 XXX
%8643:	icmp	 %8642 XXX
%8644:	br	 %8643 lor.lhs.false1456 if.then1470

BASIC BLOCK lor.lhs.false1456
%8645:	sext	 %8407
%8646:	icmp	 %8645 XXX
%8647:	br	 %8646 if.end1483 land.lhs.true1459

BASIC BLOCK land.lhs.true1459
%8648:	and	 %8477 XXX
%8649:	icmp	 %8648 XXX
%8650:	br	 %8649 if.end1483 land.lhs.true1463

BASIC BLOCK land.lhs.true1463
%8651:	sext	 %8477
%8652:	call	 __ctype_b_loc
%8653:	load	 %8652
%8654:	getelementptr	 %8653 %8651
%8655:	load	 %8654
%8656:	zext	 %8655
%8657:	and	 %8656 XXX
%8658:	icmp	 %8657 XXX
%8659:	br	 %8658 if.end1483 if.then1470

BASIC BLOCK if.then1470
%8660:	trunc	 %8477
%8661:	zext	 %8660
%8662:	srem	 %8661 XXX
%8663:	shl	 XXX %8662
%8664:	trunc	 %8477
%8665:	zext	 %8664
%8666:	sdiv	 %8665 XXX
%8667:	sext	 %8666
%8668:	getelementptr	 %8097 %8667
%8669:	load	 %8668
%8670:	zext	 %8669
%8671:	or	 %8670 %8663
%8672:	trunc	 %8671
%8673:	store	 %8672 %8668
%8674:	br	 if.end1483

BASIC BLOCK if.end1483
%8675:	br	 for.inc

BASIC BLOCK for.inc
%8676:	add	 %8477 XXX
%8677:	br	 for.cond1300

BASIC BLOCK for.end1485
%8678:	br	 if.end1501

BASIC BLOCK if.else1486
%8679:	add	 %8301 XXX
%8680:	br	 while.cond1488

BASIC BLOCK while.cond1488
%8681:	phi	 %8679 %8682
%8682:	add	 %8681 XXX
%8683:	icmp	 %8681 XXX
%8684:	br	 %8683 while.end1492 while.body1490

BASIC BLOCK while.body1490
%8685:	load	 %6792
%8686:	getelementptr	 %8685 XXX
%8687:	store	 %8686 %6792
%8688:	br	 while.cond1488

BASIC BLOCK while.end1492
%8689:	getelementptr	 %8097 XXX
%8690:	load	 %8689
%8691:	zext	 %8690
%8692:	or	 %8691 XXX
%8693:	trunc	 %8692
%8694:	store	 %8693 %8689
%8695:	getelementptr	 %8097 XXX
%8696:	load	 %8695
%8697:	zext	 %8696
%8698:	or	 %8697 XXX
%8699:	trunc	 %8698
%8700:	store	 %8699 %8695
%8701:	br	 if.end1501

BASIC BLOCK if.end1501
%8702:	phi	 XXX XXX
%8703:	br	 if.end1513

BASIC BLOCK if.else1502
%8704:	zext	 %8137
%8705:	srem	 %8704 XXX
%8706:	shl	 XXX %8705
%8707:	zext	 %8137
%8708:	sdiv	 %8707 XXX
%8709:	sext	 %8708
%8710:	getelementptr	 %8097 %8709
%8711:	load	 %8710
%8712:	zext	 %8711
%8713:	or	 %8712 %8706
%8714:	trunc	 %8713
%8715:	store	 %8714 %8710
%8716:	br	 if.end1513

BASIC BLOCK if.end1513
%8717:	phi	 %8702 XXX
%8718:	br	 if.end1514

BASIC BLOCK if.end1514
%8719:	phi	 %8117 %8717
%8720:	br	 if.end1515

BASIC BLOCK if.end1515
%8721:	phi	 %8719 %8117
%8722:	br	 for.cond959

BASIC BLOCK for.end1516
%8723:	br	 while.cond1517

BASIC BLOCK while.cond1517
%8724:	getelementptr	 %8097 XXX
%8725:	load	 %8724
%8726:	zext	 %8725
%8727:	icmp	 %8726 XXX
%8728:	br	 %8727 land.end land.rhs

BASIC BLOCK land.rhs
%8729:	getelementptr	 %8097 XXX
%8730:	load	 %8729
%8731:	zext	 %8730
%8732:	sub	 %8731 XXX
%8733:	sext	 %8732
%8734:	getelementptr	 %8097 %8733
%8735:	load	 %8734
%8736:	zext	 %8735
%8737:	icmp	 %8736 XXX
%8738:	br	 land.end

BASIC BLOCK land.end
%8739:	phi	 XXX %8737
%8740:	br	 %8739 while.end1533 while.body1530

BASIC BLOCK while.body1530
%8741:	getelementptr	 %8097 XXX
%8742:	load	 %8741
%8743:	add	 %8742 XXX
%8744:	store	 %8743 %8741
%8745:	br	 while.cond1517

BASIC BLOCK while.end1533
%8746:	getelementptr	 %8097 XXX
%8747:	load	 %8746
%8748:	zext	 %8747
%8749:	sext	 %8748
%8750:	getelementptr	 %8097 %8749
%8751:	br	 sw.epilog3580

BASIC BLOCK sw.bb1538
%8752:	and	 syntax XXX
%8753:	icmp	 %8752 XXX
%8754:	br	 %8753 if.else1542 if.then1541

BASIC BLOCK if.then1541
%8755:	br	 handle_open

BASIC BLOCK if.else1542
%8756:	br	 normal_char

BASIC BLOCK sw.bb1543
%8757:	and	 syntax XXX
%8758:	icmp	 %8757 XXX
%8759:	br	 %8758 if.else1547 if.then1546

BASIC BLOCK if.then1546
%8760:	br	 handle_close

BASIC BLOCK if.else1547
%8761:	br	 normal_char

BASIC BLOCK sw.bb1548
%8762:	and	 syntax XXX
%8763:	icmp	 %8762 XXX
%8764:	br	 %8763 if.else1552 if.then1551

BASIC BLOCK if.then1551
%8765:	br	 handle_alt

BASIC BLOCK if.else1552
%8766:	br	 normal_char

BASIC BLOCK sw.bb1553
%8767:	and	 syntax XXX
%8768:	icmp	 %8767 XXX
%8769:	br	 %8768 if.else1557 if.then1556

BASIC BLOCK if.then1556
%8770:	br	 handle_alt

BASIC BLOCK if.else1557
%8771:	br	 normal_char

BASIC BLOCK sw.bb1558
%8772:	and	 syntax XXX
%8773:	icmp	 %8772 XXX
%8774:	br	 %8773 if.else1565 land.lhs.true1561

BASIC BLOCK land.lhs.true1561
%8775:	and	 syntax XXX
%8776:	icmp	 %8775 XXX
%8777:	br	 %8776 if.else1565 if.then1564

BASIC BLOCK if.then1564
%8778:	br	 handle_interval

BASIC BLOCK if.else1565
%8779:	br	 normal_char

BASIC BLOCK sw.bb1566
%8780:	load	 %6792
%8781:	icmp	 %8780 %6796
%8782:	br	 %8781 if.end1570 if.then1569

BASIC BLOCK if.then1569
%8783:	br	 return

BASIC BLOCK if.end1570
%8784:	br	 do.body1571

BASIC BLOCK do.body1571
%8785:	load	 %6792
%8786:	icmp	 %8785 %6796
%8787:	br	 %8786 if.end1575 if.then1574

BASIC BLOCK if.then1574
%8788:	br	 return

BASIC BLOCK if.end1575
%8789:	load	 %6792
%8790:	getelementptr	 %8789 XXX
%8791:	store	 %8790 %6792
%8792:	load	 %8789
%8793:	br	 do.end1577

BASIC BLOCK do.end1577
%8794:	zext	 %8792
%8795:	switch	 %8794 sw.default XXX sw.bb1579 XXX sw.bb1743 XXX sw.bb1993 XXX sw.bb2171 XXX sw.bb2598 XXX sw.bb2678 XXX sw.bb2758 XXX sw.bb2838 XXX sw.bb2918 XXX sw.bb2998 XXX sw.bb3078 XXX sw.bb3158 XXX sw.bb3238 XXX sw.bb3238 XXX sw.bb3238 XXX sw.bb3238 XXX sw.bb3238 XXX sw.bb3238 XXX sw.bb3238 XXX sw.bb3238 XXX sw.bb3238 XXX sw.bb3336 XXX sw.bb3336

BASIC BLOCK sw.bb1579
%8796:	and	 syntax XXX
%8797:	icmp	 %8796 XXX
%8798:	br	 %8797 if.end1583 if.then1582

BASIC BLOCK if.then1582
%8799:	br	 normal_backslash

BASIC BLOCK if.end1583
%8800:	br	 handle_open

BASIC BLOCK handle_open
%8801:	getelementptr	 bufp XXX XXX
%8802:	load	 %8801
%8803:	add	 %8802 XXX
%8804:	store	 %8803 %8801
%8805:	add	 %6860 XXX
%8806:	getelementptr	 %6791 XXX XXX
%8807:	load	 %8806
%8808:	getelementptr	 %6791 XXX XXX
%8809:	load	 %8808
%8810:	icmp	 %8807 %8809
%8811:	br	 %8810 if.end1605 if.then1591

BASIC BLOCK if.then1591
%8812:	getelementptr	 %6791 XXX XXX
%8813:	load	 %8812
%8814:	bitcast	 %8813
%8815:	getelementptr	 %6791 XXX XXX
%8816:	load	 %8815
%8817:	shl	 %8816 XXX
%8818:	zext	 %8817
%8819:	mul	 %8818 XXX
%8820:	call	 %8814 %8819 realloc
%8821:	bitcast	 %8820
%8822:	getelementptr	 %6791 XXX XXX
%8823:	store	 %8821 %8822
%8824:	getelementptr	 %6791 XXX XXX
%8825:	load	 %8824
%8826:	icmp	 %8825 XXX
%8827:	br	 %8826 if.end1602 if.then1601

BASIC BLOCK if.then1601
%8828:	br	 return

BASIC BLOCK if.end1602
%8829:	getelementptr	 %6791 XXX XXX
%8830:	load	 %8829
%8831:	shl	 %8830 XXX
%8832:	store	 %8831 %8829
%8833:	br	 if.end1605

BASIC BLOCK if.end1605
%8834:	getelementptr	 bufp XXX XXX
%8835:	load	 %8834
%8836:	ptrtoint	 %6862
%8837:	ptrtoint	 %8835
%8838:	sub	 %8836 %8837
%8839:	trunc	 %8838
%8840:	getelementptr	 %6791 XXX XXX
%8841:	load	 %8840
%8842:	zext	 %8841
%8843:	getelementptr	 %6791 XXX XXX
%8844:	load	 %8843
%8845:	getelementptr	 %8844 %8842
%8846:	getelementptr	 %8845 XXX XXX
%8847:	store	 %8839 %8846
%8848:	icmp	 %6861 XXX
%8849:	br	 %8848 cond.false1622 cond.true1616

BASIC BLOCK cond.true1616
%8850:	getelementptr	 bufp XXX XXX
%8851:	load	 %8850
%8852:	ptrtoint	 %6861
%8853:	ptrtoint	 %8851
%8854:	sub	 %8852 %8853
%8855:	add	 %8854 XXX
%8856:	br	 cond.end1623

BASIC BLOCK cond.false1622
%8857:	br	 cond.end1623

BASIC BLOCK cond.end1623
%8858:	phi	 %8855 XXX
%8859:	trunc	 %8858
%8860:	getelementptr	 %6791 XXX XXX
%8861:	load	 %8860
%8862:	zext	 %8861
%8863:	getelementptr	 %6791 XXX XXX
%8864:	load	 %8863
%8865:	getelementptr	 %8864 %8862
%8866:	getelementptr	 %8865 XXX XXX
%8867:	store	 %8859 %8866
%8868:	getelementptr	 bufp XXX XXX
%8869:	load	 %8868
%8870:	ptrtoint	 %6865
%8871:	ptrtoint	 %8869
%8872:	sub	 %8870 %8871
%8873:	trunc	 %8872
%8874:	getelementptr	 %6791 XXX XXX
%8875:	load	 %8874
%8876:	zext	 %8875
%8877:	getelementptr	 %6791 XXX XXX
%8878:	load	 %8877
%8879:	getelementptr	 %8878 %8876
%8880:	getelementptr	 %8879 XXX XXX
%8881:	store	 %8873 %8880
%8882:	getelementptr	 %6791 XXX XXX
%8883:	load	 %8882
%8884:	zext	 %8883
%8885:	getelementptr	 %6791 XXX XXX
%8886:	load	 %8885
%8887:	getelementptr	 %8886 %8884
%8888:	getelementptr	 %8887 XXX XXX
%8889:	store	 %8805 %8888
%8890:	icmp	 %8805 XXX
%8891:	br	 %8890 if.end1740 if.then1647

BASIC BLOCK if.then1647
%8892:	getelementptr	 bufp XXX XXX
%8893:	load	 %8892
%8894:	ptrtoint	 %6865
%8895:	ptrtoint	 %8893
%8896:	sub	 %8894 %8895
%8897:	add	 %8896 XXX
%8898:	trunc	 %8897
%8899:	getelementptr	 %6791 XXX XXX
%8900:	load	 %8899
%8901:	zext	 %8900
%8902:	getelementptr	 %6791 XXX XXX
%8903:	load	 %8902
%8904:	getelementptr	 %8903 %8901
%8905:	getelementptr	 %8904 XXX XXX
%8906:	store	 %8898 %8905
%8907:	br	 do.body1658

BASIC BLOCK do.body1658
%8908:	br	 while.cond1659

BASIC BLOCK while.cond1659
%8909:	phi	 %6861 %9002
%8910:	phi	 %6862 %9003
%8911:	phi	 %6863 %9004
%8912:	phi	 %6864 %9005
%8913:	phi	 %6865 %9006
%8914:	getelementptr	 bufp XXX XXX
%8915:	load	 %8914
%8916:	ptrtoint	 %8913
%8917:	ptrtoint	 %8915
%8918:	sub	 %8916 %8917
%8919:	add	 %8918 XXX
%8920:	getelementptr	 bufp XXX XXX
%8921:	load	 %8920
%8922:	icmp	 %8919 %8921
%8923:	br	 %8922 while.end1734 while.body1668

BASIC BLOCK while.body1668
%8924:	br	 do.body1669

BASIC BLOCK do.body1669
%8925:	getelementptr	 bufp XXX XXX
%8926:	load	 %8925
%8927:	getelementptr	 bufp XXX XXX
%8928:	load	 %8927
%8929:	icmp	 %8928 XXX
%8930:	br	 %8929 if.end1676 if.then1675

BASIC BLOCK if.then1675
%8931:	br	 return

BASIC BLOCK if.end1676
%8932:	getelementptr	 bufp XXX XXX
%8933:	load	 %8932
%8934:	shl	 %8933 XXX
%8935:	store	 %8934 %8932
%8936:	getelementptr	 bufp XXX XXX
%8937:	load	 %8936
%8938:	icmp	 %8937 XXX
%8939:	br	 %8938 if.end1684 if.then1682

BASIC BLOCK if.then1682
%8940:	getelementptr	 bufp XXX XXX
%8941:	store	 XXX %8940
%8942:	br	 if.end1684

BASIC BLOCK if.end1684
%8943:	getelementptr	 bufp XXX XXX
%8944:	load	 %8943
%8945:	getelementptr	 bufp XXX XXX
%8946:	load	 %8945
%8947:	call	 %8944 %8946 realloc
%8948:	getelementptr	 bufp XXX XXX
%8949:	store	 %8947 %8948
%8950:	getelementptr	 bufp XXX XXX
%8951:	load	 %8950
%8952:	icmp	 %8951 XXX
%8953:	br	 %8952 if.end1693 if.then1692

BASIC BLOCK if.then1692
%8954:	br	 return

BASIC BLOCK if.end1693
%8955:	getelementptr	 bufp XXX XXX
%8956:	load	 %8955
%8957:	icmp	 %8926 %8956
%8958:	br	 %8957 if.end1732 if.then1697

BASIC BLOCK if.then1697
%8959:	ptrtoint	 %8913
%8960:	ptrtoint	 %8926
%8961:	sub	 %8959 %8960
%8962:	getelementptr	 bufp XXX XXX
%8963:	load	 %8962
%8964:	getelementptr	 %8963 %8961
%8965:	ptrtoint	 %8910
%8966:	ptrtoint	 %8926
%8967:	sub	 %8965 %8966
%8968:	getelementptr	 bufp XXX XXX
%8969:	load	 %8968
%8970:	getelementptr	 %8969 %8967
%8971:	icmp	 %8909 XXX
%8972:	br	 %8971 if.end1715 if.then1709

BASIC BLOCK if.then1709
%8973:	ptrtoint	 %8909
%8974:	ptrtoint	 %8926
%8975:	sub	 %8973 %8974
%8976:	getelementptr	 bufp XXX XXX
%8977:	load	 %8976
%8978:	getelementptr	 %8977 %8975
%8979:	br	 if.end1715

BASIC BLOCK if.end1715
%8980:	phi	 %8978 %8909
%8981:	icmp	 %8911 XXX
%8982:	br	 %8981 if.end1723 if.then1717

BASIC BLOCK if.then1717
%8983:	ptrtoint	 %8911
%8984:	ptrtoint	 %8926
%8985:	sub	 %8983 %8984
%8986:	getelementptr	 bufp XXX XXX
%8987:	load	 %8986
%8988:	getelementptr	 %8987 %8985
%8989:	br	 if.end1723

BASIC BLOCK if.end1723
%8990:	phi	 %8988 %8911
%8991:	icmp	 %8912 XXX
%8992:	br	 %8991 if.end1731 if.then1725

BASIC BLOCK if.then1725
%8993:	ptrtoint	 %8912
%8994:	ptrtoint	 %8926
%8995:	sub	 %8993 %8994
%8996:	getelementptr	 bufp XXX XXX
%8997:	load	 %8996
%8998:	getelementptr	 %8997 %8995
%8999:	br	 if.end1731

BASIC BLOCK if.end1731
%9000:	phi	 %8998 %8912
%9001:	br	 if.end1732

BASIC BLOCK if.end1732
%9002:	phi	 %8980 %8909
%9003:	phi	 %8970 %8910
%9004:	phi	 %8990 %8911
%9005:	phi	 %9000 %8912
%9006:	phi	 %8964 %8913
%9007:	br	 do.end1733

BASIC BLOCK do.end1733
%9008:	br	 while.cond1659

BASIC BLOCK while.end1734
%9009:	getelementptr	 %8913 XXX
%9010:	store	 XXX %8913
%9011:	trunc	 %8805
%9012:	getelementptr	 %9009 XXX
%9013:	store	 %9011 %9009
%9014:	getelementptr	 %9012 XXX
%9015:	store	 XXX %9012
%9016:	br	 do.end1739

BASIC BLOCK do.end1739
%9017:	br	 if.end1740

BASIC BLOCK if.end1740
%9018:	phi	 %9014 %6865
%9019:	getelementptr	 %6791 XXX XXX
%9020:	load	 %9019
%9021:	add	 %9020 XXX
%9022:	store	 %9021 %9019
%9023:	br	 sw.epilog

BASIC BLOCK sw.bb1743
%9024:	and	 syntax XXX
%9025:	icmp	 %9024 XXX
%9026:	br	 %9025 if.end1747 if.then1746

BASIC BLOCK if.then1746
%9027:	br	 normal_backslash

BASIC BLOCK if.end1747
%9028:	getelementptr	 %6791 XXX XXX
%9029:	load	 %9028
%9030:	icmp	 %9029 XXX
%9031:	br	 %9030 if.end1756 if.then1751

BASIC BLOCK if.then1751
%9032:	and	 syntax XXX
%9033:	icmp	 %9032 XXX
%9034:	br	 %9033 if.else1755 if.then1754

BASIC BLOCK if.then1754
%9035:	br	 normal_backslash

BASIC BLOCK if.else1755
%9036:	br	 return

BASIC BLOCK if.end1756
%9037:	br	 handle_close

BASIC BLOCK handle_close
%9038:	phi	 %8792 %6884
%9039:	icmp	 %6861 XXX
%9040:	br	 %9039 if.end1843 if.then1758

BASIC BLOCK if.then1758
%9041:	br	 do.body1759

BASIC BLOCK do.body1759
%9042:	br	 while.cond1760

BASIC BLOCK while.cond1760
%9043:	phi	 %6861 %9136
%9044:	phi	 %6862 %9137
%9045:	phi	 %6863 %9138
%9046:	phi	 %6864 %9139
%9047:	phi	 %6865 %9140
%9048:	getelementptr	 bufp XXX XXX
%9049:	load	 %9048
%9050:	ptrtoint	 %9047
%9051:	ptrtoint	 %9049
%9052:	sub	 %9050 %9051
%9053:	add	 %9052 XXX
%9054:	getelementptr	 bufp XXX XXX
%9055:	load	 %9054
%9056:	icmp	 %9053 %9055
%9057:	br	 %9056 while.end1835 while.body1769

BASIC BLOCK while.body1769
%9058:	br	 do.body1770

BASIC BLOCK do.body1770
%9059:	getelementptr	 bufp XXX XXX
%9060:	load	 %9059
%9061:	getelementptr	 bufp XXX XXX
%9062:	load	 %9061
%9063:	icmp	 %9062 XXX
%9064:	br	 %9063 if.end1777 if.then1776

BASIC BLOCK if.then1776
%9065:	br	 return

BASIC BLOCK if.end1777
%9066:	getelementptr	 bufp XXX XXX
%9067:	load	 %9066
%9068:	shl	 %9067 XXX
%9069:	store	 %9068 %9066
%9070:	getelementptr	 bufp XXX XXX
%9071:	load	 %9070
%9072:	icmp	 %9071 XXX
%9073:	br	 %9072 if.end1785 if.then1783

BASIC BLOCK if.then1783
%9074:	getelementptr	 bufp XXX XXX
%9075:	store	 XXX %9074
%9076:	br	 if.end1785

BASIC BLOCK if.end1785
%9077:	getelementptr	 bufp XXX XXX
%9078:	load	 %9077
%9079:	getelementptr	 bufp XXX XXX
%9080:	load	 %9079
%9081:	call	 %9078 %9080 realloc
%9082:	getelementptr	 bufp XXX XXX
%9083:	store	 %9081 %9082
%9084:	getelementptr	 bufp XXX XXX
%9085:	load	 %9084
%9086:	icmp	 %9085 XXX
%9087:	br	 %9086 if.end1794 if.then1793

BASIC BLOCK if.then1793
%9088:	br	 return

BASIC BLOCK if.end1794
%9089:	getelementptr	 bufp XXX XXX
%9090:	load	 %9089
%9091:	icmp	 %9060 %9090
%9092:	br	 %9091 if.end1833 if.then1798

BASIC BLOCK if.then1798
%9093:	ptrtoint	 %9047
%9094:	ptrtoint	 %9060
%9095:	sub	 %9093 %9094
%9096:	getelementptr	 bufp XXX XXX
%9097:	load	 %9096
%9098:	getelementptr	 %9097 %9095
%9099:	ptrtoint	 %9044
%9100:	ptrtoint	 %9060
%9101:	sub	 %9099 %9100
%9102:	getelementptr	 bufp XXX XXX
%9103:	load	 %9102
%9104:	getelementptr	 %9103 %9101
%9105:	icmp	 %9043 XXX
%9106:	br	 %9105 if.end1816 if.then1810

BASIC BLOCK if.then1810
%9107:	ptrtoint	 %9043
%9108:	ptrtoint	 %9060
%9109:	sub	 %9107 %9108
%9110:	getelementptr	 bufp XXX XXX
%9111:	load	 %9110
%9112:	getelementptr	 %9111 %9109
%9113:	br	 if.end1816

BASIC BLOCK if.end1816
%9114:	phi	 %9112 %9043
%9115:	icmp	 %9045 XXX
%9116:	br	 %9115 if.end1824 if.then1818

BASIC BLOCK if.then1818
%9117:	ptrtoint	 %9045
%9118:	ptrtoint	 %9060
%9119:	sub	 %9117 %9118
%9120:	getelementptr	 bufp XXX XXX
%9121:	load	 %9120
%9122:	getelementptr	 %9121 %9119
%9123:	br	 if.end1824

BASIC BLOCK if.end1824
%9124:	phi	 %9122 %9045
%9125:	icmp	 %9046 XXX
%9126:	br	 %9125 if.end1832 if.then1826

BASIC BLOCK if.then1826
%9127:	ptrtoint	 %9046
%9128:	ptrtoint	 %9060
%9129:	sub	 %9127 %9128
%9130:	getelementptr	 bufp XXX XXX
%9131:	load	 %9130
%9132:	getelementptr	 %9131 %9129
%9133:	br	 if.end1832

BASIC BLOCK if.end1832
%9134:	phi	 %9132 %9046
%9135:	br	 if.end1833

BASIC BLOCK if.end1833
%9136:	phi	 %9114 %9043
%9137:	phi	 %9104 %9044
%9138:	phi	 %9124 %9045
%9139:	phi	 %9134 %9046
%9140:	phi	 %9098 %9047
%9141:	br	 do.end1834

BASIC BLOCK do.end1834
%9142:	br	 while.cond1760

BASIC BLOCK while.end1835
%9143:	getelementptr	 %9047 XXX
%9144:	store	 XXX %9047
%9145:	br	 do.end1837

BASIC BLOCK do.end1837
%9146:	getelementptr	 %9143 XXX
%9147:	ptrtoint	 %9146
%9148:	ptrtoint	 %9043
%9149:	sub	 %9147 %9148
%9150:	sub	 %9149 XXX
%9151:	call	 XXX %9043 %9150 XXX
%9152:	br	 if.end1843

BASIC BLOCK if.end1843
%9153:	phi	 %9043 %6861
%9154:	phi	 %9044 %6862
%9155:	phi	 %9045 %6863
%9156:	phi	 %9046 %6864
%9157:	phi	 %9143 %6865
%9158:	getelementptr	 %6791 XXX XXX
%9159:	load	 %9158
%9160:	icmp	 %9159 XXX
%9161:	br	 %9160 if.end1852 if.then1847

BASIC BLOCK if.then1847
%9162:	and	 syntax XXX
%9163:	icmp	 %9162 XXX
%9164:	br	 %9163 if.else1851 if.then1850

BASIC BLOCK if.then1850
%9165:	br	 normal_char

BASIC BLOCK if.else1851
%9166:	br	 return

BASIC BLOCK if.end1852
%9167:	getelementptr	 %6791 XXX XXX
%9168:	load	 %9167
%9169:	add	 %9168 XXX
%9170:	store	 %9169 %9167
%9171:	getelementptr	 bufp XXX XXX
%9172:	load	 %9171
%9173:	getelementptr	 %6791 XXX XXX
%9174:	load	 %9173
%9175:	zext	 %9174
%9176:	getelementptr	 %6791 XXX XXX
%9177:	load	 %9176
%9178:	getelementptr	 %9177 %9175
%9179:	getelementptr	 %9178 XXX XXX
%9180:	load	 %9179
%9181:	sext	 %9180
%9182:	getelementptr	 %9172 %9181
%9183:	getelementptr	 %6791 XXX XXX
%9184:	load	 %9183
%9185:	zext	 %9184
%9186:	getelementptr	 %6791 XXX XXX
%9187:	load	 %9186
%9188:	getelementptr	 %9187 %9185
%9189:	getelementptr	 %9188 XXX XXX
%9190:	load	 %9189
%9191:	icmp	 %9190 XXX
%9192:	br	 %9191 cond.false1879 cond.true1869

BASIC BLOCK cond.true1869
%9193:	getelementptr	 bufp XXX XXX
%9194:	load	 %9193
%9195:	getelementptr	 %6791 XXX XXX
%9196:	load	 %9195
%9197:	zext	 %9196
%9198:	getelementptr	 %6791 XXX XXX
%9199:	load	 %9198
%9200:	getelementptr	 %9199 %9197
%9201:	getelementptr	 %9200 XXX XXX
%9202:	load	 %9201
%9203:	sext	 %9202
%9204:	getelementptr	 %9194 %9203
%9205:	getelementptr	 %9204 XXX
%9206:	br	 cond.end1880

BASIC BLOCK cond.false1879
%9207:	br	 cond.end1880

BASIC BLOCK cond.end1880
%9208:	phi	 %9205 XXX
%9209:	getelementptr	 bufp XXX XXX
%9210:	load	 %9209
%9211:	getelementptr	 %6791 XXX XXX
%9212:	load	 %9211
%9213:	zext	 %9212
%9214:	getelementptr	 %6791 XXX XXX
%9215:	load	 %9214
%9216:	getelementptr	 %9215 %9213
%9217:	getelementptr	 %9216 XXX XXX
%9218:	load	 %9217
%9219:	sext	 %9218
%9220:	getelementptr	 %9210 %9219
%9221:	getelementptr	 %6791 XXX XXX
%9222:	load	 %9221
%9223:	zext	 %9222
%9224:	getelementptr	 %6791 XXX XXX
%9225:	load	 %9224
%9226:	getelementptr	 %9225 %9223
%9227:	getelementptr	 %9226 XXX XXX
%9228:	load	 %9227
%9229:	icmp	 %9228 XXX
%9230:	br	 %9229 if.end1992 if.then1897

BASIC BLOCK if.then1897
%9231:	getelementptr	 bufp XXX XXX
%9232:	load	 %9231
%9233:	getelementptr	 %6791 XXX XXX
%9234:	load	 %9233
%9235:	zext	 %9234
%9236:	getelementptr	 %6791 XXX XXX
%9237:	load	 %9236
%9238:	getelementptr	 %9237 %9235
%9239:	getelementptr	 %9238 XXX XXX
%9240:	load	 %9239
%9241:	sext	 %9240
%9242:	getelementptr	 %9232 %9241
%9243:	sub	 %6860 %9228
%9244:	trunc	 %9243
%9245:	store	 %9244 %9242
%9246:	br	 do.body1908

BASIC BLOCK do.body1908
%9247:	br	 while.cond1909

BASIC BLOCK while.cond1909
%9248:	phi	 %9208 %9341
%9249:	phi	 %9182 %9342
%9250:	phi	 %9220 %9343
%9251:	phi	 XXX %9344
%9252:	phi	 %9157 %9345
%9253:	getelementptr	 bufp XXX XXX
%9254:	load	 %9253
%9255:	ptrtoint	 %9252
%9256:	ptrtoint	 %9254
%9257:	sub	 %9255 %9256
%9258:	add	 %9257 XXX
%9259:	getelementptr	 bufp XXX XXX
%9260:	load	 %9259
%9261:	icmp	 %9258 %9260
%9262:	br	 %9261 while.end1984 while.body1918

BASIC BLOCK while.body1918
%9263:	br	 do.body1919

BASIC BLOCK do.body1919
%9264:	getelementptr	 bufp XXX XXX
%9265:	load	 %9264
%9266:	getelementptr	 bufp XXX XXX
%9267:	load	 %9266
%9268:	icmp	 %9267 XXX
%9269:	br	 %9268 if.end1926 if.then1925

BASIC BLOCK if.then1925
%9270:	br	 return

BASIC BLOCK if.end1926
%9271:	getelementptr	 bufp XXX XXX
%9272:	load	 %9271
%9273:	shl	 %9272 XXX
%9274:	store	 %9273 %9271
%9275:	getelementptr	 bufp XXX XXX
%9276:	load	 %9275
%9277:	icmp	 %9276 XXX
%9278:	br	 %9277 if.end1934 if.then1932

BASIC BLOCK if.then1932
%9279:	getelementptr	 bufp XXX XXX
%9280:	store	 XXX %9279
%9281:	br	 if.end1934

BASIC BLOCK if.end1934
%9282:	getelementptr	 bufp XXX XXX
%9283:	load	 %9282
%9284:	getelementptr	 bufp XXX XXX
%9285:	load	 %9284
%9286:	call	 %9283 %9285 realloc
%9287:	getelementptr	 bufp XXX XXX
%9288:	store	 %9286 %9287
%9289:	getelementptr	 bufp XXX XXX
%9290:	load	 %9289
%9291:	icmp	 %9290 XXX
%9292:	br	 %9291 if.end1943 if.then1942

BASIC BLOCK if.then1942
%9293:	br	 return

BASIC BLOCK if.end1943
%9294:	getelementptr	 bufp XXX XXX
%9295:	load	 %9294
%9296:	icmp	 %9265 %9295
%9297:	br	 %9296 if.end1982 if.then1947

BASIC BLOCK if.then1947
%9298:	ptrtoint	 %9252
%9299:	ptrtoint	 %9265
%9300:	sub	 %9298 %9299
%9301:	getelementptr	 bufp XXX XXX
%9302:	load	 %9301
%9303:	getelementptr	 %9302 %9300
%9304:	ptrtoint	 %9249
%9305:	ptrtoint	 %9265
%9306:	sub	 %9304 %9305
%9307:	getelementptr	 bufp XXX XXX
%9308:	load	 %9307
%9309:	getelementptr	 %9308 %9306
%9310:	icmp	 %9248 XXX
%9311:	br	 %9310 if.end1965 if.then1959

BASIC BLOCK if.then1959
%9312:	ptrtoint	 %9248
%9313:	ptrtoint	 %9265
%9314:	sub	 %9312 %9313
%9315:	getelementptr	 bufp XXX XXX
%9316:	load	 %9315
%9317:	getelementptr	 %9316 %9314
%9318:	br	 if.end1965

BASIC BLOCK if.end1965
%9319:	phi	 %9317 %9248
%9320:	icmp	 %9250 XXX
%9321:	br	 %9320 if.end1973 if.then1967

BASIC BLOCK if.then1967
%9322:	ptrtoint	 %9250
%9323:	ptrtoint	 %9265
%9324:	sub	 %9322 %9323
%9325:	getelementptr	 bufp XXX XXX
%9326:	load	 %9325
%9327:	getelementptr	 %9326 %9324
%9328:	br	 if.end1973

BASIC BLOCK if.end1973
%9329:	phi	 %9327 %9250
%9330:	icmp	 %9251 XXX
%9331:	br	 %9330 if.end1981 if.then1975

BASIC BLOCK if.then1975
%9332:	ptrtoint	 %9251
%9333:	ptrtoint	 %9265
%9334:	sub	 %9332 %9333
%9335:	getelementptr	 bufp XXX XXX
%9336:	load	 %9335
%9337:	getelementptr	 %9336 %9334
%9338:	br	 if.end1981

BASIC BLOCK if.end1981
%9339:	phi	 %9337 %9251
%9340:	br	 if.end1982

BASIC BLOCK if.end1982
%9341:	phi	 %9319 %9248
%9342:	phi	 %9309 %9249
%9343:	phi	 %9329 %9250
%9344:	phi	 %9339 %9251
%9345:	phi	 %9303 %9252
%9346:	br	 do.end1983

BASIC BLOCK do.end1983
%9347:	br	 while.cond1909

BASIC BLOCK while.end1984
%9348:	getelementptr	 %9252 XXX
%9349:	store	 XXX %9252
%9350:	trunc	 %9228
%9351:	getelementptr	 %9348 XXX
%9352:	store	 %9350 %9348
%9353:	sub	 %6860 %9228
%9354:	trunc	 %9353
%9355:	getelementptr	 %9351 XXX
%9356:	store	 %9354 %9351
%9357:	br	 do.end1991

BASIC BLOCK do.end1991
%9358:	br	 if.end1992

BASIC BLOCK if.end1992
%9359:	phi	 %9248 %9208
%9360:	phi	 %9249 %9182
%9361:	phi	 %9250 %9220
%9362:	phi	 %9251 XXX
%9363:	phi	 %9355 %9157
%9364:	br	 sw.epilog

BASIC BLOCK sw.bb1993
%9365:	and	 syntax XXX
%9366:	icmp	 %9365 XXX
%9367:	br	 %9366 lor.lhs.false1996 if.then1999

BASIC BLOCK lor.lhs.false1996
%9368:	and	 syntax XXX
%9369:	icmp	 %9368 XXX
%9370:	br	 %9369 if.end2000 if.then1999

BASIC BLOCK if.then1999
%9371:	br	 normal_backslash

BASIC BLOCK if.end2000
%9372:	br	 handle_alt

BASIC BLOCK handle_alt
%9373:	phi	 %8792 %6884 %6884
%9374:	and	 syntax XXX
%9375:	icmp	 %9374 XXX
%9376:	br	 %9375 if.end2004 if.then2003

BASIC BLOCK if.then2003
%9377:	br	 normal_char

BASIC BLOCK if.end2004
%9378:	br	 while.cond2005

BASIC BLOCK while.cond2005
%9379:	phi	 %6861 %9472
%9380:	phi	 %6862 %9473
%9381:	phi	 %6863 %9474
%9382:	phi	 %6864 %9475
%9383:	phi	 %6865 %9476
%9384:	getelementptr	 bufp XXX XXX
%9385:	load	 %9384
%9386:	ptrtoint	 %9383
%9387:	ptrtoint	 %9385
%9388:	sub	 %9386 %9387
%9389:	add	 %9388 XXX
%9390:	getelementptr	 bufp XXX XXX
%9391:	load	 %9390
%9392:	icmp	 %9389 %9391
%9393:	br	 %9392 while.end2080 while.body2014

BASIC BLOCK while.body2014
%9394:	br	 do.body2015

BASIC BLOCK do.body2015
%9395:	getelementptr	 bufp XXX XXX
%9396:	load	 %9395
%9397:	getelementptr	 bufp XXX XXX
%9398:	load	 %9397
%9399:	icmp	 %9398 XXX
%9400:	br	 %9399 if.end2022 if.then2021

BASIC BLOCK if.then2021
%9401:	br	 return

BASIC BLOCK if.end2022
%9402:	getelementptr	 bufp XXX XXX
%9403:	load	 %9402
%9404:	shl	 %9403 XXX
%9405:	store	 %9404 %9402
%9406:	getelementptr	 bufp XXX XXX
%9407:	load	 %9406
%9408:	icmp	 %9407 XXX
%9409:	br	 %9408 if.end2030 if.then2028

BASIC BLOCK if.then2028
%9410:	getelementptr	 bufp XXX XXX
%9411:	store	 XXX %9410
%9412:	br	 if.end2030

BASIC BLOCK if.end2030
%9413:	getelementptr	 bufp XXX XXX
%9414:	load	 %9413
%9415:	getelementptr	 bufp XXX XXX
%9416:	load	 %9415
%9417:	call	 %9414 %9416 realloc
%9418:	getelementptr	 bufp XXX XXX
%9419:	store	 %9417 %9418
%9420:	getelementptr	 bufp XXX XXX
%9421:	load	 %9420
%9422:	icmp	 %9421 XXX
%9423:	br	 %9422 if.end2039 if.then2038

BASIC BLOCK if.then2038
%9424:	br	 return

BASIC BLOCK if.end2039
%9425:	getelementptr	 bufp XXX XXX
%9426:	load	 %9425
%9427:	icmp	 %9396 %9426
%9428:	br	 %9427 if.end2078 if.then2043

BASIC BLOCK if.then2043
%9429:	ptrtoint	 %9383
%9430:	ptrtoint	 %9396
%9431:	sub	 %9429 %9430
%9432:	getelementptr	 bufp XXX XXX
%9433:	load	 %9432
%9434:	getelementptr	 %9433 %9431
%9435:	ptrtoint	 %9380
%9436:	ptrtoint	 %9396
%9437:	sub	 %9435 %9436
%9438:	getelementptr	 bufp XXX XXX
%9439:	load	 %9438
%9440:	getelementptr	 %9439 %9437
%9441:	icmp	 %9379 XXX
%9442:	br	 %9441 if.end2061 if.then2055

BASIC BLOCK if.then2055
%9443:	ptrtoint	 %9379
%9444:	ptrtoint	 %9396
%9445:	sub	 %9443 %9444
%9446:	getelementptr	 bufp XXX XXX
%9447:	load	 %9446
%9448:	getelementptr	 %9447 %9445
%9449:	br	 if.end2061

BASIC BLOCK if.end2061
%9450:	phi	 %9448 %9379
%9451:	icmp	 %9381 XXX
%9452:	br	 %9451 if.end2069 if.then2063

BASIC BLOCK if.then2063
%9453:	ptrtoint	 %9381
%9454:	ptrtoint	 %9396
%9455:	sub	 %9453 %9454
%9456:	getelementptr	 bufp XXX XXX
%9457:	load	 %9456
%9458:	getelementptr	 %9457 %9455
%9459:	br	 if.end2069

BASIC BLOCK if.end2069
%9460:	phi	 %9458 %9381
%9461:	icmp	 %9382 XXX
%9462:	br	 %9461 if.end2077 if.then2071

BASIC BLOCK if.then2071
%9463:	ptrtoint	 %9382
%9464:	ptrtoint	 %9396
%9465:	sub	 %9463 %9464
%9466:	getelementptr	 bufp XXX XXX
%9467:	load	 %9466
%9468:	getelementptr	 %9467 %9465
%9469:	br	 if.end2077

BASIC BLOCK if.end2077
%9470:	phi	 %9468 %9382
%9471:	br	 if.end2078

BASIC BLOCK if.end2078
%9472:	phi	 %9450 %9379
%9473:	phi	 %9440 %9380
%9474:	phi	 %9460 %9381
%9475:	phi	 %9470 %9382
%9476:	phi	 %9434 %9383
%9477:	br	 do.end2079

BASIC BLOCK do.end2079
%9478:	br	 while.cond2005

BASIC BLOCK while.end2080
%9479:	getelementptr	 %9383 XXX
%9480:	ptrtoint	 %9479
%9481:	ptrtoint	 %9380
%9482:	sub	 %9480 %9481
%9483:	sub	 %9482 XXX
%9484:	call	 XXX %9380 %9483 %9383 XXX
%9485:	getelementptr	 %9383 XXX
%9486:	icmp	 %9379 XXX
%9487:	br	 %9486 if.end2093 if.then2088

BASIC BLOCK if.then2088
%9488:	ptrtoint	 %9485
%9489:	ptrtoint	 %9379
%9490:	sub	 %9488 %9489
%9491:	sub	 %9490 XXX
%9492:	call	 XXX %9379 %9491 XXX
%9493:	br	 if.end2093

BASIC BLOCK if.end2093
%9494:	br	 while.cond2094

BASIC BLOCK while.cond2094
%9495:	phi	 %9485 %9588
%9496:	phi	 %9380 %9589
%9497:	phi	 %9381 %9590
%9498:	phi	 XXX %9591
%9499:	phi	 %9485 %9592
%9500:	getelementptr	 bufp XXX XXX
%9501:	load	 %9500
%9502:	ptrtoint	 %9499
%9503:	ptrtoint	 %9501
%9504:	sub	 %9502 %9503
%9505:	add	 %9504 XXX
%9506:	getelementptr	 bufp XXX XXX
%9507:	load	 %9506
%9508:	icmp	 %9505 %9507
%9509:	br	 %9508 while.end2169 while.body2103

BASIC BLOCK while.body2103
%9510:	br	 do.body2104

BASIC BLOCK do.body2104
%9511:	getelementptr	 bufp XXX XXX
%9512:	load	 %9511
%9513:	getelementptr	 bufp XXX XXX
%9514:	load	 %9513
%9515:	icmp	 %9514 XXX
%9516:	br	 %9515 if.end2111 if.then2110

BASIC BLOCK if.then2110
%9517:	br	 return

BASIC BLOCK if.end2111
%9518:	getelementptr	 bufp XXX XXX
%9519:	load	 %9518
%9520:	shl	 %9519 XXX
%9521:	store	 %9520 %9518
%9522:	getelementptr	 bufp XXX XXX
%9523:	load	 %9522
%9524:	icmp	 %9523 XXX
%9525:	br	 %9524 if.end2119 if.then2117

BASIC BLOCK if.then2117
%9526:	getelementptr	 bufp XXX XXX
%9527:	store	 XXX %9526
%9528:	br	 if.end2119

BASIC BLOCK if.end2119
%9529:	getelementptr	 bufp XXX XXX
%9530:	load	 %9529
%9531:	getelementptr	 bufp XXX XXX
%9532:	load	 %9531
%9533:	call	 %9530 %9532 realloc
%9534:	getelementptr	 bufp XXX XXX
%9535:	store	 %9533 %9534
%9536:	getelementptr	 bufp XXX XXX
%9537:	load	 %9536
%9538:	icmp	 %9537 XXX
%9539:	br	 %9538 if.end2128 if.then2127

BASIC BLOCK if.then2127
%9540:	br	 return

BASIC BLOCK if.end2128
%9541:	getelementptr	 bufp XXX XXX
%9542:	load	 %9541
%9543:	icmp	 %9512 %9542
%9544:	br	 %9543 if.end2167 if.then2132

BASIC BLOCK if.then2132
%9545:	ptrtoint	 %9499
%9546:	ptrtoint	 %9512
%9547:	sub	 %9545 %9546
%9548:	getelementptr	 bufp XXX XXX
%9549:	load	 %9548
%9550:	getelementptr	 %9549 %9547
%9551:	ptrtoint	 %9496
%9552:	ptrtoint	 %9512
%9553:	sub	 %9551 %9552
%9554:	getelementptr	 bufp XXX XXX
%9555:	load	 %9554
%9556:	getelementptr	 %9555 %9553
%9557:	icmp	 %9495 XXX
%9558:	br	 %9557 if.end2150 if.then2144

BASIC BLOCK if.then2144
%9559:	ptrtoint	 %9495
%9560:	ptrtoint	 %9512
%9561:	sub	 %9559 %9560
%9562:	getelementptr	 bufp XXX XXX
%9563:	load	 %9562
%9564:	getelementptr	 %9563 %9561
%9565:	br	 if.end2150

BASIC BLOCK if.end2150
%9566:	phi	 %9564 %9495
%9567:	icmp	 %9497 XXX
%9568:	br	 %9567 if.end2158 if.then2152

BASIC BLOCK if.then2152
%9569:	ptrtoint	 %9497
%9570:	ptrtoint	 %9512
%9571:	sub	 %9569 %9570
%9572:	getelementptr	 bufp XXX XXX
%9573:	load	 %9572
%9574:	getelementptr	 %9573 %9571
%9575:	br	 if.end2158

BASIC BLOCK if.end2158
%9576:	phi	 %9574 %9497
%9577:	icmp	 %9498 XXX
%9578:	br	 %9577 if.end2166 if.then2160

BASIC BLOCK if.then2160
%9579:	ptrtoint	 %9498
%9580:	ptrtoint	 %9512
%9581:	sub	 %9579 %9580
%9582:	getelementptr	 bufp XXX XXX
%9583:	load	 %9582
%9584:	getelementptr	 %9583 %9581
%9585:	br	 if.end2166

BASIC BLOCK if.end2166
%9586:	phi	 %9584 %9498
%9587:	br	 if.end2167

BASIC BLOCK if.end2167
%9588:	phi	 %9566 %9495
%9589:	phi	 %9556 %9496
%9590:	phi	 %9576 %9497
%9591:	phi	 %9586 %9498
%9592:	phi	 %9550 %9499
%9593:	br	 do.end2168

BASIC BLOCK do.end2168
%9594:	br	 while.cond2094

BASIC BLOCK while.end2169
%9595:	getelementptr	 %9499 XXX
%9596:	br	 sw.epilog

BASIC BLOCK sw.bb2171
%9597:	and	 syntax XXX
%9598:	icmp	 %9597 XXX
%9599:	br	 %9598 if.then2187 lor.lhs.false2174

BASIC BLOCK lor.lhs.false2174
%9600:	and	 syntax XXX
%9601:	icmp	 %9600 XXX
%9602:	br	 %9601 lor.lhs.false2180 land.lhs.true2177

BASIC BLOCK land.lhs.true2177
%9603:	and	 syntax XXX
%9604:	icmp	 %9603 XXX
%9605:	br	 %9604 lor.lhs.false2180 if.then2187

BASIC BLOCK lor.lhs.false2180
%9606:	load	 %6792
%9607:	getelementptr	 %9606 XXX
%9608:	icmp	 %9607 pattern
%9609:	br	 %9608 if.end2188 land.lhs.true2184

BASIC BLOCK land.lhs.true2184
%9610:	load	 %6792
%9611:	icmp	 %9610 %6796
%9612:	br	 %9611 if.end2188 if.then2187

BASIC BLOCK if.then2187
%9613:	br	 normal_backslash

BASIC BLOCK if.end2188
%9614:	br	 handle_interval

BASIC BLOCK handle_interval
%9615:	phi	 %8792 %6884
%9616:	load	 %6792
%9617:	getelementptr	 %9616 XXX
%9618:	load	 %6792
%9619:	icmp	 %9618 %6796
%9620:	br	 %9619 if.end2197 if.then2192

BASIC BLOCK if.then2192
%9621:	and	 syntax XXX
%9622:	icmp	 %9621 XXX
%9623:	br	 %9622 if.else2196 if.then2195

BASIC BLOCK if.then2195
%9624:	br	 unfetch_interval

BASIC BLOCK if.else2196
%9625:	br	 return

BASIC BLOCK if.end2197
%9626:	load	 %6792
%9627:	icmp	 %9626 %6796
%9628:	br	 %9627 if.end2253 if.then2200

BASIC BLOCK if.then2200
%9629:	br	 do.body2201

BASIC BLOCK do.body2201
%9630:	load	 %6792
%9631:	icmp	 %9630 %6796
%9632:	br	 %9631 if.end2205 if.then2204

BASIC BLOCK if.then2204
%9633:	br	 return

BASIC BLOCK if.end2205
%9634:	load	 %6792
%9635:	getelementptr	 %9634 XXX
%9636:	store	 %9635 %6792
%9637:	load	 %9634
%9638:	icmp	 %6798 XXX
%9639:	br	 %9638 if.end2211 if.then2208

BASIC BLOCK if.then2208
%9640:	zext	 %9637
%9641:	getelementptr	 %6798 %9640
%9642:	load	 %9641
%9643:	br	 if.end2211

BASIC BLOCK if.end2211
%9644:	phi	 %9642 %9637
%9645:	br	 do.end2212

BASIC BLOCK do.end2212
%9646:	br	 while.cond2213

BASIC BLOCK while.cond2213
%9647:	phi	 %9644 %9692
%9648:	phi	 XXX %9672
%9649:	zext	 %9647
%9650:	and	 %9649 XXX
%9651:	icmp	 %9650 XXX
%9652:	br	 %9651 land.end2226 land.rhs2218

BASIC BLOCK land.rhs2218
%9653:	zext	 %9647
%9654:	sext	 %9653
%9655:	call	 __ctype_b_loc
%9656:	load	 %9655
%9657:	getelementptr	 %9656 %9654
%9658:	load	 %9657
%9659:	zext	 %9658
%9660:	and	 %9659 XXX
%9661:	icmp	 %9660 XXX
%9662:	br	 land.end2226

BASIC BLOCK land.end2226
%9663:	phi	 XXX %9661
%9664:	br	 %9663 while.end2252 while.body2227

BASIC BLOCK while.body2227
%9665:	icmp	 %9648 XXX
%9666:	br	 %9665 if.end2231 if.then2230

BASIC BLOCK if.then2230
%9667:	br	 if.end2231

BASIC BLOCK if.end2231
%9668:	phi	 XXX %9648
%9669:	mul	 %9668 XXX
%9670:	zext	 %9647
%9671:	add	 %9669 %9670
%9672:	sub	 %9671 XXX
%9673:	load	 %6792
%9674:	icmp	 %9673 %6796
%9675:	br	 %9674 if.end2239 if.then2238

BASIC BLOCK if.then2238
%9676:	br	 while.end2252

BASIC BLOCK if.end2239
%9677:	br	 do.body2240

BASIC BLOCK do.body2240
%9678:	load	 %6792
%9679:	icmp	 %9678 %6796
%9680:	br	 %9679 if.end2244 if.then2243

BASIC BLOCK if.then2243
%9681:	br	 return

BASIC BLOCK if.end2244
%9682:	load	 %6792
%9683:	getelementptr	 %9682 XXX
%9684:	store	 %9683 %6792
%9685:	load	 %9682
%9686:	icmp	 %6798 XXX
%9687:	br	 %9686 if.end2250 if.then2247

BASIC BLOCK if.then2247
%9688:	zext	 %9685
%9689:	getelementptr	 %6798 %9688
%9690:	load	 %9689
%9691:	br	 if.end2250

BASIC BLOCK if.end2250
%9692:	phi	 %9690 %9685
%9693:	br	 do.end2251

BASIC BLOCK do.end2251
%9694:	br	 while.cond2213

BASIC BLOCK while.end2252
%9695:	phi	 %9672 %9648
%9696:	br	 if.end2253

BASIC BLOCK if.end2253
%9697:	phi	 %9647 %9615
%9698:	phi	 %9695 XXX
%9699:	zext	 %9697
%9700:	icmp	 %9699 XXX
%9701:	br	 %9700 if.else2318 if.then2257

BASIC BLOCK if.then2257
%9702:	load	 %6792
%9703:	icmp	 %9702 %6796
%9704:	br	 %9703 if.end2313 if.then2260

BASIC BLOCK if.then2260
%9705:	br	 do.body2261

BASIC BLOCK do.body2261
%9706:	load	 %6792
%9707:	icmp	 %9706 %6796
%9708:	br	 %9707 if.end2265 if.then2264

BASIC BLOCK if.then2264
%9709:	br	 return

BASIC BLOCK if.end2265
%9710:	load	 %6792
%9711:	getelementptr	 %9710 XXX
%9712:	store	 %9711 %6792
%9713:	load	 %9710
%9714:	icmp	 %6798 XXX
%9715:	br	 %9714 if.end2271 if.then2268

BASIC BLOCK if.then2268
%9716:	zext	 %9713
%9717:	getelementptr	 %6798 %9716
%9718:	load	 %9717
%9719:	br	 if.end2271

BASIC BLOCK if.end2271
%9720:	phi	 %9718 %9713
%9721:	br	 do.end2272

BASIC BLOCK do.end2272
%9722:	br	 while.cond2273

BASIC BLOCK while.cond2273
%9723:	phi	 %9720 %9768
%9724:	phi	 XXX %9748
%9725:	zext	 %9723
%9726:	and	 %9725 XXX
%9727:	icmp	 %9726 XXX
%9728:	br	 %9727 land.end2286 land.rhs2278

BASIC BLOCK land.rhs2278
%9729:	zext	 %9723
%9730:	sext	 %9729
%9731:	call	 __ctype_b_loc
%9732:	load	 %9731
%9733:	getelementptr	 %9732 %9730
%9734:	load	 %9733
%9735:	zext	 %9734
%9736:	and	 %9735 XXX
%9737:	icmp	 %9736 XXX
%9738:	br	 land.end2286

BASIC BLOCK land.end2286
%9739:	phi	 XXX %9737
%9740:	br	 %9739 while.end2312 while.body2287

BASIC BLOCK while.body2287
%9741:	icmp	 %9724 XXX
%9742:	br	 %9741 if.end2291 if.then2290

BASIC BLOCK if.then2290
%9743:	br	 if.end2291

BASIC BLOCK if.end2291
%9744:	phi	 XXX %9724
%9745:	mul	 %9744 XXX
%9746:	zext	 %9723
%9747:	add	 %9745 %9746
%9748:	sub	 %9747 XXX
%9749:	load	 %6792
%9750:	icmp	 %9749 %6796
%9751:	br	 %9750 if.end2299 if.then2298

BASIC BLOCK if.then2298
%9752:	br	 while.end2312

BASIC BLOCK if.end2299
%9753:	br	 do.body2300

BASIC BLOCK do.body2300
%9754:	load	 %6792
%9755:	icmp	 %9754 %6796
%9756:	br	 %9755 if.end2304 if.then2303

BASIC BLOCK if.then2303
%9757:	br	 return

BASIC BLOCK if.end2304
%9758:	load	 %6792
%9759:	getelementptr	 %9758 XXX
%9760:	store	 %9759 %6792
%9761:	load	 %9758
%9762:	icmp	 %6798 XXX
%9763:	br	 %9762 if.end2310 if.then2307

BASIC BLOCK if.then2307
%9764:	zext	 %9761
%9765:	getelementptr	 %6798 %9764
%9766:	load	 %9765
%9767:	br	 if.end2310

BASIC BLOCK if.end2310
%9768:	phi	 %9766 %9761
%9769:	br	 do.end2311

BASIC BLOCK do.end2311
%9770:	br	 while.cond2273

BASIC BLOCK while.end2312
%9771:	phi	 %9748 %9724
%9772:	br	 if.end2313

BASIC BLOCK if.end2313
%9773:	phi	 %9723 %9697
%9774:	phi	 %9771 XXX
%9775:	icmp	 %9774 XXX
%9776:	br	 %9775 if.end2317 if.then2316

BASIC BLOCK if.then2316
%9777:	br	 if.end2317

BASIC BLOCK if.end2317
%9778:	phi	 XXX %9774
%9779:	br	 if.end2319

BASIC BLOCK if.else2318
%9780:	br	 if.end2319

BASIC BLOCK if.end2319
%9781:	phi	 %9773 %9697
%9782:	phi	 %9778 %9698
%9783:	icmp	 %9698 XXX
%9784:	br	 %9783 lor.lhs.false2322 if.then2328

BASIC BLOCK lor.lhs.false2322
%9785:	icmp	 %9782 XXX
%9786:	br	 %9785 lor.lhs.false2325 if.then2328

BASIC BLOCK lor.lhs.false2325
%9787:	icmp	 %9698 %9782
%9788:	br	 %9787 if.end2333 if.then2328

BASIC BLOCK if.then2328
%9789:	and	 syntax XXX
%9790:	icmp	 %9789 XXX
%9791:	br	 %9790 if.else2332 if.then2331

BASIC BLOCK if.then2331
%9792:	br	 unfetch_interval

BASIC BLOCK if.else2332
%9793:	br	 return

BASIC BLOCK if.end2333
%9794:	and	 syntax XXX
%9795:	icmp	 %9794 XXX
%9796:	br	 %9795 if.then2336 if.end2354

BASIC BLOCK if.then2336
%9797:	zext	 %9781
%9798:	icmp	 %9797 XXX
%9799:	br	 %9798 if.end2341 if.then2340

BASIC BLOCK if.then2340
%9800:	br	 return

BASIC BLOCK if.end2341
%9801:	br	 do.body2342

BASIC BLOCK do.body2342
%9802:	load	 %6792
%9803:	icmp	 %9802 %6796
%9804:	br	 %9803 if.end2346 if.then2345

BASIC BLOCK if.then2345
%9805:	br	 return

BASIC BLOCK if.end2346
%9806:	load	 %6792
%9807:	getelementptr	 %9806 XXX
%9808:	store	 %9807 %6792
%9809:	load	 %9806
%9810:	icmp	 %6798 XXX
%9811:	br	 %9810 if.end2352 if.then2349

BASIC BLOCK if.then2349
%9812:	zext	 %9809
%9813:	getelementptr	 %6798 %9812
%9814:	load	 %9813
%9815:	br	 if.end2352

BASIC BLOCK if.end2352
%9816:	phi	 %9814 %9809
%9817:	br	 do.end2353

BASIC BLOCK do.end2353
%9818:	br	 if.end2354

BASIC BLOCK if.end2354
%9819:	phi	 %9781 %9816
%9820:	zext	 %9819
%9821:	icmp	 %9820 XXX
%9822:	br	 %9821 if.end2363 if.then2358

BASIC BLOCK if.then2358
%9823:	and	 syntax XXX
%9824:	icmp	 %9823 XXX
%9825:	br	 %9824 if.else2362 if.then2361

BASIC BLOCK if.then2361
%9826:	br	 unfetch_interval

BASIC BLOCK if.else2362
%9827:	br	 return

BASIC BLOCK if.end2363
%9828:	icmp	 %6863 XXX
%9829:	br	 %9828 if.then2365 if.end2376

BASIC BLOCK if.then2365
%9830:	and	 syntax XXX
%9831:	icmp	 %9830 XXX
%9832:	br	 %9831 if.else2369 if.then2368

BASIC BLOCK if.then2368
%9833:	br	 return

BASIC BLOCK if.else2369
%9834:	and	 syntax XXX
%9835:	icmp	 %9834 XXX
%9836:	br	 %9835 if.else2373 if.then2372

BASIC BLOCK if.then2372
%9837:	br	 if.end2374

BASIC BLOCK if.else2373
%9838:	br	 unfetch_interval

BASIC BLOCK if.end2374
%9839:	br	 if.end2375

BASIC BLOCK if.end2375
%9840:	br	 if.end2376

BASIC BLOCK if.end2376
%9841:	phi	 %6863 %6865
%9842:	icmp	 %9782 XXX
%9843:	br	 %9842 if.else2462 if.then2379

BASIC BLOCK if.then2379
%9844:	br	 while.cond2380

BASIC BLOCK while.cond2380
%9845:	phi	 %6861 %9938
%9846:	phi	 %6862 %9939
%9847:	phi	 %9841 %9940
%9848:	phi	 %6864 %9941
%9849:	phi	 %6865 %9942
%9850:	getelementptr	 bufp XXX XXX
%9851:	load	 %9850
%9852:	ptrtoint	 %9849
%9853:	ptrtoint	 %9851
%9854:	sub	 %9852 %9853
%9855:	add	 %9854 XXX
%9856:	getelementptr	 bufp XXX XXX
%9857:	load	 %9856
%9858:	icmp	 %9855 %9857
%9859:	br	 %9858 while.end2455 while.body2389

BASIC BLOCK while.body2389
%9860:	br	 do.body2390

BASIC BLOCK do.body2390
%9861:	getelementptr	 bufp XXX XXX
%9862:	load	 %9861
%9863:	getelementptr	 bufp XXX XXX
%9864:	load	 %9863
%9865:	icmp	 %9864 XXX
%9866:	br	 %9865 if.end2397 if.then2396

BASIC BLOCK if.then2396
%9867:	br	 return

BASIC BLOCK if.end2397
%9868:	getelementptr	 bufp XXX XXX
%9869:	load	 %9868
%9870:	shl	 %9869 XXX
%9871:	store	 %9870 %9868
%9872:	getelementptr	 bufp XXX XXX
%9873:	load	 %9872
%9874:	icmp	 %9873 XXX
%9875:	br	 %9874 if.end2405 if.then2403

BASIC BLOCK if.then2403
%9876:	getelementptr	 bufp XXX XXX
%9877:	store	 XXX %9876
%9878:	br	 if.end2405

BASIC BLOCK if.end2405
%9879:	getelementptr	 bufp XXX XXX
%9880:	load	 %9879
%9881:	getelementptr	 bufp XXX XXX
%9882:	load	 %9881
%9883:	call	 %9880 %9882 realloc
%9884:	getelementptr	 bufp XXX XXX
%9885:	store	 %9883 %9884
%9886:	getelementptr	 bufp XXX XXX
%9887:	load	 %9886
%9888:	icmp	 %9887 XXX
%9889:	br	 %9888 if.end2414 if.then2413

BASIC BLOCK if.then2413
%9890:	br	 return

BASIC BLOCK if.end2414
%9891:	getelementptr	 bufp XXX XXX
%9892:	load	 %9891
%9893:	icmp	 %9862 %9892
%9894:	br	 %9893 if.end2453 if.then2418

BASIC BLOCK if.then2418
%9895:	ptrtoint	 %9849
%9896:	ptrtoint	 %9862
%9897:	sub	 %9895 %9896
%9898:	getelementptr	 bufp XXX XXX
%9899:	load	 %9898
%9900:	getelementptr	 %9899 %9897
%9901:	ptrtoint	 %9846
%9902:	ptrtoint	 %9862
%9903:	sub	 %9901 %9902
%9904:	getelementptr	 bufp XXX XXX
%9905:	load	 %9904
%9906:	getelementptr	 %9905 %9903
%9907:	icmp	 %9845 XXX
%9908:	br	 %9907 if.end2436 if.then2430

BASIC BLOCK if.then2430
%9909:	ptrtoint	 %9845
%9910:	ptrtoint	 %9862
%9911:	sub	 %9909 %9910
%9912:	getelementptr	 bufp XXX XXX
%9913:	load	 %9912
%9914:	getelementptr	 %9913 %9911
%9915:	br	 if.end2436

BASIC BLOCK if.end2436
%9916:	phi	 %9914 %9845
%9917:	icmp	 %9847 XXX
%9918:	br	 %9917 if.end2444 if.then2438

BASIC BLOCK if.then2438
%9919:	ptrtoint	 %9847
%9920:	ptrtoint	 %9862
%9921:	sub	 %9919 %9920
%9922:	getelementptr	 bufp XXX XXX
%9923:	load	 %9922
%9924:	getelementptr	 %9923 %9921
%9925:	br	 if.end2444

BASIC BLOCK if.end2444
%9926:	phi	 %9924 %9847
%9927:	icmp	 %9848 XXX
%9928:	br	 %9927 if.end2452 if.then2446

BASIC BLOCK if.then2446
%9929:	ptrtoint	 %9848
%9930:	ptrtoint	 %9862
%9931:	sub	 %9929 %9930
%9932:	getelementptr	 bufp XXX XXX
%9933:	load	 %9932
%9934:	getelementptr	 %9933 %9931
%9935:	br	 if.end2452

BASIC BLOCK if.end2452
%9936:	phi	 %9934 %9848
%9937:	br	 if.end2453

BASIC BLOCK if.end2453
%9938:	phi	 %9916 %9845
%9939:	phi	 %9906 %9846
%9940:	phi	 %9926 %9847
%9941:	phi	 %9936 %9848
%9942:	phi	 %9900 %9849
%9943:	br	 do.end2454

BASIC BLOCK do.end2454
%9944:	br	 while.cond2380

BASIC BLOCK while.end2455
%9945:	getelementptr	 %9849 XXX
%9946:	ptrtoint	 %9945
%9947:	ptrtoint	 %9847
%9948:	sub	 %9946 %9947
%9949:	sub	 %9948 XXX
%9950:	call	 XXX %9847 %9949 %9849 XXX
%9951:	getelementptr	 %9849 XXX
%9952:	br	 if.end2572

BASIC BLOCK if.else2462
%9953:	icmp	 %9782 XXX
%9954:	zext	 %9953
%9955:	mul	 %9954 XXX
%9956:	add	 XXX %9955
%9957:	br	 while.cond2467

BASIC BLOCK while.cond2467
%9958:	phi	 %6861 %10052
%9959:	phi	 %6862 %10053
%9960:	phi	 %9841 %10054
%9961:	phi	 %6864 %10055
%9962:	phi	 %6865 %10056
%9963:	getelementptr	 bufp XXX XXX
%9964:	load	 %9963
%9965:	ptrtoint	 %9962
%9966:	ptrtoint	 %9964
%9967:	sub	 %9965 %9966
%9968:	zext	 %9956
%9969:	add	 %9967 %9968
%9970:	getelementptr	 bufp XXX XXX
%9971:	load	 %9970
%9972:	icmp	 %9969 %9971
%9973:	br	 %9972 while.end2543 while.body2477

BASIC BLOCK while.body2477
%9974:	br	 do.body2478

BASIC BLOCK do.body2478
%9975:	getelementptr	 bufp XXX XXX
%9976:	load	 %9975
%9977:	getelementptr	 bufp XXX XXX
%9978:	load	 %9977
%9979:	icmp	 %9978 XXX
%9980:	br	 %9979 if.end2485 if.then2484

BASIC BLOCK if.then2484
%9981:	br	 return

BASIC BLOCK if.end2485
%9982:	getelementptr	 bufp XXX XXX
%9983:	load	 %9982
%9984:	shl	 %9983 XXX
%9985:	store	 %9984 %9982
%9986:	getelementptr	 bufp XXX XXX
%9987:	load	 %9986
%9988:	icmp	 %9987 XXX
%9989:	br	 %9988 if.end2493 if.then2491

BASIC BLOCK if.then2491
%9990:	getelementptr	 bufp XXX XXX
%9991:	store	 XXX %9990
%9992:	br	 if.end2493

BASIC BLOCK if.end2493
%9993:	getelementptr	 bufp XXX XXX
%9994:	load	 %9993
%9995:	getelementptr	 bufp XXX XXX
%9996:	load	 %9995
%9997:	call	 %9994 %9996 realloc
%9998:	getelementptr	 bufp XXX XXX
%9999:	store	 %9997 %9998
%10000:	getelementptr	 bufp XXX XXX
%10001:	load	 %10000
%10002:	icmp	 %10001 XXX
%10003:	br	 %10002 if.end2502 if.then2501

BASIC BLOCK if.then2501
%10004:	br	 return

BASIC BLOCK if.end2502
%10005:	getelementptr	 bufp XXX XXX
%10006:	load	 %10005
%10007:	icmp	 %9976 %10006
%10008:	br	 %10007 if.end2541 if.then2506

BASIC BLOCK if.then2506
%10009:	ptrtoint	 %9962
%10010:	ptrtoint	 %9976
%10011:	sub	 %10009 %10010
%10012:	getelementptr	 bufp XXX XXX
%10013:	load	 %10012
%10014:	getelementptr	 %10013 %10011
%10015:	ptrtoint	 %9959
%10016:	ptrtoint	 %9976
%10017:	sub	 %10015 %10016
%10018:	getelementptr	 bufp XXX XXX
%10019:	load	 %10018
%10020:	getelementptr	 %10019 %10017
%10021:	icmp	 %9958 XXX
%10022:	br	 %10021 if.end2524 if.then2518

BASIC BLOCK if.then2518
%10023:	ptrtoint	 %9958
%10024:	ptrtoint	 %9976
%10025:	sub	 %10023 %10024
%10026:	getelementptr	 bufp XXX XXX
%10027:	load	 %10026
%10028:	getelementptr	 %10027 %10025
%10029:	br	 if.end2524

BASIC BLOCK if.end2524
%10030:	phi	 %10028 %9958
%10031:	icmp	 %9960 XXX
%10032:	br	 %10031 if.end2532 if.then2526

BASIC BLOCK if.then2526
%10033:	ptrtoint	 %9960
%10034:	ptrtoint	 %9976
%10035:	sub	 %10033 %10034
%10036:	getelementptr	 bufp XXX XXX
%10037:	load	 %10036
%10038:	getelementptr	 %10037 %10035
%10039:	br	 if.end2532

BASIC BLOCK if.end2532
%10040:	phi	 %10038 %9960
%10041:	icmp	 %9961 XXX
%10042:	br	 %10041 if.end2540 if.then2534

BASIC BLOCK if.then2534
%10043:	ptrtoint	 %9961
%10044:	ptrtoint	 %9976
%10045:	sub	 %10043 %10044
%10046:	getelementptr	 bufp XXX XXX
%10047:	load	 %10046
%10048:	getelementptr	 %10047 %10045
%10049:	br	 if.end2540

BASIC BLOCK if.end2540
%10050:	phi	 %10048 %9961
%10051:	br	 if.end2541

BASIC BLOCK if.end2541
%10052:	phi	 %10030 %9958
%10053:	phi	 %10020 %9959
%10054:	phi	 %10040 %9960
%10055:	phi	 %10050 %9961
%10056:	phi	 %10014 %9962
%10057:	br	 do.end2542

BASIC BLOCK do.end2542
%10058:	br	 while.cond2467

BASIC BLOCK while.end2543
%10059:	getelementptr	 %9962 XXX
%10060:	icmp	 %9782 XXX
%10061:	zext	 %10060
%10062:	mul	 %10061 XXX
%10063:	sext	 %10062
%10064:	getelementptr	 %10059 %10063
%10065:	ptrtoint	 %10064
%10066:	ptrtoint	 %9960
%10067:	sub	 %10065 %10066
%10068:	sub	 %10067 XXX
%10069:	call	 XXX %9960 %10068 %9698 %9962 XXX
%10070:	getelementptr	 %9962 XXX
%10071:	call	 XXX %9960 XXX %9698 %10070 insert_op2
%10072:	getelementptr	 %10070 XXX
%10073:	icmp	 %9782 XXX
%10074:	br	 %10073 if.end2571 if.then2558

BASIC BLOCK if.then2558
%10075:	getelementptr	 %9960 XXX
%10076:	ptrtoint	 %10075
%10077:	ptrtoint	 %10072
%10078:	sub	 %10076 %10077
%10079:	sub	 %10078 XXX
%10080:	sub	 %9782 XXX
%10081:	call	 XXX %10072 %10079 %10080 XXX
%10082:	getelementptr	 %10072 XXX
%10083:	ptrtoint	 %10082
%10084:	ptrtoint	 %9960
%10085:	sub	 %10083 %10084
%10086:	sub	 %9782 XXX
%10087:	call	 XXX %9960 %10085 %10086 %10082 XXX
%10088:	getelementptr	 %10082 XXX
%10089:	br	 if.end2571

BASIC BLOCK if.end2571
%10090:	phi	 %10088 %10072
%10091:	br	 if.end2572

BASIC BLOCK if.end2572
%10092:	phi	 %9845 %9958
%10093:	phi	 %9846 %9959
%10094:	phi	 %9847 %9960
%10095:	phi	 %9951 %10090
%10096:	br	 sw.epilog

BASIC BLOCK unfetch_interval
%10097:	store	 %9617 %6792
%10098:	br	 do.body2573

BASIC BLOCK do.body2573
%10099:	load	 %6792
%10100:	icmp	 %10099 %6796
%10101:	br	 %10100 if.end2577 if.then2576

BASIC BLOCK if.then2576
%10102:	br	 return

BASIC BLOCK if.end2577
%10103:	load	 %6792
%10104:	getelementptr	 %10103 XXX
%10105:	store	 %10104 %6792
%10106:	load	 %10103
%10107:	icmp	 %6798 XXX
%10108:	br	 %10107 if.end2583 if.then2580

BASIC BLOCK if.then2580
%10109:	zext	 %10106
%10110:	getelementptr	 %6798 %10109
%10111:	load	 %10110
%10112:	br	 if.end2583

BASIC BLOCK if.end2583
%10113:	phi	 %10111 %10106
%10114:	br	 do.end2584

BASIC BLOCK do.end2584
%10115:	and	 syntax XXX
%10116:	icmp	 %10115 XXX
%10117:	br	 %10116 if.then2587 if.end2597

BASIC BLOCK if.then2587
%10118:	load	 %6792
%10119:	icmp	 %10118 pattern
%10120:	br	 %10119 if.end2596 land.lhs.true2590

BASIC BLOCK land.lhs.true2590
%10121:	load	 %6792
%10122:	getelementptr	 %10121 XXX
%10123:	load	 %10122
%10124:	sext	 %10123
%10125:	icmp	 %10124 XXX
%10126:	br	 %10125 if.end2596 if.then2595

BASIC BLOCK if.then2595
%10127:	br	 normal_backslash

BASIC BLOCK if.end2596
%10128:	br	 if.end2597

BASIC BLOCK if.end2597
%10129:	br	 normal_char

BASIC BLOCK sw.bb2598
%10130:	br	 do.body2599

BASIC BLOCK do.body2599
%10131:	br	 while.cond2600

BASIC BLOCK while.cond2600
%10132:	phi	 %6861 %10225
%10133:	phi	 %6862 %10226
%10134:	phi	 %6865 %10227
%10135:	phi	 %6864 %10228
%10136:	phi	 %6865 %10229
%10137:	getelementptr	 bufp XXX XXX
%10138:	load	 %10137
%10139:	ptrtoint	 %10136
%10140:	ptrtoint	 %10138
%10141:	sub	 %10139 %10140
%10142:	add	 %10141 XXX
%10143:	getelementptr	 bufp XXX XXX
%10144:	load	 %10143
%10145:	icmp	 %10142 %10144
%10146:	br	 %10145 while.end2675 while.body2609

BASIC BLOCK while.body2609
%10147:	br	 do.body2610

BASIC BLOCK do.body2610
%10148:	getelementptr	 bufp XXX XXX
%10149:	load	 %10148
%10150:	getelementptr	 bufp XXX XXX
%10151:	load	 %10150
%10152:	icmp	 %10151 XXX
%10153:	br	 %10152 if.end2617 if.then2616

BASIC BLOCK if.then2616
%10154:	br	 return

BASIC BLOCK if.end2617
%10155:	getelementptr	 bufp XXX XXX
%10156:	load	 %10155
%10157:	shl	 %10156 XXX
%10158:	store	 %10157 %10155
%10159:	getelementptr	 bufp XXX XXX
%10160:	load	 %10159
%10161:	icmp	 %10160 XXX
%10162:	br	 %10161 if.end2625 if.then2623

BASIC BLOCK if.then2623
%10163:	getelementptr	 bufp XXX XXX
%10164:	store	 XXX %10163
%10165:	br	 if.end2625

BASIC BLOCK if.end2625
%10166:	getelementptr	 bufp XXX XXX
%10167:	load	 %10166
%10168:	getelementptr	 bufp XXX XXX
%10169:	load	 %10168
%10170:	call	 %10167 %10169 realloc
%10171:	getelementptr	 bufp XXX XXX
%10172:	store	 %10170 %10171
%10173:	getelementptr	 bufp XXX XXX
%10174:	load	 %10173
%10175:	icmp	 %10174 XXX
%10176:	br	 %10175 if.end2634 if.then2633

BASIC BLOCK if.then2633
%10177:	br	 return

BASIC BLOCK if.end2634
%10178:	getelementptr	 bufp XXX XXX
%10179:	load	 %10178
%10180:	icmp	 %10149 %10179
%10181:	br	 %10180 if.end2673 if.then2638

BASIC BLOCK if.then2638
%10182:	ptrtoint	 %10136
%10183:	ptrtoint	 %10149
%10184:	sub	 %10182 %10183
%10185:	getelementptr	 bufp XXX XXX
%10186:	load	 %10185
%10187:	getelementptr	 %10186 %10184
%10188:	ptrtoint	 %10133
%10189:	ptrtoint	 %10149
%10190:	sub	 %10188 %10189
%10191:	getelementptr	 bufp XXX XXX
%10192:	load	 %10191
%10193:	getelementptr	 %10192 %10190
%10194:	icmp	 %10132 XXX
%10195:	br	 %10194 if.end2656 if.then2650

BASIC BLOCK if.then2650
%10196:	ptrtoint	 %10132
%10197:	ptrtoint	 %10149
%10198:	sub	 %10196 %10197
%10199:	getelementptr	 bufp XXX XXX
%10200:	load	 %10199
%10201:	getelementptr	 %10200 %10198
%10202:	br	 if.end2656

BASIC BLOCK if.end2656
%10203:	phi	 %10201 %10132
%10204:	icmp	 %10134 XXX
%10205:	br	 %10204 if.end2664 if.then2658

BASIC BLOCK if.then2658
%10206:	ptrtoint	 %10134
%10207:	ptrtoint	 %10149
%10208:	sub	 %10206 %10207
%10209:	getelementptr	 bufp XXX XXX
%10210:	load	 %10209
%10211:	getelementptr	 %10210 %10208
%10212:	br	 if.end2664

BASIC BLOCK if.end2664
%10213:	phi	 %10211 %10134
%10214:	icmp	 %10135 XXX
%10215:	br	 %10214 if.end2672 if.then2666

BASIC BLOCK if.then2666
%10216:	ptrtoint	 %10135
%10217:	ptrtoint	 %10149
%10218:	sub	 %10216 %10217
%10219:	getelementptr	 bufp XXX XXX
%10220:	load	 %10219
%10221:	getelementptr	 %10220 %10218
%10222:	br	 if.end2672

BASIC BLOCK if.end2672
%10223:	phi	 %10221 %10135
%10224:	br	 if.end2673

BASIC BLOCK if.end2673
%10225:	phi	 %10203 %10132
%10226:	phi	 %10193 %10133
%10227:	phi	 %10213 %10134
%10228:	phi	 %10223 %10135
%10229:	phi	 %10187 %10136
%10230:	br	 do.end2674

BASIC BLOCK do.end2674
%10231:	br	 while.cond2600

BASIC BLOCK while.end2675
%10232:	getelementptr	 %10136 XXX
%10233:	store	 XXX %10136
%10234:	br	 do.end2677

BASIC BLOCK do.end2677
%10235:	br	 sw.epilog

BASIC BLOCK sw.bb2678
%10236:	br	 do.body2679

BASIC BLOCK do.body2679
%10237:	br	 while.cond2680

BASIC BLOCK while.cond2680
%10238:	phi	 %6861 %10331
%10239:	phi	 %6862 %10332
%10240:	phi	 %6865 %10333
%10241:	phi	 %6864 %10334
%10242:	phi	 %6865 %10335
%10243:	getelementptr	 bufp XXX XXX
%10244:	load	 %10243
%10245:	ptrtoint	 %10242
%10246:	ptrtoint	 %10244
%10247:	sub	 %10245 %10246
%10248:	add	 %10247 XXX
%10249:	getelementptr	 bufp XXX XXX
%10250:	load	 %10249
%10251:	icmp	 %10248 %10250
%10252:	br	 %10251 while.end2755 while.body2689

BASIC BLOCK while.body2689
%10253:	br	 do.body2690

BASIC BLOCK do.body2690
%10254:	getelementptr	 bufp XXX XXX
%10255:	load	 %10254
%10256:	getelementptr	 bufp XXX XXX
%10257:	load	 %10256
%10258:	icmp	 %10257 XXX
%10259:	br	 %10258 if.end2697 if.then2696

BASIC BLOCK if.then2696
%10260:	br	 return

BASIC BLOCK if.end2697
%10261:	getelementptr	 bufp XXX XXX
%10262:	load	 %10261
%10263:	shl	 %10262 XXX
%10264:	store	 %10263 %10261
%10265:	getelementptr	 bufp XXX XXX
%10266:	load	 %10265
%10267:	icmp	 %10266 XXX
%10268:	br	 %10267 if.end2705 if.then2703

BASIC BLOCK if.then2703
%10269:	getelementptr	 bufp XXX XXX
%10270:	store	 XXX %10269
%10271:	br	 if.end2705

BASIC BLOCK if.end2705
%10272:	getelementptr	 bufp XXX XXX
%10273:	load	 %10272
%10274:	getelementptr	 bufp XXX XXX
%10275:	load	 %10274
%10276:	call	 %10273 %10275 realloc
%10277:	getelementptr	 bufp XXX XXX
%10278:	store	 %10276 %10277
%10279:	getelementptr	 bufp XXX XXX
%10280:	load	 %10279
%10281:	icmp	 %10280 XXX
%10282:	br	 %10281 if.end2714 if.then2713

BASIC BLOCK if.then2713
%10283:	br	 return

BASIC BLOCK if.end2714
%10284:	getelementptr	 bufp XXX XXX
%10285:	load	 %10284
%10286:	icmp	 %10255 %10285
%10287:	br	 %10286 if.end2753 if.then2718

BASIC BLOCK if.then2718
%10288:	ptrtoint	 %10242
%10289:	ptrtoint	 %10255
%10290:	sub	 %10288 %10289
%10291:	getelementptr	 bufp XXX XXX
%10292:	load	 %10291
%10293:	getelementptr	 %10292 %10290
%10294:	ptrtoint	 %10239
%10295:	ptrtoint	 %10255
%10296:	sub	 %10294 %10295
%10297:	getelementptr	 bufp XXX XXX
%10298:	load	 %10297
%10299:	getelementptr	 %10298 %10296
%10300:	icmp	 %10238 XXX
%10301:	br	 %10300 if.end2736 if.then2730

BASIC BLOCK if.then2730
%10302:	ptrtoint	 %10238
%10303:	ptrtoint	 %10255
%10304:	sub	 %10302 %10303
%10305:	getelementptr	 bufp XXX XXX
%10306:	load	 %10305
%10307:	getelementptr	 %10306 %10304
%10308:	br	 if.end2736

BASIC BLOCK if.end2736
%10309:	phi	 %10307 %10238
%10310:	icmp	 %10240 XXX
%10311:	br	 %10310 if.end2744 if.then2738

BASIC BLOCK if.then2738
%10312:	ptrtoint	 %10240
%10313:	ptrtoint	 %10255
%10314:	sub	 %10312 %10313
%10315:	getelementptr	 bufp XXX XXX
%10316:	load	 %10315
%10317:	getelementptr	 %10316 %10314
%10318:	br	 if.end2744

BASIC BLOCK if.end2744
%10319:	phi	 %10317 %10240
%10320:	icmp	 %10241 XXX
%10321:	br	 %10320 if.end2752 if.then2746

BASIC BLOCK if.then2746
%10322:	ptrtoint	 %10241
%10323:	ptrtoint	 %10255
%10324:	sub	 %10322 %10323
%10325:	getelementptr	 bufp XXX XXX
%10326:	load	 %10325
%10327:	getelementptr	 %10326 %10324
%10328:	br	 if.end2752

BASIC BLOCK if.end2752
%10329:	phi	 %10327 %10241
%10330:	br	 if.end2753

BASIC BLOCK if.end2753
%10331:	phi	 %10309 %10238
%10332:	phi	 %10299 %10239
%10333:	phi	 %10319 %10240
%10334:	phi	 %10329 %10241
%10335:	phi	 %10293 %10242
%10336:	br	 do.end2754

BASIC BLOCK do.end2754
%10337:	br	 while.cond2680

BASIC BLOCK while.end2755
%10338:	getelementptr	 %10242 XXX
%10339:	store	 XXX %10242
%10340:	br	 do.end2757

BASIC BLOCK do.end2757
%10341:	br	 sw.epilog

BASIC BLOCK sw.bb2758
%10342:	br	 do.body2759

BASIC BLOCK do.body2759
%10343:	br	 while.cond2760

BASIC BLOCK while.cond2760
%10344:	phi	 %6861 %10437
%10345:	phi	 %6862 %10438
%10346:	phi	 %6863 %10439
%10347:	phi	 %6864 %10440
%10348:	phi	 %6865 %10441
%10349:	getelementptr	 bufp XXX XXX
%10350:	load	 %10349
%10351:	ptrtoint	 %10348
%10352:	ptrtoint	 %10350
%10353:	sub	 %10351 %10352
%10354:	add	 %10353 XXX
%10355:	getelementptr	 bufp XXX XXX
%10356:	load	 %10355
%10357:	icmp	 %10354 %10356
%10358:	br	 %10357 while.end2835 while.body2769

BASIC BLOCK while.body2769
%10359:	br	 do.body2770

BASIC BLOCK do.body2770
%10360:	getelementptr	 bufp XXX XXX
%10361:	load	 %10360
%10362:	getelementptr	 bufp XXX XXX
%10363:	load	 %10362
%10364:	icmp	 %10363 XXX
%10365:	br	 %10364 if.end2777 if.then2776

BASIC BLOCK if.then2776
%10366:	br	 return

BASIC BLOCK if.end2777
%10367:	getelementptr	 bufp XXX XXX
%10368:	load	 %10367
%10369:	shl	 %10368 XXX
%10370:	store	 %10369 %10367
%10371:	getelementptr	 bufp XXX XXX
%10372:	load	 %10371
%10373:	icmp	 %10372 XXX
%10374:	br	 %10373 if.end2785 if.then2783

BASIC BLOCK if.then2783
%10375:	getelementptr	 bufp XXX XXX
%10376:	store	 XXX %10375
%10377:	br	 if.end2785

BASIC BLOCK if.end2785
%10378:	getelementptr	 bufp XXX XXX
%10379:	load	 %10378
%10380:	getelementptr	 bufp XXX XXX
%10381:	load	 %10380
%10382:	call	 %10379 %10381 realloc
%10383:	getelementptr	 bufp XXX XXX
%10384:	store	 %10382 %10383
%10385:	getelementptr	 bufp XXX XXX
%10386:	load	 %10385
%10387:	icmp	 %10386 XXX
%10388:	br	 %10387 if.end2794 if.then2793

BASIC BLOCK if.then2793
%10389:	br	 return

BASIC BLOCK if.end2794
%10390:	getelementptr	 bufp XXX XXX
%10391:	load	 %10390
%10392:	icmp	 %10361 %10391
%10393:	br	 %10392 if.end2833 if.then2798

BASIC BLOCK if.then2798
%10394:	ptrtoint	 %10348
%10395:	ptrtoint	 %10361
%10396:	sub	 %10394 %10395
%10397:	getelementptr	 bufp XXX XXX
%10398:	load	 %10397
%10399:	getelementptr	 %10398 %10396
%10400:	ptrtoint	 %10345
%10401:	ptrtoint	 %10361
%10402:	sub	 %10400 %10401
%10403:	getelementptr	 bufp XXX XXX
%10404:	load	 %10403
%10405:	getelementptr	 %10404 %10402
%10406:	icmp	 %10344 XXX
%10407:	br	 %10406 if.end2816 if.then2810

BASIC BLOCK if.then2810
%10408:	ptrtoint	 %10344
%10409:	ptrtoint	 %10361
%10410:	sub	 %10408 %10409
%10411:	getelementptr	 bufp XXX XXX
%10412:	load	 %10411
%10413:	getelementptr	 %10412 %10410
%10414:	br	 if.end2816

BASIC BLOCK if.end2816
%10415:	phi	 %10413 %10344
%10416:	icmp	 %10346 XXX
%10417:	br	 %10416 if.end2824 if.then2818

BASIC BLOCK if.then2818
%10418:	ptrtoint	 %10346
%10419:	ptrtoint	 %10361
%10420:	sub	 %10418 %10419
%10421:	getelementptr	 bufp XXX XXX
%10422:	load	 %10421
%10423:	getelementptr	 %10422 %10420
%10424:	br	 if.end2824

BASIC BLOCK if.end2824
%10425:	phi	 %10423 %10346
%10426:	icmp	 %10347 XXX
%10427:	br	 %10426 if.end2832 if.then2826

BASIC BLOCK if.then2826
%10428:	ptrtoint	 %10347
%10429:	ptrtoint	 %10361
%10430:	sub	 %10428 %10429
%10431:	getelementptr	 bufp XXX XXX
%10432:	load	 %10431
%10433:	getelementptr	 %10432 %10430
%10434:	br	 if.end2832

BASIC BLOCK if.end2832
%10435:	phi	 %10433 %10347
%10436:	br	 if.end2833

BASIC BLOCK if.end2833
%10437:	phi	 %10415 %10344
%10438:	phi	 %10405 %10345
%10439:	phi	 %10425 %10346
%10440:	phi	 %10435 %10347
%10441:	phi	 %10399 %10348
%10442:	br	 do.end2834

BASIC BLOCK do.end2834
%10443:	br	 while.cond2760

BASIC BLOCK while.end2835
%10444:	getelementptr	 %10348 XXX
%10445:	store	 XXX %10348
%10446:	br	 do.end2837

BASIC BLOCK do.end2837
%10447:	br	 sw.epilog

BASIC BLOCK sw.bb2838
%10448:	br	 do.body2839

BASIC BLOCK do.body2839
%10449:	br	 while.cond2840

BASIC BLOCK while.cond2840
%10450:	phi	 %6861 %10543
%10451:	phi	 %6862 %10544
%10452:	phi	 %6863 %10545
%10453:	phi	 %6864 %10546
%10454:	phi	 %6865 %10547
%10455:	getelementptr	 bufp XXX XXX
%10456:	load	 %10455
%10457:	ptrtoint	 %10454
%10458:	ptrtoint	 %10456
%10459:	sub	 %10457 %10458
%10460:	add	 %10459 XXX
%10461:	getelementptr	 bufp XXX XXX
%10462:	load	 %10461
%10463:	icmp	 %10460 %10462
%10464:	br	 %10463 while.end2915 while.body2849

BASIC BLOCK while.body2849
%10465:	br	 do.body2850

BASIC BLOCK do.body2850
%10466:	getelementptr	 bufp XXX XXX
%10467:	load	 %10466
%10468:	getelementptr	 bufp XXX XXX
%10469:	load	 %10468
%10470:	icmp	 %10469 XXX
%10471:	br	 %10470 if.end2857 if.then2856

BASIC BLOCK if.then2856
%10472:	br	 return

BASIC BLOCK if.end2857
%10473:	getelementptr	 bufp XXX XXX
%10474:	load	 %10473
%10475:	shl	 %10474 XXX
%10476:	store	 %10475 %10473
%10477:	getelementptr	 bufp XXX XXX
%10478:	load	 %10477
%10479:	icmp	 %10478 XXX
%10480:	br	 %10479 if.end2865 if.then2863

BASIC BLOCK if.then2863
%10481:	getelementptr	 bufp XXX XXX
%10482:	store	 XXX %10481
%10483:	br	 if.end2865

BASIC BLOCK if.end2865
%10484:	getelementptr	 bufp XXX XXX
%10485:	load	 %10484
%10486:	getelementptr	 bufp XXX XXX
%10487:	load	 %10486
%10488:	call	 %10485 %10487 realloc
%10489:	getelementptr	 bufp XXX XXX
%10490:	store	 %10488 %10489
%10491:	getelementptr	 bufp XXX XXX
%10492:	load	 %10491
%10493:	icmp	 %10492 XXX
%10494:	br	 %10493 if.end2874 if.then2873

BASIC BLOCK if.then2873
%10495:	br	 return

BASIC BLOCK if.end2874
%10496:	getelementptr	 bufp XXX XXX
%10497:	load	 %10496
%10498:	icmp	 %10467 %10497
%10499:	br	 %10498 if.end2913 if.then2878

BASIC BLOCK if.then2878
%10500:	ptrtoint	 %10454
%10501:	ptrtoint	 %10467
%10502:	sub	 %10500 %10501
%10503:	getelementptr	 bufp XXX XXX
%10504:	load	 %10503
%10505:	getelementptr	 %10504 %10502
%10506:	ptrtoint	 %10451
%10507:	ptrtoint	 %10467
%10508:	sub	 %10506 %10507
%10509:	getelementptr	 bufp XXX XXX
%10510:	load	 %10509
%10511:	getelementptr	 %10510 %10508
%10512:	icmp	 %10450 XXX
%10513:	br	 %10512 if.end2896 if.then2890

BASIC BLOCK if.then2890
%10514:	ptrtoint	 %10450
%10515:	ptrtoint	 %10467
%10516:	sub	 %10514 %10515
%10517:	getelementptr	 bufp XXX XXX
%10518:	load	 %10517
%10519:	getelementptr	 %10518 %10516
%10520:	br	 if.end2896

BASIC BLOCK if.end2896
%10521:	phi	 %10519 %10450
%10522:	icmp	 %10452 XXX
%10523:	br	 %10522 if.end2904 if.then2898

BASIC BLOCK if.then2898
%10524:	ptrtoint	 %10452
%10525:	ptrtoint	 %10467
%10526:	sub	 %10524 %10525
%10527:	getelementptr	 bufp XXX XXX
%10528:	load	 %10527
%10529:	getelementptr	 %10528 %10526
%10530:	br	 if.end2904

BASIC BLOCK if.end2904
%10531:	phi	 %10529 %10452
%10532:	icmp	 %10453 XXX
%10533:	br	 %10532 if.end2912 if.then2906

BASIC BLOCK if.then2906
%10534:	ptrtoint	 %10453
%10535:	ptrtoint	 %10467
%10536:	sub	 %10534 %10535
%10537:	getelementptr	 bufp XXX XXX
%10538:	load	 %10537
%10539:	getelementptr	 %10538 %10536
%10540:	br	 if.end2912

BASIC BLOCK if.end2912
%10541:	phi	 %10539 %10453
%10542:	br	 if.end2913

BASIC BLOCK if.end2913
%10543:	phi	 %10521 %10450
%10544:	phi	 %10511 %10451
%10545:	phi	 %10531 %10452
%10546:	phi	 %10541 %10453
%10547:	phi	 %10505 %10454
%10548:	br	 do.end2914

BASIC BLOCK do.end2914
%10549:	br	 while.cond2840

BASIC BLOCK while.end2915
%10550:	getelementptr	 %10454 XXX
%10551:	store	 XXX %10454
%10552:	br	 do.end2917

BASIC BLOCK do.end2917
%10553:	br	 sw.epilog

BASIC BLOCK sw.bb2918
%10554:	br	 do.body2919

BASIC BLOCK do.body2919
%10555:	br	 while.cond2920

BASIC BLOCK while.cond2920
%10556:	phi	 %6861 %10649
%10557:	phi	 %6862 %10650
%10558:	phi	 %6863 %10651
%10559:	phi	 %6864 %10652
%10560:	phi	 %6865 %10653
%10561:	getelementptr	 bufp XXX XXX
%10562:	load	 %10561
%10563:	ptrtoint	 %10560
%10564:	ptrtoint	 %10562
%10565:	sub	 %10563 %10564
%10566:	add	 %10565 XXX
%10567:	getelementptr	 bufp XXX XXX
%10568:	load	 %10567
%10569:	icmp	 %10566 %10568
%10570:	br	 %10569 while.end2995 while.body2929

BASIC BLOCK while.body2929
%10571:	br	 do.body2930

BASIC BLOCK do.body2930
%10572:	getelementptr	 bufp XXX XXX
%10573:	load	 %10572
%10574:	getelementptr	 bufp XXX XXX
%10575:	load	 %10574
%10576:	icmp	 %10575 XXX
%10577:	br	 %10576 if.end2937 if.then2936

BASIC BLOCK if.then2936
%10578:	br	 return

BASIC BLOCK if.end2937
%10579:	getelementptr	 bufp XXX XXX
%10580:	load	 %10579
%10581:	shl	 %10580 XXX
%10582:	store	 %10581 %10579
%10583:	getelementptr	 bufp XXX XXX
%10584:	load	 %10583
%10585:	icmp	 %10584 XXX
%10586:	br	 %10585 if.end2945 if.then2943

BASIC BLOCK if.then2943
%10587:	getelementptr	 bufp XXX XXX
%10588:	store	 XXX %10587
%10589:	br	 if.end2945

BASIC BLOCK if.end2945
%10590:	getelementptr	 bufp XXX XXX
%10591:	load	 %10590
%10592:	getelementptr	 bufp XXX XXX
%10593:	load	 %10592
%10594:	call	 %10591 %10593 realloc
%10595:	getelementptr	 bufp XXX XXX
%10596:	store	 %10594 %10595
%10597:	getelementptr	 bufp XXX XXX
%10598:	load	 %10597
%10599:	icmp	 %10598 XXX
%10600:	br	 %10599 if.end2954 if.then2953

BASIC BLOCK if.then2953
%10601:	br	 return

BASIC BLOCK if.end2954
%10602:	getelementptr	 bufp XXX XXX
%10603:	load	 %10602
%10604:	icmp	 %10573 %10603
%10605:	br	 %10604 if.end2993 if.then2958

BASIC BLOCK if.then2958
%10606:	ptrtoint	 %10560
%10607:	ptrtoint	 %10573
%10608:	sub	 %10606 %10607
%10609:	getelementptr	 bufp XXX XXX
%10610:	load	 %10609
%10611:	getelementptr	 %10610 %10608
%10612:	ptrtoint	 %10557
%10613:	ptrtoint	 %10573
%10614:	sub	 %10612 %10613
%10615:	getelementptr	 bufp XXX XXX
%10616:	load	 %10615
%10617:	getelementptr	 %10616 %10614
%10618:	icmp	 %10556 XXX
%10619:	br	 %10618 if.end2976 if.then2970

BASIC BLOCK if.then2970
%10620:	ptrtoint	 %10556
%10621:	ptrtoint	 %10573
%10622:	sub	 %10620 %10621
%10623:	getelementptr	 bufp XXX XXX
%10624:	load	 %10623
%10625:	getelementptr	 %10624 %10622
%10626:	br	 if.end2976

BASIC BLOCK if.end2976
%10627:	phi	 %10625 %10556
%10628:	icmp	 %10558 XXX
%10629:	br	 %10628 if.end2984 if.then2978

BASIC BLOCK if.then2978
%10630:	ptrtoint	 %10558
%10631:	ptrtoint	 %10573
%10632:	sub	 %10630 %10631
%10633:	getelementptr	 bufp XXX XXX
%10634:	load	 %10633
%10635:	getelementptr	 %10634 %10632
%10636:	br	 if.end2984

BASIC BLOCK if.end2984
%10637:	phi	 %10635 %10558
%10638:	icmp	 %10559 XXX
%10639:	br	 %10638 if.end2992 if.then2986

BASIC BLOCK if.then2986
%10640:	ptrtoint	 %10559
%10641:	ptrtoint	 %10573
%10642:	sub	 %10640 %10641
%10643:	getelementptr	 bufp XXX XXX
%10644:	load	 %10643
%10645:	getelementptr	 %10644 %10642
%10646:	br	 if.end2992

BASIC BLOCK if.end2992
%10647:	phi	 %10645 %10559
%10648:	br	 if.end2993

BASIC BLOCK if.end2993
%10649:	phi	 %10627 %10556
%10650:	phi	 %10617 %10557
%10651:	phi	 %10637 %10558
%10652:	phi	 %10647 %10559
%10653:	phi	 %10611 %10560
%10654:	br	 do.end2994

BASIC BLOCK do.end2994
%10655:	br	 while.cond2920

BASIC BLOCK while.end2995
%10656:	getelementptr	 %10560 XXX
%10657:	store	 XXX %10560
%10658:	br	 do.end2997

BASIC BLOCK do.end2997
%10659:	br	 sw.epilog

BASIC BLOCK sw.bb2998
%10660:	br	 do.body2999

BASIC BLOCK do.body2999
%10661:	br	 while.cond3000

BASIC BLOCK while.cond3000
%10662:	phi	 %6861 %10755
%10663:	phi	 %6862 %10756
%10664:	phi	 %6863 %10757
%10665:	phi	 %6864 %10758
%10666:	phi	 %6865 %10759
%10667:	getelementptr	 bufp XXX XXX
%10668:	load	 %10667
%10669:	ptrtoint	 %10666
%10670:	ptrtoint	 %10668
%10671:	sub	 %10669 %10670
%10672:	add	 %10671 XXX
%10673:	getelementptr	 bufp XXX XXX
%10674:	load	 %10673
%10675:	icmp	 %10672 %10674
%10676:	br	 %10675 while.end3075 while.body3009

BASIC BLOCK while.body3009
%10677:	br	 do.body3010

BASIC BLOCK do.body3010
%10678:	getelementptr	 bufp XXX XXX
%10679:	load	 %10678
%10680:	getelementptr	 bufp XXX XXX
%10681:	load	 %10680
%10682:	icmp	 %10681 XXX
%10683:	br	 %10682 if.end3017 if.then3016

BASIC BLOCK if.then3016
%10684:	br	 return

BASIC BLOCK if.end3017
%10685:	getelementptr	 bufp XXX XXX
%10686:	load	 %10685
%10687:	shl	 %10686 XXX
%10688:	store	 %10687 %10685
%10689:	getelementptr	 bufp XXX XXX
%10690:	load	 %10689
%10691:	icmp	 %10690 XXX
%10692:	br	 %10691 if.end3025 if.then3023

BASIC BLOCK if.then3023
%10693:	getelementptr	 bufp XXX XXX
%10694:	store	 XXX %10693
%10695:	br	 if.end3025

BASIC BLOCK if.end3025
%10696:	getelementptr	 bufp XXX XXX
%10697:	load	 %10696
%10698:	getelementptr	 bufp XXX XXX
%10699:	load	 %10698
%10700:	call	 %10697 %10699 realloc
%10701:	getelementptr	 bufp XXX XXX
%10702:	store	 %10700 %10701
%10703:	getelementptr	 bufp XXX XXX
%10704:	load	 %10703
%10705:	icmp	 %10704 XXX
%10706:	br	 %10705 if.end3034 if.then3033

BASIC BLOCK if.then3033
%10707:	br	 return

BASIC BLOCK if.end3034
%10708:	getelementptr	 bufp XXX XXX
%10709:	load	 %10708
%10710:	icmp	 %10679 %10709
%10711:	br	 %10710 if.end3073 if.then3038

BASIC BLOCK if.then3038
%10712:	ptrtoint	 %10666
%10713:	ptrtoint	 %10679
%10714:	sub	 %10712 %10713
%10715:	getelementptr	 bufp XXX XXX
%10716:	load	 %10715
%10717:	getelementptr	 %10716 %10714
%10718:	ptrtoint	 %10663
%10719:	ptrtoint	 %10679
%10720:	sub	 %10718 %10719
%10721:	getelementptr	 bufp XXX XXX
%10722:	load	 %10721
%10723:	getelementptr	 %10722 %10720
%10724:	icmp	 %10662 XXX
%10725:	br	 %10724 if.end3056 if.then3050

BASIC BLOCK if.then3050
%10726:	ptrtoint	 %10662
%10727:	ptrtoint	 %10679
%10728:	sub	 %10726 %10727
%10729:	getelementptr	 bufp XXX XXX
%10730:	load	 %10729
%10731:	getelementptr	 %10730 %10728
%10732:	br	 if.end3056

BASIC BLOCK if.end3056
%10733:	phi	 %10731 %10662
%10734:	icmp	 %10664 XXX
%10735:	br	 %10734 if.end3064 if.then3058

BASIC BLOCK if.then3058
%10736:	ptrtoint	 %10664
%10737:	ptrtoint	 %10679
%10738:	sub	 %10736 %10737
%10739:	getelementptr	 bufp XXX XXX
%10740:	load	 %10739
%10741:	getelementptr	 %10740 %10738
%10742:	br	 if.end3064

BASIC BLOCK if.end3064
%10743:	phi	 %10741 %10664
%10744:	icmp	 %10665 XXX
%10745:	br	 %10744 if.end3072 if.then3066

BASIC BLOCK if.then3066
%10746:	ptrtoint	 %10665
%10747:	ptrtoint	 %10679
%10748:	sub	 %10746 %10747
%10749:	getelementptr	 bufp XXX XXX
%10750:	load	 %10749
%10751:	getelementptr	 %10750 %10748
%10752:	br	 if.end3072

BASIC BLOCK if.end3072
%10753:	phi	 %10751 %10665
%10754:	br	 if.end3073

BASIC BLOCK if.end3073
%10755:	phi	 %10733 %10662
%10756:	phi	 %10723 %10663
%10757:	phi	 %10743 %10664
%10758:	phi	 %10753 %10665
%10759:	phi	 %10717 %10666
%10760:	br	 do.end3074

BASIC BLOCK do.end3074
%10761:	br	 while.cond3000

BASIC BLOCK while.end3075
%10762:	getelementptr	 %10666 XXX
%10763:	store	 XXX %10666
%10764:	br	 do.end3077

BASIC BLOCK do.end3077
%10765:	br	 sw.epilog

BASIC BLOCK sw.bb3078
%10766:	br	 do.body3079

BASIC BLOCK do.body3079
%10767:	br	 while.cond3080

BASIC BLOCK while.cond3080
%10768:	phi	 %6861 %10861
%10769:	phi	 %6862 %10862
%10770:	phi	 %6863 %10863
%10771:	phi	 %6864 %10864
%10772:	phi	 %6865 %10865
%10773:	getelementptr	 bufp XXX XXX
%10774:	load	 %10773
%10775:	ptrtoint	 %10772
%10776:	ptrtoint	 %10774
%10777:	sub	 %10775 %10776
%10778:	add	 %10777 XXX
%10779:	getelementptr	 bufp XXX XXX
%10780:	load	 %10779
%10781:	icmp	 %10778 %10780
%10782:	br	 %10781 while.end3155 while.body3089

BASIC BLOCK while.body3089
%10783:	br	 do.body3090

BASIC BLOCK do.body3090
%10784:	getelementptr	 bufp XXX XXX
%10785:	load	 %10784
%10786:	getelementptr	 bufp XXX XXX
%10787:	load	 %10786
%10788:	icmp	 %10787 XXX
%10789:	br	 %10788 if.end3097 if.then3096

BASIC BLOCK if.then3096
%10790:	br	 return

BASIC BLOCK if.end3097
%10791:	getelementptr	 bufp XXX XXX
%10792:	load	 %10791
%10793:	shl	 %10792 XXX
%10794:	store	 %10793 %10791
%10795:	getelementptr	 bufp XXX XXX
%10796:	load	 %10795
%10797:	icmp	 %10796 XXX
%10798:	br	 %10797 if.end3105 if.then3103

BASIC BLOCK if.then3103
%10799:	getelementptr	 bufp XXX XXX
%10800:	store	 XXX %10799
%10801:	br	 if.end3105

BASIC BLOCK if.end3105
%10802:	getelementptr	 bufp XXX XXX
%10803:	load	 %10802
%10804:	getelementptr	 bufp XXX XXX
%10805:	load	 %10804
%10806:	call	 %10803 %10805 realloc
%10807:	getelementptr	 bufp XXX XXX
%10808:	store	 %10806 %10807
%10809:	getelementptr	 bufp XXX XXX
%10810:	load	 %10809
%10811:	icmp	 %10810 XXX
%10812:	br	 %10811 if.end3114 if.then3113

BASIC BLOCK if.then3113
%10813:	br	 return

BASIC BLOCK if.end3114
%10814:	getelementptr	 bufp XXX XXX
%10815:	load	 %10814
%10816:	icmp	 %10785 %10815
%10817:	br	 %10816 if.end3153 if.then3118

BASIC BLOCK if.then3118
%10818:	ptrtoint	 %10772
%10819:	ptrtoint	 %10785
%10820:	sub	 %10818 %10819
%10821:	getelementptr	 bufp XXX XXX
%10822:	load	 %10821
%10823:	getelementptr	 %10822 %10820
%10824:	ptrtoint	 %10769
%10825:	ptrtoint	 %10785
%10826:	sub	 %10824 %10825
%10827:	getelementptr	 bufp XXX XXX
%10828:	load	 %10827
%10829:	getelementptr	 %10828 %10826
%10830:	icmp	 %10768 XXX
%10831:	br	 %10830 if.end3136 if.then3130

BASIC BLOCK if.then3130
%10832:	ptrtoint	 %10768
%10833:	ptrtoint	 %10785
%10834:	sub	 %10832 %10833
%10835:	getelementptr	 bufp XXX XXX
%10836:	load	 %10835
%10837:	getelementptr	 %10836 %10834
%10838:	br	 if.end3136

BASIC BLOCK if.end3136
%10839:	phi	 %10837 %10768
%10840:	icmp	 %10770 XXX
%10841:	br	 %10840 if.end3144 if.then3138

BASIC BLOCK if.then3138
%10842:	ptrtoint	 %10770
%10843:	ptrtoint	 %10785
%10844:	sub	 %10842 %10843
%10845:	getelementptr	 bufp XXX XXX
%10846:	load	 %10845
%10847:	getelementptr	 %10846 %10844
%10848:	br	 if.end3144

BASIC BLOCK if.end3144
%10849:	phi	 %10847 %10770
%10850:	icmp	 %10771 XXX
%10851:	br	 %10850 if.end3152 if.then3146

BASIC BLOCK if.then3146
%10852:	ptrtoint	 %10771
%10853:	ptrtoint	 %10785
%10854:	sub	 %10852 %10853
%10855:	getelementptr	 bufp XXX XXX
%10856:	load	 %10855
%10857:	getelementptr	 %10856 %10854
%10858:	br	 if.end3152

BASIC BLOCK if.end3152
%10859:	phi	 %10857 %10771
%10860:	br	 if.end3153

BASIC BLOCK if.end3153
%10861:	phi	 %10839 %10768
%10862:	phi	 %10829 %10769
%10863:	phi	 %10849 %10770
%10864:	phi	 %10859 %10771
%10865:	phi	 %10823 %10772
%10866:	br	 do.end3154

BASIC BLOCK do.end3154
%10867:	br	 while.cond3080

BASIC BLOCK while.end3155
%10868:	getelementptr	 %10772 XXX
%10869:	store	 XXX %10772
%10870:	br	 do.end3157

BASIC BLOCK do.end3157
%10871:	br	 sw.epilog

BASIC BLOCK sw.bb3158
%10872:	br	 do.body3159

BASIC BLOCK do.body3159
%10873:	br	 while.cond3160

BASIC BLOCK while.cond3160
%10874:	phi	 %6861 %10967
%10875:	phi	 %6862 %10968
%10876:	phi	 %6863 %10969
%10877:	phi	 %6864 %10970
%10878:	phi	 %6865 %10971
%10879:	getelementptr	 bufp XXX XXX
%10880:	load	 %10879
%10881:	ptrtoint	 %10878
%10882:	ptrtoint	 %10880
%10883:	sub	 %10881 %10882
%10884:	add	 %10883 XXX
%10885:	getelementptr	 bufp XXX XXX
%10886:	load	 %10885
%10887:	icmp	 %10884 %10886
%10888:	br	 %10887 while.end3235 while.body3169

BASIC BLOCK while.body3169
%10889:	br	 do.body3170

BASIC BLOCK do.body3170
%10890:	getelementptr	 bufp XXX XXX
%10891:	load	 %10890
%10892:	getelementptr	 bufp XXX XXX
%10893:	load	 %10892
%10894:	icmp	 %10893 XXX
%10895:	br	 %10894 if.end3177 if.then3176

BASIC BLOCK if.then3176
%10896:	br	 return

BASIC BLOCK if.end3177
%10897:	getelementptr	 bufp XXX XXX
%10898:	load	 %10897
%10899:	shl	 %10898 XXX
%10900:	store	 %10899 %10897
%10901:	getelementptr	 bufp XXX XXX
%10902:	load	 %10901
%10903:	icmp	 %10902 XXX
%10904:	br	 %10903 if.end3185 if.then3183

BASIC BLOCK if.then3183
%10905:	getelementptr	 bufp XXX XXX
%10906:	store	 XXX %10905
%10907:	br	 if.end3185

BASIC BLOCK if.end3185
%10908:	getelementptr	 bufp XXX XXX
%10909:	load	 %10908
%10910:	getelementptr	 bufp XXX XXX
%10911:	load	 %10910
%10912:	call	 %10909 %10911 realloc
%10913:	getelementptr	 bufp XXX XXX
%10914:	store	 %10912 %10913
%10915:	getelementptr	 bufp XXX XXX
%10916:	load	 %10915
%10917:	icmp	 %10916 XXX
%10918:	br	 %10917 if.end3194 if.then3193

BASIC BLOCK if.then3193
%10919:	br	 return

BASIC BLOCK if.end3194
%10920:	getelementptr	 bufp XXX XXX
%10921:	load	 %10920
%10922:	icmp	 %10891 %10921
%10923:	br	 %10922 if.end3233 if.then3198

BASIC BLOCK if.then3198
%10924:	ptrtoint	 %10878
%10925:	ptrtoint	 %10891
%10926:	sub	 %10924 %10925
%10927:	getelementptr	 bufp XXX XXX
%10928:	load	 %10927
%10929:	getelementptr	 %10928 %10926
%10930:	ptrtoint	 %10875
%10931:	ptrtoint	 %10891
%10932:	sub	 %10930 %10931
%10933:	getelementptr	 bufp XXX XXX
%10934:	load	 %10933
%10935:	getelementptr	 %10934 %10932
%10936:	icmp	 %10874 XXX
%10937:	br	 %10936 if.end3216 if.then3210

BASIC BLOCK if.then3210
%10938:	ptrtoint	 %10874
%10939:	ptrtoint	 %10891
%10940:	sub	 %10938 %10939
%10941:	getelementptr	 bufp XXX XXX
%10942:	load	 %10941
%10943:	getelementptr	 %10942 %10940
%10944:	br	 if.end3216

BASIC BLOCK if.end3216
%10945:	phi	 %10943 %10874
%10946:	icmp	 %10876 XXX
%10947:	br	 %10946 if.end3224 if.then3218

BASIC BLOCK if.then3218
%10948:	ptrtoint	 %10876
%10949:	ptrtoint	 %10891
%10950:	sub	 %10948 %10949
%10951:	getelementptr	 bufp XXX XXX
%10952:	load	 %10951
%10953:	getelementptr	 %10952 %10950
%10954:	br	 if.end3224

BASIC BLOCK if.end3224
%10955:	phi	 %10953 %10876
%10956:	icmp	 %10877 XXX
%10957:	br	 %10956 if.end3232 if.then3226

BASIC BLOCK if.then3226
%10958:	ptrtoint	 %10877
%10959:	ptrtoint	 %10891
%10960:	sub	 %10958 %10959
%10961:	getelementptr	 bufp XXX XXX
%10962:	load	 %10961
%10963:	getelementptr	 %10962 %10960
%10964:	br	 if.end3232

BASIC BLOCK if.end3232
%10965:	phi	 %10963 %10877
%10966:	br	 if.end3233

BASIC BLOCK if.end3233
%10967:	phi	 %10945 %10874
%10968:	phi	 %10935 %10875
%10969:	phi	 %10955 %10876
%10970:	phi	 %10965 %10877
%10971:	phi	 %10929 %10878
%10972:	br	 do.end3234

BASIC BLOCK do.end3234
%10973:	br	 while.cond3160

BASIC BLOCK while.end3235
%10974:	getelementptr	 %10878 XXX
%10975:	store	 XXX %10878
%10976:	br	 do.end3237

BASIC BLOCK do.end3237
%10977:	br	 sw.epilog

BASIC BLOCK sw.bb3238
%10978:	and	 syntax XXX
%10979:	icmp	 %10978 XXX
%10980:	br	 %10979 if.end3242 if.then3241

BASIC BLOCK if.then3241
%10981:	br	 normal_char

BASIC BLOCK if.end3242
%10982:	zext	 %8792
%10983:	sub	 %10982 XXX
%10984:	trunc	 %10983
%10985:	zext	 %10984
%10986:	icmp	 %10985 %6860
%10987:	br	 %10986 if.end3250 if.then3249

BASIC BLOCK if.then3249
%10988:	br	 return

BASIC BLOCK if.end3250
%10989:	zext	 %10984
%10990:	bitcast	 %6791
%10991:	getelementptr	 %10990 XXX XXX
%10992:	load	 %10991
%10993:	getelementptr	 %10990 XXX XXX
%10994:	load	 %10993
%10995:	call	 %10992 %10994 %10989 group_in_compile_stack
%10996:	icmp	 %10995 XXX
%10997:	br	 %10996 if.end3255 if.then3254

BASIC BLOCK if.then3254
%10998:	br	 normal_char

BASIC BLOCK if.end3255
%10999:	br	 do.body3256

BASIC BLOCK do.body3256
%11000:	br	 while.cond3257

BASIC BLOCK while.cond3257
%11001:	phi	 %6861 %11094
%11002:	phi	 %6862 %11095
%11003:	phi	 %6865 %11096
%11004:	phi	 %6864 %11097
%11005:	phi	 %6865 %11098
%11006:	getelementptr	 bufp XXX XXX
%11007:	load	 %11006
%11008:	ptrtoint	 %11005
%11009:	ptrtoint	 %11007
%11010:	sub	 %11008 %11009
%11011:	add	 %11010 XXX
%11012:	getelementptr	 bufp XXX XXX
%11013:	load	 %11012
%11014:	icmp	 %11011 %11013
%11015:	br	 %11014 while.end3332 while.body3266

BASIC BLOCK while.body3266
%11016:	br	 do.body3267

BASIC BLOCK do.body3267
%11017:	getelementptr	 bufp XXX XXX
%11018:	load	 %11017
%11019:	getelementptr	 bufp XXX XXX
%11020:	load	 %11019
%11021:	icmp	 %11020 XXX
%11022:	br	 %11021 if.end3274 if.then3273

BASIC BLOCK if.then3273
%11023:	br	 return

BASIC BLOCK if.end3274
%11024:	getelementptr	 bufp XXX XXX
%11025:	load	 %11024
%11026:	shl	 %11025 XXX
%11027:	store	 %11026 %11024
%11028:	getelementptr	 bufp XXX XXX
%11029:	load	 %11028
%11030:	icmp	 %11029 XXX
%11031:	br	 %11030 if.end3282 if.then3280

BASIC BLOCK if.then3280
%11032:	getelementptr	 bufp XXX XXX
%11033:	store	 XXX %11032
%11034:	br	 if.end3282

BASIC BLOCK if.end3282
%11035:	getelementptr	 bufp XXX XXX
%11036:	load	 %11035
%11037:	getelementptr	 bufp XXX XXX
%11038:	load	 %11037
%11039:	call	 %11036 %11038 realloc
%11040:	getelementptr	 bufp XXX XXX
%11041:	store	 %11039 %11040
%11042:	getelementptr	 bufp XXX XXX
%11043:	load	 %11042
%11044:	icmp	 %11043 XXX
%11045:	br	 %11044 if.end3291 if.then3290

BASIC BLOCK if.then3290
%11046:	br	 return

BASIC BLOCK if.end3291
%11047:	getelementptr	 bufp XXX XXX
%11048:	load	 %11047
%11049:	icmp	 %11018 %11048
%11050:	br	 %11049 if.end3330 if.then3295

BASIC BLOCK if.then3295
%11051:	ptrtoint	 %11005
%11052:	ptrtoint	 %11018
%11053:	sub	 %11051 %11052
%11054:	getelementptr	 bufp XXX XXX
%11055:	load	 %11054
%11056:	getelementptr	 %11055 %11053
%11057:	ptrtoint	 %11002
%11058:	ptrtoint	 %11018
%11059:	sub	 %11057 %11058
%11060:	getelementptr	 bufp XXX XXX
%11061:	load	 %11060
%11062:	getelementptr	 %11061 %11059
%11063:	icmp	 %11001 XXX
%11064:	br	 %11063 if.end3313 if.then3307

BASIC BLOCK if.then3307
%11065:	ptrtoint	 %11001
%11066:	ptrtoint	 %11018
%11067:	sub	 %11065 %11066
%11068:	getelementptr	 bufp XXX XXX
%11069:	load	 %11068
%11070:	getelementptr	 %11069 %11067
%11071:	br	 if.end3313

BASIC BLOCK if.end3313
%11072:	phi	 %11070 %11001
%11073:	icmp	 %11003 XXX
%11074:	br	 %11073 if.end3321 if.then3315

BASIC BLOCK if.then3315
%11075:	ptrtoint	 %11003
%11076:	ptrtoint	 %11018
%11077:	sub	 %11075 %11076
%11078:	getelementptr	 bufp XXX XXX
%11079:	load	 %11078
%11080:	getelementptr	 %11079 %11077
%11081:	br	 if.end3321

BASIC BLOCK if.end3321
%11082:	phi	 %11080 %11003
%11083:	icmp	 %11004 XXX
%11084:	br	 %11083 if.end3329 if.then3323

BASIC BLOCK if.then3323
%11085:	ptrtoint	 %11004
%11086:	ptrtoint	 %11018
%11087:	sub	 %11085 %11086
%11088:	getelementptr	 bufp XXX XXX
%11089:	load	 %11088
%11090:	getelementptr	 %11089 %11087
%11091:	br	 if.end3329

BASIC BLOCK if.end3329
%11092:	phi	 %11090 %11004
%11093:	br	 if.end3330

BASIC BLOCK if.end3330
%11094:	phi	 %11072 %11001
%11095:	phi	 %11062 %11002
%11096:	phi	 %11082 %11003
%11097:	phi	 %11092 %11004
%11098:	phi	 %11056 %11005
%11099:	br	 do.end3331

BASIC BLOCK do.end3331
%11100:	br	 while.cond3257

BASIC BLOCK while.end3332
%11101:	getelementptr	 %11005 XXX
%11102:	store	 XXX %11005
%11103:	getelementptr	 %11101 XXX
%11104:	store	 %10984 %11101
%11105:	br	 do.end3335

BASIC BLOCK do.end3335
%11106:	br	 sw.epilog

BASIC BLOCK sw.bb3336
%11107:	and	 syntax XXX
%11108:	icmp	 %11107 XXX
%11109:	br	 %11108 if.else3340 if.then3339

BASIC BLOCK if.then3339
%11110:	br	 handle_plus

BASIC BLOCK if.else3340
%11111:	br	 normal_backslash

BASIC BLOCK sw.default
%11112:	br	 normal_backslash

BASIC BLOCK normal_backslash
%11113:	phi	 %8792 %8792 %8792 %10113 %8792 %8792 %8792 %8792
%11114:	icmp	 %6798 XXX
%11115:	br	 %11114 cond.false3346 cond.true3342

BASIC BLOCK cond.true3342
%11116:	zext	 %11113
%11117:	getelementptr	 %6798 %11116
%11118:	load	 %11117
%11119:	sext	 %11118
%11120:	br	 cond.end3348

BASIC BLOCK cond.false3346
%11121:	zext	 %11113
%11122:	br	 cond.end3348

BASIC BLOCK cond.end3348
%11123:	phi	 %11119 %11121
%11124:	trunc	 %11123
%11125:	br	 normal_char

BASIC BLOCK sw.epilog
%11126:	phi	 %6860 %6860 %6860 %6860 %6860 %6860 %6860 %6860 %6860 %6860 %6860 %6860 %8805
%11127:	phi	 %11001 %10874 %10768 %10662 %10556 %10450 %10344 %10238 %10132 %10092 %9495 %9359 XXX
%11128:	phi	 %11002 %10875 %10769 %10663 %10557 %10451 %10345 %10239 %10133 %10093 %9595 %9360 %9018
%11129:	phi	 %11003 %10876 %10770 %10664 %10558 %10452 %10346 %10240 %10134 %10094 XXX %9361 XXX
%11130:	phi	 %11004 %10877 %10771 %10665 %10559 %10453 %10347 %10241 %10135 XXX %9498 %9362 XXX
%11131:	phi	 %11103 %10974 %10868 %10762 %10656 %10550 %10444 %10338 %10232 %10095 %9595 %9363 %9018
%11132:	br	 sw.epilog3580

BASIC BLOCK sw.default3351
%11133:	br	 normal_char

BASIC BLOCK normal_char
%11134:	phi	 %6861 %6861 %6861 %6861 %6861 %6861 %6861 %9153 %6861 %6861 %6861 %6861 %6861 %6861 %6861 %6861
%11135:	phi	 %6862 %6862 %6862 %6862 %6862 %6862 %6862 %9154 %6862 %6862 %6862 %6862 %6862 %6862 %6862 %6862
%11136:	phi	 %6863 %6863 %6863 %6863 %6863 %6863 %6863 %9155 %6863 %6863 %6863 %6863 %6863 %6863 %6863 %6863
%11137:	phi	 %6864 %6864 %6864 %6864 %6864 %6864 %6864 %9156 %6864 %6864 %6864 %6864 %6864 %6864 %6864 %6864
%11138:	phi	 %6865 %6865 %6865 %6865 %6865 %6865 %6865 %9157 %6865 %6865 %6865 %6865 %6865 %6865 %6865 %6865
%11139:	phi	 %6884 %11124 %7137 %8792 %8792 %10113 %9373 %9038 %6884 %6884 %6884 %6884 %6884 %6884 %6884 %6884
%11140:	icmp	 %11137 XXX
%11141:	br	 %11140 if.then3417 lor.lhs.false3353

BASIC BLOCK lor.lhs.false3353
%11142:	load	 %11137
%11143:	zext	 %11142
%11144:	sext	 %11143
%11145:	getelementptr	 %11137 %11144
%11146:	getelementptr	 %11145 XXX
%11147:	icmp	 %11146 %11138
%11148:	br	 %11147 lor.lhs.false3360 if.then3417

BASIC BLOCK lor.lhs.false3360
%11149:	load	 %11137
%11150:	zext	 %11149
%11151:	icmp	 %11150 XXX
%11152:	br	 %11151 lor.lhs.false3364 if.then3417

BASIC BLOCK lor.lhs.false3364
%11153:	load	 %6792
%11154:	load	 %11153
%11155:	sext	 %11154
%11156:	icmp	 %11155 XXX
%11157:	br	 %11156 lor.lhs.false3368 if.then3417

BASIC BLOCK lor.lhs.false3368
%11158:	load	 %6792
%11159:	load	 %11158
%11160:	sext	 %11159
%11161:	icmp	 %11160 XXX
%11162:	br	 %11161 lor.lhs.false3372 if.then3417

BASIC BLOCK lor.lhs.false3372
%11163:	and	 syntax XXX
%11164:	icmp	 %11163 XXX
%11165:	br	 %11164 cond.false3389 cond.true3375

BASIC BLOCK cond.true3375
%11166:	load	 %6792
%11167:	load	 %11166
%11168:	sext	 %11167
%11169:	icmp	 %11168 XXX
%11170:	br	 %11169 lor.lhs.false3397 land.lhs.true3379

BASIC BLOCK land.lhs.true3379
%11171:	load	 %6792
%11172:	getelementptr	 %11171 XXX
%11173:	load	 %11172
%11174:	sext	 %11173
%11175:	icmp	 %11174 XXX
%11176:	br	 %11175 lor.lhs.false3384 if.then3417

BASIC BLOCK lor.lhs.false3384
%11177:	load	 %6792
%11178:	getelementptr	 %11177 XXX
%11179:	load	 %11178
%11180:	sext	 %11179
%11181:	icmp	 %11180 XXX
%11182:	br	 %11181 lor.lhs.false3397 if.then3417

BASIC BLOCK cond.false3389
%11183:	load	 %6792
%11184:	load	 %11183
%11185:	sext	 %11184
%11186:	icmp	 %11185 XXX
%11187:	br	 %11186 lor.lhs.false3393 if.then3417

BASIC BLOCK lor.lhs.false3393
%11188:	load	 %6792
%11189:	load	 %11188
%11190:	sext	 %11189
%11191:	icmp	 %11190 XXX
%11192:	br	 %11191 lor.lhs.false3397 if.then3417

BASIC BLOCK lor.lhs.false3397
%11193:	and	 syntax XXX
%11194:	icmp	 %11193 XXX
%11195:	br	 %11194 if.end3499 land.lhs.true3400

BASIC BLOCK land.lhs.true3400
%11196:	and	 syntax XXX
%11197:	icmp	 %11196 XXX
%11198:	br	 %11197 cond.false3407 cond.true3403

BASIC BLOCK cond.true3403
%11199:	load	 %6792
%11200:	load	 %11199
%11201:	sext	 %11200
%11202:	icmp	 %11201 XXX
%11203:	br	 %11202 if.end3499 if.then3417

BASIC BLOCK cond.false3407
%11204:	load	 %6792
%11205:	getelementptr	 %11204 XXX
%11206:	load	 %11205
%11207:	sext	 %11206
%11208:	icmp	 %11207 XXX
%11209:	br	 %11208 if.end3499 land.lhs.true3412

BASIC BLOCK land.lhs.true3412
%11210:	load	 %6792
%11211:	getelementptr	 %11210 XXX
%11212:	load	 %11211
%11213:	sext	 %11212
%11214:	icmp	 %11213 XXX
%11215:	br	 %11214 if.end3499 if.then3417

BASIC BLOCK if.then3417
%11216:	br	 do.body3418

BASIC BLOCK do.body3418
%11217:	br	 while.cond3419

BASIC BLOCK while.cond3419
%11218:	phi	 %11134 %11311
%11219:	phi	 %11135 %11312
%11220:	phi	 %11138 %11313
%11221:	phi	 %11137 %11314
%11222:	phi	 %11138 %11315
%11223:	getelementptr	 bufp XXX XXX
%11224:	load	 %11223
%11225:	ptrtoint	 %11222
%11226:	ptrtoint	 %11224
%11227:	sub	 %11225 %11226
%11228:	add	 %11227 XXX
%11229:	getelementptr	 bufp XXX XXX
%11230:	load	 %11229
%11231:	icmp	 %11228 %11230
%11232:	br	 %11231 while.end3494 while.body3428

BASIC BLOCK while.body3428
%11233:	br	 do.body3429

BASIC BLOCK do.body3429
%11234:	getelementptr	 bufp XXX XXX
%11235:	load	 %11234
%11236:	getelementptr	 bufp XXX XXX
%11237:	load	 %11236
%11238:	icmp	 %11237 XXX
%11239:	br	 %11238 if.end3436 if.then3435

BASIC BLOCK if.then3435
%11240:	br	 return

BASIC BLOCK if.end3436
%11241:	getelementptr	 bufp XXX XXX
%11242:	load	 %11241
%11243:	shl	 %11242 XXX
%11244:	store	 %11243 %11241
%11245:	getelementptr	 bufp XXX XXX
%11246:	load	 %11245
%11247:	icmp	 %11246 XXX
%11248:	br	 %11247 if.end3444 if.then3442

BASIC BLOCK if.then3442
%11249:	getelementptr	 bufp XXX XXX
%11250:	store	 XXX %11249
%11251:	br	 if.end3444

BASIC BLOCK if.end3444
%11252:	getelementptr	 bufp XXX XXX
%11253:	load	 %11252
%11254:	getelementptr	 bufp XXX XXX
%11255:	load	 %11254
%11256:	call	 %11253 %11255 realloc
%11257:	getelementptr	 bufp XXX XXX
%11258:	store	 %11256 %11257
%11259:	getelementptr	 bufp XXX XXX
%11260:	load	 %11259
%11261:	icmp	 %11260 XXX
%11262:	br	 %11261 if.end3453 if.then3452

BASIC BLOCK if.then3452
%11263:	br	 return

BASIC BLOCK if.end3453
%11264:	getelementptr	 bufp XXX XXX
%11265:	load	 %11264
%11266:	icmp	 %11235 %11265
%11267:	br	 %11266 if.end3492 if.then3457

BASIC BLOCK if.then3457
%11268:	ptrtoint	 %11222
%11269:	ptrtoint	 %11235
%11270:	sub	 %11268 %11269
%11271:	getelementptr	 bufp XXX XXX
%11272:	load	 %11271
%11273:	getelementptr	 %11272 %11270
%11274:	ptrtoint	 %11219
%11275:	ptrtoint	 %11235
%11276:	sub	 %11274 %11275
%11277:	getelementptr	 bufp XXX XXX
%11278:	load	 %11277
%11279:	getelementptr	 %11278 %11276
%11280:	icmp	 %11218 XXX
%11281:	br	 %11280 if.end3475 if.then3469

BASIC BLOCK if.then3469
%11282:	ptrtoint	 %11218
%11283:	ptrtoint	 %11235
%11284:	sub	 %11282 %11283
%11285:	getelementptr	 bufp XXX XXX
%11286:	load	 %11285
%11287:	getelementptr	 %11286 %11284
%11288:	br	 if.end3475

BASIC BLOCK if.end3475
%11289:	phi	 %11287 %11218
%11290:	icmp	 %11220 XXX
%11291:	br	 %11290 if.end3483 if.then3477

BASIC BLOCK if.then3477
%11292:	ptrtoint	 %11220
%11293:	ptrtoint	 %11235
%11294:	sub	 %11292 %11293
%11295:	getelementptr	 bufp XXX XXX
%11296:	load	 %11295
%11297:	getelementptr	 %11296 %11294
%11298:	br	 if.end3483

BASIC BLOCK if.end3483
%11299:	phi	 %11297 %11220
%11300:	icmp	 %11221 XXX
%11301:	br	 %11300 if.end3491 if.then3485

BASIC BLOCK if.then3485
%11302:	ptrtoint	 %11221
%11303:	ptrtoint	 %11235
%11304:	sub	 %11302 %11303
%11305:	getelementptr	 bufp XXX XXX
%11306:	load	 %11305
%11307:	getelementptr	 %11306 %11304
%11308:	br	 if.end3491

BASIC BLOCK if.end3491
%11309:	phi	 %11307 %11221
%11310:	br	 if.end3492

BASIC BLOCK if.end3492
%11311:	phi	 %11289 %11218
%11312:	phi	 %11279 %11219
%11313:	phi	 %11299 %11220
%11314:	phi	 %11309 %11221
%11315:	phi	 %11273 %11222
%11316:	br	 do.end3493

BASIC BLOCK do.end3493
%11317:	br	 while.cond3419

BASIC BLOCK while.end3494
%11318:	getelementptr	 %11222 XXX
%11319:	store	 XXX %11222
%11320:	getelementptr	 %11318 XXX
%11321:	store	 XXX %11318
%11322:	br	 do.end3497

BASIC BLOCK do.end3497
%11323:	getelementptr	 %11320 XXX
%11324:	br	 if.end3499

BASIC BLOCK if.end3499
%11325:	phi	 %11218 %11134 %11134 %11134 %11134
%11326:	phi	 %11219 %11135 %11135 %11135 %11135
%11327:	phi	 %11220 %11136 %11136 %11136 %11136
%11328:	phi	 %11323 %11137 %11137 %11137 %11137
%11329:	phi	 %11320 %11138 %11138 %11138 %11138
%11330:	br	 do.body3500

BASIC BLOCK do.body3500
%11331:	br	 while.cond3501

BASIC BLOCK while.cond3501
%11332:	phi	 %11325 %11425
%11333:	phi	 %11326 %11426
%11334:	phi	 %11327 %11427
%11335:	phi	 %11328 %11428
%11336:	phi	 %11329 %11429
%11337:	getelementptr	 bufp XXX XXX
%11338:	load	 %11337
%11339:	ptrtoint	 %11336
%11340:	ptrtoint	 %11338
%11341:	sub	 %11339 %11340
%11342:	add	 %11341 XXX
%11343:	getelementptr	 bufp XXX XXX
%11344:	load	 %11343
%11345:	icmp	 %11342 %11344
%11346:	br	 %11345 while.end3576 while.body3510

BASIC BLOCK while.body3510
%11347:	br	 do.body3511

BASIC BLOCK do.body3511
%11348:	getelementptr	 bufp XXX XXX
%11349:	load	 %11348
%11350:	getelementptr	 bufp XXX XXX
%11351:	load	 %11350
%11352:	icmp	 %11351 XXX
%11353:	br	 %11352 if.end3518 if.then3517

BASIC BLOCK if.then3517
%11354:	br	 return

BASIC BLOCK if.end3518
%11355:	getelementptr	 bufp XXX XXX
%11356:	load	 %11355
%11357:	shl	 %11356 XXX
%11358:	store	 %11357 %11355
%11359:	getelementptr	 bufp XXX XXX
%11360:	load	 %11359
%11361:	icmp	 %11360 XXX
%11362:	br	 %11361 if.end3526 if.then3524

BASIC BLOCK if.then3524
%11363:	getelementptr	 bufp XXX XXX
%11364:	store	 XXX %11363
%11365:	br	 if.end3526

BASIC BLOCK if.end3526
%11366:	getelementptr	 bufp XXX XXX
%11367:	load	 %11366
%11368:	getelementptr	 bufp XXX XXX
%11369:	load	 %11368
%11370:	call	 %11367 %11369 realloc
%11371:	getelementptr	 bufp XXX XXX
%11372:	store	 %11370 %11371
%11373:	getelementptr	 bufp XXX XXX
%11374:	load	 %11373
%11375:	icmp	 %11374 XXX
%11376:	br	 %11375 if.end3535 if.then3534

BASIC BLOCK if.then3534
%11377:	br	 return

BASIC BLOCK if.end3535
%11378:	getelementptr	 bufp XXX XXX
%11379:	load	 %11378
%11380:	icmp	 %11349 %11379
%11381:	br	 %11380 if.end3574 if.then3539

BASIC BLOCK if.then3539
%11382:	ptrtoint	 %11336
%11383:	ptrtoint	 %11349
%11384:	sub	 %11382 %11383
%11385:	getelementptr	 bufp XXX XXX
%11386:	load	 %11385
%11387:	getelementptr	 %11386 %11384
%11388:	ptrtoint	 %11333
%11389:	ptrtoint	 %11349
%11390:	sub	 %11388 %11389
%11391:	getelementptr	 bufp XXX XXX
%11392:	load	 %11391
%11393:	getelementptr	 %11392 %11390
%11394:	icmp	 %11332 XXX
%11395:	br	 %11394 if.end3557 if.then3551

BASIC BLOCK if.then3551
%11396:	ptrtoint	 %11332
%11397:	ptrtoint	 %11349
%11398:	sub	 %11396 %11397
%11399:	getelementptr	 bufp XXX XXX
%11400:	load	 %11399
%11401:	getelementptr	 %11400 %11398
%11402:	br	 if.end3557

BASIC BLOCK if.end3557
%11403:	phi	 %11401 %11332
%11404:	icmp	 %11334 XXX
%11405:	br	 %11404 if.end3565 if.then3559

BASIC BLOCK if.then3559
%11406:	ptrtoint	 %11334
%11407:	ptrtoint	 %11349
%11408:	sub	 %11406 %11407
%11409:	getelementptr	 bufp XXX XXX
%11410:	load	 %11409
%11411:	getelementptr	 %11410 %11408
%11412:	br	 if.end3565

BASIC BLOCK if.end3565
%11413:	phi	 %11411 %11334
%11414:	icmp	 %11335 XXX
%11415:	br	 %11414 if.end3573 if.then3567

BASIC BLOCK if.then3567
%11416:	ptrtoint	 %11335
%11417:	ptrtoint	 %11349
%11418:	sub	 %11416 %11417
%11419:	getelementptr	 bufp XXX XXX
%11420:	load	 %11419
%11421:	getelementptr	 %11420 %11418
%11422:	br	 if.end3573

BASIC BLOCK if.end3573
%11423:	phi	 %11421 %11335
%11424:	br	 if.end3574

BASIC BLOCK if.end3574
%11425:	phi	 %11403 %11332
%11426:	phi	 %11393 %11333
%11427:	phi	 %11413 %11334
%11428:	phi	 %11423 %11335
%11429:	phi	 %11387 %11336
%11430:	br	 do.end3575

BASIC BLOCK do.end3575
%11431:	br	 while.cond3501

BASIC BLOCK while.end3576
%11432:	getelementptr	 %11336 XXX
%11433:	store	 %11139 %11336
%11434:	br	 do.end3578

BASIC BLOCK do.end3578
%11435:	load	 %11335
%11436:	add	 %11435 XXX
%11437:	store	 %11436 %11335
%11438:	br	 sw.epilog3580

BASIC BLOCK sw.epilog3580
%11439:	phi	 %6860 %6860 %6860 %11126 %6860 %6860 %6860 %6860
%11440:	phi	 %11332 %7657 %6861 %11127 %7997 %7665 %7021 %6902
%11441:	phi	 %11333 %7658 %6862 %11128 %7998 %7666 %7022 %6903
%11442:	phi	 %11334 %7659 %6863 %11129 %7999 %7667 %7023 %6904
%11443:	phi	 %11335 %7660 %6864 %11130 %8000 %7668 %7024 %6905
%11444:	phi	 %11432 %7661 %6865 %11131 %8750 %7765 %7121 %7002
%11445:	br	 while.cond

BASIC BLOCK while.end3581
%11446:	icmp	 %6861 XXX
%11447:	br	 %11446 if.end3588 if.then3583

BASIC BLOCK if.then3583
%11448:	ptrtoint	 %6865
%11449:	ptrtoint	 %6861
%11450:	sub	 %11448 %11449
%11451:	sub	 %11450 XXX
%11452:	call	 XXX %6861 %11451 XXX
%11453:	br	 if.end3588

BASIC BLOCK if.end3588
%11454:	getelementptr	 %6791 XXX XXX
%11455:	load	 %11454
%11456:	icmp	 %11455 XXX
%11457:	br	 %11456 if.then3592 if.end3593

BASIC BLOCK if.then3592
%11458:	br	 return

BASIC BLOCK if.end3593
%11459:	getelementptr	 %6791 XXX XXX
%11460:	load	 %11459
%11461:	bitcast	 %11460
%11462:	call	 %11461 free
%11463:	getelementptr	 bufp XXX XXX
%11464:	load	 %11463
%11465:	ptrtoint	 %6865
%11466:	ptrtoint	 %11464
%11467:	sub	 %11465 %11466
%11468:	getelementptr	 bufp XXX XXX
%11469:	store	 %11467 %11468
%11470:	br	 return

BASIC BLOCK return
%11471:	phi	 XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX %8265 XXX XXX XXX XXX XXX XXX %8233 XXX XXX XXX XXX XXX XXX XXX XXX XXX
%11472:	ret	 %11471

FUNCTION regcomp

BASIC BLOCK entry
%11473:	and	 cflags XXX
%11474:	icmp	 %11473 XXX
%11475:	select	 %11474 XXX XXX
%11476:	getelementptr	 preg XXX XXX
%11477:	store	 XXX %11476
%11478:	getelementptr	 preg XXX XXX
%11479:	store	 XXX %11478
%11480:	getelementptr	 preg XXX XXX
%11481:	store	 XXX %11480
%11482:	and	 cflags XXX
%11483:	icmp	 %11482 XXX
%11484:	br	 %11483 if.else if.then

BASIC BLOCK if.then
%11485:	call	 XXX malloc
%11486:	getelementptr	 preg XXX XXX
%11487:	store	 %11485 %11486
%11488:	getelementptr	 preg XXX XXX
%11489:	load	 %11488
%11490:	icmp	 %11489 XXX
%11491:	br	 %11490 if.end if.then4

BASIC BLOCK if.then4
%11492:	br	 return

BASIC BLOCK if.end
%11493:	br	 for.cond

BASIC BLOCK for.cond
%11494:	phi	 XXX %11520
%11495:	icmp	 %11494 XXX
%11496:	br	 %11495 for.end for.body

BASIC BLOCK for.body
%11497:	and	 %11494 XXX
%11498:	icmp	 %11497 XXX
%11499:	br	 %11498 cond.false land.lhs.true

BASIC BLOCK land.lhs.true
%11500:	sext	 %11494
%11501:	call	 __ctype_b_loc
%11502:	load	 %11501
%11503:	getelementptr	 %11502 %11500
%11504:	load	 %11503
%11505:	zext	 %11504
%11506:	and	 %11505 XXX
%11507:	icmp	 %11506 XXX
%11508:	br	 %11507 cond.false cond.true

BASIC BLOCK cond.true
%11509:	call	 %11494 tolower
%11510:	br	 cond.end

BASIC BLOCK cond.false
%11511:	br	 cond.end

BASIC BLOCK cond.end
%11512:	phi	 %11509 %11494
%11513:	trunc	 %11512
%11514:	zext	 %11494
%11515:	getelementptr	 preg XXX XXX
%11516:	load	 %11515
%11517:	getelementptr	 %11516 %11514
%11518:	store	 %11513 %11517
%11519:	br	 for.inc

BASIC BLOCK for.inc
%11520:	add	 %11494 XXX
%11521:	br	 for.cond

BASIC BLOCK for.end
%11522:	br	 if.end18

BASIC BLOCK if.else
%11523:	getelementptr	 preg XXX XXX
%11524:	store	 XXX %11523
%11525:	br	 if.end18

BASIC BLOCK if.end18
%11526:	and	 cflags XXX
%11527:	icmp	 %11526 XXX
%11528:	br	 %11527 if.else23 if.then21

BASIC BLOCK if.then21
%11529:	and	 %11475 XXX
%11530:	or	 %11529 XXX
%11531:	getelementptr	 preg XXX XXX
%11532:	load	 %11531
%11533:	and	 %11532 XXX
%11534:	or	 %11533 XXX
%11535:	store	 %11534 %11531
%11536:	br	 if.end27

BASIC BLOCK if.else23
%11537:	getelementptr	 preg XXX XXX
%11538:	load	 %11537
%11539:	and	 %11538 XXX
%11540:	store	 %11539 %11537
%11541:	br	 if.end27

BASIC BLOCK if.end27
%11542:	phi	 %11530 %11475
%11543:	and	 cflags XXX
%11544:	icmp	 %11543 XXX
%11545:	xor	 %11544 XXX
%11546:	xor	 %11545 XXX
%11547:	zext	 %11546
%11548:	getelementptr	 preg XXX XXX
%11549:	trunc	 %11547
%11550:	load	 %11548
%11551:	and	 %11549 XXX
%11552:	shl	 %11551 XXX
%11553:	and	 %11550 XXX
%11554:	or	 %11553 %11552
%11555:	store	 %11554 %11548
%11556:	call	 pattern strlen
%11557:	trunc	 %11556
%11558:	call	 pattern %11557 %11542 preg regex_compile
%11559:	icmp	 %11558 XXX
%11560:	br	 %11559 if.end40 if.then39

BASIC BLOCK if.then39
%11561:	br	 if.end40

BASIC BLOCK if.end40
%11562:	phi	 XXX %11558
%11563:	br	 return

BASIC BLOCK return
%11564:	phi	 XXX %11562
%11565:	ret	 %11564

FUNCTION regexec

BASIC BLOCK entry
%11566:	alloca	 XXX
%11567:	alloca	 XXX
%11568:	call	 string strlen
%11569:	trunc	 %11568
%11570:	getelementptr	 preg XXX XXX
%11571:	load	 %11570
%11572:	lshr	 %11571 XXX
%11573:	and	 %11572 XXX
%11574:	zext	 %11573
%11575:	icmp	 %11574 XXX
%11576:	br	 %11575 land.rhs land.end

BASIC BLOCK land.rhs
%11577:	icmp	 nmatch XXX
%11578:	br	 land.end

BASIC BLOCK land.end
%11579:	phi	 XXX %11577
%11580:	zext	 %11579
%11581:	trunc	 %11580
%11582:	bitcast	 %11567
%11583:	bitcast	 preg
%11584:	call	 %11582 %11583 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%11585:	and	 eflags XXX
%11586:	icmp	 %11585 XXX
%11587:	xor	 %11586 XXX
%11588:	xor	 %11587 XXX
%11589:	zext	 %11588
%11590:	getelementptr	 %11567 XXX XXX
%11591:	trunc	 %11589
%11592:	load	 %11590
%11593:	and	 %11591 XXX
%11594:	shl	 %11593 XXX
%11595:	and	 %11592 XXX
%11596:	or	 %11595 %11594
%11597:	store	 %11596 %11590
%11598:	and	 eflags XXX
%11599:	icmp	 %11598 XXX
%11600:	xor	 %11599 XXX
%11601:	xor	 %11600 XXX
%11602:	zext	 %11601
%11603:	getelementptr	 %11567 XXX XXX
%11604:	trunc	 %11602
%11605:	load	 %11603
%11606:	and	 %11604 XXX
%11607:	shl	 %11606 XXX
%11608:	and	 %11605 XXX
%11609:	or	 %11608 %11607
%11610:	store	 %11609 %11603
%11611:	getelementptr	 %11567 XXX XXX
%11612:	load	 %11611
%11613:	and	 %11612 XXX
%11614:	or	 %11613 XXX
%11615:	store	 %11614 %11611
%11616:	icmp	 %11581 XXX
%11617:	br	 %11616 if.end34 if.then

BASIC BLOCK if.then
%11618:	trunc	 nmatch
%11619:	getelementptr	 %11566 XXX XXX
%11620:	store	 %11618 %11619
%11621:	mul	 nmatch XXX
%11622:	call	 %11621 malloc
%11623:	bitcast	 %11622
%11624:	getelementptr	 %11566 XXX XXX
%11625:	store	 %11623 %11624
%11626:	mul	 nmatch XXX
%11627:	call	 %11626 malloc
%11628:	bitcast	 %11627
%11629:	getelementptr	 %11566 XXX XXX
%11630:	store	 %11628 %11629
%11631:	getelementptr	 %11566 XXX XXX
%11632:	load	 %11631
%11633:	icmp	 %11632 XXX
%11634:	br	 %11633 lor.lhs.false if.then33

BASIC BLOCK lor.lhs.false
%11635:	getelementptr	 %11566 XXX XXX
%11636:	load	 %11635
%11637:	icmp	 %11636 XXX
%11638:	br	 %11637 if.end if.then33

BASIC BLOCK if.then33
%11639:	br	 return

BASIC BLOCK if.end
%11640:	br	 if.end34

BASIC BLOCK if.end34
%11641:	sext	 %11581
%11642:	icmp	 %11641 XXX
%11643:	br	 %11642 cond.false cond.true

BASIC BLOCK cond.true
%11644:	br	 cond.end

BASIC BLOCK cond.false
%11645:	br	 cond.end

BASIC BLOCK cond.end
%11646:	phi	 %11566 XXX
%11647:	call	 %11567 string %11569 XXX %11569 %11646 re_search
%11648:	icmp	 %11581 XXX
%11649:	br	 %11648 if.end57 if.then39

BASIC BLOCK if.then39
%11650:	icmp	 %11647 XXX
%11651:	br	 %11650 if.end54 if.then42

BASIC BLOCK if.then42
%11652:	br	 for.cond

BASIC BLOCK for.cond
%11653:	phi	 XXX %11676
%11654:	zext	 %11653
%11655:	icmp	 %11654 nmatch
%11656:	br	 %11655 for.end for.body

BASIC BLOCK for.body
%11657:	zext	 %11653
%11658:	getelementptr	 %11566 XXX XXX
%11659:	load	 %11658
%11660:	getelementptr	 %11659 %11657
%11661:	load	 %11660
%11662:	zext	 %11653
%11663:	getelementptr	 pmatch %11662
%11664:	getelementptr	 %11663 XXX XXX
%11665:	store	 %11661 %11664
%11666:	zext	 %11653
%11667:	getelementptr	 %11566 XXX XXX
%11668:	load	 %11667
%11669:	getelementptr	 %11668 %11666
%11670:	load	 %11669
%11671:	zext	 %11653
%11672:	getelementptr	 pmatch %11671
%11673:	getelementptr	 %11672 XXX XXX
%11674:	store	 %11670 %11673
%11675:	br	 for.inc

BASIC BLOCK for.inc
%11676:	add	 %11653 XXX
%11677:	br	 for.cond

BASIC BLOCK for.end
%11678:	br	 if.end54

BASIC BLOCK if.end54
%11679:	getelementptr	 %11566 XXX XXX
%11680:	load	 %11679
%11681:	bitcast	 %11680
%11682:	call	 %11681 free
%11683:	getelementptr	 %11566 XXX XXX
%11684:	load	 %11683
%11685:	bitcast	 %11684
%11686:	call	 %11685 free
%11687:	br	 if.end57

BASIC BLOCK if.end57
%11688:	icmp	 %11647 XXX
%11689:	select	 %11688 XXX XXX
%11690:	br	 return

BASIC BLOCK return
%11691:	phi	 XXX %11689
%11692:	ret	 %11691

FUNCTION regerror

BASIC BLOCK entry
%11693:	icmp	 errcode XXX
%11694:	br	 %11693 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%11695:	sext	 errcode
%11696:	icmp	 %11695 XXX
%11697:	br	 %11696 if.end if.then

BASIC BLOCK if.then
%11698:	call	 abort
%11699:	unreachable	

BASIC BLOCK if.end
%11700:	sext	 errcode
%11701:	getelementptr	 re_error_msg XXX %11700
%11702:	load	 %11701
%11703:	icmp	 %11702 XXX
%11704:	br	 %11703 if.then3 if.end4

BASIC BLOCK if.then3
%11705:	br	 if.end4

BASIC BLOCK if.end4
%11706:	phi	 %11702 XXX
%11707:	call	 %11706 strlen
%11708:	add	 %11707 XXX
%11709:	icmp	 errbuf_size XXX
%11710:	br	 %11709 if.end16 if.then7

BASIC BLOCK if.then7
%11711:	icmp	 %11708 errbuf_size
%11712:	br	 %11711 if.else if.then10

BASIC BLOCK if.then10
%11713:	sub	 errbuf_size XXX
%11714:	call	 errbuf %11706 %11713 strncpy
%11715:	sub	 errbuf_size XXX
%11716:	getelementptr	 errbuf %11715
%11717:	store	 XXX %11716
%11718:	br	 if.end15

BASIC BLOCK if.else
%11719:	call	 errbuf %11706 strcpy
%11720:	br	 if.end15

BASIC BLOCK if.end15
%11721:	br	 if.end16

BASIC BLOCK if.end16
%11722:	ret	 %11708

FUNCTION regfree

BASIC BLOCK entry
%11723:	getelementptr	 preg XXX XXX
%11724:	load	 %11723
%11725:	icmp	 %11724 XXX
%11726:	br	 %11725 if.end if.then

BASIC BLOCK if.then
%11727:	getelementptr	 preg XXX XXX
%11728:	load	 %11727
%11729:	call	 %11728 free
%11730:	br	 if.end

BASIC BLOCK if.end
%11731:	getelementptr	 preg XXX XXX
%11732:	store	 XXX %11731
%11733:	getelementptr	 preg XXX XXX
%11734:	store	 XXX %11733
%11735:	getelementptr	 preg XXX XXX
%11736:	store	 XXX %11735
%11737:	getelementptr	 preg XXX XXX
%11738:	load	 %11737
%11739:	icmp	 %11738 XXX
%11740:	br	 %11739 if.end6 if.then4

BASIC BLOCK if.then4
%11741:	getelementptr	 preg XXX XXX
%11742:	load	 %11741
%11743:	call	 %11742 free
%11744:	br	 if.end6

BASIC BLOCK if.end6
%11745:	getelementptr	 preg XXX XXX
%11746:	store	 XXX %11745
%11747:	getelementptr	 preg XXX XXX
%11748:	load	 %11747
%11749:	and	 %11748 XXX
%11750:	store	 %11749 %11747
%11751:	getelementptr	 preg XXX XXX
%11752:	load	 %11751
%11753:	icmp	 %11752 XXX
%11754:	br	 %11753 if.end11 if.then9

BASIC BLOCK if.then9
%11755:	getelementptr	 preg XXX XXX
%11756:	load	 %11755
%11757:	call	 %11756 free
%11758:	br	 if.end11

BASIC BLOCK if.end11
%11759:	getelementptr	 preg XXX XXX
%11760:	store	 XXX %11759
%11761:	ret	

FUNCTION group_in_compile_stack

BASIC BLOCK entry
%11762:	alloca	 XXX
%11763:	bitcast	 %11762
%11764:	getelementptr	 %11763 XXX XXX
%11765:	store	 compile_stack.coerce0 %11764
%11766:	getelementptr	 %11763 XXX XXX
%11767:	store	 compile_stack.coerce1 %11766
%11768:	getelementptr	 %11762 XXX XXX
%11769:	load	 %11768
%11770:	sub	 %11769 XXX
%11771:	br	 for.cond

BASIC BLOCK for.cond
%11772:	phi	 %11770 %11785
%11773:	icmp	 %11772 XXX
%11774:	br	 %11773 for.end for.body

BASIC BLOCK for.body
%11775:	sext	 %11772
%11776:	getelementptr	 %11762 XXX XXX
%11777:	load	 %11776
%11778:	getelementptr	 %11777 %11775
%11779:	getelementptr	 %11778 XXX XXX
%11780:	load	 %11779
%11781:	icmp	 %11780 regnum
%11782:	br	 %11781 if.end if.then

BASIC BLOCK if.then
%11783:	br	 return

BASIC BLOCK if.end
%11784:	br	 for.inc

BASIC BLOCK for.inc
%11785:	add	 %11772 XXX
%11786:	br	 for.cond

BASIC BLOCK for.end
%11787:	br	 return

BASIC BLOCK return
%11788:	phi	 XXX XXX
%11789:	ret	 %11788

FUNCTION store_op2

BASIC BLOCK entry
%11790:	trunc	 op
%11791:	store	 %11790 loc
%11792:	br	 do.body

BASIC BLOCK do.body
%11793:	and	 arg1 XXX
%11794:	trunc	 %11793
%11795:	getelementptr	 loc XXX
%11796:	getelementptr	 %11795 XXX
%11797:	store	 %11794 %11796
%11798:	ashr	 arg1 XXX
%11799:	trunc	 %11798
%11800:	getelementptr	 loc XXX
%11801:	getelementptr	 %11800 XXX
%11802:	store	 %11799 %11801
%11803:	br	 do.end

BASIC BLOCK do.end
%11804:	br	 do.body5

BASIC BLOCK do.body5
%11805:	and	 arg2 XXX
%11806:	trunc	 %11805
%11807:	getelementptr	 loc XXX
%11808:	getelementptr	 %11807 XXX
%11809:	store	 %11806 %11808
%11810:	ashr	 arg2 XXX
%11811:	trunc	 %11810
%11812:	getelementptr	 loc XXX
%11813:	getelementptr	 %11812 XXX
%11814:	store	 %11811 %11813
%11815:	br	 do.end14

BASIC BLOCK do.end14
%11816:	ret	

FUNCTION insert_op2

BASIC BLOCK entry
%11817:	getelementptr	 end XXX
%11818:	br	 while.cond

BASIC BLOCK while.cond
%11819:	phi	 end %11823
%11820:	phi	 %11817 %11825
%11821:	icmp	 %11819 loc
%11822:	br	 %11821 while.end while.body

BASIC BLOCK while.body
%11823:	getelementptr	 %11819 XXX
%11824:	load	 %11823
%11825:	getelementptr	 %11820 XXX
%11826:	store	 %11824 %11825
%11827:	br	 while.cond

BASIC BLOCK while.end
%11828:	call	 op loc arg1 arg2 store_op2
%11829:	ret	

FUNCTION compile_range

BASIC BLOCK entry
%11830:	load	 p_ptr
%11831:	icmp	 %11830 pend
%11832:	br	 %11831 if.end if.then

BASIC BLOCK if.then
%11833:	br	 return

BASIC BLOCK if.end
%11834:	getelementptr	 %11830 XXX
%11835:	load	 %11834
%11836:	zext	 %11835
%11837:	getelementptr	 %11830 XXX
%11838:	load	 %11837
%11839:	zext	 %11838
%11840:	load	 p_ptr
%11841:	getelementptr	 %11840 XXX
%11842:	store	 %11841 p_ptr
%11843:	icmp	 %11836 %11839
%11844:	br	 %11843 if.end6 if.then5

BASIC BLOCK if.then5
%11845:	and	 syntax XXX
%11846:	icmp	 %11845 XXX
%11847:	select	 %11846 XXX XXX
%11848:	br	 return

BASIC BLOCK if.end6
%11849:	br	 for.cond

BASIC BLOCK for.cond
%11850:	phi	 %11836 %11888
%11851:	icmp	 %11850 %11839
%11852:	br	 %11851 for.end for.body

BASIC BLOCK for.body
%11853:	icmp	 translate XXX
%11854:	br	 %11853 cond.false cond.true

BASIC BLOCK cond.true
%11855:	trunc	 %11850
%11856:	zext	 %11855
%11857:	getelementptr	 translate %11856
%11858:	load	 %11857
%11859:	sext	 %11858
%11860:	br	 cond.end

BASIC BLOCK cond.false
%11861:	br	 cond.end

BASIC BLOCK cond.end
%11862:	phi	 %11859 %11850
%11863:	trunc	 %11862
%11864:	zext	 %11863
%11865:	srem	 %11864 XXX
%11866:	shl	 XXX %11865
%11867:	icmp	 translate XXX
%11868:	br	 %11867 cond.false22 cond.true17

BASIC BLOCK cond.true17
%11869:	trunc	 %11850
%11870:	zext	 %11869
%11871:	getelementptr	 translate %11870
%11872:	load	 %11871
%11873:	sext	 %11872
%11874:	br	 cond.end23

BASIC BLOCK cond.false22
%11875:	br	 cond.end23

BASIC BLOCK cond.end23
%11876:	phi	 %11873 %11850
%11877:	trunc	 %11876
%11878:	zext	 %11877
%11879:	sdiv	 %11878 XXX
%11880:	sext	 %11879
%11881:	getelementptr	 b %11880
%11882:	load	 %11881
%11883:	zext	 %11882
%11884:	or	 %11883 %11866
%11885:	trunc	 %11884
%11886:	store	 %11885 %11881
%11887:	br	 for.inc

BASIC BLOCK for.inc
%11888:	add	 %11850 XXX
%11889:	br	 for.cond

BASIC BLOCK for.end
%11890:	br	 return

BASIC BLOCK return
%11891:	phi	 XXX %11847 XXX
%11892:	ret	 %11891

FUNCTION insert_op1

BASIC BLOCK entry
%11893:	getelementptr	 end XXX
%11894:	br	 while.cond

BASIC BLOCK while.cond
%11895:	phi	 end %11899
%11896:	phi	 %11893 %11901
%11897:	icmp	 %11895 loc
%11898:	br	 %11897 while.end while.body

BASIC BLOCK while.body
%11899:	getelementptr	 %11895 XXX
%11900:	load	 %11899
%11901:	getelementptr	 %11896 XXX
%11902:	store	 %11900 %11901
%11903:	br	 while.cond

BASIC BLOCK while.end
%11904:	call	 op loc arg store_op1
%11905:	ret	

FUNCTION store_op1

BASIC BLOCK entry
%11906:	trunc	 op
%11907:	store	 %11906 loc
%11908:	br	 do.body

BASIC BLOCK do.body
%11909:	and	 arg XXX
%11910:	trunc	 %11909
%11911:	getelementptr	 loc XXX
%11912:	getelementptr	 %11911 XXX
%11913:	store	 %11910 %11912
%11914:	ashr	 arg XXX
%11915:	trunc	 %11914
%11916:	getelementptr	 loc XXX
%11917:	getelementptr	 %11916 XXX
%11918:	store	 %11915 %11917
%11919:	br	 do.end

BASIC BLOCK do.end
%11920:	ret	

FUNCTION at_endline_loc_p

BASIC BLOCK entry
%11921:	load	 p
%11922:	sext	 %11921
%11923:	icmp	 %11922 XXX
%11924:	zext	 %11923
%11925:	trunc	 %11924
%11926:	getelementptr	 p XXX
%11927:	icmp	 %11926 pend
%11928:	br	 %11927 cond.false cond.true

BASIC BLOCK cond.true
%11929:	getelementptr	 p XXX
%11930:	br	 cond.end

BASIC BLOCK cond.false
%11931:	br	 cond.end

BASIC BLOCK cond.end
%11932:	phi	 %11929 XXX
%11933:	and	 syntax XXX
%11934:	icmp	 %11933 XXX
%11935:	br	 %11934 cond.false10 cond.true6

BASIC BLOCK cond.true6
%11936:	load	 p
%11937:	sext	 %11936
%11938:	icmp	 %11937 XXX
%11939:	br	 %11938 lor.rhs lor.end

BASIC BLOCK cond.false10
%11940:	sext	 %11925
%11941:	icmp	 %11940 XXX
%11942:	br	 %11941 lor.rhs land.lhs.true

BASIC BLOCK land.lhs.true
%11943:	icmp	 %11932 XXX
%11944:	br	 %11943 lor.rhs land.lhs.true14

BASIC BLOCK land.lhs.true14
%11945:	load	 %11932
%11946:	sext	 %11945
%11947:	icmp	 %11946 XXX
%11948:	br	 %11947 lor.rhs lor.end

BASIC BLOCK lor.rhs
%11949:	and	 syntax XXX
%11950:	icmp	 %11949 XXX
%11951:	br	 %11950 cond.false24 cond.true20

BASIC BLOCK cond.true20
%11952:	load	 p
%11953:	sext	 %11952
%11954:	icmp	 %11953 XXX
%11955:	zext	 %11954
%11956:	br	 cond.end32

BASIC BLOCK cond.false24
%11957:	sext	 %11925
%11958:	icmp	 %11957 XXX
%11959:	br	 %11958 land.end land.lhs.true27

BASIC BLOCK land.lhs.true27
%11960:	icmp	 %11932 XXX
%11961:	br	 %11960 land.end land.rhs

BASIC BLOCK land.rhs
%11962:	load	 %11932
%11963:	sext	 %11962
%11964:	icmp	 %11963 XXX
%11965:	br	 land.end

BASIC BLOCK land.end
%11966:	phi	 XXX XXX %11964
%11967:	zext	 %11966
%11968:	br	 cond.end32

BASIC BLOCK cond.end32
%11969:	phi	 %11955 %11967
%11970:	icmp	 %11969 XXX
%11971:	br	 lor.end

BASIC BLOCK lor.end
%11972:	phi	 XXX XXX %11970
%11973:	zext	 %11972
%11974:	trunc	 %11973
%11975:	ret	 %11974

FUNCTION at_begline_loc_p

BASIC BLOCK entry
%11976:	getelementptr	 p XXX
%11977:	icmp	 %11976 pattern
%11978:	br	 %11977 land.end land.rhs

BASIC BLOCK land.rhs
%11979:	getelementptr	 %11976 XXX
%11980:	load	 %11979
%11981:	sext	 %11980
%11982:	icmp	 %11981 XXX
%11983:	br	 land.end

BASIC BLOCK land.end
%11984:	phi	 XXX %11982
%11985:	zext	 %11984
%11986:	trunc	 %11985
%11987:	load	 %11976
%11988:	sext	 %11987
%11989:	icmp	 %11988 XXX
%11990:	br	 %11989 lor.rhs land.lhs.true

BASIC BLOCK land.lhs.true
%11991:	and	 syntax XXX
%11992:	icmp	 %11991 XXX
%11993:	br	 %11992 lor.lhs.false lor.end20

BASIC BLOCK lor.lhs.false
%11994:	sext	 %11986
%11995:	icmp	 %11994 XXX
%11996:	br	 %11995 lor.rhs lor.end20

BASIC BLOCK lor.rhs
%11997:	load	 %11976
%11998:	sext	 %11997
%11999:	icmp	 %11998 XXX
%12000:	br	 %11999 land.end18 land.rhs12

BASIC BLOCK land.rhs12
%12001:	and	 syntax XXX
%12002:	icmp	 %12001 XXX
%12003:	br	 %12002 lor.rhs15 lor.end

BASIC BLOCK lor.rhs15
%12004:	sext	 %11986
%12005:	icmp	 %12004 XXX
%12006:	br	 lor.end

BASIC BLOCK lor.end
%12007:	phi	 XXX %12005
%12008:	br	 land.end18

BASIC BLOCK land.end18
%12009:	phi	 XXX %12007
%12010:	br	 lor.end20

BASIC BLOCK lor.end20
%12011:	phi	 XXX XXX %12009
%12012:	zext	 %12011
%12013:	trunc	 %12012
%12014:	ret	 %12013

FUNCTION init_syntax_once

BASIC BLOCK entry
%12015:	load	 init_syntax_once.done
%12016:	icmp	 %12015 XXX
%12017:	br	 %12016 if.end if.then

BASIC BLOCK if.then
%12018:	br	 return

BASIC BLOCK if.end
%12019:	call	 XXX XXX XXX XXX XXX llvm.memset.p0i8.i64
%12020:	br	 for.cond

BASIC BLOCK for.cond
%12021:	phi	 XXX %12028
%12022:	icmp	 %12021 XXX
%12023:	br	 %12022 for.end for.body

BASIC BLOCK for.body
%12024:	sext	 %12021
%12025:	getelementptr	 re_syntax_table XXX %12024
%12026:	store	 XXX %12025
%12027:	br	 for.inc

BASIC BLOCK for.inc
%12028:	add	 %12021 XXX
%12029:	br	 for.cond

BASIC BLOCK for.end
%12030:	br	 for.cond1

BASIC BLOCK for.cond1
%12031:	phi	 XXX %12038
%12032:	icmp	 %12031 XXX
%12033:	br	 %12032 for.end8 for.body3

BASIC BLOCK for.body3
%12034:	sext	 %12031
%12035:	getelementptr	 re_syntax_table XXX %12034
%12036:	store	 XXX %12035
%12037:	br	 for.inc6

BASIC BLOCK for.inc6
%12038:	add	 %12031 XXX
%12039:	br	 for.cond1

BASIC BLOCK for.end8
%12040:	br	 for.cond9

BASIC BLOCK for.cond9
%12041:	phi	 XXX %12048
%12042:	icmp	 %12041 XXX
%12043:	br	 %12042 for.end16 for.body11

BASIC BLOCK for.body11
%12044:	sext	 %12041
%12045:	getelementptr	 re_syntax_table XXX %12044
%12046:	store	 XXX %12045
%12047:	br	 for.inc14

BASIC BLOCK for.inc14
%12048:	add	 %12041 XXX
%12049:	br	 for.cond9

BASIC BLOCK for.end16
%12050:	store	 XXX XXX
%12051:	store	 XXX init_syntax_once.done
%12052:	br	 return

BASIC BLOCK return
%12053:	ret	

FUNCTION bcmp_translate

BASIC BLOCK entry
%12054:	br	 while.cond

BASIC BLOCK while.cond
%12055:	phi	 len %12075
%12056:	phi	 s1 %12060
%12057:	phi	 s2 %12066
%12058:	icmp	 %12055 XXX
%12059:	br	 %12058 while.end while.body

BASIC BLOCK while.body
%12060:	getelementptr	 %12056 XXX
%12061:	load	 %12056
%12062:	zext	 %12061
%12063:	getelementptr	 translate %12062
%12064:	load	 %12063
%12065:	sext	 %12064
%12066:	getelementptr	 %12057 XXX
%12067:	load	 %12057
%12068:	zext	 %12067
%12069:	getelementptr	 translate %12068
%12070:	load	 %12069
%12071:	sext	 %12070
%12072:	icmp	 %12065 %12071
%12073:	br	 %12072 if.end if.then

BASIC BLOCK if.then
%12074:	br	 return

BASIC BLOCK if.end
%12075:	add	 %12055 XXX
%12076:	br	 while.cond

BASIC BLOCK while.end
%12077:	br	 return

BASIC BLOCK return
%12078:	phi	 XXX XXX
%12079:	ret	 %12078

FUNCTION group_match_null_string_p

BASIC BLOCK entry
%12080:	alloca	 XXX
%12081:	load	 p
%12082:	getelementptr	 %12081 XXX
%12083:	store	 %12082 %12080
%12084:	br	 while.cond

BASIC BLOCK while.cond
%12085:	load	 %12080
%12086:	icmp	 %12085 end
%12087:	br	 %12086 while.end70 while.body

BASIC BLOCK while.body
%12088:	load	 %12080
%12089:	load	 %12088
%12090:	zext	 %12089
%12091:	switch	 %12090 sw.default XXX sw.bb XXX sw.bb64

BASIC BLOCK sw.bb
%12092:	load	 %12080
%12093:	getelementptr	 %12092 XXX
%12094:	store	 %12093 %12080
%12095:	br	 do.body

BASIC BLOCK do.body
%12096:	br	 do.body1

BASIC BLOCK do.body1
%12097:	load	 %12080
%12098:	load	 %12097
%12099:	zext	 %12098
%12100:	and	 %12099 XXX
%12101:	load	 %12080
%12102:	getelementptr	 %12101 XXX
%12103:	load	 %12102
%12104:	sext	 %12103
%12105:	shl	 %12104 XXX
%12106:	add	 %12100 %12105
%12107:	br	 do.end

BASIC BLOCK do.end
%12108:	load	 %12080
%12109:	getelementptr	 %12108 XXX
%12110:	store	 %12109 %12080
%12111:	br	 do.end6

BASIC BLOCK do.end6
%12112:	icmp	 %12106 XXX
%12113:	br	 %12112 if.end63 if.then

BASIC BLOCK if.then
%12114:	br	 while.cond9

BASIC BLOCK while.cond9
%12115:	phi	 %12106 %12157
%12116:	sub	 %12115 XXX
%12117:	sext	 %12116
%12118:	load	 %12080
%12119:	getelementptr	 %12118 %12117
%12120:	load	 %12119
%12121:	zext	 %12120
%12122:	icmp	 %12121 XXX
%12123:	br	 %12122 while.end while.body13

BASIC BLOCK while.body13
%12124:	load	 %12080
%12125:	load	 %12080
%12126:	sext	 %12115
%12127:	getelementptr	 %12125 %12126
%12128:	getelementptr	 %12127 XXX
%12129:	call	 %12124 %12128 reg_info alt_match_null_string_p
%12130:	icmp	 %12129 XXX
%12131:	br	 %12130 if.then16 if.end

BASIC BLOCK if.then16
%12132:	br	 return

BASIC BLOCK if.end
%12133:	load	 %12080
%12134:	sext	 %12115
%12135:	getelementptr	 %12133 %12134
%12136:	store	 %12135 %12080
%12137:	load	 %12080
%12138:	load	 %12137
%12139:	zext	 %12138
%12140:	icmp	 %12139 XXX
%12141:	br	 %12140 if.end23 if.then22

BASIC BLOCK if.then22
%12142:	br	 while.end

BASIC BLOCK if.end23
%12143:	load	 %12080
%12144:	getelementptr	 %12143 XXX
%12145:	store	 %12144 %12080
%12146:	br	 do.body25

BASIC BLOCK do.body25
%12147:	br	 do.body26

BASIC BLOCK do.body26
%12148:	load	 %12080
%12149:	load	 %12148
%12150:	zext	 %12149
%12151:	and	 %12150 XXX
%12152:	load	 %12080
%12153:	getelementptr	 %12152 XXX
%12154:	load	 %12153
%12155:	sext	 %12154
%12156:	shl	 %12155 XXX
%12157:	add	 %12151 %12156
%12158:	br	 do.end33

BASIC BLOCK do.end33
%12159:	load	 %12080
%12160:	getelementptr	 %12159 XXX
%12161:	store	 %12160 %12080
%12162:	br	 do.end35

BASIC BLOCK do.end35
%12163:	sub	 %12157 XXX
%12164:	sext	 %12163
%12165:	load	 %12080
%12166:	getelementptr	 %12165 %12164
%12167:	load	 %12166
%12168:	zext	 %12167
%12169:	icmp	 %12168 XXX
%12170:	br	 %12169 if.end44 if.then42

BASIC BLOCK if.then42
%12171:	load	 %12080
%12172:	getelementptr	 %12171 XXX
%12173:	store	 %12172 %12080
%12174:	br	 while.end

BASIC BLOCK if.end44
%12175:	br	 while.cond9

BASIC BLOCK while.end
%12176:	br	 do.body45

BASIC BLOCK do.body45
%12177:	load	 %12080
%12178:	getelementptr	 %12177 XXX
%12179:	load	 %12178
%12180:	zext	 %12179
%12181:	and	 %12180 XXX
%12182:	load	 %12080
%12183:	getelementptr	 %12182 XXX
%12184:	getelementptr	 %12183 XXX
%12185:	load	 %12184
%12186:	sext	 %12185
%12187:	shl	 %12186 XXX
%12188:	add	 %12181 %12187
%12189:	br	 do.end54

BASIC BLOCK do.end54
%12190:	load	 %12080
%12191:	load	 %12080
%12192:	sext	 %12188
%12193:	getelementptr	 %12191 %12192
%12194:	call	 %12190 %12193 reg_info alt_match_null_string_p
%12195:	icmp	 %12194 XXX
%12196:	br	 %12195 if.then59 if.end60

BASIC BLOCK if.then59
%12197:	br	 return

BASIC BLOCK if.end60
%12198:	load	 %12080
%12199:	sext	 %12188
%12200:	getelementptr	 %12198 %12199
%12201:	store	 %12200 %12080
%12202:	br	 if.end63

BASIC BLOCK if.end63
%12203:	br	 sw.epilog

BASIC BLOCK sw.bb64
%12204:	load	 %12080
%12205:	getelementptr	 %12204 XXX
%12206:	store	 %12205 p
%12207:	br	 return

BASIC BLOCK sw.default
%12208:	call	 %12080 end reg_info common_op_match_null_string_p
%12209:	icmp	 %12208 XXX
%12210:	br	 %12209 if.then68 if.end69

BASIC BLOCK if.then68
%12211:	br	 return

BASIC BLOCK if.end69
%12212:	br	 sw.epilog

BASIC BLOCK sw.epilog
%12213:	br	 while.cond

BASIC BLOCK while.end70
%12214:	br	 return

BASIC BLOCK return
%12215:	phi	 XXX XXX XXX XXX XXX
%12216:	ret	 %12215

FUNCTION common_op_match_null_string_p

BASIC BLOCK entry
%12217:	alloca	 XXX
%12218:	load	 p
%12219:	store	 %12218 %12217
%12220:	load	 %12217
%12221:	getelementptr	 %12220 XXX
%12222:	store	 %12221 %12217
%12223:	load	 %12220
%12224:	zext	 %12223
%12225:	switch	 %12224 sw.default XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb1 XXX sw.bb12 XXX sw.bb23 XXX sw.bb55 XXX sw.bb65

BASIC BLOCK sw.bb
%12226:	br	 sw.epilog

BASIC BLOCK sw.bb1
%12227:	load	 %12217
%12228:	load	 %12227
%12229:	zext	 %12228
%12230:	call	 %12217 end reg_info group_match_null_string_p
%12231:	sext	 %12229
%12232:	getelementptr	 reg_info %12231
%12233:	bitcast	 %12232
%12234:	bitcast	 %12233
%12235:	load	 %12234
%12236:	and	 %12235 XXX
%12237:	zext	 %12236
%12238:	icmp	 %12237 XXX
%12239:	br	 %12238 if.end if.then

BASIC BLOCK if.then
%12240:	sext	 %12230
%12241:	sext	 %12229
%12242:	getelementptr	 reg_info %12241
%12243:	bitcast	 %12242
%12244:	bitcast	 %12243
%12245:	trunc	 %12240
%12246:	load	 %12244
%12247:	and	 %12245 XXX
%12248:	and	 %12246 XXX
%12249:	or	 %12248 %12247
%12250:	store	 %12249 %12244
%12251:	br	 if.end

BASIC BLOCK if.end
%12252:	icmp	 %12230 XXX
%12253:	br	 %12252 if.then10 if.end11

BASIC BLOCK if.then10
%12254:	br	 return

BASIC BLOCK if.end11
%12255:	br	 sw.epilog

BASIC BLOCK sw.bb12
%12256:	br	 do.body

BASIC BLOCK do.body
%12257:	br	 do.body13

BASIC BLOCK do.body13
%12258:	load	 %12217
%12259:	load	 %12258
%12260:	zext	 %12259
%12261:	and	 %12260 XXX
%12262:	load	 %12217
%12263:	getelementptr	 %12262 XXX
%12264:	load	 %12263
%12265:	sext	 %12264
%12266:	shl	 %12265 XXX
%12267:	add	 %12261 %12266
%12268:	br	 do.end

BASIC BLOCK do.end
%12269:	load	 %12217
%12270:	getelementptr	 %12269 XXX
%12271:	store	 %12270 %12217
%12272:	br	 do.end17

BASIC BLOCK do.end17
%12273:	icmp	 %12267 XXX
%12274:	br	 %12273 if.else if.then20

BASIC BLOCK if.then20
%12275:	load	 %12217
%12276:	sext	 %12267
%12277:	getelementptr	 %12275 %12276
%12278:	store	 %12277 %12217
%12279:	br	 if.end22

BASIC BLOCK if.else
%12280:	br	 return

BASIC BLOCK if.end22
%12281:	br	 sw.epilog

BASIC BLOCK sw.bb23
%12282:	load	 %12217
%12283:	getelementptr	 %12282 XXX
%12284:	store	 %12283 %12217
%12285:	br	 do.body25

BASIC BLOCK do.body25
%12286:	br	 do.body26

BASIC BLOCK do.body26
%12287:	load	 %12217
%12288:	load	 %12287
%12289:	zext	 %12288
%12290:	and	 %12289 XXX
%12291:	load	 %12217
%12292:	getelementptr	 %12291 XXX
%12293:	load	 %12292
%12294:	sext	 %12293
%12295:	shl	 %12294 XXX
%12296:	add	 %12290 %12295
%12297:	br	 do.end33

BASIC BLOCK do.end33
%12298:	load	 %12217
%12299:	getelementptr	 %12298 XXX
%12300:	store	 %12299 %12217
%12301:	br	 do.end35

BASIC BLOCK do.end35
%12302:	icmp	 %12296 XXX
%12303:	br	 %12302 if.else53 if.then38

BASIC BLOCK if.then38
%12304:	load	 %12217
%12305:	getelementptr	 %12304 XXX
%12306:	store	 %12305 %12217
%12307:	br	 do.body40

BASIC BLOCK do.body40
%12308:	br	 do.body41

BASIC BLOCK do.body41
%12309:	load	 %12217
%12310:	load	 %12309
%12311:	zext	 %12310
%12312:	and	 %12311 XXX
%12313:	load	 %12217
%12314:	getelementptr	 %12313 XXX
%12315:	load	 %12314
%12316:	sext	 %12315
%12317:	shl	 %12316 XXX
%12318:	add	 %12312 %12317
%12319:	br	 do.end48

BASIC BLOCK do.end48
%12320:	load	 %12217
%12321:	getelementptr	 %12320 XXX
%12322:	store	 %12321 %12217
%12323:	br	 do.end50

BASIC BLOCK do.end50
%12324:	load	 %12217
%12325:	sext	 %12318
%12326:	getelementptr	 %12324 %12325
%12327:	store	 %12326 %12217
%12328:	br	 if.end54

BASIC BLOCK if.else53
%12329:	br	 return

BASIC BLOCK if.end54
%12330:	br	 sw.epilog

BASIC BLOCK sw.bb55
%12331:	load	 %12217
%12332:	load	 %12331
%12333:	zext	 %12332
%12334:	getelementptr	 reg_info %12333
%12335:	bitcast	 %12334
%12336:	bitcast	 %12335
%12337:	load	 %12336
%12338:	and	 %12337 XXX
%12339:	zext	 %12338
%12340:	icmp	 %12339 XXX
%12341:	br	 %12340 if.then63 if.end64

BASIC BLOCK if.then63
%12342:	br	 return

BASIC BLOCK if.end64
%12343:	br	 sw.epilog

BASIC BLOCK sw.bb65
%12344:	load	 %12217
%12345:	getelementptr	 %12344 XXX
%12346:	store	 %12345 %12217
%12347:	br	 sw.default

BASIC BLOCK sw.default
%12348:	br	 return

BASIC BLOCK sw.epilog
%12349:	load	 %12217
%12350:	store	 %12349 p
%12351:	br	 return

BASIC BLOCK return
%12352:	phi	 XXX XXX XXX XXX XXX XXX
%12353:	ret	 %12352

FUNCTION alt_match_null_string_p

BASIC BLOCK entry
%12354:	alloca	 XXX
%12355:	store	 p %12354
%12356:	br	 while.cond

BASIC BLOCK while.cond
%12357:	load	 %12354
%12358:	icmp	 %12357 end
%12359:	br	 %12358 while.end while.body

BASIC BLOCK while.body
%12360:	load	 %12354
%12361:	load	 %12360
%12362:	zext	 %12361
%12363:	switch	 %12362 sw.default XXX sw.bb

BASIC BLOCK sw.bb
%12364:	load	 %12354
%12365:	getelementptr	 %12364 XXX
%12366:	store	 %12365 %12354
%12367:	br	 do.body

BASIC BLOCK do.body
%12368:	br	 do.body1

BASIC BLOCK do.body1
%12369:	load	 %12354
%12370:	load	 %12369
%12371:	zext	 %12370
%12372:	and	 %12371 XXX
%12373:	load	 %12354
%12374:	getelementptr	 %12373 XXX
%12375:	load	 %12374
%12376:	sext	 %12375
%12377:	shl	 %12376 XXX
%12378:	add	 %12372 %12377
%12379:	br	 do.end

BASIC BLOCK do.end
%12380:	load	 %12354
%12381:	getelementptr	 %12380 XXX
%12382:	store	 %12381 %12354
%12383:	br	 do.end5

BASIC BLOCK do.end5
%12384:	load	 %12354
%12385:	sext	 %12378
%12386:	getelementptr	 %12384 %12385
%12387:	store	 %12386 %12354
%12388:	br	 sw.epilog

BASIC BLOCK sw.default
%12389:	call	 %12354 end reg_info common_op_match_null_string_p
%12390:	icmp	 %12389 XXX
%12391:	br	 %12390 if.then if.end

BASIC BLOCK if.then
%12392:	br	 return

BASIC BLOCK if.end
%12393:	br	 sw.epilog

BASIC BLOCK sw.epilog
%12394:	br	 while.cond

BASIC BLOCK while.end
%12395:	br	 return

BASIC BLOCK return
%12396:	phi	 XXX XXX
%12397:	ret	 %12396
