grep.c:484:25: warning: field '__cd' with variable sized type 'struct __gconv_info' not at the end of a struct or class is a GNU extension [-Wgnu]
    struct __gconv_info __cd;
                        ^
grep.c:2721:49: warning: add explicit braces to avoid dangling else [-Wdangling-else]
      { if (! lexleft) if (0 != 0) dfaerror(0); else return lasttok = END; (c) = (unsigned char) *lexptr++; --lexleft; };
                                                ^
grep.c:2822:114: warning: add explicit braces to avoid dangling else [-Wdangling-else]
   { if (! lexleft) if (gettext ("unfinished repeat count") != 0) dfaerror(gettext ("unfinished repeat count")); else return lasttok = END; (c) = (unsigned char) *lexptr++; --lexleft; };
                                                                                                                 ^
grep.c:2828:115: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    { if (! lexleft) if (gettext ("unfinished repeat count") != 0) dfaerror(gettext ("unfinished repeat count")); else return lasttok = END; (c) = (unsigned char) *lexptr++; --lexleft; };
                                                                                                                  ^
grep.c:2839:113: warning: add explicit braces to avoid dangling else [-Wdangling-else]
  { if (! lexleft) if (gettext ("unfinished repeat count") != 0) dfaerror(gettext ("unfinished repeat count")); else return lasttok = END; (c) = (unsigned char) *lexptr++; --lexleft; };
                                                                                                                ^
grep.c:2850:118: warning: add explicit braces to avoid dangling else [-Wdangling-else]
       { if (! lexleft) if (gettext ("unfinished repeat count") != 0) dfaerror(gettext ("unfinished repeat count")); else return lasttok = END; (c) = (unsigned char) *lexptr++; --lexleft; };
                                                                                                                     ^
grep.c:2911:92: warning: add explicit braces to avoid dangling else [-Wdangling-else]
   { if (! lexleft) if (gettext ("Unbalanced [") != 0) dfaerror(gettext ("Unbalanced [")); else return lasttok = END; (c) = (unsigned char) *lexptr++; --lexleft; };
                                                                                           ^
grep.c:2914:96: warning: add explicit braces to avoid dangling else [-Wdangling-else]
       { if (! lexleft) if (gettext ("Unbalanced [") != 0) dfaerror(gettext ("Unbalanced [")); else return lasttok = END; (c) = (unsigned char) *lexptr++; --lexleft; };
                                                                                               ^
grep.c:2934:97: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        { if (! lexleft) if (gettext ("Unbalanced [") != 0) dfaerror(gettext ("Unbalanced [")); else return lasttok = END; (c1) = (unsigned char) *lexptr++; --lexleft; };
                                                                                                ^
grep.c:2938:91: warning: add explicit braces to avoid dangling else [-Wdangling-else]
  { if (! lexleft) if (gettext ("Unbalanced [") != 0) dfaerror(gettext ("Unbalanced [")); else return lasttok = END; (c) = (unsigned char) *lexptr++; --lexleft; };
                                                                                          ^
grep.c:2939:96: warning: add explicit braces to avoid dangling else [-Wdangling-else]
       { if (! lexleft) if (gettext ("Unbalanced [") != 0) dfaerror(gettext ("Unbalanced [")); else return lasttok = END; (c1) = (unsigned char) *lexptr++; --lexleft; };
                                                                                               ^
grep.c:2942:93: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    { if (! lexleft) if (gettext ("Unbalanced [") != 0) dfaerror(gettext ("Unbalanced [")); else return lasttok = END; (c2) = (unsigned char) *lexptr++; --lexleft; };
                                                                                            ^
grep.c:2953:92: warning: add explicit braces to avoid dangling else [-Wdangling-else]
   { if (! lexleft) if (gettext ("Unbalanced [") != 0) dfaerror(gettext ("Unbalanced [")); else return lasttok = END; (c2) = (unsigned char) *lexptr++; --lexleft; };
                                                                                           ^
grep.c:2954:97: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        { if (! lexleft) if (gettext ("Unbalanced [") != 0) dfaerror(gettext ("Unbalanced [")); else return lasttok = END; (c1) = (unsigned char) *lexptr++; --lexleft; };
                                                                                                ^
grep.c:2965:7: warning: add explicit braces to avoid dangling else [-Wdangling-else]
      else if (((*__ctype_b_loc ())[(int) ((c))] & (unsigned short int) _ISlower))
      ^
grep.c:2863:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '\n':
      ^
grep.c:2740:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '$':
      ^
grep.c:2774:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '\'':
      ^
grep.c:2870:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '(':
      ^
grep.c:2876:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case ')':
      ^
grep.c:2802:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '*':
      ^
grep.c:2808:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '+':
      ^
grep.c:2884:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '.':
      ^
grep.c:2755:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '1':
      ^
grep.c:2756:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '2':
      ^
grep.c:2757:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '3':
      ^
grep.c:2758:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '4':
      ^
grep.c:2759:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '5':
      ^
grep.c:2760:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '6':
      ^
grep.c:2761:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '7':
      ^
grep.c:2762:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '8':
      ^
grep.c:2763:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '9':
      ^
grep.c:2778:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '<':
      ^
grep.c:2782:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '>':
      ^
grep.c:2794:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '?':
      ^
grep.c:2790:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case 'B':
      ^
grep.c:2896:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case 'W':
      ^
grep.c:2907:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '[':
      ^
grep.c:2724:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '\\':
      ^
grep.c:2731:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '^':
      ^
grep.c:2770:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '`':
      ^
grep.c:2786:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case 'b':
      ^
grep.c:2895:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case 'w':
      ^
grep.c:2816:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '{':
      ^
grep.c:2856:7: warning: case value not in enumerated type 'token' [-Wswitch]
 case '|':
      ^
grep.c:5787:35: warning: comparison of constant 2048 with expression of type 'unsigned char' is always false [-Wtautological-constant-out-of-range-compare]
                            || c1 == 2048)
                               ~~ ^  ~~~~
grep.c:5870:40: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
              if ((compile_stack.avail == compile_stack.size))
                   ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
grep.c:5870:40: note: remove extraneous parentheses around the comparison to silence this warning
              if ((compile_stack.avail == compile_stack.size))
                  ~                    ^                    ~
grep.c:5870:40: note: use '=' to turn this equality comparison into an assignment
              if ((compile_stack.avail == compile_stack.size))
                                       ^~
                                       =
grep.c:5894:40: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
              if ((compile_stack.avail == 0))
                   ~~~~~~~~~~~~~~~~~~~~^~~~
grep.c:5894:40: note: remove extraneous parentheses around the comparison to silence this warning
              if ((compile_stack.avail == 0))
                  ~                    ^   ~
grep.c:5894:40: note: use '=' to turn this equality comparison into an assignment
              if ((compile_stack.avail == 0))
                                       ^~
                                       =
grep.c:5897:17: warning: add explicit braces to avoid dangling else [-Wdangling-else]
                else
                ^
grep.c:5905:40: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
              if ((compile_stack.avail == 0))
                   ~~~~~~~~~~~~~~~~~~~~^~~~
grep.c:5905:40: note: remove extraneous parentheses around the comparison to silence this warning
              if ((compile_stack.avail == 0))
                  ~                    ^   ~
grep.c:5905:40: note: use '=' to turn this equality comparison into an assignment
              if ((compile_stack.avail == 0))
                                       ^~
                                       =
grep.c:5908:17: warning: add explicit braces to avoid dangling else [-Wdangling-else]
                else
                ^
grep.c:6963:20: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
          if (((d) == end2))
               ~~~~^~~~~~~
grep.c:6963:20: note: remove extraneous parentheses around the comparison to silence this warning
          if (((d) == end2))
              ~    ^      ~
grep.c:6963:20: note: use '=' to turn this equality comparison into an assignment
          if (((d) == end2))
                   ^~
                   =
grep.c:6980:13: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
   if (((d) == end2))
        ~~~~^~~~~~~
grep.c:6980:13: note: remove extraneous parentheses around the comparison to silence this warning
   if (((d) == end2))
       ~    ^      ~
grep.c:6980:13: note: use '=' to turn this equality comparison into an assignment
   if (((d) == end2))
            ^~
            =
grep.c:7215:91: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
   if ((re_syntax_table[(d) == end1 ? *string2 : (d) == string2 - 1 ? *(end1 - 1) : *(d)] == 1))
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
grep.c:7215:91: note: remove extraneous parentheses around the comparison to silence this warning
   if ((re_syntax_table[(d) == end1 ? *string2 : (d) == string2 - 1 ? *(end1 - 1) : *(d)] == 1))
       ~                                                                                  ^   ~
grep.c:7215:91: note: use '=' to turn this equality comparison into an assignment
   if ((re_syntax_table[(d) == end1 ? *string2 : (d) == string2 - 1 ? *(end1 - 1) : *(d)] == 1))
                                                                                          ^~
                                                                                          =
54 warnings generated.

FUNCTION gnu_dev_major

BASIC BLOCK entry
%1:	lshr	 __dev XXX
%2:	and	 %1 XXX
%3:	lshr	 __dev XXX
%4:	trunc	 %3
%5:	and	 %4 XXX
%6:	zext	 %5
%7:	or	 %2 %6
%8:	trunc	 %7
%9:	ret	 %8

FUNCTION gnu_dev_minor

BASIC BLOCK entry
%10:	and	 __dev XXX
%11:	lshr	 __dev XXX
%12:	trunc	 %11
%13:	and	 %12 XXX
%14:	zext	 %13
%15:	or	 %10 %14
%16:	trunc	 %15
%17:	ret	 %16

FUNCTION gnu_dev_makedev

BASIC BLOCK entry
%18:	and	 __minor XXX
%19:	and	 __major XXX
%20:	shl	 %19 XXX
%21:	or	 %18 %20
%22:	zext	 %21
%23:	and	 __minor XXX
%24:	zext	 %23
%25:	shl	 %24 XXX
%26:	or	 %22 %25
%27:	and	 __major XXX
%28:	zext	 %27
%29:	shl	 %28 XXX
%30:	or	 %26 %29
%31:	ret	 %30

FUNCTION stat

BASIC BLOCK entry
%32:	call	 XXX __path __statbuf __xstat
%33:	ret	 %32

FUNCTION lstat

BASIC BLOCK entry
%34:	call	 XXX __path __statbuf __lxstat
%35:	ret	 %34

FUNCTION fstat

BASIC BLOCK entry
%36:	call	 XXX __fd __statbuf __fxstat
%37:	ret	 %36

FUNCTION mknod

BASIC BLOCK entry
%38:	alloca	 XXX
%39:	store	 __dev %38
%40:	call	 XXX __path __mode %38 __xmknod
%41:	ret	 %40

FUNCTION fatal

BASIC BLOCK entry
%42:	call	 mesg errnum error
%43:	call	 XXX exit
%44:	unreachable	

BASIC BLOCK return
%45:	ret	

FUNCTION error

BASIC BLOCK entry
%46:	icmp	 errnum XXX
%47:	br	 %46 if.else if.then

BASIC BLOCK if.then
%48:	load	 stdout
%49:	load	 prog
%50:	call	 errnum strerror
%51:	call	 %48 XXX %49 mesg %50 fprintf
%52:	br	 if.end

BASIC BLOCK if.else
%53:	load	 stdout
%54:	load	 prog
%55:	call	 %53 XXX %54 mesg fprintf
%56:	br	 if.end

BASIC BLOCK if.end
%57:	store	 XXX errseen
%58:	ret	

FUNCTION xmalloc

BASIC BLOCK entry
%59:	call	 size malloc
%60:	icmp	 size XXX
%61:	br	 %60 if.end land.lhs.true

BASIC BLOCK land.lhs.true
%62:	icmp	 %59 XXX
%63:	br	 %62 if.then if.end

BASIC BLOCK if.then
%64:	call	 XXX gettext
%65:	call	 %64 XXX fatal
%66:	br	 if.end

BASIC BLOCK if.end
%67:	ret	 %59

FUNCTION xrealloc

BASIC BLOCK entry
%68:	icmp	 ptr XXX
%69:	br	 %68 if.else if.then

BASIC BLOCK if.then
%70:	call	 ptr size realloc
%71:	br	 if.end

BASIC BLOCK if.else
%72:	call	 size malloc
%73:	br	 if.end

BASIC BLOCK if.end
%74:	phi	 %70 %72
%75:	icmp	 size XXX
%76:	br	 %75 if.end6 land.lhs.true

BASIC BLOCK land.lhs.true
%77:	icmp	 %74 XXX
%78:	br	 %77 if.then4 if.end6

BASIC BLOCK if.then4
%79:	call	 XXX gettext
%80:	call	 %79 XXX fatal
%81:	br	 if.end6

BASIC BLOCK if.end6
%82:	ret	 %74

FUNCTION main

BASIC BLOCK entry
%83:	getelementptr	 argv XXX
%84:	store	 XXX %83
%85:	getelementptr	 argv XXX
%86:	load	 %85
%87:	store	 %86 prog
%88:	load	 prog
%89:	icmp	 %88 XXX
%90:	br	 %89 if.end land.lhs.true

BASIC BLOCK land.lhs.true
%91:	load	 prog
%92:	call	 %91 XXX strrchr
%93:	icmp	 %92 XXX
%94:	br	 %93 if.end if.then

BASIC BLOCK if.then
%95:	load	 prog
%96:	call	 %95 XXX strrchr
%97:	getelementptr	 %96 XXX
%98:	store	 %97 prog
%99:	br	 if.end

BASIC BLOCK if.end
%100:	store	 XXX matcher
%101:	call	 XXX XXX setlocale
%102:	call	 XXX XXX bindtextdomain
%103:	call	 XXX textdomain
%104:	br	 while.cond

BASIC BLOCK while.cond
%105:	phi	 XXX %321
%106:	phi	 XXX %322
%107:	phi	 XXX %323
%108:	phi	 XXX %324
%109:	phi	 XXX %325
%110:	phi	 XXX %326
%111:	phi	 XXX %327
%112:	phi	 XXX %328
%113:	call	 argc argv XXX XXX XXX getopt_long
%114:	icmp	 %113 XXX
%115:	br	 %114 while.end136 while.body

BASIC BLOCK while.body
%116:	switch	 %113 sw.default XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb11 XXX sw.bb20 XXX sw.bb29 XXX sw.bb30 XXX sw.bb38 XXX sw.bb46 XXX sw.bb54 XXX sw.bb55 XXX sw.bb56 XXX sw.bb61 XXX sw.bb62 XXX sw.bb63 XXX sw.bb74 XXX sw.bb125 XXX sw.bb126 XXX sw.bb126 XXX sw.bb127 XXX sw.bb128 XXX sw.bb129 XXX sw.bb130 XXX sw.bb131 XXX sw.bb132 XXX sw.bb133 XXX sw.bb134 XXX sw.bb135

BASIC BLOCK sw.bb
%117:	load	 out_before
%118:	mul	 XXX %117
%119:	add	 %118 %113
%120:	sub	 %119 XXX
%121:	store	 %120 out_before
%122:	load	 out_after
%123:	mul	 XXX %122
%124:	add	 %123 %113
%125:	sub	 %124 XXX
%126:	store	 %125 out_after
%127:	br	 sw.epilog

BASIC BLOCK sw.bb11
%128:	load	 optarg
%129:	icmp	 %128 XXX
%130:	br	 %129 if.end19 if.then13

BASIC BLOCK if.then13
%131:	load	 optarg
%132:	call	 %131 out_after ck_atoi
%133:	icmp	 %132 XXX
%134:	br	 %133 if.end18 if.then16

BASIC BLOCK if.then16
%135:	call	 XXX gettext
%136:	call	 %135 XXX fatal
%137:	br	 if.end18

BASIC BLOCK if.end18
%138:	br	 if.end19

BASIC BLOCK if.end19
%139:	br	 sw.epilog

BASIC BLOCK sw.bb20
%140:	load	 optarg
%141:	icmp	 %140 XXX
%142:	br	 %141 if.end28 if.then22

BASIC BLOCK if.then22
%143:	load	 optarg
%144:	call	 %143 out_before ck_atoi
%145:	icmp	 %144 XXX
%146:	br	 %145 if.end27 if.then25

BASIC BLOCK if.then25
%147:	call	 XXX gettext
%148:	call	 %147 XXX fatal
%149:	br	 if.end27

BASIC BLOCK if.end27
%150:	br	 if.end28

BASIC BLOCK if.end28
%151:	br	 sw.epilog

BASIC BLOCK sw.bb29
%152:	store	 XXX out_after
%153:	store	 XXX out_before
%154:	br	 sw.epilog

BASIC BLOCK sw.bb30
%155:	load	 matcher
%156:	icmp	 %155 XXX
%157:	br	 %156 if.end37 land.lhs.true32

BASIC BLOCK land.lhs.true32
%158:	load	 matcher
%159:	call	 %158 XXX strcmp
%160:	icmp	 %159 XXX
%161:	br	 %160 if.end37 if.then35

BASIC BLOCK if.then35
%162:	call	 XXX gettext
%163:	call	 %162 XXX fatal
%164:	br	 if.end37

BASIC BLOCK if.end37
%165:	store	 XXX matcher
%166:	br	 sw.epilog

BASIC BLOCK sw.bb38
%167:	load	 matcher
%168:	icmp	 %167 XXX
%169:	br	 %168 if.end45 land.lhs.true40

BASIC BLOCK land.lhs.true40
%170:	load	 matcher
%171:	call	 %170 XXX strcmp
%172:	icmp	 %171 XXX
%173:	br	 %172 if.end45 if.then43

BASIC BLOCK if.then43
%174:	call	 XXX gettext
%175:	call	 %174 XXX fatal
%176:	br	 if.end45

BASIC BLOCK if.end45
%177:	store	 XXX matcher
%178:	br	 sw.epilog

BASIC BLOCK sw.bb46
%179:	load	 matcher
%180:	icmp	 %179 XXX
%181:	br	 %180 if.end53 land.lhs.true48

BASIC BLOCK land.lhs.true48
%182:	load	 matcher
%183:	call	 %182 XXX strcmp
%184:	icmp	 %183 XXX
%185:	br	 %184 if.end53 if.then51

BASIC BLOCK if.then51
%186:	call	 XXX gettext
%187:	call	 %186 XXX fatal
%188:	br	 if.end53

BASIC BLOCK if.end53
%189:	store	 XXX matcher
%190:	br	 sw.epilog

BASIC BLOCK sw.bb54
%191:	br	 sw.epilog

BASIC BLOCK sw.bb55
%192:	store	 XXX show_version
%193:	br	 sw.epilog

BASIC BLOCK sw.bb56
%194:	load	 matcher
%195:	icmp	 %194 XXX
%196:	br	 %195 if.end60 if.then58

BASIC BLOCK if.then58
%197:	call	 XXX gettext
%198:	call	 %197 XXX fatal
%199:	br	 if.end60

BASIC BLOCK if.end60
%200:	load	 optarg
%201:	store	 %200 matcher
%202:	br	 sw.epilog

BASIC BLOCK sw.bb61
%203:	store	 XXX out_byte
%204:	br	 sw.epilog

BASIC BLOCK sw.bb62
%205:	store	 XXX out_quiet
%206:	br	 sw.epilog

BASIC BLOCK sw.bb63
%207:	load	 optarg
%208:	call	 %207 strlen
%209:	trunc	 %208
%210:	sext	 %209
%211:	add	 %111 %210
%212:	add	 %211 XXX
%213:	call	 %112 %212 xrealloc
%214:	getelementptr	 %213 %111
%215:	load	 optarg
%216:	call	 %214 %215 strcpy
%217:	sext	 %209
%218:	add	 %111 %217
%219:	add	 %218 XXX
%220:	getelementptr	 %213 %218
%221:	store	 XXX %220
%222:	br	 sw.epilog

BASIC BLOCK sw.bb74
%223:	load	 optarg
%224:	call	 %223 XXX strcmp
%225:	icmp	 %224 XXX
%226:	br	 %225 cond.false cond.true

BASIC BLOCK cond.true
%227:	load	 optarg
%228:	call	 %227 XXX fopen
%229:	br	 cond.end

BASIC BLOCK cond.false
%230:	load	 stdin
%231:	br	 cond.end

BASIC BLOCK cond.end
%232:	phi	 %228 %230
%233:	icmp	 %232 XXX
%234:	br	 %233 if.then80 if.end82

BASIC BLOCK if.then80
%235:	load	 optarg
%236:	call	 __errno_location
%237:	load	 %236
%238:	call	 %235 %237 fatal
%239:	br	 if.end82

BASIC BLOCK if.end82
%240:	br	 for.cond

BASIC BLOCK for.cond
%241:	phi	 XXX %246
%242:	add	 %111 XXX
%243:	icmp	 %241 %242
%244:	br	 %243 for.end for.body

BASIC BLOCK for.body
%245:	br	 for.inc

BASIC BLOCK for.inc
%246:	mul	 %241 XXX
%247:	br	 for.cond

BASIC BLOCK for.end
%248:	call	 %112 %241 xrealloc
%249:	br	 while.cond88

BASIC BLOCK while.cond88
%250:	phi	 %241 %275
%251:	phi	 %110 %264
%252:	phi	 %111 %268
%253:	phi	 %248 %276
%254:	call	 %232 feof
%255:	icmp	 %254 XXX
%256:	br	 %255 land.rhs land.end

BASIC BLOCK land.rhs
%257:	getelementptr	 %253 %252
%258:	sub	 %250 XXX
%259:	sub	 %258 %252
%260:	call	 %257 XXX %259 %232 fread
%261:	trunc	 %260
%262:	icmp	 %261 XXX
%263:	br	 land.end

BASIC BLOCK land.end
%264:	phi	 %251 %261
%265:	phi	 XXX %262
%266:	br	 %265 while.end while.body98

BASIC BLOCK while.body98
%267:	sext	 %264
%268:	add	 %252 %267
%269:	sub	 %250 XXX
%270:	icmp	 %268 %269
%271:	br	 %270 if.end107 if.then104

BASIC BLOCK if.then104
%272:	mul	 %250 XXX
%273:	call	 %253 %272 xrealloc
%274:	br	 if.end107

BASIC BLOCK if.end107
%275:	phi	 %272 %250
%276:	phi	 %273 %253
%277:	br	 while.cond88

BASIC BLOCK while.end
%278:	load	 stdin
%279:	icmp	 %232 %278
%280:	br	 %279 if.end112 if.then110

BASIC BLOCK if.then110
%281:	call	 %232 fclose
%282:	br	 if.end112

BASIC BLOCK if.end112
%283:	icmp	 %111 %252
%284:	br	 %283 if.end124 land.lhs.true115

BASIC BLOCK land.lhs.true115
%285:	sub	 %252 XXX
%286:	getelementptr	 %253 %285
%287:	load	 %286
%288:	sext	 %287
%289:	icmp	 %288 XXX
%290:	br	 %289 if.end124 if.then121

BASIC BLOCK if.then121
%291:	add	 %252 XXX
%292:	getelementptr	 %253 %252
%293:	store	 XXX %292
%294:	br	 if.end124

BASIC BLOCK if.end124
%295:	phi	 %291 %252 %252
%296:	br	 sw.epilog

BASIC BLOCK sw.bb125
%297:	br	 sw.epilog

BASIC BLOCK sw.bb126
%298:	store	 XXX match_icase
%299:	br	 sw.epilog

BASIC BLOCK sw.bb127
%300:	store	 XXX out_quiet
%301:	store	 XXX done_on_match
%302:	br	 sw.epilog

BASIC BLOCK sw.bb128
%303:	store	 XXX out_quiet
%304:	store	 XXX done_on_match
%305:	br	 sw.epilog

BASIC BLOCK sw.bb129
%306:	store	 XXX out_line
%307:	br	 sw.epilog

BASIC BLOCK sw.bb130
%308:	store	 XXX done_on_match
%309:	store	 XXX out_quiet
%310:	br	 sw.epilog

BASIC BLOCK sw.bb131
%311:	br	 sw.epilog

BASIC BLOCK sw.bb132
%312:	store	 XXX out_invert
%313:	br	 sw.epilog

BASIC BLOCK sw.bb133
%314:	store	 XXX match_words
%315:	br	 sw.epilog

BASIC BLOCK sw.bb134
%316:	store	 XXX match_lines
%317:	br	 sw.epilog

BASIC BLOCK sw.bb135
%318:	br	 sw.epilog

BASIC BLOCK sw.default
%319:	call	 XXX usage
%320:	br	 sw.epilog

BASIC BLOCK sw.epilog
%321:	phi	 %105 %105 %105 %105 %105 %105 %105 %105 %105 %105 %105 %105 %105 %105 %105 %105 %105 %105 XXX %105 %105 %105 %105 %105 %105 %105
%322:	phi	 %106 %106 %106 %106 %106 XXX %106 %106 %106 %106 %106 %106 %106 %106 %106 %106 %106 %106 %106 %106 %106 %106 %106 %106 %106 %106
%323:	phi	 %107 %107 %107 %107 %107 %107 %107 %107 XXX XXX %107 %107 %107 %107 %107 %107 %107 %107 %107 %107 %107 %107 %107 %107 %107 %107
%324:	phi	 %108 %108 %108 %108 %108 %108 %108 %108 %108 %108 %108 XXX %108 %108 %108 %108 %108 %108 %108 %108 %108 %108 %108 %108 %108 %108
%325:	phi	 %109 %109 %109 %109 %109 %109 %109 %109 %109 %109 %109 %109 %109 %109 XXX %109 %109 %109 %109 %109 %109 %109 %109 %109 %109 %109
%326:	phi	 %110 %110 %110 %110 %110 %110 %110 %110 %110 %110 %110 %110 %264 %209 %110 %110 %110 %110 %110 %110 %110 %110 %110 %110 %110 %110
%327:	phi	 %111 %111 %111 %111 %111 %111 %111 %111 %111 %111 %111 %111 %295 %219 %111 %111 %111 %111 %111 %111 %111 %111 %111 %111 %111 %111
%328:	phi	 %112 %112 %112 %112 %112 %112 %112 %112 %112 %112 %112 %112 %253 %213 %112 %112 %112 %112 %112 %112 %112 %112 %112 %112 %112 %112
%329:	br	 while.cond

BASIC BLOCK while.end136
%330:	load	 show_version
%331:	icmp	 %330 XXX
%332:	br	 %331 if.end147 if.then138

BASIC BLOCK if.then138
%333:	call	 XXX gettext
%334:	call	 %333 XXX printf
%335:	call	 XXX printf
%336:	call	 XXX gettext
%337:	call	 %336 printf
%338:	call	 XXX gettext
%339:	call	 %338 printf
%340:	call	 XXX printf
%341:	call	 XXX exit
%342:	unreachable	

BASIC BLOCK if.end147
%343:	load	 show_help
%344:	icmp	 %343 XXX
%345:	br	 %344 if.end150 if.then149

BASIC BLOCK if.then149
%346:	call	 XXX usage
%347:	br	 if.end150

BASIC BLOCK if.end150
%348:	icmp	 %112 XXX
%349:	br	 %348 if.else157 if.then152

BASIC BLOCK if.then152
%350:	icmp	 %111 XXX
%351:	br	 %350 if.else if.then155

BASIC BLOCK if.then155
%352:	load	 out_invert
%353:	xor	 %352 XXX
%354:	store	 %353 out_invert
%355:	br	 if.end156

BASIC BLOCK if.else
%356:	add	 %111 XXX
%357:	br	 if.end156

BASIC BLOCK if.end156
%358:	phi	 %111 %356
%359:	br	 if.end166

BASIC BLOCK if.else157
%360:	load	 optind
%361:	icmp	 %360 argc
%362:	br	 %361 if.else164 if.then160

BASIC BLOCK if.then160
%363:	load	 optind
%364:	add	 %363 XXX
%365:	store	 %364 optind
%366:	sext	 %363
%367:	getelementptr	 argv %366
%368:	load	 %367
%369:	call	 %368 strlen
%370:	br	 if.end165

BASIC BLOCK if.else164
%371:	call	 XXX usage
%372:	br	 if.end165

BASIC BLOCK if.end165
%373:	phi	 %369 %111
%374:	phi	 %368 %112
%375:	br	 if.end166

BASIC BLOCK if.end166
%376:	phi	 %358 %373
%377:	phi	 %112 %374
%378:	load	 matcher
%379:	icmp	 %378 XXX
%380:	br	 %379 if.then168 if.end169

BASIC BLOCK if.then168
%381:	load	 prog
%382:	store	 %381 matcher
%383:	br	 if.end169

BASIC BLOCK if.end169
%384:	load	 matcher
%385:	call	 %384 setmatcher
%386:	icmp	 %385 XXX
%387:	br	 %386 land.lhs.true172 if.end176

BASIC BLOCK land.lhs.true172
%388:	call	 XXX setmatcher
%389:	icmp	 %388 XXX
%390:	br	 %389 if.then175 if.end176

BASIC BLOCK if.then175
%391:	call	 abort
%392:	unreachable	

BASIC BLOCK if.end176
%393:	load	 compile
%394:	call	 %377 %376 %393
%395:	load	 optind
%396:	sub	 argc %395
%397:	icmp	 %396 XXX
%398:	br	 %397 lor.lhs.false land.lhs.true180

BASIC BLOCK land.lhs.true180
%399:	icmp	 %108 XXX
%400:	br	 %399 if.then183 lor.lhs.false

BASIC BLOCK lor.lhs.false
%401:	icmp	 %105 XXX
%402:	br	 %401 if.end184 if.then183

BASIC BLOCK if.then183
%403:	store	 XXX out_file
%404:	br	 if.end184

BASIC BLOCK if.end184
%405:	load	 optind
%406:	icmp	 %405 argc
%407:	br	 %406 if.else247 if.then187

BASIC BLOCK if.then187
%408:	br	 while.cond188

BASIC BLOCK while.cond188
%409:	phi	 XXX %479
%410:	load	 optind
%411:	icmp	 %410 argc
%412:	br	 %411 while.end246 while.body191

BASIC BLOCK while.body191
%413:	load	 optind
%414:	sext	 %413
%415:	getelementptr	 argv %414
%416:	load	 %415
%417:	call	 %416 XXX strcmp
%418:	icmp	 %417 XXX
%419:	br	 %418 if.else199 if.then197

BASIC BLOCK if.then197
%420:	call	 XXX gettext
%421:	store	 %420 filename
%422:	br	 if.end205

BASIC BLOCK if.else199
%423:	load	 optind
%424:	sext	 %423
%425:	getelementptr	 argv %424
%426:	load	 %425
%427:	store	 %426 filename
%428:	load	 optind
%429:	sext	 %428
%430:	getelementptr	 argv %429
%431:	load	 %430
%432:	call	 %431 XXX open
%433:	br	 if.end205

BASIC BLOCK if.end205
%434:	phi	 XXX %432
%435:	icmp	 %434 XXX
%436:	br	 %435 if.else215 if.then208

BASIC BLOCK if.then208
%437:	icmp	 %106 XXX
%438:	br	 %437 if.then210 if.end214

BASIC BLOCK if.then210
%439:	load	 optind
%440:	sext	 %439
%441:	getelementptr	 argv %440
%442:	load	 %441
%443:	call	 __errno_location
%444:	load	 %443
%445:	call	 %442 %444 error
%446:	br	 if.end214

BASIC BLOCK if.end214
%447:	br	 if.end244

BASIC BLOCK if.else215
%448:	call	 %434 grep
%449:	icmp	 %109 XXX
%450:	br	 %449 if.end224 if.then218

BASIC BLOCK if.then218
%451:	load	 out_file
%452:	icmp	 %451 XXX
%453:	br	 %452 if.end222 if.then220

BASIC BLOCK if.then220
%454:	load	 filename
%455:	call	 XXX %454 printf
%456:	br	 if.end222

BASIC BLOCK if.end222
%457:	call	 XXX %448 printf
%458:	br	 if.end224

BASIC BLOCK if.end224
%459:	icmp	 %448 XXX
%460:	br	 %459 if.else232 if.then226

BASIC BLOCK if.then226
%461:	icmp	 %107 XXX
%462:	br	 %461 if.end231 if.then229

BASIC BLOCK if.then229
%463:	load	 filename
%464:	call	 XXX %463 printf
%465:	br	 if.end231

BASIC BLOCK if.end231
%466:	br	 if.end238

BASIC BLOCK if.else232
%467:	icmp	 %107 XXX
%468:	br	 %467 if.end237 if.then235

BASIC BLOCK if.then235
%469:	load	 filename
%470:	call	 XXX %469 printf
%471:	br	 if.end237

BASIC BLOCK if.end237
%472:	br	 if.end238

BASIC BLOCK if.end238
%473:	phi	 XXX %409
%474:	icmp	 %434 XXX
%475:	br	 %474 if.end243 if.then241

BASIC BLOCK if.then241
%476:	call	 %434 close
%477:	br	 if.end243

BASIC BLOCK if.end243
%478:	br	 if.end244

BASIC BLOCK if.end244
%479:	phi	 %409 %473
%480:	load	 optind
%481:	add	 %480 XXX
%482:	store	 %481 optind
%483:	br	 while.cond188

BASIC BLOCK while.end246
%484:	br	 if.end270

BASIC BLOCK if.else247
%485:	call	 XXX gettext
%486:	store	 %485 filename
%487:	call	 XXX grep
%488:	icmp	 %109 XXX
%489:	br	 %488 if.end253 if.then251

BASIC BLOCK if.then251
%490:	call	 XXX %487 printf
%491:	br	 if.end253

BASIC BLOCK if.end253
%492:	icmp	 %487 XXX
%493:	br	 %492 if.else262 if.then255

BASIC BLOCK if.then255
%494:	icmp	 %107 XXX
%495:	br	 %494 if.end261 if.then258

BASIC BLOCK if.then258
%496:	call	 XXX gettext
%497:	call	 %496 printf
%498:	br	 if.end261

BASIC BLOCK if.end261
%499:	br	 if.end269

BASIC BLOCK if.else262
%500:	icmp	 %107 XXX
%501:	br	 %500 if.end268 if.then265

BASIC BLOCK if.then265
%502:	call	 XXX gettext
%503:	call	 %502 printf
%504:	br	 if.end268

BASIC BLOCK if.end268
%505:	br	 if.end269

BASIC BLOCK if.end269
%506:	phi	 XXX XXX
%507:	br	 if.end270

BASIC BLOCK if.end270
%508:	phi	 %409 %506
%509:	load	 stdout
%510:	call	 %509 fclose
%511:	icmp	 %510 XXX
%512:	br	 %511 if.end277 if.then274

BASIC BLOCK if.then274
%513:	call	 XXX gettext
%514:	call	 __errno_location
%515:	load	 %514
%516:	call	 %513 %515 error
%517:	br	 if.end277

BASIC BLOCK if.end277
%518:	load	 errseen
%519:	icmp	 %518 XXX
%520:	br	 %519 cond.false280 cond.true279

BASIC BLOCK cond.true279
%521:	br	 cond.end281

BASIC BLOCK cond.false280
%522:	br	 cond.end281

BASIC BLOCK cond.end281
%523:	phi	 XXX %508
%524:	call	 %523 exit
%525:	unreachable	

BASIC BLOCK return
%526:	ret	 XXX

FUNCTION ck_atoi

BASIC BLOCK entry
%527:	br	 for.cond

BASIC BLOCK for.cond
%528:	phi	 str %542
%529:	load	 %528
%530:	icmp	 %529 XXX
%531:	br	 %530 for.end for.body

BASIC BLOCK for.body
%532:	load	 %528
%533:	sext	 %532
%534:	icmp	 %533 XXX
%535:	br	 %534 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%536:	load	 %528
%537:	sext	 %536
%538:	icmp	 %537 XXX
%539:	br	 %538 if.end if.then

BASIC BLOCK if.then
%540:	br	 return

BASIC BLOCK if.end
%541:	br	 for.inc

BASIC BLOCK for.inc
%542:	getelementptr	 %528 XXX
%543:	br	 for.cond

BASIC BLOCK for.end
%544:	load	 optarg
%545:	call	 %544 atoi
%546:	store	 %545 out
%547:	br	 return

BASIC BLOCK return
%548:	phi	 XXX XXX
%549:	ret	 %548

FUNCTION usage

BASIC BLOCK entry
%550:	icmp	 status XXX
%551:	br	 %550 if.else if.then

BASIC BLOCK if.then
%552:	load	 stdout
%553:	call	 XXX gettext
%554:	load	 prog
%555:	call	 %552 %553 %554 fprintf
%556:	load	 stdout
%557:	call	 XXX gettext
%558:	load	 prog
%559:	call	 %556 %557 %558 fprintf
%560:	br	 if.end

BASIC BLOCK if.else
%561:	call	 XXX gettext
%562:	load	 prog
%563:	call	 %561 %562 printf
%564:	call	 XXX gettext
%565:	call	 %564 printf
%566:	call	 XXX gettext
%567:	call	 %566 printf
%568:	call	 XXX gettext
%569:	call	 %568 printf
%570:	call	 XXX gettext
%571:	call	 %570 printf
%572:	call	 XXX gettext
%573:	call	 %572 printf
%574:	br	 if.end

BASIC BLOCK if.end
%575:	call	 status exit
%576:	unreachable	

BASIC BLOCK return
%577:	ret	

FUNCTION setmatcher

BASIC BLOCK entry
%578:	br	 for.cond

BASIC BLOCK for.cond
%579:	phi	 XXX %605
%580:	sext	 %579
%581:	getelementptr	 XXX XXX %580
%582:	getelementptr	 %581 XXX XXX
%583:	load	 %582
%584:	icmp	 %583 XXX
%585:	br	 %584 for.end for.body

BASIC BLOCK for.body
%586:	sext	 %579
%587:	getelementptr	 XXX XXX %586
%588:	getelementptr	 %587 XXX XXX
%589:	load	 %588
%590:	call	 name %589 strcmp
%591:	icmp	 %590 XXX
%592:	br	 %591 if.end if.then

BASIC BLOCK if.then
%593:	sext	 %579
%594:	getelementptr	 XXX XXX %593
%595:	getelementptr	 %594 XXX XXX
%596:	load	 %595
%597:	store	 %596 compile
%598:	sext	 %579
%599:	getelementptr	 XXX XXX %598
%600:	getelementptr	 %599 XXX XXX
%601:	load	 %600
%602:	store	 %601 execute
%603:	br	 return

BASIC BLOCK if.end
%604:	br	 for.inc

BASIC BLOCK for.inc
%605:	add	 %579 XXX
%606:	br	 for.cond

BASIC BLOCK for.end
%607:	br	 return

BASIC BLOCK return
%608:	phi	 XXX XXX
%609:	ret	 %608

FUNCTION grep

BASIC BLOCK entry
%610:	call	 fd reset
%611:	store	 XXX totalcc
%612:	store	 XXX lastout
%613:	store	 XXX totalnl
%614:	store	 XXX pending
%615:	br	 for.cond

BASIC BLOCK for.cond
%616:	phi	 XXX %724
%617:	phi	 XXX %665
%618:	phi	 XXX %685
%619:	call	 %616 fillbuf
%620:	icmp	 %619 XXX
%621:	br	 %620 if.end if.then

BASIC BLOCK if.then
%622:	load	 filename
%623:	call	 __errno_location
%624:	load	 %623
%625:	call	 %622 %624 error
%626:	br	 return

BASIC BLOCK if.end
%627:	load	 bufbeg
%628:	store	 %627 lastnl
%629:	load	 lastout
%630:	icmp	 %629 XXX
%631:	br	 %630 if.end3 if.then2

BASIC BLOCK if.then2
%632:	load	 bufbeg
%633:	store	 %632 lastout
%634:	br	 if.end3

BASIC BLOCK if.end3
%635:	load	 buflim
%636:	load	 bufbeg
%637:	ptrtoint	 %635
%638:	ptrtoint	 %636
%639:	sub	 %637 %638
%640:	icmp	 %639 %616
%641:	br	 %640 if.end6 if.then5

BASIC BLOCK if.then5
%642:	br	 for.end62

BASIC BLOCK if.end6
%643:	load	 bufbeg
%644:	getelementptr	 %643 %616
%645:	sub	 XXX %617
%646:	getelementptr	 %644 %645
%647:	load	 buflim
%648:	br	 for.cond8

BASIC BLOCK for.cond8
%649:	phi	 %647 %660
%650:	icmp	 %649 %646
%651:	br	 %650 land.end land.rhs

BASIC BLOCK land.rhs
%652:	getelementptr	 %649 XXX
%653:	load	 %652
%654:	sext	 %653
%655:	icmp	 %654 XXX
%656:	br	 land.end

BASIC BLOCK land.end
%657:	phi	 XXX %655
%658:	br	 %657 for.end for.body

BASIC BLOCK for.body
%659:	br	 for.inc

BASIC BLOCK for.inc
%660:	getelementptr	 %649 XXX
%661:	br	 for.cond8

BASIC BLOCK for.end
%662:	load	 buflim
%663:	ptrtoint	 %662
%664:	ptrtoint	 %649
%665:	sub	 %663 %664
%666:	icmp	 %646 %649
%667:	br	 %666 if.end28 if.then17

BASIC BLOCK if.then17
%668:	call	 %646 %649 grepbuf
%669:	add	 %618 %668
%670:	load	 pending
%671:	icmp	 %670 XXX
%672:	br	 %671 if.end21 if.then20

BASIC BLOCK if.then20
%673:	call	 %649 prpending
%674:	br	 if.end21

BASIC BLOCK if.end21
%675:	icmp	 %669 XXX
%676:	br	 %675 if.end27 land.lhs.true

BASIC BLOCK land.lhs.true
%677:	load	 done_on_match
%678:	icmp	 %677 XXX
%679:	br	 %678 if.end27 land.lhs.true24

BASIC BLOCK land.lhs.true24
%680:	load	 out_invert
%681:	icmp	 %680 XXX
%682:	br	 %681 if.then26 if.end27

BASIC BLOCK if.then26
%683:	br	 return

BASIC BLOCK if.end27
%684:	br	 if.end28

BASIC BLOCK if.end28
%685:	phi	 %669 %618
%686:	br	 while.cond

BASIC BLOCK while.cond
%687:	phi	 %649 %703
%688:	phi	 XXX %700
%689:	load	 out_before
%690:	icmp	 %688 %689
%691:	br	 %690 land.end37 land.lhs.true31

BASIC BLOCK land.lhs.true31
%692:	load	 bufbeg
%693:	icmp	 %687 %692
%694:	br	 %693 land.end37 land.rhs34

BASIC BLOCK land.rhs34
%695:	load	 lastout
%696:	icmp	 %687 %695
%697:	br	 land.end37

BASIC BLOCK land.end37
%698:	phi	 XXX XXX %696
%699:	br	 %698 while.end while.body

BASIC BLOCK while.body
%700:	add	 %688 XXX
%701:	br	 do.body

BASIC BLOCK do.body
%702:	phi	 %687 %703
%703:	getelementptr	 %702 XXX
%704:	br	 do.cond

BASIC BLOCK do.cond
%705:	load	 bufbeg
%706:	icmp	 %703 %705
%707:	br	 %706 land.end46 land.rhs41

BASIC BLOCK land.rhs41
%708:	getelementptr	 %703 XXX
%709:	load	 %708
%710:	sext	 %709
%711:	icmp	 %710 XXX
%712:	br	 land.end46

BASIC BLOCK land.end46
%713:	phi	 XXX %711
%714:	br	 %713 do.end do.body

BASIC BLOCK do.end
%715:	br	 while.cond

BASIC BLOCK while.end
%716:	load	 lastout
%717:	icmp	 %687 %716
%718:	br	 %717 if.end50 if.then49

BASIC BLOCK if.then49
%719:	store	 XXX lastout
%720:	br	 if.end50

BASIC BLOCK if.end50
%721:	getelementptr	 %649 %665
%722:	ptrtoint	 %721
%723:	ptrtoint	 %687
%724:	sub	 %722 %723
%725:	load	 buflim
%726:	load	 bufbeg
%727:	ptrtoint	 %725
%728:	ptrtoint	 %726
%729:	sub	 %727 %728
%730:	sub	 %729 %724
%731:	load	 totalcc
%732:	add	 %731 %730
%733:	store	 %732 totalcc
%734:	load	 out_line
%735:	icmp	 %734 XXX
%736:	br	 %735 if.end61 if.then60

BASIC BLOCK if.then60
%737:	call	 %687 nlscan
%738:	br	 if.end61

BASIC BLOCK if.end61
%739:	br	 for.cond

BASIC BLOCK for.end62
%740:	icmp	 %617 XXX
%741:	br	 %740 if.end73 if.then64

BASIC BLOCK if.then64
%742:	load	 bufbeg
%743:	getelementptr	 %742 %616
%744:	sub	 XXX %617
%745:	getelementptr	 %743 %744
%746:	load	 buflim
%747:	call	 %745 %746 grepbuf
%748:	add	 %618 %747
%749:	load	 pending
%750:	icmp	 %749 XXX
%751:	br	 %750 if.end72 if.then71

BASIC BLOCK if.then71
%752:	load	 buflim
%753:	call	 %752 prpending
%754:	br	 if.end72

BASIC BLOCK if.end72
%755:	br	 if.end73

BASIC BLOCK if.end73
%756:	phi	 %748 %618
%757:	br	 return

BASIC BLOCK return
%758:	phi	 %618 %756 %669
%759:	ret	 %758

FUNCTION dfasyntax

BASIC BLOCK entry
%760:	store	 XXX syntax_bits_set
%761:	store	 bits syntax_bits
%762:	store	 fold case_fold
%763:	ret	

FUNCTION dfaparse

BASIC BLOCK entry
%764:	store	 d dfa
%765:	store	 s lexptr
%766:	store	 s lexstart
%767:	trunc	 len
%768:	store	 %767 lexleft
%769:	store	 XXX lasttok
%770:	store	 XXX laststart
%771:	store	 XXX parens
%772:	load	 syntax_bits_set
%773:	icmp	 %772 XXX
%774:	br	 %773 if.then if.end

BASIC BLOCK if.then
%775:	call	 XXX gettext
%776:	call	 %775 dfaerror
%777:	br	 if.end

BASIC BLOCK if.end
%778:	call	 lex
%779:	store	 %778 tok
%780:	getelementptr	 d XXX XXX
%781:	load	 %780
%782:	store	 %781 depth
%783:	call	 XXX regexp
%784:	load	 tok
%785:	icmp	 %784 XXX
%786:	br	 %785 if.end5 if.then3

BASIC BLOCK if.then3
%787:	call	 XXX gettext
%788:	call	 %787 dfaerror
%789:	br	 if.end5

BASIC BLOCK if.end5
%790:	getelementptr	 d XXX XXX
%791:	load	 %790
%792:	sub	 XXX %791
%793:	call	 %792 addtok
%794:	call	 XXX addtok
%795:	getelementptr	 d XXX XXX
%796:	load	 %795
%797:	icmp	 %796 XXX
%798:	br	 %797 if.end9 if.then8

BASIC BLOCK if.then8
%799:	call	 XXX addtok
%800:	br	 if.end9

BASIC BLOCK if.end9
%801:	getelementptr	 d XXX XXX
%802:	load	 %801
%803:	add	 %802 XXX
%804:	store	 %803 %801
%805:	ret	

FUNCTION dfaerror

BASIC BLOCK entry
%806:	call	 mesg XXX fatal
%807:	ret	

FUNCTION lex

BASIC BLOCK entry
%808:	alloca	 XXX
%809:	br	 for.cond

BASIC BLOCK for.cond
%810:	phi	 XXX %1744
%811:	phi	 XXX XXX
%812:	icmp	 %810 XXX
%813:	br	 %812 for.end666 for.body

BASIC BLOCK for.body
%814:	load	 lexleft
%815:	icmp	 %814 XXX
%816:	br	 %815 if.then if.end

BASIC BLOCK if.then
%817:	store	 XXX lasttok
%818:	br	 return

BASIC BLOCK if.end
%819:	load	 lexptr
%820:	getelementptr	 %819 XXX
%821:	store	 %820 lexptr
%822:	load	 %819
%823:	zext	 %822
%824:	load	 lexleft
%825:	add	 %824 XXX
%826:	store	 %825 lexleft
%827:	switch	 %823 sw.default XXX sw.bb XXX sw.bb8 XXX sw.bb23 XXX sw.bb86 XXX sw.bb86 XXX sw.bb86 XXX sw.bb86 XXX sw.bb86 XXX sw.bb86 XXX sw.bb86 XXX sw.bb86 XXX sw.bb86 XXX sw.bb93 XXX sw.bb100 XXX sw.bb107 XXX sw.bb114 XXX sw.bb121 XXX sw.bb128 XXX sw.bb135 XXX sw.bb153 XXX sw.bb163 XXX sw.bb181 XXX sw.bb299 XXX sw.bb311 XXX sw.bb321 XXX sw.bb329 XXX sw.bb345 XXX sw.bb363 XXX sw.bb363 XXX sw.bb397

BASIC BLOCK sw.bb
%828:	icmp	 %811 XXX
%829:	br	 %828 if.end3 if.then2

BASIC BLOCK if.then2
%830:	br	 normal_char

BASIC BLOCK if.end3
%831:	load	 lexleft
%832:	icmp	 %831 XXX
%833:	br	 %832 if.end7 if.then6

BASIC BLOCK if.then6
%834:	call	 XXX gettext
%835:	call	 %834 dfaerror
%836:	br	 if.end7

BASIC BLOCK if.end7
%837:	br	 sw.epilog

BASIC BLOCK sw.bb8
%838:	icmp	 %811 XXX
%839:	br	 %838 if.end11 if.then10

BASIC BLOCK if.then10
%840:	br	 normal_char

BASIC BLOCK if.end11
%841:	load	 syntax_bits
%842:	and	 %841 XXX
%843:	icmp	 %842 XXX
%844:	br	 %843 lor.lhs.false if.then21

BASIC BLOCK lor.lhs.false
%845:	load	 lasttok
%846:	icmp	 %845 XXX
%847:	br	 %846 lor.lhs.false15 if.then21

BASIC BLOCK lor.lhs.false15
%848:	load	 lasttok
%849:	icmp	 %848 XXX
%850:	br	 %849 lor.lhs.false18 if.then21

BASIC BLOCK lor.lhs.false18
%851:	load	 lasttok
%852:	icmp	 %851 XXX
%853:	br	 %852 if.end22 if.then21

BASIC BLOCK if.then21
%854:	store	 XXX lasttok
%855:	br	 return

BASIC BLOCK if.end22
%856:	br	 normal_char

BASIC BLOCK sw.bb23
%857:	icmp	 %811 XXX
%858:	br	 %857 if.end26 if.then25

BASIC BLOCK if.then25
%859:	br	 normal_char

BASIC BLOCK if.end26
%860:	load	 syntax_bits
%861:	and	 %860 XXX
%862:	icmp	 %861 XXX
%863:	br	 %862 lor.lhs.false29 if.then84

BASIC BLOCK lor.lhs.false29
%864:	load	 lexleft
%865:	icmp	 %864 XXX
%866:	br	 %865 lor.lhs.false32 if.then84

BASIC BLOCK lor.lhs.false32
%867:	load	 syntax_bits
%868:	and	 %867 XXX
%869:	icmp	 %868 XXX
%870:	br	 %869 cond.false cond.true

BASIC BLOCK cond.true
%871:	load	 lexleft
%872:	icmp	 %871 XXX
%873:	br	 %872 lor.lhs.false51 land.lhs.true

BASIC BLOCK land.lhs.true
%874:	load	 lexptr
%875:	load	 %874
%876:	sext	 %875
%877:	icmp	 %876 XXX
%878:	br	 %877 lor.lhs.false51 if.then84

BASIC BLOCK cond.false
%879:	load	 lexleft
%880:	icmp	 %879 XXX
%881:	br	 %880 lor.lhs.false51 land.lhs.true42

BASIC BLOCK land.lhs.true42
%882:	load	 lexptr
%883:	getelementptr	 %882 XXX
%884:	load	 %883
%885:	sext	 %884
%886:	icmp	 %885 XXX
%887:	br	 %886 lor.lhs.false51 land.lhs.true46

BASIC BLOCK land.lhs.true46
%888:	load	 lexptr
%889:	getelementptr	 %888 XXX
%890:	load	 %889
%891:	sext	 %890
%892:	icmp	 %891 XXX
%893:	br	 %892 lor.lhs.false51 if.then84

BASIC BLOCK lor.lhs.false51
%894:	load	 syntax_bits
%895:	and	 %894 XXX
%896:	icmp	 %895 XXX
%897:	br	 %896 cond.false61 cond.true54

BASIC BLOCK cond.true54
%898:	load	 lexleft
%899:	icmp	 %898 XXX
%900:	br	 %899 lor.lhs.false74 land.lhs.true57

BASIC BLOCK land.lhs.true57
%901:	load	 lexptr
%902:	load	 %901
%903:	sext	 %902
%904:	icmp	 %903 XXX
%905:	br	 %904 lor.lhs.false74 if.then84

BASIC BLOCK cond.false61
%906:	load	 lexleft
%907:	icmp	 %906 XXX
%908:	br	 %907 lor.lhs.false74 land.lhs.true64

BASIC BLOCK land.lhs.true64
%909:	load	 lexptr
%910:	getelementptr	 %909 XXX
%911:	load	 %910
%912:	sext	 %911
%913:	icmp	 %912 XXX
%914:	br	 %913 lor.lhs.false74 land.lhs.true69

BASIC BLOCK land.lhs.true69
%915:	load	 lexptr
%916:	getelementptr	 %915 XXX
%917:	load	 %916
%918:	sext	 %917
%919:	icmp	 %918 XXX
%920:	br	 %919 lor.lhs.false74 if.then84

BASIC BLOCK lor.lhs.false74
%921:	load	 syntax_bits
%922:	and	 %921 XXX
%923:	icmp	 %922 XXX
%924:	br	 %923 if.end85 land.lhs.true77

BASIC BLOCK land.lhs.true77
%925:	load	 lexleft
%926:	icmp	 %925 XXX
%927:	br	 %926 if.end85 land.lhs.true80

BASIC BLOCK land.lhs.true80
%928:	load	 lexptr
%929:	load	 %928
%930:	sext	 %929
%931:	icmp	 %930 XXX
%932:	br	 %931 if.end85 if.then84

BASIC BLOCK if.then84
%933:	store	 XXX lasttok
%934:	br	 return

BASIC BLOCK if.end85
%935:	br	 normal_char

BASIC BLOCK sw.bb86
%936:	icmp	 %811 XXX
%937:	br	 %936 if.end92 land.lhs.true88

BASIC BLOCK land.lhs.true88
%938:	load	 syntax_bits
%939:	and	 %938 XXX
%940:	icmp	 %939 XXX
%941:	br	 %940 if.then91 if.end92

BASIC BLOCK if.then91
%942:	store	 XXX laststart
%943:	store	 XXX lasttok
%944:	br	 return

BASIC BLOCK if.end92
%945:	br	 normal_char

BASIC BLOCK sw.bb93
%946:	icmp	 %811 XXX
%947:	br	 %946 if.end99 land.lhs.true95

BASIC BLOCK land.lhs.true95
%948:	load	 syntax_bits
%949:	and	 %948 XXX
%950:	icmp	 %949 XXX
%951:	br	 %950 if.then98 if.end99

BASIC BLOCK if.then98
%952:	store	 XXX lasttok
%953:	br	 return

BASIC BLOCK if.end99
%954:	br	 normal_char

BASIC BLOCK sw.bb100
%955:	icmp	 %811 XXX
%956:	br	 %955 if.end106 land.lhs.true102

BASIC BLOCK land.lhs.true102
%957:	load	 syntax_bits
%958:	and	 %957 XXX
%959:	icmp	 %958 XXX
%960:	br	 %959 if.then105 if.end106

BASIC BLOCK if.then105
%961:	store	 XXX lasttok
%962:	br	 return

BASIC BLOCK if.end106
%963:	br	 normal_char

BASIC BLOCK sw.bb107
%964:	icmp	 %811 XXX
%965:	br	 %964 if.end113 land.lhs.true109

BASIC BLOCK land.lhs.true109
%966:	load	 syntax_bits
%967:	and	 %966 XXX
%968:	icmp	 %967 XXX
%969:	br	 %968 if.then112 if.end113

BASIC BLOCK if.then112
%970:	store	 XXX lasttok
%971:	br	 return

BASIC BLOCK if.end113
%972:	br	 normal_char

BASIC BLOCK sw.bb114
%973:	icmp	 %811 XXX
%974:	br	 %973 if.end120 land.lhs.true116

BASIC BLOCK land.lhs.true116
%975:	load	 syntax_bits
%976:	and	 %975 XXX
%977:	icmp	 %976 XXX
%978:	br	 %977 if.then119 if.end120

BASIC BLOCK if.then119
%979:	store	 XXX lasttok
%980:	br	 return

BASIC BLOCK if.end120
%981:	br	 normal_char

BASIC BLOCK sw.bb121
%982:	icmp	 %811 XXX
%983:	br	 %982 if.end127 land.lhs.true123

BASIC BLOCK land.lhs.true123
%984:	load	 syntax_bits
%985:	and	 %984 XXX
%986:	icmp	 %985 XXX
%987:	br	 %986 if.then126 if.end127

BASIC BLOCK if.then126
%988:	store	 XXX lasttok
%989:	br	 return

BASIC BLOCK if.end127
%990:	br	 normal_char

BASIC BLOCK sw.bb128
%991:	icmp	 %811 XXX
%992:	br	 %991 if.end134 land.lhs.true130

BASIC BLOCK land.lhs.true130
%993:	load	 syntax_bits
%994:	and	 %993 XXX
%995:	icmp	 %994 XXX
%996:	br	 %995 if.then133 if.end134

BASIC BLOCK if.then133
%997:	store	 XXX lasttok
%998:	br	 return

BASIC BLOCK if.end134
%999:	br	 normal_char

BASIC BLOCK sw.bb135
%1000:	load	 syntax_bits
%1001:	and	 %1000 XXX
%1002:	icmp	 %1001 XXX
%1003:	br	 %1002 if.end139 if.then138

BASIC BLOCK if.then138
%1004:	br	 normal_char

BASIC BLOCK if.end139
%1005:	load	 syntax_bits
%1006:	and	 %1005 XXX
%1007:	icmp	 %1006 XXX
%1008:	zext	 %1007
%1009:	icmp	 %811 %1008
%1010:	br	 %1009 if.end146 if.then145

BASIC BLOCK if.then145
%1011:	br	 normal_char

BASIC BLOCK if.end146
%1012:	load	 syntax_bits
%1013:	and	 %1012 XXX
%1014:	icmp	 %1013 XXX
%1015:	br	 %1014 land.lhs.true149 if.end152

BASIC BLOCK land.lhs.true149
%1016:	load	 laststart
%1017:	icmp	 %1016 XXX
%1018:	br	 %1017 if.end152 if.then151

BASIC BLOCK if.then151
%1019:	br	 normal_char

BASIC BLOCK if.end152
%1020:	store	 XXX lasttok
%1021:	br	 return

BASIC BLOCK sw.bb153
%1022:	icmp	 %811 XXX
%1023:	br	 %1022 if.end156 if.then155

BASIC BLOCK if.then155
%1024:	br	 normal_char

BASIC BLOCK if.end156
%1025:	load	 syntax_bits
%1026:	and	 %1025 XXX
%1027:	icmp	 %1026 XXX
%1028:	br	 %1027 land.lhs.true159 if.end162

BASIC BLOCK land.lhs.true159
%1029:	load	 laststart
%1030:	icmp	 %1029 XXX
%1031:	br	 %1030 if.end162 if.then161

BASIC BLOCK if.then161
%1032:	br	 normal_char

BASIC BLOCK if.end162
%1033:	store	 XXX lasttok
%1034:	br	 return

BASIC BLOCK sw.bb163
%1035:	load	 syntax_bits
%1036:	and	 %1035 XXX
%1037:	icmp	 %1036 XXX
%1038:	br	 %1037 if.end167 if.then166

BASIC BLOCK if.then166
%1039:	br	 normal_char

BASIC BLOCK if.end167
%1040:	load	 syntax_bits
%1041:	and	 %1040 XXX
%1042:	icmp	 %1041 XXX
%1043:	zext	 %1042
%1044:	icmp	 %811 %1043
%1045:	br	 %1044 if.end174 if.then173

BASIC BLOCK if.then173
%1046:	br	 normal_char

BASIC BLOCK if.end174
%1047:	load	 syntax_bits
%1048:	and	 %1047 XXX
%1049:	icmp	 %1048 XXX
%1050:	br	 %1049 land.lhs.true177 if.end180

BASIC BLOCK land.lhs.true177
%1051:	load	 laststart
%1052:	icmp	 %1051 XXX
%1053:	br	 %1052 if.end180 if.then179

BASIC BLOCK if.then179
%1054:	br	 normal_char

BASIC BLOCK if.end180
%1055:	store	 XXX lasttok
%1056:	br	 return

BASIC BLOCK sw.bb181
%1057:	load	 syntax_bits
%1058:	and	 %1057 XXX
%1059:	icmp	 %1058 XXX
%1060:	br	 %1059 if.then184 if.end185

BASIC BLOCK if.then184
%1061:	br	 normal_char

BASIC BLOCK if.end185
%1062:	load	 syntax_bits
%1063:	and	 %1062 XXX
%1064:	icmp	 %1063 XXX
%1065:	zext	 %1064
%1066:	icmp	 %811 %1065
%1067:	br	 %1066 if.end192 if.then191

BASIC BLOCK if.then191
%1068:	br	 normal_char

BASIC BLOCK if.end192
%1069:	store	 XXX maxrep
%1070:	store	 XXX minrep
%1071:	load	 lexleft
%1072:	icmp	 %1071 XXX
%1073:	br	 %1072 if.then194 if.end201

BASIC BLOCK if.then194
%1074:	call	 XXX gettext
%1075:	icmp	 %1074 XXX
%1076:	br	 %1075 if.else if.then198

BASIC BLOCK if.then198
%1077:	call	 XXX gettext
%1078:	call	 %1077 dfaerror
%1079:	br	 if.end200

BASIC BLOCK if.else
%1080:	store	 XXX lasttok
%1081:	br	 return

BASIC BLOCK if.end200
%1082:	br	 if.end201

BASIC BLOCK if.end201
%1083:	load	 lexptr
%1084:	getelementptr	 %1083 XXX
%1085:	store	 %1084 lexptr
%1086:	load	 %1083
%1087:	zext	 %1086
%1088:	load	 lexleft
%1089:	add	 %1088 XXX
%1090:	store	 %1089 lexleft
%1091:	sext	 %1087
%1092:	call	 __ctype_b_loc
%1093:	load	 %1092
%1094:	getelementptr	 %1093 %1091
%1095:	load	 %1094
%1096:	zext	 %1095
%1097:	and	 %1096 XXX
%1098:	icmp	 %1097 XXX
%1099:	br	 %1098 if.else234 if.then210

BASIC BLOCK if.then210
%1100:	sub	 %1087 XXX
%1101:	store	 %1100 minrep
%1102:	br	 for.cond211

BASIC BLOCK for.cond211
%1103:	load	 lexleft
%1104:	icmp	 %1103 XXX
%1105:	br	 %1104 if.then213 if.end221

BASIC BLOCK if.then213
%1106:	call	 XXX gettext
%1107:	icmp	 %1106 XXX
%1108:	br	 %1107 if.else219 if.then217

BASIC BLOCK if.then217
%1109:	call	 XXX gettext
%1110:	call	 %1109 dfaerror
%1111:	br	 if.end220

BASIC BLOCK if.else219
%1112:	store	 XXX lasttok
%1113:	br	 return

BASIC BLOCK if.end220
%1114:	br	 if.end221

BASIC BLOCK if.end221
%1115:	load	 lexptr
%1116:	getelementptr	 %1115 XXX
%1117:	store	 %1116 lexptr
%1118:	load	 %1115
%1119:	zext	 %1118
%1120:	load	 lexleft
%1121:	add	 %1120 XXX
%1122:	store	 %1121 lexleft
%1123:	sext	 %1119
%1124:	call	 __ctype_b_loc
%1125:	load	 %1124
%1126:	getelementptr	 %1125 %1123
%1127:	load	 %1126
%1128:	zext	 %1127
%1129:	and	 %1128 XXX
%1130:	icmp	 %1129 XXX
%1131:	br	 %1130 if.then231 if.end232

BASIC BLOCK if.then231
%1132:	br	 for.end

BASIC BLOCK if.end232
%1133:	load	 minrep
%1134:	mul	 XXX %1133
%1135:	add	 %1134 %1119
%1136:	sub	 %1135 XXX
%1137:	store	 %1136 minrep
%1138:	br	 for.cond211

BASIC BLOCK for.end
%1139:	br	 if.end240

BASIC BLOCK if.else234
%1140:	icmp	 %1087 XXX
%1141:	br	 %1140 if.end239 if.then237

BASIC BLOCK if.then237
%1142:	call	 XXX gettext
%1143:	call	 %1142 dfaerror
%1144:	br	 if.end239

BASIC BLOCK if.end239
%1145:	br	 if.end240

BASIC BLOCK if.end240
%1146:	phi	 %1119 %1087
%1147:	icmp	 %1146 XXX
%1148:	br	 %1147 if.else270 if.then243

BASIC BLOCK if.then243
%1149:	br	 for.cond244

BASIC BLOCK for.cond244
%1150:	load	 lexleft
%1151:	icmp	 %1150 XXX
%1152:	br	 %1151 if.then246 if.end254

BASIC BLOCK if.then246
%1153:	call	 XXX gettext
%1154:	icmp	 %1153 XXX
%1155:	br	 %1154 if.else252 if.then250

BASIC BLOCK if.then250
%1156:	call	 XXX gettext
%1157:	call	 %1156 dfaerror
%1158:	br	 if.end253

BASIC BLOCK if.else252
%1159:	store	 XXX lasttok
%1160:	br	 return

BASIC BLOCK if.end253
%1161:	br	 if.end254

BASIC BLOCK if.end254
%1162:	load	 lexptr
%1163:	getelementptr	 %1162 XXX
%1164:	store	 %1163 lexptr
%1165:	load	 %1162
%1166:	zext	 %1165
%1167:	load	 lexleft
%1168:	add	 %1167 XXX
%1169:	store	 %1168 lexleft
%1170:	sext	 %1166
%1171:	call	 __ctype_b_loc
%1172:	load	 %1171
%1173:	getelementptr	 %1172 %1170
%1174:	load	 %1173
%1175:	zext	 %1174
%1176:	and	 %1175 XXX
%1177:	icmp	 %1176 XXX
%1178:	br	 %1177 if.then264 if.end265

BASIC BLOCK if.then264
%1179:	br	 for.end269

BASIC BLOCK if.end265
%1180:	load	 maxrep
%1181:	mul	 XXX %1180
%1182:	add	 %1181 %1166
%1183:	sub	 %1182 XXX
%1184:	store	 %1183 maxrep
%1185:	br	 for.cond244

BASIC BLOCK for.end269
%1186:	br	 if.end271

BASIC BLOCK if.else270
%1187:	load	 minrep
%1188:	store	 %1187 maxrep
%1189:	br	 if.end271

BASIC BLOCK if.end271
%1190:	phi	 %1166 %1146
%1191:	load	 syntax_bits
%1192:	and	 %1191 XXX
%1193:	icmp	 %1192 XXX
%1194:	br	 %1193 if.then274 if.end293

BASIC BLOCK if.then274
%1195:	icmp	 %1190 XXX
%1196:	br	 %1195 if.end279 if.then277

BASIC BLOCK if.then277
%1197:	call	 XXX gettext
%1198:	call	 %1197 dfaerror
%1199:	br	 if.end279

BASIC BLOCK if.end279
%1200:	load	 lexleft
%1201:	icmp	 %1200 XXX
%1202:	br	 %1201 if.then281 if.end289

BASIC BLOCK if.then281
%1203:	call	 XXX gettext
%1204:	icmp	 %1203 XXX
%1205:	br	 %1204 if.else287 if.then285

BASIC BLOCK if.then285
%1206:	call	 XXX gettext
%1207:	call	 %1206 dfaerror
%1208:	br	 if.end288

BASIC BLOCK if.else287
%1209:	store	 XXX lasttok
%1210:	br	 return

BASIC BLOCK if.end288
%1211:	br	 if.end289

BASIC BLOCK if.end289
%1212:	load	 lexptr
%1213:	getelementptr	 %1212 XXX
%1214:	store	 %1213 lexptr
%1215:	load	 %1212
%1216:	zext	 %1215
%1217:	load	 lexleft
%1218:	add	 %1217 XXX
%1219:	store	 %1218 lexleft
%1220:	br	 if.end293

BASIC BLOCK if.end293
%1221:	phi	 %1190 %1216
%1222:	icmp	 %1221 XXX
%1223:	br	 %1222 if.end298 if.then296

BASIC BLOCK if.then296
%1224:	call	 XXX gettext
%1225:	call	 %1224 dfaerror
%1226:	br	 if.end298

BASIC BLOCK if.end298
%1227:	store	 XXX laststart
%1228:	store	 XXX lasttok
%1229:	br	 return

BASIC BLOCK sw.bb299
%1230:	load	 syntax_bits
%1231:	and	 %1230 XXX
%1232:	icmp	 %1231 XXX
%1233:	br	 %1232 if.end303 if.then302

BASIC BLOCK if.then302
%1234:	br	 normal_char

BASIC BLOCK if.end303
%1235:	load	 syntax_bits
%1236:	and	 %1235 XXX
%1237:	icmp	 %1236 XXX
%1238:	zext	 %1237
%1239:	icmp	 %811 %1238
%1240:	br	 %1239 if.end310 if.then309

BASIC BLOCK if.then309
%1241:	br	 normal_char

BASIC BLOCK if.end310
%1242:	store	 XXX laststart
%1243:	store	 XXX lasttok
%1244:	br	 return

BASIC BLOCK sw.bb311
%1245:	load	 syntax_bits
%1246:	and	 %1245 XXX
%1247:	icmp	 %1246 XXX
%1248:	br	 %1247 lor.lhs.false314 if.then319

BASIC BLOCK lor.lhs.false314
%1249:	icmp	 %811 XXX
%1250:	br	 %1249 lor.lhs.false316 if.then319

BASIC BLOCK lor.lhs.false316
%1251:	load	 syntax_bits
%1252:	and	 %1251 XXX
%1253:	icmp	 %1252 XXX
%1254:	br	 %1253 if.then319 if.end320

BASIC BLOCK if.then319
%1255:	br	 normal_char

BASIC BLOCK if.end320
%1256:	store	 XXX laststart
%1257:	store	 XXX lasttok
%1258:	br	 return

BASIC BLOCK sw.bb321
%1259:	load	 syntax_bits
%1260:	and	 %1259 XXX
%1261:	icmp	 %1260 XXX
%1262:	zext	 %1261
%1263:	icmp	 %811 %1262
%1264:	br	 %1263 if.end328 if.then327

BASIC BLOCK if.then327
%1265:	br	 normal_char

BASIC BLOCK if.end328
%1266:	load	 parens
%1267:	add	 %1266 XXX
%1268:	store	 %1267 parens
%1269:	store	 XXX laststart
%1270:	store	 XXX lasttok
%1271:	br	 return

BASIC BLOCK sw.bb329
%1272:	load	 syntax_bits
%1273:	and	 %1272 XXX
%1274:	icmp	 %1273 XXX
%1275:	zext	 %1274
%1276:	icmp	 %811 %1275
%1277:	br	 %1276 if.end336 if.then335

BASIC BLOCK if.then335
%1278:	br	 normal_char

BASIC BLOCK if.end336
%1279:	load	 parens
%1280:	icmp	 %1279 XXX
%1281:	br	 %1280 if.end343 land.lhs.true339

BASIC BLOCK land.lhs.true339
%1282:	load	 syntax_bits
%1283:	and	 %1282 XXX
%1284:	icmp	 %1283 XXX
%1285:	br	 %1284 if.end343 if.then342

BASIC BLOCK if.then342
%1286:	br	 normal_char

BASIC BLOCK if.end343
%1287:	load	 parens
%1288:	add	 %1287 XXX
%1289:	store	 %1288 parens
%1290:	store	 XXX laststart
%1291:	store	 XXX lasttok
%1292:	br	 return

BASIC BLOCK sw.bb345
%1293:	icmp	 %811 XXX
%1294:	br	 %1293 if.end348 if.then347

BASIC BLOCK if.then347
%1295:	br	 normal_char

BASIC BLOCK if.end348
%1296:	getelementptr	 %808 XXX XXX
%1297:	call	 %1296 zeroset
%1298:	getelementptr	 %808 XXX XXX
%1299:	call	 %1298 notset
%1300:	load	 syntax_bits
%1301:	and	 %1300 XXX
%1302:	icmp	 %1301 XXX
%1303:	br	 %1302 if.then352 if.end354

BASIC BLOCK if.then352
%1304:	getelementptr	 %808 XXX XXX
%1305:	call	 XXX %1304 clrbit
%1306:	br	 if.end354

BASIC BLOCK if.end354
%1307:	load	 syntax_bits
%1308:	and	 %1307 XXX
%1309:	icmp	 %1308 XXX
%1310:	br	 %1309 if.end359 if.then357

BASIC BLOCK if.then357
%1311:	getelementptr	 %808 XXX XXX
%1312:	call	 XXX %1311 clrbit
%1313:	br	 if.end359

BASIC BLOCK if.end359
%1314:	store	 XXX laststart
%1315:	getelementptr	 %808 XXX XXX
%1316:	call	 %1315 charclass_index
%1317:	add	 XXX %1316
%1318:	store	 %1317 lasttok
%1319:	br	 return

BASIC BLOCK sw.bb363
%1320:	icmp	 %811 XXX
%1321:	br	 %1320 if.then368 lor.lhs.false365

BASIC BLOCK lor.lhs.false365
%1322:	load	 syntax_bits
%1323:	and	 %1322 XXX
%1324:	icmp	 %1323 XXX
%1325:	br	 %1324 if.end369 if.then368

BASIC BLOCK if.then368
%1326:	br	 normal_char

BASIC BLOCK if.end369
%1327:	getelementptr	 %808 XXX XXX
%1328:	call	 %1327 zeroset
%1329:	br	 for.cond371

BASIC BLOCK for.cond371
%1330:	phi	 XXX %1348
%1331:	icmp	 %1330 XXX
%1332:	br	 %1331 for.end388 for.body374

BASIC BLOCK for.body374
%1333:	sext	 %1330
%1334:	call	 __ctype_b_loc
%1335:	load	 %1334
%1336:	getelementptr	 %1335 %1333
%1337:	load	 %1336
%1338:	zext	 %1337
%1339:	and	 %1338 XXX
%1340:	icmp	 %1339 XXX
%1341:	br	 %1340 lor.lhs.false381 if.then384

BASIC BLOCK lor.lhs.false381
%1342:	icmp	 %1330 XXX
%1343:	br	 %1342 if.end386 if.then384

BASIC BLOCK if.then384
%1344:	getelementptr	 %808 XXX XXX
%1345:	call	 %1330 %1344 setbit
%1346:	br	 if.end386

BASIC BLOCK if.end386
%1347:	br	 for.inc

BASIC BLOCK for.inc
%1348:	add	 %1330 XXX
%1349:	br	 for.cond371

BASIC BLOCK for.end388
%1350:	icmp	 %823 XXX
%1351:	br	 %1350 if.end393 if.then391

BASIC BLOCK if.then391
%1352:	getelementptr	 %808 XXX XXX
%1353:	call	 %1352 notset
%1354:	br	 if.end393

BASIC BLOCK if.end393
%1355:	store	 XXX laststart
%1356:	getelementptr	 %808 XXX XXX
%1357:	call	 %1356 charclass_index
%1358:	add	 XXX %1357
%1359:	store	 %1358 lasttok
%1360:	br	 return

BASIC BLOCK sw.bb397
%1361:	icmp	 %811 XXX
%1362:	br	 %1361 if.end400 if.then399

BASIC BLOCK if.then399
%1363:	br	 normal_char

BASIC BLOCK if.end400
%1364:	getelementptr	 %808 XXX XXX
%1365:	call	 %1364 zeroset
%1366:	load	 lexleft
%1367:	icmp	 %1366 XXX
%1368:	br	 %1367 if.then403 if.end411

BASIC BLOCK if.then403
%1369:	call	 XXX gettext
%1370:	icmp	 %1369 XXX
%1371:	br	 %1370 if.else409 if.then407

BASIC BLOCK if.then407
%1372:	call	 XXX gettext
%1373:	call	 %1372 dfaerror
%1374:	br	 if.end410

BASIC BLOCK if.else409
%1375:	store	 XXX lasttok
%1376:	br	 return

BASIC BLOCK if.end410
%1377:	br	 if.end411

BASIC BLOCK if.end411
%1378:	load	 lexptr
%1379:	getelementptr	 %1378 XXX
%1380:	store	 %1379 lexptr
%1381:	load	 %1378
%1382:	zext	 %1381
%1383:	load	 lexleft
%1384:	add	 %1383 XXX
%1385:	store	 %1384 lexleft
%1386:	icmp	 %1382 XXX
%1387:	br	 %1386 if.else431 if.then417

BASIC BLOCK if.then417
%1388:	load	 lexleft
%1389:	icmp	 %1388 XXX
%1390:	br	 %1389 if.then419 if.end427

BASIC BLOCK if.then419
%1391:	call	 XXX gettext
%1392:	icmp	 %1391 XXX
%1393:	br	 %1392 if.else425 if.then423

BASIC BLOCK if.then423
%1394:	call	 XXX gettext
%1395:	call	 %1394 dfaerror
%1396:	br	 if.end426

BASIC BLOCK if.else425
%1397:	store	 XXX lasttok
%1398:	br	 return

BASIC BLOCK if.end426
%1399:	br	 if.end427

BASIC BLOCK if.end427
%1400:	load	 lexptr
%1401:	getelementptr	 %1400 XXX
%1402:	store	 %1401 lexptr
%1403:	load	 %1400
%1404:	zext	 %1403
%1405:	load	 lexleft
%1406:	add	 %1405 XXX
%1407:	store	 %1406 lexleft
%1408:	br	 if.end432

BASIC BLOCK if.else431
%1409:	br	 if.end432

BASIC BLOCK if.end432
%1410:	phi	 XXX XXX
%1411:	phi	 %1404 %1382
%1412:	br	 do.body

BASIC BLOCK do.body
%1413:	phi	 %1411 %1680
%1414:	icmp	 %1413 XXX
%1415:	br	 %1414 if.end502 land.lhs.true435

BASIC BLOCK land.lhs.true435
%1416:	load	 syntax_bits
%1417:	and	 %1416 XXX
%1418:	icmp	 %1417 XXX
%1419:	br	 %1418 if.end502 if.then438

BASIC BLOCK if.then438
%1420:	br	 for.cond439

BASIC BLOCK for.cond439
%1421:	phi	 XXX %1503
%1422:	sext	 %1421
%1423:	getelementptr	 prednames XXX %1422
%1424:	getelementptr	 %1423 XXX XXX
%1425:	load	 %1424
%1426:	icmp	 %1425 XXX
%1427:	br	 %1426 for.end501 for.body443

BASIC BLOCK for.body443
%1428:	sext	 %1421
%1429:	getelementptr	 prednames XXX %1428
%1430:	getelementptr	 %1429 XXX XXX
%1431:	load	 %1430
%1432:	call	 %1431 looking_at
%1433:	icmp	 %1432 XXX
%1434:	br	 %1433 if.end498 if.then449

BASIC BLOCK if.then449
%1435:	sext	 %1421
%1436:	getelementptr	 prednames XXX %1435
%1437:	getelementptr	 %1436 XXX XXX
%1438:	load	 %1437
%1439:	bitcast	 %1438
%1440:	load	 case_fold
%1441:	icmp	 %1440 XXX
%1442:	br	 %1441 if.end461 land.lhs.true454

BASIC BLOCK land.lhs.true454
%1443:	icmp	 %1439 XXX
%1444:	br	 %1443 lor.lhs.false457 if.then460

BASIC BLOCK lor.lhs.false457
%1445:	icmp	 %1439 XXX
%1446:	br	 %1445 if.end461 if.then460

BASIC BLOCK if.then460
%1447:	br	 if.end461

BASIC BLOCK if.end461
%1448:	phi	 XXX %1439 %1439
%1449:	br	 for.cond462

BASIC BLOCK for.cond462
%1450:	phi	 XXX %1461
%1451:	icmp	 %1450 XXX
%1452:	br	 %1451 for.end473 for.body465

BASIC BLOCK for.body465
%1453:	bitcast	 %1448
%1454:	call	 %1450 %1453
%1455:	icmp	 %1454 XXX
%1456:	br	 %1455 if.end470 if.then468

BASIC BLOCK if.then468
%1457:	getelementptr	 %808 XXX XXX
%1458:	call	 %1450 %1457 setbit
%1459:	br	 if.end470

BASIC BLOCK if.end470
%1460:	br	 for.inc471

BASIC BLOCK for.inc471
%1461:	add	 %1450 XXX
%1462:	br	 for.cond462

BASIC BLOCK for.end473
%1463:	sext	 %1421
%1464:	getelementptr	 prednames XXX %1463
%1465:	getelementptr	 %1464 XXX XXX
%1466:	load	 %1465
%1467:	call	 %1466 strlen
%1468:	load	 lexptr
%1469:	getelementptr	 %1468 %1467
%1470:	store	 %1469 lexptr
%1471:	sext	 %1421
%1472:	getelementptr	 prednames XXX %1471
%1473:	getelementptr	 %1472 XXX XXX
%1474:	load	 %1473
%1475:	call	 %1474 strlen
%1476:	load	 lexleft
%1477:	sext	 %1476
%1478:	sub	 %1477 %1475
%1479:	trunc	 %1478
%1480:	store	 %1479 lexleft
%1481:	load	 lexleft
%1482:	icmp	 %1481 XXX
%1483:	br	 %1482 if.then486 if.end494

BASIC BLOCK if.then486
%1484:	call	 XXX gettext
%1485:	icmp	 %1484 XXX
%1486:	br	 %1485 if.else492 if.then490

BASIC BLOCK if.then490
%1487:	call	 XXX gettext
%1488:	call	 %1487 dfaerror
%1489:	br	 if.end493

BASIC BLOCK if.else492
%1490:	store	 XXX lasttok
%1491:	br	 return

BASIC BLOCK if.end493
%1492:	br	 if.end494

BASIC BLOCK if.end494
%1493:	load	 lexptr
%1494:	getelementptr	 %1493 XXX
%1495:	store	 %1494 lexptr
%1496:	load	 %1493
%1497:	zext	 %1496
%1498:	load	 lexleft
%1499:	add	 %1498 XXX
%1500:	store	 %1499 lexleft
%1501:	br	 skip

BASIC BLOCK if.end498
%1502:	br	 for.inc499

BASIC BLOCK for.inc499
%1503:	add	 %1421 XXX
%1504:	br	 for.cond439

BASIC BLOCK for.end501
%1505:	br	 if.end502

BASIC BLOCK if.end502
%1506:	icmp	 %1413 XXX
%1507:	br	 %1506 if.end522 land.lhs.true505

BASIC BLOCK land.lhs.true505
%1508:	load	 syntax_bits
%1509:	and	 %1508 XXX
%1510:	icmp	 %1509 XXX
%1511:	br	 %1510 if.end522 if.then508

BASIC BLOCK if.then508
%1512:	load	 lexleft
%1513:	icmp	 %1512 XXX
%1514:	br	 %1513 if.then510 if.end518

BASIC BLOCK if.then510
%1515:	call	 XXX gettext
%1516:	icmp	 %1515 XXX
%1517:	br	 %1516 if.else516 if.then514

BASIC BLOCK if.then514
%1518:	call	 XXX gettext
%1519:	call	 %1518 dfaerror
%1520:	br	 if.end517

BASIC BLOCK if.else516
%1521:	store	 XXX lasttok
%1522:	br	 return

BASIC BLOCK if.end517
%1523:	br	 if.end518

BASIC BLOCK if.end518
%1524:	load	 lexptr
%1525:	getelementptr	 %1524 XXX
%1526:	store	 %1525 lexptr
%1527:	load	 %1524
%1528:	zext	 %1527
%1529:	load	 lexleft
%1530:	add	 %1529 XXX
%1531:	store	 %1530 lexleft
%1532:	br	 if.end522

BASIC BLOCK if.end522
%1533:	phi	 %1528 %1413 %1413
%1534:	load	 lexleft
%1535:	icmp	 %1534 XXX
%1536:	br	 %1535 if.then524 if.end532

BASIC BLOCK if.then524
%1537:	call	 XXX gettext
%1538:	icmp	 %1537 XXX
%1539:	br	 %1538 if.else530 if.then528

BASIC BLOCK if.then528
%1540:	call	 XXX gettext
%1541:	call	 %1540 dfaerror
%1542:	br	 if.end531

BASIC BLOCK if.else530
%1543:	store	 XXX lasttok
%1544:	br	 return

BASIC BLOCK if.end531
%1545:	br	 if.end532

BASIC BLOCK if.end532
%1546:	load	 lexptr
%1547:	getelementptr	 %1546 XXX
%1548:	store	 %1547 lexptr
%1549:	load	 %1546
%1550:	zext	 %1549
%1551:	load	 lexleft
%1552:	add	 %1551 XXX
%1553:	store	 %1552 lexleft
%1554:	icmp	 %1550 XXX
%1555:	br	 %1554 if.else592 if.then538

BASIC BLOCK if.then538
%1556:	load	 lexleft
%1557:	icmp	 %1556 XXX
%1558:	br	 %1557 if.then540 if.end548

BASIC BLOCK if.then540
%1559:	call	 XXX gettext
%1560:	icmp	 %1559 XXX
%1561:	br	 %1560 if.else546 if.then544

BASIC BLOCK if.then544
%1562:	call	 XXX gettext
%1563:	call	 %1562 dfaerror
%1564:	br	 if.end547

BASIC BLOCK if.else546
%1565:	store	 XXX lasttok
%1566:	br	 return

BASIC BLOCK if.end547
%1567:	br	 if.end548

BASIC BLOCK if.end548
%1568:	load	 lexptr
%1569:	getelementptr	 %1568 XXX
%1570:	store	 %1569 lexptr
%1571:	load	 %1568
%1572:	zext	 %1571
%1573:	load	 lexleft
%1574:	add	 %1573 XXX
%1575:	store	 %1574 lexleft
%1576:	icmp	 %1572 XXX
%1577:	br	 %1576 if.else557 if.then554

BASIC BLOCK if.then554
%1578:	load	 lexptr
%1579:	getelementptr	 %1578 XXX
%1580:	store	 %1579 lexptr
%1581:	load	 lexleft
%1582:	add	 %1581 XXX
%1583:	store	 %1582 lexleft
%1584:	br	 if.end591

BASIC BLOCK if.else557
%1585:	icmp	 %1572 XXX
%1586:	br	 %1585 if.end577 land.lhs.true560

BASIC BLOCK land.lhs.true560
%1587:	load	 syntax_bits
%1588:	and	 %1587 XXX
%1589:	icmp	 %1588 XXX
%1590:	br	 %1589 if.end577 if.then563

BASIC BLOCK if.then563
%1591:	load	 lexleft
%1592:	icmp	 %1591 XXX
%1593:	br	 %1592 if.then565 if.end573

BASIC BLOCK if.then565
%1594:	call	 XXX gettext
%1595:	icmp	 %1594 XXX
%1596:	br	 %1595 if.else571 if.then569

BASIC BLOCK if.then569
%1597:	call	 XXX gettext
%1598:	call	 %1597 dfaerror
%1599:	br	 if.end572

BASIC BLOCK if.else571
%1600:	store	 XXX lasttok
%1601:	br	 return

BASIC BLOCK if.end572
%1602:	br	 if.end573

BASIC BLOCK if.end573
%1603:	load	 lexptr
%1604:	getelementptr	 %1603 XXX
%1605:	store	 %1604 lexptr
%1606:	load	 %1603
%1607:	zext	 %1606
%1608:	load	 lexleft
%1609:	add	 %1608 XXX
%1610:	store	 %1609 lexleft
%1611:	br	 if.end577

BASIC BLOCK if.end577
%1612:	phi	 %1607 %1572 %1572
%1613:	load	 lexleft
%1614:	icmp	 %1613 XXX
%1615:	br	 %1614 if.then579 if.end587

BASIC BLOCK if.then579
%1616:	call	 XXX gettext
%1617:	icmp	 %1616 XXX
%1618:	br	 %1617 if.else585 if.then583

BASIC BLOCK if.then583
%1619:	call	 XXX gettext
%1620:	call	 %1619 dfaerror
%1621:	br	 if.end586

BASIC BLOCK if.else585
%1622:	store	 XXX lasttok
%1623:	br	 return

BASIC BLOCK if.end586
%1624:	br	 if.end587

BASIC BLOCK if.end587
%1625:	load	 lexptr
%1626:	getelementptr	 %1625 XXX
%1627:	store	 %1626 lexptr
%1628:	load	 %1625
%1629:	zext	 %1628
%1630:	load	 lexleft
%1631:	add	 %1630 XXX
%1632:	store	 %1631 lexleft
%1633:	br	 if.end591

BASIC BLOCK if.end591
%1634:	phi	 %1533 %1612
%1635:	phi	 %1550 %1629
%1636:	br	 if.end593

BASIC BLOCK if.else592
%1637:	br	 if.end593

BASIC BLOCK if.end593
%1638:	phi	 %1634 %1533
%1639:	phi	 %1635 %1550
%1640:	br	 while.cond

BASIC BLOCK while.cond
%1641:	phi	 %1533 %1677
%1642:	icmp	 %1641 %1638
%1643:	br	 %1642 while.end while.body

BASIC BLOCK while.body
%1644:	getelementptr	 %808 XXX XXX
%1645:	call	 %1641 %1644 setbit
%1646:	load	 case_fold
%1647:	icmp	 %1646 XXX
%1648:	br	 %1647 if.end620 if.then598

BASIC BLOCK if.then598
%1649:	sext	 %1641
%1650:	call	 __ctype_b_loc
%1651:	load	 %1650
%1652:	getelementptr	 %1651 %1649
%1653:	load	 %1652
%1654:	zext	 %1653
%1655:	and	 %1654 XXX
%1656:	icmp	 %1655 XXX
%1657:	br	 %1656 if.else608 if.then605

BASIC BLOCK if.then605
%1658:	call	 %1641 tolower
%1659:	getelementptr	 %808 XXX XXX
%1660:	call	 %1658 %1659 setbit
%1661:	br	 if.end619

BASIC BLOCK if.else608
%1662:	sext	 %1641
%1663:	call	 __ctype_b_loc
%1664:	load	 %1663
%1665:	getelementptr	 %1664 %1662
%1666:	load	 %1665
%1667:	zext	 %1666
%1668:	and	 %1667 XXX
%1669:	icmp	 %1668 XXX
%1670:	br	 %1669 if.end618 if.then615

BASIC BLOCK if.then615
%1671:	call	 %1641 toupper
%1672:	getelementptr	 %808 XXX XXX
%1673:	call	 %1671 %1672 setbit
%1674:	br	 if.end618

BASIC BLOCK if.end618
%1675:	br	 if.end619

BASIC BLOCK if.end619
%1676:	br	 if.end620

BASIC BLOCK if.end620
%1677:	add	 %1641 XXX
%1678:	br	 while.cond

BASIC BLOCK while.end
%1679:	br	 skip

BASIC BLOCK skip
%1680:	phi	 %1497 %1639
%1681:	br	 do.cond

BASIC BLOCK do.cond
%1682:	icmp	 %1680 XXX
%1683:	br	 %1682 do.end do.body

BASIC BLOCK do.end
%1684:	icmp	 %1410 XXX
%1685:	br	 %1684 if.end632 if.then625

BASIC BLOCK if.then625
%1686:	getelementptr	 %808 XXX XXX
%1687:	call	 %1686 notset
%1688:	load	 syntax_bits
%1689:	and	 %1688 XXX
%1690:	icmp	 %1689 XXX
%1691:	br	 %1690 if.end631 if.then629

BASIC BLOCK if.then629
%1692:	getelementptr	 %808 XXX XXX
%1693:	call	 XXX %1692 clrbit
%1694:	br	 if.end631

BASIC BLOCK if.end631
%1695:	br	 if.end632

BASIC BLOCK if.end632
%1696:	store	 XXX laststart
%1697:	getelementptr	 %808 XXX XXX
%1698:	call	 %1697 charclass_index
%1699:	add	 XXX %1698
%1700:	store	 %1699 lasttok
%1701:	br	 return

BASIC BLOCK sw.default
%1702:	br	 normal_char

BASIC BLOCK normal_char
%1703:	store	 XXX laststart
%1704:	load	 case_fold
%1705:	icmp	 %1704 XXX
%1706:	br	 %1705 if.end663 land.lhs.true637

BASIC BLOCK land.lhs.true637
%1707:	sext	 %823
%1708:	call	 __ctype_b_loc
%1709:	load	 %1708
%1710:	getelementptr	 %1709 %1707
%1711:	load	 %1710
%1712:	zext	 %1711
%1713:	and	 %1712 XXX
%1714:	icmp	 %1713 XXX
%1715:	br	 %1714 if.end663 if.then644

BASIC BLOCK if.then644
%1716:	getelementptr	 %808 XXX XXX
%1717:	call	 %1716 zeroset
%1718:	getelementptr	 %808 XXX XXX
%1719:	call	 %823 %1718 setbit
%1720:	sext	 %823
%1721:	call	 __ctype_b_loc
%1722:	load	 %1721
%1723:	getelementptr	 %1722 %1720
%1724:	load	 %1723
%1725:	zext	 %1724
%1726:	and	 %1725 XXX
%1727:	icmp	 %1726 XXX
%1728:	br	 %1727 if.else656 if.then653

BASIC BLOCK if.then653
%1729:	call	 %823 tolower
%1730:	getelementptr	 %808 XXX XXX
%1731:	call	 %1729 %1730 setbit
%1732:	br	 if.end659

BASIC BLOCK if.else656
%1733:	call	 %823 toupper
%1734:	getelementptr	 %808 XXX XXX
%1735:	call	 %1733 %1734 setbit
%1736:	br	 if.end659

BASIC BLOCK if.end659
%1737:	getelementptr	 %808 XXX XXX
%1738:	call	 %1737 charclass_index
%1739:	add	 XXX %1738
%1740:	store	 %1739 lasttok
%1741:	br	 return

BASIC BLOCK if.end663
%1742:	br	 return

BASIC BLOCK sw.epilog
%1743:	br	 for.inc664

BASIC BLOCK for.inc664
%1744:	add	 %810 XXX
%1745:	br	 for.cond

BASIC BLOCK for.end666
%1746:	call	 abort
%1747:	unreachable	

BASIC BLOCK return
%1748:	phi	 %1739 %823 %1699 XXX XXX XXX XXX XXX XXX XXX XXX %1358 %1317 XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX
%1749:	ret	 %1748

FUNCTION regexp

BASIC BLOCK entry
%1750:	call	 branch
%1751:	br	 while.cond

BASIC BLOCK while.cond
%1752:	load	 tok
%1753:	icmp	 %1752 XXX
%1754:	br	 %1753 while.end while.body

BASIC BLOCK while.body
%1755:	call	 lex
%1756:	store	 %1755 tok
%1757:	call	 branch
%1758:	icmp	 toplevel XXX
%1759:	br	 %1758 if.else if.then

BASIC BLOCK if.then
%1760:	call	 XXX addtok
%1761:	br	 if.end

BASIC BLOCK if.else
%1762:	call	 XXX addtok
%1763:	br	 if.end

BASIC BLOCK if.end
%1764:	br	 while.cond

BASIC BLOCK while.end
%1765:	ret	

FUNCTION addtok

BASIC BLOCK entry
%1766:	load	 dfa
%1767:	getelementptr	 %1766 XXX XXX
%1768:	load	 %1767
%1769:	load	 dfa
%1770:	getelementptr	 %1769 XXX XXX
%1771:	load	 %1770
%1772:	icmp	 %1768 %1771
%1773:	br	 %1772 if.end if.then

BASIC BLOCK if.then
%1774:	br	 while.cond

BASIC BLOCK while.cond
%1775:	load	 dfa
%1776:	getelementptr	 %1775 XXX XXX
%1777:	load	 %1776
%1778:	load	 dfa
%1779:	getelementptr	 %1778 XXX XXX
%1780:	load	 %1779
%1781:	icmp	 %1777 %1780
%1782:	br	 %1781 while.end while.body

BASIC BLOCK while.body
%1783:	load	 dfa
%1784:	getelementptr	 %1783 XXX XXX
%1785:	load	 %1784
%1786:	mul	 %1785 XXX
%1787:	store	 %1786 %1784
%1788:	br	 while.cond

BASIC BLOCK while.end
%1789:	load	 dfa
%1790:	getelementptr	 %1789 XXX XXX
%1791:	load	 %1790
%1792:	bitcast	 %1791
%1793:	load	 dfa
%1794:	getelementptr	 %1793 XXX XXX
%1795:	load	 %1794
%1796:	sext	 %1795
%1797:	mul	 %1796 XXX
%1798:	call	 %1792 %1797 xrealloc_1
%1799:	bitcast	 %1798
%1800:	load	 dfa
%1801:	getelementptr	 %1800 XXX XXX
%1802:	store	 %1799 %1801
%1803:	br	 if.end

BASIC BLOCK if.end
%1804:	load	 dfa
%1805:	getelementptr	 %1804 XXX XXX
%1806:	load	 %1805
%1807:	add	 %1806 XXX
%1808:	store	 %1807 %1805
%1809:	sext	 %1806
%1810:	load	 dfa
%1811:	getelementptr	 %1810 XXX XXX
%1812:	load	 %1811
%1813:	getelementptr	 %1812 %1809
%1814:	store	 t %1813
%1815:	switch	 t sw.default XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb10 XXX sw.bb10 XXX sw.bb10 XXX sw.bb12

BASIC BLOCK sw.bb
%1816:	br	 sw.epilog

BASIC BLOCK sw.bb10
%1817:	load	 depth
%1818:	add	 %1817 XXX
%1819:	store	 %1818 depth
%1820:	br	 sw.epilog

BASIC BLOCK sw.default
%1821:	load	 dfa
%1822:	getelementptr	 %1821 XXX XXX
%1823:	load	 %1822
%1824:	add	 %1823 XXX
%1825:	store	 %1824 %1822
%1826:	br	 sw.bb12

BASIC BLOCK sw.bb12
%1827:	load	 depth
%1828:	add	 %1827 XXX
%1829:	store	 %1828 depth
%1830:	br	 sw.epilog

BASIC BLOCK sw.epilog
%1831:	load	 depth
%1832:	load	 dfa
%1833:	getelementptr	 %1832 XXX XXX
%1834:	load	 %1833
%1835:	icmp	 %1831 %1834
%1836:	br	 %1835 if.end18 if.then16

BASIC BLOCK if.then16
%1837:	load	 depth
%1838:	load	 dfa
%1839:	getelementptr	 %1838 XXX XXX
%1840:	store	 %1837 %1839
%1841:	br	 if.end18

BASIC BLOCK if.end18
%1842:	ret	

FUNCTION dfaanalyze

BASIC BLOCK entry
%1843:	alloca	 XXX
%1844:	alloca	 XXX
%1845:	getelementptr	 d XXX XXX
%1846:	store	 searchflag %1845
%1847:	getelementptr	 d XXX XXX
%1848:	load	 %1847
%1849:	sext	 %1848
%1850:	mul	 %1849 XXX
%1851:	call	 %1850 xmalloc_1
%1852:	bitcast	 %1851
%1853:	getelementptr	 d XXX XXX
%1854:	load	 %1853
%1855:	sext	 %1854
%1856:	mul	 %1855 XXX
%1857:	call	 %1856 xmalloc_1
%1858:	bitcast	 %1857
%1859:	getelementptr	 d XXX XXX
%1860:	load	 %1859
%1861:	sext	 %1860
%1862:	mul	 %1861 XXX
%1863:	call	 %1862 xmalloc_1
%1864:	bitcast	 %1863
%1865:	getelementptr	 d XXX XXX
%1866:	load	 %1865
%1867:	sext	 %1866
%1868:	getelementptr	 %1864 %1867
%1869:	getelementptr	 d XXX XXX
%1870:	load	 %1869
%1871:	sext	 %1870
%1872:	mul	 %1871 XXX
%1873:	call	 %1872 xmalloc_1
%1874:	bitcast	 %1873
%1875:	getelementptr	 d XXX XXX
%1876:	load	 %1875
%1877:	sext	 %1876
%1878:	mul	 %1877 XXX
%1879:	call	 %1878 xmalloc_1
%1880:	bitcast	 %1879
%1881:	getelementptr	 d XXX XXX
%1882:	load	 %1881
%1883:	sext	 %1882
%1884:	getelementptr	 %1880 %1883
%1885:	getelementptr	 d XXX XXX
%1886:	load	 %1885
%1887:	sext	 %1886
%1888:	mul	 %1887 XXX
%1889:	call	 %1888 xmalloc_1
%1890:	bitcast	 %1889
%1891:	br	 for.cond

BASIC BLOCK for.cond
%1892:	phi	 XXX %1901
%1893:	getelementptr	 d XXX XXX
%1894:	load	 %1893
%1895:	icmp	 %1892 %1894
%1896:	br	 %1895 for.end for.body

BASIC BLOCK for.body
%1897:	sext	 %1892
%1898:	getelementptr	 %1890 %1897
%1899:	store	 XXX %1898
%1900:	br	 for.inc

BASIC BLOCK for.inc
%1901:	add	 %1892 XXX
%1902:	br	 for.cond

BASIC BLOCK for.end
%1903:	getelementptr	 d XXX XXX
%1904:	load	 %1903
%1905:	sext	 %1904
%1906:	mul	 %1905 XXX
%1907:	call	 %1906 xmalloc_1
%1908:	bitcast	 %1907
%1909:	getelementptr	 %1844 XXX XXX
%1910:	store	 %1908 %1909
%1911:	getelementptr	 d XXX XXX
%1912:	load	 %1911
%1913:	sext	 %1912
%1914:	call	 %1913 XXX xcalloc
%1915:	bitcast	 %1914
%1916:	getelementptr	 d XXX XXX
%1917:	store	 %1915 %1916
%1918:	br	 for.cond43

BASIC BLOCK for.cond43
%1919:	phi	 XXX %2309
%1920:	phi	 %1884 %2303
%1921:	phi	 %1874 %2304
%1922:	phi	 %1868 %2305
%1923:	phi	 %1858 %2306
%1924:	phi	 %1852 %2307
%1925:	getelementptr	 d XXX XXX
%1926:	load	 %1925
%1927:	icmp	 %1919 %1926
%1928:	br	 %1927 for.end291 for.body47

BASIC BLOCK for.body47
%1929:	sext	 %1919
%1930:	getelementptr	 d XXX XXX
%1931:	load	 %1930
%1932:	getelementptr	 %1931 %1929
%1933:	load	 %1932
%1934:	switch	 %1933 sw.default XXX sw.bb XXX sw.bb52 XXX sw.bb52 XXX sw.bb119 XXX sw.bb128 XXX sw.bb250 XXX sw.bb250

BASIC BLOCK sw.bb
%1935:	getelementptr	 %1924 XXX
%1936:	store	 XXX %1924
%1937:	getelementptr	 %1921 XXX
%1938:	store	 XXX %1921
%1939:	getelementptr	 %1923 XXX
%1940:	store	 XXX %1923
%1941:	br	 sw.epilog

BASIC BLOCK sw.bb52
%1942:	getelementptr	 %1923 XXX
%1943:	load	 %1942
%1944:	getelementptr	 %1843 XXX XXX
%1945:	store	 %1943 %1944
%1946:	getelementptr	 %1843 XXX XXX
%1947:	store	 %1922 %1946
%1948:	br	 for.cond55

BASIC BLOCK for.cond55
%1949:	phi	 XXX %2041
%1950:	getelementptr	 %1921 XXX
%1951:	load	 %1950
%1952:	icmp	 %1949 %1951
%1953:	br	 %1952 for.end118 for.body59

BASIC BLOCK for.body59
%1954:	sext	 %1949
%1955:	getelementptr	 %1920 %1954
%1956:	getelementptr	 %1955 XXX XXX
%1957:	load	 %1956
%1958:	zext	 %1957
%1959:	getelementptr	 d XXX XXX
%1960:	load	 %1959
%1961:	getelementptr	 %1960 %1958
%1962:	call	 %1843 %1961 %1844 merge
%1963:	getelementptr	 %1844 XXX XXX
%1964:	load	 %1963
%1965:	sub	 %1964 XXX
%1966:	sext	 %1949
%1967:	getelementptr	 %1920 %1966
%1968:	getelementptr	 %1967 XXX XXX
%1969:	load	 %1968
%1970:	zext	 %1969
%1971:	getelementptr	 %1890 %1970
%1972:	load	 %1971
%1973:	icmp	 %1965 %1972
%1974:	br	 %1973 if.end if.then

BASIC BLOCK if.then
%1975:	br	 while.cond

BASIC BLOCK while.cond
%1976:	getelementptr	 %1844 XXX XXX
%1977:	load	 %1976
%1978:	sub	 %1977 XXX
%1979:	sext	 %1949
%1980:	getelementptr	 %1920 %1979
%1981:	getelementptr	 %1980 XXX XXX
%1982:	load	 %1981
%1983:	zext	 %1982
%1984:	getelementptr	 %1890 %1983
%1985:	load	 %1984
%1986:	icmp	 %1978 %1985
%1987:	br	 %1986 while.end while.body

BASIC BLOCK while.body
%1988:	sext	 %1949
%1989:	getelementptr	 %1920 %1988
%1990:	getelementptr	 %1989 XXX XXX
%1991:	load	 %1990
%1992:	zext	 %1991
%1993:	getelementptr	 %1890 %1992
%1994:	load	 %1993
%1995:	mul	 %1994 XXX
%1996:	store	 %1995 %1993
%1997:	br	 while.cond

BASIC BLOCK while.end
%1998:	sext	 %1949
%1999:	getelementptr	 %1920 %1998
%2000:	getelementptr	 %1999 XXX XXX
%2001:	load	 %2000
%2002:	zext	 %2001
%2003:	getelementptr	 d XXX XXX
%2004:	load	 %2003
%2005:	getelementptr	 %2004 %2002
%2006:	getelementptr	 %2005 XXX XXX
%2007:	load	 %2006
%2008:	bitcast	 %2007
%2009:	sext	 %1949
%2010:	getelementptr	 %1920 %2009
%2011:	getelementptr	 %2010 XXX XXX
%2012:	load	 %2011
%2013:	zext	 %2012
%2014:	getelementptr	 %1890 %2013
%2015:	load	 %2014
%2016:	sext	 %2015
%2017:	mul	 %2016 XXX
%2018:	call	 %2008 %2017 xrealloc_1
%2019:	bitcast	 %2018
%2020:	sext	 %1949
%2021:	getelementptr	 %1920 %2020
%2022:	getelementptr	 %2021 XXX XXX
%2023:	load	 %2022
%2024:	zext	 %2023
%2025:	getelementptr	 d XXX XXX
%2026:	load	 %2025
%2027:	getelementptr	 %2026 %2024
%2028:	getelementptr	 %2027 XXX XXX
%2029:	store	 %2019 %2028
%2030:	br	 if.end

BASIC BLOCK if.end
%2031:	sext	 %1949
%2032:	getelementptr	 %1920 %2031
%2033:	getelementptr	 %2032 XXX XXX
%2034:	load	 %2033
%2035:	zext	 %2034
%2036:	getelementptr	 d XXX XXX
%2037:	load	 %2036
%2038:	getelementptr	 %2037 %2035
%2039:	call	 %1844 %2038 copy
%2040:	br	 for.inc116

BASIC BLOCK for.inc116
%2041:	add	 %1949 XXX
%2042:	br	 for.cond55

BASIC BLOCK for.end118
%2043:	br	 sw.bb119

BASIC BLOCK sw.bb119
%2044:	sext	 %1919
%2045:	getelementptr	 d XXX XXX
%2046:	load	 %2045
%2047:	getelementptr	 %2046 %2044
%2048:	load	 %2047
%2049:	icmp	 %2048 XXX
%2050:	br	 %2049 if.end127 if.then125

BASIC BLOCK if.then125
%2051:	getelementptr	 %1924 XXX
%2052:	store	 XXX %2051
%2053:	br	 if.end127

BASIC BLOCK if.end127
%2054:	br	 sw.epilog

BASIC BLOCK sw.bb128
%2055:	getelementptr	 %1923 XXX
%2056:	load	 %2055
%2057:	getelementptr	 %1843 XXX XXX
%2058:	store	 %2056 %2057
%2059:	getelementptr	 %1843 XXX XXX
%2060:	store	 %1922 %2059
%2061:	getelementptr	 %1921 XXX
%2062:	load	 %2061
%2063:	sext	 %2062
%2064:	getelementptr	 %1920 %2063
%2065:	br	 for.cond135

BASIC BLOCK for.cond135
%2066:	phi	 XXX %2158
%2067:	getelementptr	 %1921 XXX
%2068:	load	 %2067
%2069:	icmp	 %2066 %2068
%2070:	br	 %2069 for.end205 for.body139

BASIC BLOCK for.body139
%2071:	sext	 %2066
%2072:	getelementptr	 %2064 %2071
%2073:	getelementptr	 %2072 XXX XXX
%2074:	load	 %2073
%2075:	zext	 %2074
%2076:	getelementptr	 d XXX XXX
%2077:	load	 %2076
%2078:	getelementptr	 %2077 %2075
%2079:	call	 %1843 %2078 %1844 merge
%2080:	getelementptr	 %1844 XXX XXX
%2081:	load	 %2080
%2082:	sub	 %2081 XXX
%2083:	sext	 %2066
%2084:	getelementptr	 %2064 %2083
%2085:	getelementptr	 %2084 XXX XXX
%2086:	load	 %2085
%2087:	zext	 %2086
%2088:	getelementptr	 %1890 %2087
%2089:	load	 %2088
%2090:	icmp	 %2082 %2089
%2091:	br	 %2090 if.end196 if.then155

BASIC BLOCK if.then155
%2092:	br	 while.cond156

BASIC BLOCK while.cond156
%2093:	getelementptr	 %1844 XXX XXX
%2094:	load	 %2093
%2095:	sub	 %2094 XXX
%2096:	sext	 %2066
%2097:	getelementptr	 %2064 %2096
%2098:	getelementptr	 %2097 XXX XXX
%2099:	load	 %2098
%2100:	zext	 %2099
%2101:	getelementptr	 %1890 %2100
%2102:	load	 %2101
%2103:	icmp	 %2095 %2102
%2104:	br	 %2103 while.end173 while.body166

BASIC BLOCK while.body166
%2105:	sext	 %2066
%2106:	getelementptr	 %2064 %2105
%2107:	getelementptr	 %2106 XXX XXX
%2108:	load	 %2107
%2109:	zext	 %2108
%2110:	getelementptr	 %1890 %2109
%2111:	load	 %2110
%2112:	mul	 %2111 XXX
%2113:	store	 %2112 %2110
%2114:	br	 while.cond156

BASIC BLOCK while.end173
%2115:	sext	 %2066
%2116:	getelementptr	 %2064 %2115
%2117:	getelementptr	 %2116 XXX XXX
%2118:	load	 %2117
%2119:	zext	 %2118
%2120:	getelementptr	 d XXX XXX
%2121:	load	 %2120
%2122:	getelementptr	 %2121 %2119
%2123:	getelementptr	 %2122 XXX XXX
%2124:	load	 %2123
%2125:	bitcast	 %2124
%2126:	sext	 %2066
%2127:	getelementptr	 %2064 %2126
%2128:	getelementptr	 %2127 XXX XXX
%2129:	load	 %2128
%2130:	zext	 %2129
%2131:	getelementptr	 %1890 %2130
%2132:	load	 %2131
%2133:	sext	 %2132
%2134:	mul	 %2133 XXX
%2135:	call	 %2125 %2134 xrealloc_1
%2136:	bitcast	 %2135
%2137:	sext	 %2066
%2138:	getelementptr	 %2064 %2137
%2139:	getelementptr	 %2138 XXX XXX
%2140:	load	 %2139
%2141:	zext	 %2140
%2142:	getelementptr	 d XXX XXX
%2143:	load	 %2142
%2144:	getelementptr	 %2143 %2141
%2145:	getelementptr	 %2144 XXX XXX
%2146:	store	 %2136 %2145
%2147:	br	 if.end196

BASIC BLOCK if.end196
%2148:	sext	 %2066
%2149:	getelementptr	 %2064 %2148
%2150:	getelementptr	 %2149 XXX XXX
%2151:	load	 %2150
%2152:	zext	 %2151
%2153:	getelementptr	 d XXX XXX
%2154:	load	 %2153
%2155:	getelementptr	 %2154 %2152
%2156:	call	 %1844 %2155 copy
%2157:	br	 for.inc203

BASIC BLOCK for.inc203
%2158:	add	 %2066 XXX
%2159:	br	 for.cond135

BASIC BLOCK for.end205
%2160:	getelementptr	 %1924 XXX
%2161:	load	 %2160
%2162:	icmp	 %2161 XXX
%2163:	br	 %2162 if.else if.then207

BASIC BLOCK if.then207
%2164:	getelementptr	 %1923 XXX
%2165:	load	 %2164
%2166:	getelementptr	 %1923 XXX
%2167:	load	 %2166
%2168:	add	 %2167 %2165
%2169:	store	 %2168 %2166
%2170:	br	 if.end213

BASIC BLOCK if.else
%2171:	getelementptr	 %1923 XXX
%2172:	load	 %2171
%2173:	sext	 %2172
%2174:	getelementptr	 %1922 %2173
%2175:	br	 if.end213

BASIC BLOCK if.end213
%2176:	phi	 %1922 %2174
%2177:	getelementptr	 %1923 XXX
%2178:	getelementptr	 %1924 XXX
%2179:	load	 %2178
%2180:	icmp	 %2179 XXX
%2181:	br	 %2180 if.else221 if.then217

BASIC BLOCK if.then217
%2182:	getelementptr	 %1921 XXX
%2183:	load	 %2182
%2184:	getelementptr	 %1921 XXX
%2185:	load	 %2184
%2186:	add	 %2185 %2183
%2187:	store	 %2186 %2184
%2188:	br	 if.end242

BASIC BLOCK if.else221
%2189:	getelementptr	 %1921 XXX
%2190:	load	 %2189
%2191:	sext	 %2190
%2192:	getelementptr	 %1920 %2191
%2193:	getelementptr	 %1921 XXX
%2194:	load	 %2193
%2195:	sub	 %2194 XXX
%2196:	br	 for.cond227

BASIC BLOCK for.cond227
%2197:	phi	 %2195 %2208
%2198:	icmp	 %2197 XXX
%2199:	br	 %2198 for.end236 for.body230

BASIC BLOCK for.body230
%2200:	sext	 %2197
%2201:	getelementptr	 %2192 %2200
%2202:	sext	 %2197
%2203:	getelementptr	 %1920 %2202
%2204:	bitcast	 %2201
%2205:	bitcast	 %2203
%2206:	call	 %2204 %2205 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2207:	br	 for.inc235

BASIC BLOCK for.inc235
%2208:	add	 %2197 XXX
%2209:	br	 for.cond227

BASIC BLOCK for.end236
%2210:	getelementptr	 %1921 XXX
%2211:	load	 %2210
%2212:	sext	 %2211
%2213:	getelementptr	 %1920 %2212
%2214:	getelementptr	 %1921 XXX
%2215:	load	 %2214
%2216:	getelementptr	 %1921 XXX
%2217:	store	 %2215 %2216
%2218:	br	 if.end242

BASIC BLOCK if.end242
%2219:	phi	 %1920 %2213
%2220:	getelementptr	 %1921 XXX
%2221:	getelementptr	 %1924 XXX
%2222:	load	 %2221
%2223:	icmp	 %2222 XXX
%2224:	br	 %2223 land.end land.rhs

BASIC BLOCK land.rhs
%2225:	getelementptr	 %1924 XXX
%2226:	load	 %2225
%2227:	icmp	 %2226 XXX
%2228:	br	 land.end

BASIC BLOCK land.end
%2229:	phi	 XXX %2227
%2230:	zext	 %2229
%2231:	getelementptr	 %1924 XXX
%2232:	store	 %2230 %2231
%2233:	getelementptr	 %1924 XXX
%2234:	br	 sw.epilog

BASIC BLOCK sw.bb250
%2235:	getelementptr	 %1923 XXX
%2236:	load	 %2235
%2237:	getelementptr	 %1923 XXX
%2238:	load	 %2237
%2239:	add	 %2238 %2236
%2240:	store	 %2239 %2237
%2241:	getelementptr	 %1923 XXX
%2242:	getelementptr	 %1921 XXX
%2243:	load	 %2242
%2244:	getelementptr	 %1921 XXX
%2245:	load	 %2244
%2246:	add	 %2245 %2243
%2247:	store	 %2246 %2244
%2248:	getelementptr	 %1921 XXX
%2249:	getelementptr	 %1924 XXX
%2250:	load	 %2249
%2251:	icmp	 %2250 XXX
%2252:	br	 %2251 lor.rhs lor.end

BASIC BLOCK lor.rhs
%2253:	getelementptr	 %1924 XXX
%2254:	load	 %2253
%2255:	icmp	 %2254 XXX
%2256:	br	 lor.end

BASIC BLOCK lor.end
%2257:	phi	 XXX %2255
%2258:	zext	 %2257
%2259:	getelementptr	 %1924 XXX
%2260:	store	 %2258 %2259
%2261:	getelementptr	 %1924 XXX
%2262:	br	 sw.epilog

BASIC BLOCK sw.default
%2263:	sext	 %1919
%2264:	getelementptr	 d XXX XXX
%2265:	load	 %2264
%2266:	getelementptr	 %2265 %2263
%2267:	load	 %2266
%2268:	icmp	 %2267 XXX
%2269:	zext	 %2268
%2270:	getelementptr	 %1924 XXX
%2271:	store	 %2269 %1924
%2272:	getelementptr	 %1921 XXX
%2273:	store	 XXX %1921
%2274:	getelementptr	 %1923 XXX
%2275:	store	 XXX %1923
%2276:	getelementptr	 %1922 XXX
%2277:	getelementptr	 %1920 XXX
%2278:	getelementptr	 %2277 XXX XXX
%2279:	store	 %1919 %2278
%2280:	getelementptr	 %2276 XXX XXX
%2281:	store	 %1919 %2280
%2282:	getelementptr	 %2277 XXX XXX
%2283:	store	 XXX %2282
%2284:	getelementptr	 %2276 XXX XXX
%2285:	store	 XXX %2284
%2286:	sext	 %1919
%2287:	getelementptr	 %1890 %2286
%2288:	store	 XXX %2287
%2289:	sext	 %1919
%2290:	getelementptr	 %1890 %2289
%2291:	load	 %2290
%2292:	sext	 %2291
%2293:	mul	 %2292 XXX
%2294:	call	 %2293 xmalloc_1
%2295:	bitcast	 %2294
%2296:	sext	 %1919
%2297:	getelementptr	 d XXX XXX
%2298:	load	 %2297
%2299:	getelementptr	 %2298 %2296
%2300:	getelementptr	 %2299 XXX XXX
%2301:	store	 %2295 %2300
%2302:	br	 sw.epilog

BASIC BLOCK sw.epilog
%2303:	phi	 %2277 %1920 %2219 %1920 %1920
%2304:	phi	 %2272 %2248 %2220 %1921 %1937
%2305:	phi	 %2276 %1922 %2176 %1922 %1922
%2306:	phi	 %2274 %2241 %2177 %1923 %1939
%2307:	phi	 %2270 %2261 %2233 %1924 %1935
%2308:	br	 for.inc289

BASIC BLOCK for.inc289
%2309:	add	 %1919 XXX
%2310:	br	 for.cond43

BASIC BLOCK for.end291
%2311:	br	 for.cond292

BASIC BLOCK for.cond292
%2312:	phi	 XXX %2381
%2313:	getelementptr	 d XXX XXX
%2314:	load	 %2313
%2315:	icmp	 %2312 %2314
%2316:	br	 %2315 for.end344 for.body296

BASIC BLOCK for.body296
%2317:	sext	 %2312
%2318:	getelementptr	 d XXX XXX
%2319:	load	 %2318
%2320:	getelementptr	 %2319 %2317
%2321:	load	 %2320
%2322:	icmp	 %2321 XXX
%2323:	br	 %2322 lor.lhs.false if.then313

BASIC BLOCK lor.lhs.false
%2324:	sext	 %2312
%2325:	getelementptr	 d XXX XXX
%2326:	load	 %2325
%2327:	getelementptr	 %2326 %2324
%2328:	load	 %2327
%2329:	icmp	 %2328 XXX
%2330:	br	 %2329 lor.lhs.false307 if.then313

BASIC BLOCK lor.lhs.false307
%2331:	sext	 %2312
%2332:	getelementptr	 d XXX XXX
%2333:	load	 %2332
%2334:	getelementptr	 %2333 %2331
%2335:	load	 %2334
%2336:	icmp	 %2335 XXX
%2337:	br	 %2336 if.end341 if.then313

BASIC BLOCK if.then313
%2338:	sext	 %2312
%2339:	getelementptr	 d XXX XXX
%2340:	load	 %2339
%2341:	getelementptr	 %2340 %2338
%2342:	call	 %2341 %1844 copy
%2343:	call	 %1844 d epsclosure
%2344:	sext	 %2312
%2345:	getelementptr	 d XXX XXX
%2346:	load	 %2345
%2347:	getelementptr	 %2346 %2344
%2348:	getelementptr	 %2347 XXX XXX
%2349:	load	 %2348
%2350:	getelementptr	 %1844 XXX XXX
%2351:	load	 %2350
%2352:	icmp	 %2349 %2351
%2353:	br	 %2352 if.end337 if.then324

BASIC BLOCK if.then324
%2354:	sext	 %2312
%2355:	getelementptr	 d XXX XXX
%2356:	load	 %2355
%2357:	getelementptr	 %2356 %2354
%2358:	getelementptr	 %2357 XXX XXX
%2359:	load	 %2358
%2360:	bitcast	 %2359
%2361:	getelementptr	 %1844 XXX XXX
%2362:	load	 %2361
%2363:	sext	 %2362
%2364:	mul	 %2363 XXX
%2365:	call	 %2360 %2364 xrealloc_1
%2366:	bitcast	 %2365
%2367:	sext	 %2312
%2368:	getelementptr	 d XXX XXX
%2369:	load	 %2368
%2370:	getelementptr	 %2369 %2367
%2371:	getelementptr	 %2370 XXX XXX
%2372:	store	 %2366 %2371
%2373:	br	 if.end337

BASIC BLOCK if.end337
%2374:	sext	 %2312
%2375:	getelementptr	 d XXX XXX
%2376:	load	 %2375
%2377:	getelementptr	 %2376 %2374
%2378:	call	 %1844 %2377 copy
%2379:	br	 if.end341

BASIC BLOCK if.end341
%2380:	br	 for.inc342

BASIC BLOCK for.inc342
%2381:	add	 %2312 XXX
%2382:	br	 for.cond292

BASIC BLOCK for.end344
%2383:	getelementptr	 %1844 XXX XXX
%2384:	store	 XXX %2383
%2385:	br	 for.cond346

BASIC BLOCK for.cond346
%2386:	phi	 XXX %2397
%2387:	getelementptr	 %1923 XXX
%2388:	load	 %2387
%2389:	icmp	 %2386 %2388
%2390:	br	 %2389 for.end355 for.body350

BASIC BLOCK for.body350
%2391:	sext	 %2386
%2392:	getelementptr	 %1922 %2391
%2393:	bitcast	 %2392
%2394:	load	 %2393
%2395:	call	 %2394 %1844 insert
%2396:	br	 for.inc353

BASIC BLOCK for.inc353
%2397:	add	 %2386 XXX
%2398:	br	 for.cond346

BASIC BLOCK for.end355
%2399:	call	 %1844 d epsclosure
%2400:	br	 for.cond356

BASIC BLOCK for.cond356
%2401:	phi	 XXX %2425
%2402:	phi	 XXX %2427
%2403:	getelementptr	 %1844 XXX XXX
%2404:	load	 %2403
%2405:	icmp	 %2402 %2404
%2406:	br	 %2405 for.end376 for.body360

BASIC BLOCK for.body360
%2407:	sext	 %2402
%2408:	getelementptr	 %1844 XXX XXX
%2409:	load	 %2408
%2410:	getelementptr	 %2409 %2407
%2411:	getelementptr	 %2410 XXX XXX
%2412:	load	 %2411
%2413:	and	 %2412 XXX
%2414:	lshr	 %2413 XXX
%2415:	sext	 %2402
%2416:	getelementptr	 %1844 XXX XXX
%2417:	load	 %2416
%2418:	getelementptr	 %2417 %2415
%2419:	getelementptr	 %2418 XXX XXX
%2420:	load	 %2419
%2421:	and	 %2420 XXX
%2422:	icmp	 %2414 %2421
%2423:	br	 %2422 if.end373 if.then372

BASIC BLOCK if.then372
%2424:	br	 if.end373

BASIC BLOCK if.end373
%2425:	phi	 XXX %2401
%2426:	br	 for.inc374

BASIC BLOCK for.inc374
%2427:	add	 %2402 XXX
%2428:	br	 for.cond356

BASIC BLOCK for.end376
%2429:	getelementptr	 d XXX XXX
%2430:	store	 XXX %2429
%2431:	getelementptr	 d XXX XXX
%2432:	store	 XXX %2431
%2433:	getelementptr	 d XXX XXX
%2434:	load	 %2433
%2435:	sext	 %2434
%2436:	mul	 %2435 XXX
%2437:	call	 %2436 xmalloc_1
%2438:	bitcast	 %2437
%2439:	getelementptr	 d XXX XXX
%2440:	store	 %2438 %2439
%2441:	call	 d %1844 %2401 XXX state_index
%2442:	bitcast	 %1852
%2443:	call	 %2442 free
%2444:	bitcast	 %1858
%2445:	call	 %2444 free
%2446:	bitcast	 %1864
%2447:	call	 %2446 free
%2448:	bitcast	 %1874
%2449:	call	 %2448 free
%2450:	bitcast	 %1880
%2451:	call	 %2450 free
%2452:	bitcast	 %1890
%2453:	call	 %2452 free
%2454:	getelementptr	 %1844 XXX XXX
%2455:	load	 %2454
%2456:	bitcast	 %2455
%2457:	call	 %2456 free
%2458:	ret	

FUNCTION xmalloc_1

BASIC BLOCK entry
%2459:	call	 n malloc
%2460:	icmp	 %2459 XXX
%2461:	br	 %2460 if.then if.end

BASIC BLOCK if.then
%2462:	call	 XXX gettext
%2463:	call	 %2462 dfaerror
%2464:	br	 if.end

BASIC BLOCK if.end
%2465:	ret	 %2459

FUNCTION xcalloc

BASIC BLOCK entry
%2466:	call	 n s calloc
%2467:	icmp	 %2466 XXX
%2468:	br	 %2467 if.then if.end

BASIC BLOCK if.then
%2469:	call	 XXX gettext
%2470:	call	 %2469 dfaerror
%2471:	br	 if.end

BASIC BLOCK if.end
%2472:	ret	 %2466

FUNCTION merge

BASIC BLOCK entry
%2473:	getelementptr	 m XXX XXX
%2474:	store	 XXX %2473
%2475:	br	 while.cond

BASIC BLOCK while.cond
%2476:	phi	 XXX %2587
%2477:	phi	 XXX %2588
%2478:	getelementptr	 s1 XXX XXX
%2479:	load	 %2478
%2480:	icmp	 %2476 %2479
%2481:	br	 %2480 land.end land.rhs

BASIC BLOCK land.rhs
%2482:	getelementptr	 s2 XXX XXX
%2483:	load	 %2482
%2484:	icmp	 %2477 %2483
%2485:	br	 land.end

BASIC BLOCK land.end
%2486:	phi	 XXX %2484
%2487:	br	 %2486 while.end while.body

BASIC BLOCK while.body
%2488:	sext	 %2476
%2489:	getelementptr	 s1 XXX XXX
%2490:	load	 %2489
%2491:	getelementptr	 %2490 %2488
%2492:	getelementptr	 %2491 XXX XXX
%2493:	load	 %2492
%2494:	sext	 %2477
%2495:	getelementptr	 s2 XXX XXX
%2496:	load	 %2495
%2497:	getelementptr	 %2496 %2494
%2498:	getelementptr	 %2497 XXX XXX
%2499:	load	 %2498
%2500:	icmp	 %2493 %2499
%2501:	br	 %2500 if.else if.then

BASIC BLOCK if.then
%2502:	getelementptr	 m XXX XXX
%2503:	load	 %2502
%2504:	add	 %2503 XXX
%2505:	store	 %2504 %2502
%2506:	sext	 %2503
%2507:	getelementptr	 m XXX XXX
%2508:	load	 %2507
%2509:	getelementptr	 %2508 %2506
%2510:	add	 %2476 XXX
%2511:	sext	 %2476
%2512:	getelementptr	 s1 XXX XXX
%2513:	load	 %2512
%2514:	getelementptr	 %2513 %2511
%2515:	bitcast	 %2509
%2516:	bitcast	 %2514
%2517:	call	 %2515 %2516 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2518:	br	 if.end55

BASIC BLOCK if.else
%2519:	sext	 %2476
%2520:	getelementptr	 s1 XXX XXX
%2521:	load	 %2520
%2522:	getelementptr	 %2521 %2519
%2523:	getelementptr	 %2522 XXX XXX
%2524:	load	 %2523
%2525:	sext	 %2477
%2526:	getelementptr	 s2 XXX XXX
%2527:	load	 %2526
%2528:	getelementptr	 %2527 %2525
%2529:	getelementptr	 %2528 XXX XXX
%2530:	load	 %2529
%2531:	icmp	 %2524 %2530
%2532:	br	 %2531 if.else36 if.then26

BASIC BLOCK if.then26
%2533:	getelementptr	 m XXX XXX
%2534:	load	 %2533
%2535:	add	 %2534 XXX
%2536:	store	 %2535 %2533
%2537:	sext	 %2534
%2538:	getelementptr	 m XXX XXX
%2539:	load	 %2538
%2540:	getelementptr	 %2539 %2537
%2541:	add	 %2477 XXX
%2542:	sext	 %2477
%2543:	getelementptr	 s2 XXX XXX
%2544:	load	 %2543
%2545:	getelementptr	 %2544 %2542
%2546:	bitcast	 %2540
%2547:	bitcast	 %2545
%2548:	call	 %2546 %2547 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2549:	br	 if.end

BASIC BLOCK if.else36
%2550:	getelementptr	 m XXX XXX
%2551:	load	 %2550
%2552:	sext	 %2551
%2553:	getelementptr	 m XXX XXX
%2554:	load	 %2553
%2555:	getelementptr	 %2554 %2552
%2556:	add	 %2476 XXX
%2557:	sext	 %2476
%2558:	getelementptr	 s1 XXX XXX
%2559:	load	 %2558
%2560:	getelementptr	 %2559 %2557
%2561:	bitcast	 %2555
%2562:	bitcast	 %2560
%2563:	call	 %2561 %2562 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2564:	add	 %2477 XXX
%2565:	sext	 %2477
%2566:	getelementptr	 s2 XXX XXX
%2567:	load	 %2566
%2568:	getelementptr	 %2567 %2565
%2569:	getelementptr	 %2568 XXX XXX
%2570:	load	 %2569
%2571:	getelementptr	 m XXX XXX
%2572:	load	 %2571
%2573:	add	 %2572 XXX
%2574:	store	 %2573 %2571
%2575:	sext	 %2572
%2576:	getelementptr	 m XXX XXX
%2577:	load	 %2576
%2578:	getelementptr	 %2577 %2575
%2579:	getelementptr	 %2578 XXX XXX
%2580:	load	 %2579
%2581:	or	 %2580 %2570
%2582:	store	 %2581 %2579
%2583:	br	 if.end

BASIC BLOCK if.end
%2584:	phi	 %2476 %2556
%2585:	phi	 %2541 %2564
%2586:	br	 if.end55

BASIC BLOCK if.end55
%2587:	phi	 %2510 %2584
%2588:	phi	 %2477 %2585
%2589:	br	 while.cond

BASIC BLOCK while.end
%2590:	br	 while.cond56

BASIC BLOCK while.cond56
%2591:	phi	 %2476 %2604
%2592:	getelementptr	 s1 XXX XXX
%2593:	load	 %2592
%2594:	icmp	 %2591 %2593
%2595:	br	 %2594 while.end69 while.body59

BASIC BLOCK while.body59
%2596:	getelementptr	 m XXX XXX
%2597:	load	 %2596
%2598:	add	 %2597 XXX
%2599:	store	 %2598 %2596
%2600:	sext	 %2597
%2601:	getelementptr	 m XXX XXX
%2602:	load	 %2601
%2603:	getelementptr	 %2602 %2600
%2604:	add	 %2591 XXX
%2605:	sext	 %2591
%2606:	getelementptr	 s1 XXX XXX
%2607:	load	 %2606
%2608:	getelementptr	 %2607 %2605
%2609:	bitcast	 %2603
%2610:	bitcast	 %2608
%2611:	call	 %2609 %2610 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2612:	br	 while.cond56

BASIC BLOCK while.end69
%2613:	br	 while.cond70

BASIC BLOCK while.cond70
%2614:	phi	 %2477 %2627
%2615:	getelementptr	 s2 XXX XXX
%2616:	load	 %2615
%2617:	icmp	 %2614 %2616
%2618:	br	 %2617 while.end83 while.body73

BASIC BLOCK while.body73
%2619:	getelementptr	 m XXX XXX
%2620:	load	 %2619
%2621:	add	 %2620 XXX
%2622:	store	 %2621 %2619
%2623:	sext	 %2620
%2624:	getelementptr	 m XXX XXX
%2625:	load	 %2624
%2626:	getelementptr	 %2625 %2623
%2627:	add	 %2614 XXX
%2628:	sext	 %2614
%2629:	getelementptr	 s2 XXX XXX
%2630:	load	 %2629
%2631:	getelementptr	 %2630 %2628
%2632:	bitcast	 %2626
%2633:	bitcast	 %2631
%2634:	call	 %2632 %2633 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2635:	br	 while.cond70

BASIC BLOCK while.end83
%2636:	ret	

FUNCTION xrealloc_1

BASIC BLOCK entry
%2637:	call	 p n realloc
%2638:	icmp	 %2637 XXX
%2639:	br	 %2638 if.then if.end

BASIC BLOCK if.then
%2640:	call	 XXX gettext
%2641:	call	 %2640 dfaerror
%2642:	br	 if.end

BASIC BLOCK if.end
%2643:	ret	 %2637

FUNCTION copy

BASIC BLOCK entry
%2644:	br	 for.cond

BASIC BLOCK for.cond
%2645:	phi	 XXX %2662
%2646:	getelementptr	 src XXX XXX
%2647:	load	 %2646
%2648:	icmp	 %2645 %2647
%2649:	br	 %2648 for.end for.body

BASIC BLOCK for.body
%2650:	sext	 %2645
%2651:	getelementptr	 dst XXX XXX
%2652:	load	 %2651
%2653:	getelementptr	 %2652 %2650
%2654:	sext	 %2645
%2655:	getelementptr	 src XXX XXX
%2656:	load	 %2655
%2657:	getelementptr	 %2656 %2654
%2658:	bitcast	 %2653
%2659:	bitcast	 %2657
%2660:	call	 %2658 %2659 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2661:	br	 for.inc

BASIC BLOCK for.inc
%2662:	add	 %2645 XXX
%2663:	br	 for.cond

BASIC BLOCK for.end
%2664:	getelementptr	 src XXX XXX
%2665:	load	 %2664
%2666:	getelementptr	 dst XXX XXX
%2667:	store	 %2665 %2666
%2668:	ret	

FUNCTION epsclosure

BASIC BLOCK entry
%2669:	alloca	 XXX
%2670:	alloca	 XXX
%2671:	getelementptr	 d XXX XXX
%2672:	load	 %2671
%2673:	sext	 %2672
%2674:	mul	 %2673 XXX
%2675:	call	 %2674 xmalloc_1
%2676:	bitcast	 %2675
%2677:	br	 for.cond

BASIC BLOCK for.cond
%2678:	phi	 XXX %2687
%2679:	getelementptr	 d XXX XXX
%2680:	load	 %2679
%2681:	icmp	 %2678 %2680
%2682:	br	 %2681 for.end for.body

BASIC BLOCK for.body
%2683:	sext	 %2678
%2684:	getelementptr	 %2676 %2683
%2685:	store	 XXX %2684
%2686:	br	 for.inc

BASIC BLOCK for.inc
%2687:	add	 %2678 XXX
%2688:	br	 for.cond

BASIC BLOCK for.end
%2689:	br	 for.cond3

BASIC BLOCK for.cond3
%2690:	phi	 XXX %2841
%2691:	getelementptr	 s XXX XXX
%2692:	load	 %2691
%2693:	icmp	 %2690 %2692
%2694:	br	 %2693 for.end89 for.body6

BASIC BLOCK for.body6
%2695:	sext	 %2690
%2696:	getelementptr	 s XXX XXX
%2697:	load	 %2696
%2698:	getelementptr	 %2697 %2695
%2699:	getelementptr	 %2698 XXX XXX
%2700:	load	 %2699
%2701:	zext	 %2700
%2702:	getelementptr	 d XXX XXX
%2703:	load	 %2702
%2704:	getelementptr	 %2703 %2701
%2705:	load	 %2704
%2706:	icmp	 %2705 XXX
%2707:	br	 %2706 if.end86 land.lhs.true

BASIC BLOCK land.lhs.true
%2708:	sext	 %2690
%2709:	getelementptr	 s XXX XXX
%2710:	load	 %2709
%2711:	getelementptr	 %2710 %2708
%2712:	getelementptr	 %2711 XXX XXX
%2713:	load	 %2712
%2714:	zext	 %2713
%2715:	getelementptr	 d XXX XXX
%2716:	load	 %2715
%2717:	getelementptr	 %2716 %2714
%2718:	load	 %2717
%2719:	icmp	 %2718 XXX
%2720:	br	 %2719 if.end86 land.lhs.true22

BASIC BLOCK land.lhs.true22
%2721:	sext	 %2690
%2722:	getelementptr	 s XXX XXX
%2723:	load	 %2722
%2724:	getelementptr	 %2723 %2721
%2725:	getelementptr	 %2724 XXX XXX
%2726:	load	 %2725
%2727:	zext	 %2726
%2728:	getelementptr	 d XXX XXX
%2729:	load	 %2728
%2730:	getelementptr	 %2729 %2727
%2731:	load	 %2730
%2732:	icmp	 %2731 XXX
%2733:	br	 %2732 if.end86 if.then

BASIC BLOCK if.then
%2734:	sext	 %2690
%2735:	getelementptr	 s XXX XXX
%2736:	load	 %2735
%2737:	getelementptr	 %2736 %2734
%2738:	bitcast	 %2670
%2739:	bitcast	 %2737
%2740:	call	 %2738 %2739 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2741:	getelementptr	 %2670 XXX XXX
%2742:	load	 %2741
%2743:	getelementptr	 %2669 XXX XXX
%2744:	store	 %2742 %2743
%2745:	sext	 %2690
%2746:	getelementptr	 s XXX XXX
%2747:	load	 %2746
%2748:	getelementptr	 %2747 %2745
%2749:	bitcast	 %2748
%2750:	load	 %2749
%2751:	call	 %2750 s delete
%2752:	getelementptr	 %2670 XXX XXX
%2753:	load	 %2752
%2754:	zext	 %2753
%2755:	getelementptr	 %2676 %2754
%2756:	load	 %2755
%2757:	icmp	 %2756 XXX
%2758:	br	 %2757 if.end if.then42

BASIC BLOCK if.then42
%2759:	add	 %2690 XXX
%2760:	br	 for.inc87

BASIC BLOCK if.end
%2761:	getelementptr	 %2670 XXX XXX
%2762:	load	 %2761
%2763:	zext	 %2762
%2764:	getelementptr	 %2676 %2763
%2765:	store	 XXX %2764
%2766:	getelementptr	 %2670 XXX XXX
%2767:	load	 %2766
%2768:	zext	 %2767
%2769:	getelementptr	 d XXX XXX
%2770:	load	 %2769
%2771:	getelementptr	 %2770 %2768
%2772:	load	 %2771
%2773:	switch	 %2772 sw.default XXX sw.bb XXX sw.bb51 XXX sw.bb54 XXX sw.bb57 XXX sw.bb60 XXX sw.bb63

BASIC BLOCK sw.bb
%2774:	getelementptr	 %2669 XXX XXX
%2775:	load	 %2774
%2776:	and	 %2775 XXX
%2777:	store	 %2776 %2774
%2778:	br	 sw.epilog

BASIC BLOCK sw.bb51
%2779:	getelementptr	 %2669 XXX XXX
%2780:	load	 %2779
%2781:	and	 %2780 XXX
%2782:	store	 %2781 %2779
%2783:	br	 sw.epilog

BASIC BLOCK sw.bb54
%2784:	getelementptr	 %2669 XXX XXX
%2785:	load	 %2784
%2786:	and	 %2785 XXX
%2787:	store	 %2786 %2784
%2788:	br	 sw.epilog

BASIC BLOCK sw.bb57
%2789:	getelementptr	 %2669 XXX XXX
%2790:	load	 %2789
%2791:	and	 %2790 XXX
%2792:	store	 %2791 %2789
%2793:	br	 sw.epilog

BASIC BLOCK sw.bb60
%2794:	getelementptr	 %2669 XXX XXX
%2795:	load	 %2794
%2796:	and	 %2795 XXX
%2797:	store	 %2796 %2794
%2798:	br	 sw.epilog

BASIC BLOCK sw.bb63
%2799:	getelementptr	 %2669 XXX XXX
%2800:	load	 %2799
%2801:	and	 %2800 XXX
%2802:	store	 %2801 %2799
%2803:	br	 sw.epilog

BASIC BLOCK sw.default
%2804:	br	 sw.epilog

BASIC BLOCK sw.epilog
%2805:	br	 for.cond66

BASIC BLOCK for.cond66
%2806:	phi	 XXX %2835
%2807:	getelementptr	 %2670 XXX XXX
%2808:	load	 %2807
%2809:	zext	 %2808
%2810:	getelementptr	 d XXX XXX
%2811:	load	 %2810
%2812:	getelementptr	 %2811 %2809
%2813:	getelementptr	 %2812 XXX XXX
%2814:	load	 %2813
%2815:	icmp	 %2806 %2814
%2816:	br	 %2815 for.end85 for.body73

BASIC BLOCK for.body73
%2817:	sext	 %2806
%2818:	getelementptr	 %2670 XXX XXX
%2819:	load	 %2818
%2820:	zext	 %2819
%2821:	getelementptr	 d XXX XXX
%2822:	load	 %2821
%2823:	getelementptr	 %2822 %2820
%2824:	getelementptr	 %2823 XXX XXX
%2825:	load	 %2824
%2826:	getelementptr	 %2825 %2817
%2827:	getelementptr	 %2826 XXX XXX
%2828:	load	 %2827
%2829:	getelementptr	 %2669 XXX XXX
%2830:	store	 %2828 %2829
%2831:	bitcast	 %2669
%2832:	load	 %2831
%2833:	call	 %2832 s insert
%2834:	br	 for.inc83

BASIC BLOCK for.inc83
%2835:	add	 %2806 XXX
%2836:	br	 for.cond66

BASIC BLOCK for.end85
%2837:	br	 if.end86

BASIC BLOCK if.end86
%2838:	phi	 XXX %2690 %2690 %2690
%2839:	br	 for.inc87

BASIC BLOCK for.inc87
%2840:	phi	 %2759 %2838
%2841:	add	 %2840 XXX
%2842:	br	 for.cond3

BASIC BLOCK for.end89
%2843:	bitcast	 %2676
%2844:	call	 %2843 free
%2845:	ret	

FUNCTION insert

BASIC BLOCK entry
%2846:	alloca	 XXX
%2847:	alloca	 XXX
%2848:	alloca	 XXX
%2849:	bitcast	 %2846
%2850:	store	 p.coerce %2849
%2851:	br	 for.cond

BASIC BLOCK for.cond
%2852:	phi	 XXX %2870
%2853:	getelementptr	 s XXX XXX
%2854:	load	 %2853
%2855:	icmp	 %2852 %2854
%2856:	br	 %2855 land.end land.rhs

BASIC BLOCK land.rhs
%2857:	getelementptr	 %2846 XXX XXX
%2858:	load	 %2857
%2859:	sext	 %2852
%2860:	getelementptr	 s XXX XXX
%2861:	load	 %2860
%2862:	getelementptr	 %2861 %2859
%2863:	getelementptr	 %2862 XXX XXX
%2864:	load	 %2863
%2865:	icmp	 %2858 %2864
%2866:	br	 land.end

BASIC BLOCK land.end
%2867:	phi	 XXX %2865
%2868:	br	 %2867 for.end for.body

BASIC BLOCK for.body
%2869:	br	 for.inc

BASIC BLOCK for.inc
%2870:	add	 %2852 XXX
%2871:	br	 for.cond

BASIC BLOCK for.end
%2872:	getelementptr	 s XXX XXX
%2873:	load	 %2872
%2874:	icmp	 %2852 %2873
%2875:	br	 %2874 if.else land.lhs.true

BASIC BLOCK land.lhs.true
%2876:	getelementptr	 %2846 XXX XXX
%2877:	load	 %2876
%2878:	sext	 %2852
%2879:	getelementptr	 s XXX XXX
%2880:	load	 %2879
%2881:	getelementptr	 %2880 %2878
%2882:	getelementptr	 %2881 XXX XXX
%2883:	load	 %2882
%2884:	icmp	 %2877 %2883
%2885:	br	 %2884 if.else if.then

BASIC BLOCK if.then
%2886:	getelementptr	 %2846 XXX XXX
%2887:	load	 %2886
%2888:	sext	 %2852
%2889:	getelementptr	 s XXX XXX
%2890:	load	 %2889
%2891:	getelementptr	 %2890 %2888
%2892:	getelementptr	 %2891 XXX XXX
%2893:	load	 %2892
%2894:	or	 %2893 %2887
%2895:	store	 %2894 %2892
%2896:	br	 if.end

BASIC BLOCK if.else
%2897:	bitcast	 %2847
%2898:	bitcast	 %2846
%2899:	call	 %2897 %2898 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2900:	getelementptr	 s XXX XXX
%2901:	load	 %2900
%2902:	add	 %2901 XXX
%2903:	store	 %2902 %2900
%2904:	br	 while.cond

BASIC BLOCK while.cond
%2905:	phi	 %2852 %2917
%2906:	getelementptr	 s XXX XXX
%2907:	load	 %2906
%2908:	icmp	 %2905 %2907
%2909:	br	 %2908 while.end while.body

BASIC BLOCK while.body
%2910:	sext	 %2905
%2911:	getelementptr	 s XXX XXX
%2912:	load	 %2911
%2913:	getelementptr	 %2912 %2910
%2914:	bitcast	 %2848
%2915:	bitcast	 %2913
%2916:	call	 %2914 %2915 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2917:	add	 %2905 XXX
%2918:	sext	 %2905
%2919:	getelementptr	 s XXX XXX
%2920:	load	 %2919
%2921:	getelementptr	 %2920 %2918
%2922:	bitcast	 %2921
%2923:	bitcast	 %2847
%2924:	call	 %2922 %2923 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2925:	bitcast	 %2847
%2926:	bitcast	 %2848
%2927:	call	 %2925 %2926 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2928:	br	 while.cond

BASIC BLOCK while.end
%2929:	br	 if.end

BASIC BLOCK if.end
%2930:	ret	

FUNCTION state_index

BASIC BLOCK entry
%2931:	icmp	 newline XXX
%2932:	select	 %2931 XXX XXX
%2933:	icmp	 letter XXX
%2934:	select	 %2933 XXX XXX
%2935:	br	 for.cond

BASIC BLOCK for.cond
%2936:	phi	 XXX %2955
%2937:	phi	 XXX %2957
%2938:	getelementptr	 s XXX XXX
%2939:	load	 %2938
%2940:	icmp	 %2937 %2939
%2941:	br	 %2940 for.end for.body

BASIC BLOCK for.body
%2942:	sext	 %2937
%2943:	getelementptr	 s XXX XXX
%2944:	load	 %2943
%2945:	getelementptr	 %2944 %2942
%2946:	getelementptr	 %2945 XXX XXX
%2947:	load	 %2946
%2948:	sext	 %2937
%2949:	getelementptr	 s XXX XXX
%2950:	load	 %2949
%2951:	getelementptr	 %2950 %2948
%2952:	getelementptr	 %2951 XXX XXX
%2953:	load	 %2952
%2954:	add	 %2947 %2953
%2955:	xor	 %2936 %2954
%2956:	br	 for.inc

BASIC BLOCK for.inc
%2957:	add	 %2937 XXX
%2958:	br	 for.cond

BASIC BLOCK for.end
%2959:	br	 for.cond7

BASIC BLOCK for.cond7
%2960:	phi	 XXX %3057
%2961:	getelementptr	 d XXX XXX
%2962:	load	 %2961
%2963:	icmp	 %2960 %2962
%2964:	br	 %2963 for.end82 for.body9

BASIC BLOCK for.body9
%2965:	sext	 %2960
%2966:	getelementptr	 d XXX XXX
%2967:	load	 %2966
%2968:	getelementptr	 %2967 %2965
%2969:	getelementptr	 %2968 XXX XXX
%2970:	load	 %2969
%2971:	icmp	 %2936 %2970
%2972:	br	 %2971 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%2973:	getelementptr	 s XXX XXX
%2974:	load	 %2973
%2975:	sext	 %2960
%2976:	getelementptr	 d XXX XXX
%2977:	load	 %2976
%2978:	getelementptr	 %2977 %2975
%2979:	getelementptr	 %2978 XXX XXX
%2980:	getelementptr	 %2979 XXX XXX
%2981:	load	 %2980
%2982:	icmp	 %2974 %2981
%2983:	br	 %2982 lor.lhs.false21 if.then

BASIC BLOCK lor.lhs.false21
%2984:	sext	 %2960
%2985:	getelementptr	 d XXX XXX
%2986:	load	 %2985
%2987:	getelementptr	 %2986 %2984
%2988:	getelementptr	 %2987 XXX XXX
%2989:	load	 %2988
%2990:	sext	 %2989
%2991:	icmp	 %2932 %2990
%2992:	br	 %2991 lor.lhs.false28 if.then

BASIC BLOCK lor.lhs.false28
%2993:	sext	 %2960
%2994:	getelementptr	 d XXX XXX
%2995:	load	 %2994
%2996:	getelementptr	 %2995 %2993
%2997:	getelementptr	 %2996 XXX XXX
%2998:	load	 %2997
%2999:	sext	 %2998
%3000:	icmp	 %2934 %2999
%3001:	br	 %3000 if.end if.then

BASIC BLOCK if.then
%3002:	br	 for.inc80

BASIC BLOCK if.end
%3003:	br	 for.cond36

BASIC BLOCK for.cond36
%3004:	phi	 XXX %3049
%3005:	getelementptr	 s XXX XXX
%3006:	load	 %3005
%3007:	icmp	 %3004 %3006
%3008:	br	 %3007 for.end74 for.body40

BASIC BLOCK for.body40
%3009:	sext	 %3004
%3010:	getelementptr	 s XXX XXX
%3011:	load	 %3010
%3012:	getelementptr	 %3011 %3009
%3013:	getelementptr	 %3012 XXX XXX
%3014:	load	 %3013
%3015:	sext	 %3004
%3016:	sext	 %2960
%3017:	getelementptr	 d XXX XXX
%3018:	load	 %3017
%3019:	getelementptr	 %3018 %3016
%3020:	getelementptr	 %3019 XXX XXX
%3021:	getelementptr	 %3020 XXX XXX
%3022:	load	 %3021
%3023:	getelementptr	 %3022 %3015
%3024:	getelementptr	 %3023 XXX XXX
%3025:	load	 %3024
%3026:	icmp	 %3014 %3025
%3027:	br	 %3026 lor.lhs.false55 if.then70

BASIC BLOCK lor.lhs.false55
%3028:	sext	 %3004
%3029:	getelementptr	 s XXX XXX
%3030:	load	 %3029
%3031:	getelementptr	 %3030 %3028
%3032:	getelementptr	 %3031 XXX XXX
%3033:	load	 %3032
%3034:	sext	 %3004
%3035:	sext	 %2960
%3036:	getelementptr	 d XXX XXX
%3037:	load	 %3036
%3038:	getelementptr	 %3037 %3035
%3039:	getelementptr	 %3038 XXX XXX
%3040:	getelementptr	 %3039 XXX XXX
%3041:	load	 %3040
%3042:	getelementptr	 %3041 %3034
%3043:	getelementptr	 %3042 XXX XXX
%3044:	load	 %3043
%3045:	icmp	 %3033 %3044
%3046:	br	 %3045 if.end71 if.then70

BASIC BLOCK if.then70
%3047:	br	 for.end74

BASIC BLOCK if.end71
%3048:	br	 for.inc72

BASIC BLOCK for.inc72
%3049:	add	 %3004 XXX
%3050:	br	 for.cond36

BASIC BLOCK for.end74
%3051:	getelementptr	 s XXX XXX
%3052:	load	 %3051
%3053:	icmp	 %3004 %3052
%3054:	br	 %3053 if.end79 if.then78

BASIC BLOCK if.then78
%3055:	br	 return

BASIC BLOCK if.end79
%3056:	br	 for.inc80

BASIC BLOCK for.inc80
%3057:	add	 %2960 XXX
%3058:	br	 for.cond7

BASIC BLOCK for.end82
%3059:	getelementptr	 d XXX XXX
%3060:	load	 %3059
%3061:	getelementptr	 d XXX XXX
%3062:	load	 %3061
%3063:	icmp	 %3060 %3062
%3064:	br	 %3063 if.end97 if.then86

BASIC BLOCK if.then86
%3065:	br	 while.cond

BASIC BLOCK while.cond
%3066:	getelementptr	 d XXX XXX
%3067:	load	 %3066
%3068:	getelementptr	 d XXX XXX
%3069:	load	 %3068
%3070:	icmp	 %3067 %3069
%3071:	br	 %3070 while.end while.body

BASIC BLOCK while.body
%3072:	getelementptr	 d XXX XXX
%3073:	load	 %3072
%3074:	mul	 %3073 XXX
%3075:	store	 %3074 %3072
%3076:	br	 while.cond

BASIC BLOCK while.end
%3077:	getelementptr	 d XXX XXX
%3078:	load	 %3077
%3079:	bitcast	 %3078
%3080:	getelementptr	 d XXX XXX
%3081:	load	 %3080
%3082:	sext	 %3081
%3083:	mul	 %3082 XXX
%3084:	call	 %3079 %3083 xrealloc_1
%3085:	bitcast	 %3084
%3086:	getelementptr	 d XXX XXX
%3087:	store	 %3085 %3086
%3088:	br	 if.end97

BASIC BLOCK if.end97
%3089:	sext	 %2960
%3090:	getelementptr	 d XXX XXX
%3091:	load	 %3090
%3092:	getelementptr	 %3091 %3089
%3093:	getelementptr	 %3092 XXX XXX
%3094:	store	 %2936 %3093
%3095:	getelementptr	 s XXX XXX
%3096:	load	 %3095
%3097:	sext	 %3096
%3098:	mul	 %3097 XXX
%3099:	call	 %3098 xmalloc_1
%3100:	bitcast	 %3099
%3101:	sext	 %2960
%3102:	getelementptr	 d XXX XXX
%3103:	load	 %3102
%3104:	getelementptr	 %3103 %3101
%3105:	getelementptr	 %3104 XXX XXX
%3106:	getelementptr	 %3105 XXX XXX
%3107:	store	 %3100 %3106
%3108:	sext	 %2960
%3109:	getelementptr	 d XXX XXX
%3110:	load	 %3109
%3111:	getelementptr	 %3110 %3108
%3112:	getelementptr	 %3111 XXX XXX
%3113:	call	 s %3112 copy
%3114:	trunc	 %2932
%3115:	sext	 %2960
%3116:	getelementptr	 d XXX XXX
%3117:	load	 %3116
%3118:	getelementptr	 %3117 %3115
%3119:	getelementptr	 %3118 XXX XXX
%3120:	store	 %3114 %3119
%3121:	trunc	 %2934
%3122:	sext	 %2960
%3123:	getelementptr	 d XXX XXX
%3124:	load	 %3123
%3125:	getelementptr	 %3124 %3122
%3126:	getelementptr	 %3125 XXX XXX
%3127:	store	 %3121 %3126
%3128:	sext	 %2960
%3129:	getelementptr	 d XXX XXX
%3130:	load	 %3129
%3131:	getelementptr	 %3130 %3128
%3132:	getelementptr	 %3131 XXX XXX
%3133:	store	 XXX %3132
%3134:	sext	 %2960
%3135:	getelementptr	 d XXX XXX
%3136:	load	 %3135
%3137:	getelementptr	 %3136 %3134
%3138:	getelementptr	 %3137 XXX XXX
%3139:	store	 XXX %3138
%3140:	sext	 %2960
%3141:	getelementptr	 d XXX XXX
%3142:	load	 %3141
%3143:	getelementptr	 %3142 %3140
%3144:	getelementptr	 %3143 XXX XXX
%3145:	store	 XXX %3144
%3146:	br	 for.cond135

BASIC BLOCK for.cond135
%3147:	phi	 XXX %3297
%3148:	getelementptr	 s XXX XXX
%3149:	load	 %3148
%3150:	icmp	 %3147 %3149
%3151:	br	 %3150 for.end257 for.body139

BASIC BLOCK for.body139
%3152:	sext	 %3147
%3153:	getelementptr	 s XXX XXX
%3154:	load	 %3153
%3155:	getelementptr	 %3154 %3152
%3156:	getelementptr	 %3155 XXX XXX
%3157:	load	 %3156
%3158:	zext	 %3157
%3159:	getelementptr	 d XXX XXX
%3160:	load	 %3159
%3161:	getelementptr	 %3160 %3158
%3162:	load	 %3161
%3163:	icmp	 %3162 XXX
%3164:	br	 %3163 if.else if.then148

BASIC BLOCK if.then148
%3165:	sext	 %3147
%3166:	getelementptr	 s XXX XXX
%3167:	load	 %3166
%3168:	getelementptr	 %3167 %3165
%3169:	getelementptr	 %3168 XXX XXX
%3170:	load	 %3169
%3171:	icmp	 %2932 XXX
%3172:	select	 %3171 XXX XXX
%3173:	add	 %3172 XXX
%3174:	add	 %3173 XXX
%3175:	shl	 XXX %3174
%3176:	and	 %3170 %3175
%3177:	icmp	 %3176 XXX
%3178:	br	 %3177 lor.lhs.false164 land.lhs.true

BASIC BLOCK land.lhs.true
%3179:	icmp	 %2934 XXX
%3180:	select	 %3179 XXX XXX
%3181:	add	 %3180 XXX
%3182:	shl	 XXX %3181
%3183:	and	 %3170 %3182
%3184:	icmp	 %3183 XXX
%3185:	br	 %3184 lor.lhs.false164 if.then209

BASIC BLOCK lor.lhs.false164
%3186:	icmp	 %2932 XXX
%3187:	select	 %3186 XXX XXX
%3188:	add	 %3187 XXX
%3189:	add	 %3188 XXX
%3190:	shl	 XXX %3189
%3191:	and	 %3170 %3190
%3192:	icmp	 %3191 XXX
%3193:	br	 %3192 lor.lhs.false179 land.lhs.true172

BASIC BLOCK land.lhs.true172
%3194:	icmp	 %2934 XXX
%3195:	select	 %3194 XXX XXX
%3196:	add	 %3195 XXX
%3197:	shl	 XXX %3196
%3198:	and	 %3170 %3197
%3199:	icmp	 %3198 XXX
%3200:	br	 %3199 lor.lhs.false179 if.then209

BASIC BLOCK lor.lhs.false179
%3201:	icmp	 %2932 XXX
%3202:	select	 %3201 XXX XXX
%3203:	add	 %3202 XXX
%3204:	add	 %3203 XXX
%3205:	shl	 XXX %3204
%3206:	and	 %3170 %3205
%3207:	icmp	 %3206 XXX
%3208:	br	 %3207 lor.lhs.false194 land.lhs.true187

BASIC BLOCK land.lhs.true187
%3209:	icmp	 %2934 XXX
%3210:	select	 %3209 XXX XXX
%3211:	add	 %3210 XXX
%3212:	shl	 XXX %3211
%3213:	and	 %3170 %3212
%3214:	icmp	 %3213 XXX
%3215:	br	 %3214 lor.lhs.false194 if.then209

BASIC BLOCK lor.lhs.false194
%3216:	icmp	 %2932 XXX
%3217:	select	 %3216 XXX XXX
%3218:	add	 %3217 XXX
%3219:	add	 %3218 XXX
%3220:	shl	 XXX %3219
%3221:	and	 %3170 %3220
%3222:	icmp	 %3221 XXX
%3223:	br	 %3222 if.end216 land.lhs.true202

BASIC BLOCK land.lhs.true202
%3224:	icmp	 %2934 XXX
%3225:	select	 %3224 XXX XXX
%3226:	add	 %3225 XXX
%3227:	shl	 XXX %3226
%3228:	and	 %3170 %3227
%3229:	icmp	 %3228 XXX
%3230:	br	 %3229 if.end216 if.then209

BASIC BLOCK if.then209
%3231:	sext	 %2960
%3232:	getelementptr	 d XXX XXX
%3233:	load	 %3232
%3234:	getelementptr	 %3233 %3231
%3235:	getelementptr	 %3234 XXX XXX
%3236:	load	 %3235
%3237:	zext	 %3236
%3238:	or	 %3237 %3170
%3239:	trunc	 %3238
%3240:	store	 %3239 %3235
%3241:	br	 if.end216

BASIC BLOCK if.end216
%3242:	sext	 %2960
%3243:	getelementptr	 d XXX XXX
%3244:	load	 %3243
%3245:	getelementptr	 %3244 %3242
%3246:	getelementptr	 %3245 XXX XXX
%3247:	load	 %3246
%3248:	icmp	 %3247 XXX
%3249:	br	 %3248 if.then222 if.end234

BASIC BLOCK if.then222
%3250:	sext	 %3147
%3251:	getelementptr	 s XXX XXX
%3252:	load	 %3251
%3253:	getelementptr	 %3252 %3250
%3254:	getelementptr	 %3253 XXX XXX
%3255:	load	 %3254
%3256:	zext	 %3255
%3257:	getelementptr	 d XXX XXX
%3258:	load	 %3257
%3259:	getelementptr	 %3258 %3256
%3260:	load	 %3259
%3261:	sext	 %2960
%3262:	getelementptr	 d XXX XXX
%3263:	load	 %3262
%3264:	getelementptr	 %3263 %3261
%3265:	getelementptr	 %3264 XXX XXX
%3266:	store	 %3260 %3265
%3267:	br	 if.end234

BASIC BLOCK if.end234
%3268:	br	 if.end254

BASIC BLOCK if.else
%3269:	sext	 %3147
%3270:	getelementptr	 s XXX XXX
%3271:	load	 %3270
%3272:	getelementptr	 %3271 %3269
%3273:	getelementptr	 %3272 XXX XXX
%3274:	load	 %3273
%3275:	zext	 %3274
%3276:	getelementptr	 d XXX XXX
%3277:	load	 %3276
%3278:	getelementptr	 %3277 %3275
%3279:	load	 %3278
%3280:	icmp	 %3279 XXX
%3281:	br	 %3280 if.end253 if.then244

BASIC BLOCK if.then244
%3282:	sext	 %2960
%3283:	getelementptr	 d XXX XXX
%3284:	load	 %3283
%3285:	getelementptr	 %3284 %3282
%3286:	getelementptr	 %3285 XXX XXX
%3287:	store	 XXX %3286
%3288:	sext	 %2960
%3289:	getelementptr	 d XXX XXX
%3290:	load	 %3289
%3291:	getelementptr	 %3290 %3288
%3292:	getelementptr	 %3291 XXX XXX
%3293:	store	 XXX %3292
%3294:	br	 if.end253

BASIC BLOCK if.end253
%3295:	br	 if.end254

BASIC BLOCK if.end254
%3296:	br	 for.inc255

BASIC BLOCK for.inc255
%3297:	add	 %3147 XXX
%3298:	br	 for.cond135

BASIC BLOCK for.end257
%3299:	getelementptr	 d XXX XXX
%3300:	load	 %3299
%3301:	add	 %3300 XXX
%3302:	store	 %3301 %3299
%3303:	br	 return

BASIC BLOCK return
%3304:	ret	 %2960

FUNCTION dfastate

BASIC BLOCK entry
%3305:	alloca	 XXX
%3306:	alloca	 XXX
%3307:	alloca	 XXX
%3308:	alloca	 XXX
%3309:	alloca	 XXX
%3310:	alloca	 XXX
%3311:	alloca	 XXX
%3312:	alloca	 XXX
%3313:	load	 dfastate.initialized
%3314:	icmp	 %3313 XXX
%3315:	br	 %3314 if.then if.end13

BASIC BLOCK if.then
%3316:	store	 XXX dfastate.initialized
%3317:	br	 for.cond

BASIC BLOCK for.cond
%3318:	phi	 XXX %3335
%3319:	icmp	 %3318 XXX
%3320:	br	 %3319 for.end for.body

BASIC BLOCK for.body
%3321:	sext	 %3318
%3322:	call	 __ctype_b_loc
%3323:	load	 %3322
%3324:	getelementptr	 %3323 %3321
%3325:	load	 %3324
%3326:	zext	 %3325
%3327:	and	 %3326 XXX
%3328:	icmp	 %3327 XXX
%3329:	br	 %3328 lor.lhs.false if.then12

BASIC BLOCK lor.lhs.false
%3330:	icmp	 %3318 XXX
%3331:	br	 %3330 if.end if.then12

BASIC BLOCK if.then12
%3332:	call	 %3318 XXX setbit
%3333:	br	 if.end

BASIC BLOCK if.end
%3334:	br	 for.inc

BASIC BLOCK for.inc
%3335:	add	 %3318 XXX
%3336:	br	 for.cond

BASIC BLOCK for.end
%3337:	call	 XXX XXX setbit
%3338:	br	 if.end13

BASIC BLOCK if.end13
%3339:	getelementptr	 %3308 XXX XXX
%3340:	call	 %3339 zeroset
%3341:	br	 for.cond14

BASIC BLOCK for.cond14
%3342:	phi	 XXX %3761
%3343:	phi	 XXX %3762
%3344:	sext	 s
%3345:	getelementptr	 d XXX XXX
%3346:	load	 %3345
%3347:	getelementptr	 %3346 %3344
%3348:	getelementptr	 %3347 XXX XXX
%3349:	getelementptr	 %3348 XXX XXX
%3350:	load	 %3349
%3351:	icmp	 %3343 %3350
%3352:	br	 %3351 for.end321 for.body19

BASIC BLOCK for.body19
%3353:	sext	 %3343
%3354:	sext	 s
%3355:	getelementptr	 d XXX XXX
%3356:	load	 %3355
%3357:	getelementptr	 %3356 %3354
%3358:	getelementptr	 %3357 XXX XXX
%3359:	getelementptr	 %3358 XXX XXX
%3360:	load	 %3359
%3361:	getelementptr	 %3360 %3353
%3362:	bitcast	 %3307
%3363:	bitcast	 %3361
%3364:	call	 %3362 %3363 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%3365:	getelementptr	 %3307 XXX XXX
%3366:	load	 %3365
%3367:	zext	 %3366
%3368:	getelementptr	 d XXX XXX
%3369:	load	 %3368
%3370:	getelementptr	 %3369 %3367
%3371:	load	 %3370
%3372:	icmp	 %3371 XXX
%3373:	br	 %3372 if.else land.lhs.true

BASIC BLOCK land.lhs.true
%3374:	getelementptr	 %3307 XXX XXX
%3375:	load	 %3374
%3376:	zext	 %3375
%3377:	getelementptr	 d XXX XXX
%3378:	load	 %3377
%3379:	getelementptr	 %3378 %3376
%3380:	load	 %3379
%3381:	icmp	 %3380 XXX
%3382:	br	 %3381 if.else if.then37

BASIC BLOCK if.then37
%3383:	getelementptr	 %3307 XXX XXX
%3384:	load	 %3383
%3385:	zext	 %3384
%3386:	getelementptr	 d XXX XXX
%3387:	load	 %3386
%3388:	getelementptr	 %3387 %3385
%3389:	load	 %3388
%3390:	getelementptr	 %3308 XXX XXX
%3391:	call	 %3389 %3390 setbit
%3392:	br	 if.end60

BASIC BLOCK if.else
%3393:	getelementptr	 %3307 XXX XXX
%3394:	load	 %3393
%3395:	zext	 %3394
%3396:	getelementptr	 d XXX XXX
%3397:	load	 %3396
%3398:	getelementptr	 %3397 %3395
%3399:	load	 %3398
%3400:	icmp	 %3399 XXX
%3401:	br	 %3400 if.else58 if.then49

BASIC BLOCK if.then49
%3402:	getelementptr	 %3307 XXX XXX
%3403:	load	 %3402
%3404:	zext	 %3403
%3405:	getelementptr	 d XXX XXX
%3406:	load	 %3405
%3407:	getelementptr	 %3406 %3404
%3408:	load	 %3407
%3409:	sub	 %3408 XXX
%3410:	sext	 %3409
%3411:	getelementptr	 d XXX XXX
%3412:	load	 %3411
%3413:	getelementptr	 %3412 %3410
%3414:	getelementptr	 %3413 XXX XXX
%3415:	getelementptr	 %3308 XXX XXX
%3416:	call	 %3414 %3415 copyset
%3417:	br	 if.end59

BASIC BLOCK if.else58
%3418:	br	 for.inc319

BASIC BLOCK if.end59
%3419:	br	 if.end60

BASIC BLOCK if.end60
%3420:	getelementptr	 %3307 XXX XXX
%3421:	load	 %3420
%3422:	icmp	 %3421 XXX
%3423:	br	 %3422 if.end173 if.then63

BASIC BLOCK if.then63
%3424:	getelementptr	 %3307 XXX XXX
%3425:	load	 %3424
%3426:	sext	 s
%3427:	getelementptr	 d XXX XXX
%3428:	load	 %3427
%3429:	getelementptr	 %3428 %3426
%3430:	getelementptr	 %3429 XXX XXX
%3431:	load	 %3430
%3432:	sext	 %3431
%3433:	icmp	 %3432 XXX
%3434:	select	 %3433 XXX XXX
%3435:	add	 %3434 XXX
%3436:	add	 %3435 XXX
%3437:	shl	 XXX %3436
%3438:	and	 %3425 %3437
%3439:	icmp	 %3438 XXX
%3440:	br	 %3439 if.then73 if.end75

BASIC BLOCK if.then73
%3441:	getelementptr	 %3308 XXX XXX
%3442:	call	 XXX %3441 clrbit
%3443:	br	 if.end75

BASIC BLOCK if.end75
%3444:	getelementptr	 %3307 XXX XXX
%3445:	load	 %3444
%3446:	sext	 s
%3447:	getelementptr	 d XXX XXX
%3448:	load	 %3447
%3449:	getelementptr	 %3448 %3446
%3450:	getelementptr	 %3449 XXX XXX
%3451:	load	 %3450
%3452:	sext	 %3451
%3453:	icmp	 %3452 XXX
%3454:	select	 %3453 XXX XXX
%3455:	add	 %3454 XXX
%3456:	add	 %3455 XXX
%3457:	shl	 XXX %3456
%3458:	and	 %3445 %3457
%3459:	icmp	 %3458 XXX
%3460:	br	 %3459 if.then89 if.end103

BASIC BLOCK if.then89
%3461:	br	 for.cond90

BASIC BLOCK for.cond90
%3462:	phi	 XXX %3475
%3463:	sext	 %3462
%3464:	icmp	 %3463 XXX
%3465:	br	 %3464 for.end102 for.body94

BASIC BLOCK for.body94
%3466:	sext	 %3462
%3467:	getelementptr	 dfastate.newline XXX %3466
%3468:	load	 %3467
%3469:	sext	 %3462
%3470:	getelementptr	 %3308 XXX %3469
%3471:	load	 %3470
%3472:	and	 %3471 %3468
%3473:	store	 %3472 %3470
%3474:	br	 for.inc100

BASIC BLOCK for.inc100
%3475:	add	 %3462 XXX
%3476:	br	 for.cond90

BASIC BLOCK for.end102
%3477:	br	 if.end103

BASIC BLOCK if.end103
%3478:	getelementptr	 %3307 XXX XXX
%3479:	load	 %3478
%3480:	sext	 s
%3481:	getelementptr	 d XXX XXX
%3482:	load	 %3481
%3483:	getelementptr	 %3482 %3480
%3484:	getelementptr	 %3483 XXX XXX
%3485:	load	 %3484
%3486:	sext	 %3485
%3487:	icmp	 %3486 XXX
%3488:	select	 %3487 XXX XXX
%3489:	add	 %3488 XXX
%3490:	shl	 XXX %3489
%3491:	and	 %3479 %3490
%3492:	icmp	 %3491 XXX
%3493:	br	 %3492 if.then115 if.end129

BASIC BLOCK if.then115
%3494:	br	 for.cond116

BASIC BLOCK for.cond116
%3495:	phi	 XXX %3509
%3496:	sext	 %3495
%3497:	icmp	 %3496 XXX
%3498:	br	 %3497 for.end128 for.body120

BASIC BLOCK for.body120
%3499:	sext	 %3495
%3500:	getelementptr	 dfastate.letters XXX %3499
%3501:	load	 %3500
%3502:	xor	 %3501 XXX
%3503:	sext	 %3495
%3504:	getelementptr	 %3308 XXX %3503
%3505:	load	 %3504
%3506:	and	 %3505 %3502
%3507:	store	 %3506 %3504
%3508:	br	 for.inc126

BASIC BLOCK for.inc126
%3509:	add	 %3495 XXX
%3510:	br	 for.cond116

BASIC BLOCK for.end128
%3511:	br	 if.end129

BASIC BLOCK if.end129
%3512:	getelementptr	 %3307 XXX XXX
%3513:	load	 %3512
%3514:	sext	 s
%3515:	getelementptr	 d XXX XXX
%3516:	load	 %3515
%3517:	getelementptr	 %3516 %3514
%3518:	getelementptr	 %3517 XXX XXX
%3519:	load	 %3518
%3520:	sext	 %3519
%3521:	icmp	 %3520 XXX
%3522:	select	 %3521 XXX XXX
%3523:	add	 %3522 XXX
%3524:	shl	 XXX %3523
%3525:	and	 %3513 %3524
%3526:	icmp	 %3525 XXX
%3527:	br	 %3526 if.then142 if.end156

BASIC BLOCK if.then142
%3528:	br	 for.cond143

BASIC BLOCK for.cond143
%3529:	phi	 XXX %3542
%3530:	sext	 %3529
%3531:	icmp	 %3530 XXX
%3532:	br	 %3531 for.end155 for.body147

BASIC BLOCK for.body147
%3533:	sext	 %3529
%3534:	getelementptr	 dfastate.letters XXX %3533
%3535:	load	 %3534
%3536:	sext	 %3529
%3537:	getelementptr	 %3308 XXX %3536
%3538:	load	 %3537
%3539:	and	 %3538 %3535
%3540:	store	 %3539 %3537
%3541:	br	 for.inc153

BASIC BLOCK for.inc153
%3542:	add	 %3529 XXX
%3543:	br	 for.cond143

BASIC BLOCK for.end155
%3544:	br	 if.end156

BASIC BLOCK if.end156
%3545:	br	 for.cond157

BASIC BLOCK for.cond157
%3546:	phi	 XXX %3559
%3547:	sext	 %3546
%3548:	icmp	 %3547 XXX
%3549:	br	 %3548 land.end land.rhs

BASIC BLOCK land.rhs
%3550:	sext	 %3546
%3551:	getelementptr	 %3308 XXX %3550
%3552:	load	 %3551
%3553:	icmp	 %3552 XXX
%3554:	xor	 %3553 XXX
%3555:	br	 land.end

BASIC BLOCK land.end
%3556:	phi	 XXX %3554
%3557:	br	 %3556 for.end167 for.body164

BASIC BLOCK for.body164
%3558:	br	 for.inc165

BASIC BLOCK for.inc165
%3559:	add	 %3546 XXX
%3560:	br	 for.cond157

BASIC BLOCK for.end167
%3561:	sext	 %3546
%3562:	icmp	 %3561 XXX
%3563:	br	 %3562 if.end172 if.then171

BASIC BLOCK if.then171
%3564:	br	 for.inc319

BASIC BLOCK if.end172
%3565:	br	 if.end173

BASIC BLOCK if.end173
%3566:	br	 for.cond174

BASIC BLOCK for.cond174
%3567:	phi	 %3342 %3722
%3568:	phi	 XXX %3723
%3569:	icmp	 %3568 %3567
%3570:	br	 %3569 for.end294 for.body177

BASIC BLOCK for.body177
%3571:	getelementptr	 %3307 XXX XXX
%3572:	load	 %3571
%3573:	zext	 %3572
%3574:	getelementptr	 d XXX XXX
%3575:	load	 %3574
%3576:	getelementptr	 %3575 %3573
%3577:	load	 %3576
%3578:	icmp	 %3577 XXX
%3579:	br	 %3578 if.end202 land.lhs.true184

BASIC BLOCK land.lhs.true184
%3580:	getelementptr	 %3307 XXX XXX
%3581:	load	 %3580
%3582:	zext	 %3581
%3583:	getelementptr	 d XXX XXX
%3584:	load	 %3583
%3585:	getelementptr	 %3584 %3582
%3586:	load	 %3585
%3587:	icmp	 %3586 XXX
%3588:	br	 %3587 if.end202 land.lhs.true191

BASIC BLOCK land.lhs.true191
%3589:	getelementptr	 %3307 XXX XXX
%3590:	load	 %3589
%3591:	zext	 %3590
%3592:	getelementptr	 d XXX XXX
%3593:	load	 %3592
%3594:	getelementptr	 %3593 %3591
%3595:	load	 %3594
%3596:	sext	 %3568
%3597:	getelementptr	 %3306 XXX %3596
%3598:	getelementptr	 %3597 XXX XXX
%3599:	call	 %3595 %3598 tstbit
%3600:	icmp	 %3599 XXX
%3601:	br	 %3600 if.then201 if.end202

BASIC BLOCK if.then201
%3602:	br	 for.inc292

BASIC BLOCK if.end202
%3603:	br	 for.cond203

BASIC BLOCK for.cond203
%3604:	phi	 XXX %3625
%3605:	phi	 XXX %3628
%3606:	sext	 %3605
%3607:	icmp	 %3606 XXX
%3608:	br	 %3607 for.end221 for.body207

BASIC BLOCK for.body207
%3609:	sext	 %3605
%3610:	getelementptr	 %3308 XXX %3609
%3611:	load	 %3610
%3612:	sext	 %3605
%3613:	sext	 %3568
%3614:	getelementptr	 %3306 XXX %3613
%3615:	getelementptr	 %3614 XXX %3612
%3616:	load	 %3615
%3617:	and	 %3611 %3616
%3618:	sext	 %3605
%3619:	getelementptr	 %3309 XXX %3618
%3620:	store	 %3617 %3619
%3621:	icmp	 %3617 XXX
%3622:	br	 %3621 cond.false cond.true

BASIC BLOCK cond.true
%3623:	br	 cond.end

BASIC BLOCK cond.false
%3624:	br	 cond.end

BASIC BLOCK cond.end
%3625:	phi	 XXX %3604
%3626:	phi	 XXX XXX
%3627:	br	 for.inc219

BASIC BLOCK for.inc219
%3628:	add	 %3605 XXX
%3629:	br	 for.cond203

BASIC BLOCK for.end221
%3630:	icmp	 %3604 XXX
%3631:	br	 %3630 if.then223 if.end224

BASIC BLOCK if.then223
%3632:	br	 for.inc292

BASIC BLOCK if.end224
%3633:	br	 for.cond225

BASIC BLOCK for.cond225
%3634:	phi	 XXX %3657
%3635:	phi	 XXX %3668
%3636:	phi	 XXX %3671
%3637:	sext	 %3636
%3638:	icmp	 %3637 XXX
%3639:	br	 %3638 for.end258 for.body229

BASIC BLOCK for.body229
%3640:	sext	 %3636
%3641:	getelementptr	 %3308 XXX %3640
%3642:	load	 %3641
%3643:	sext	 %3636
%3644:	sext	 %3568
%3645:	getelementptr	 %3306 XXX %3644
%3646:	getelementptr	 %3645 XXX %3643
%3647:	load	 %3646
%3648:	xor	 %3642 XXX
%3649:	and	 %3648 %3647
%3650:	sext	 %3636
%3651:	getelementptr	 %3310 XXX %3650
%3652:	store	 %3649 %3651
%3653:	icmp	 %3649 XXX
%3654:	br	 %3653 cond.false244 cond.true243

BASIC BLOCK cond.true243
%3655:	br	 cond.end245

BASIC BLOCK cond.false244
%3656:	br	 cond.end245

BASIC BLOCK cond.end245
%3657:	phi	 XXX %3634
%3658:	phi	 XXX XXX
%3659:	xor	 %3647 XXX
%3660:	and	 %3642 %3659
%3661:	sext	 %3636
%3662:	getelementptr	 %3308 XXX %3661
%3663:	store	 %3660 %3662
%3664:	icmp	 %3660 XXX
%3665:	br	 %3664 cond.false253 cond.true252

BASIC BLOCK cond.true252
%3666:	br	 cond.end254

BASIC BLOCK cond.false253
%3667:	br	 cond.end254

BASIC BLOCK cond.end254
%3668:	phi	 XXX %3635
%3669:	phi	 XXX XXX
%3670:	br	 for.inc256

BASIC BLOCK for.inc256
%3671:	add	 %3636 XXX
%3672:	br	 for.cond225

BASIC BLOCK for.end258
%3673:	icmp	 %3634 XXX
%3674:	br	 %3673 if.end279 if.then260

BASIC BLOCK if.then260
%3675:	getelementptr	 %3310 XXX XXX
%3676:	sext	 %3567
%3677:	getelementptr	 %3306 XXX %3676
%3678:	getelementptr	 %3677 XXX XXX
%3679:	call	 %3675 %3678 copyset
%3680:	getelementptr	 %3309 XXX XXX
%3681:	sext	 %3568
%3682:	getelementptr	 %3306 XXX %3681
%3683:	getelementptr	 %3682 XXX XXX
%3684:	call	 %3680 %3683 copyset
%3685:	getelementptr	 d XXX XXX
%3686:	load	 %3685
%3687:	sext	 %3686
%3688:	mul	 %3687 XXX
%3689:	call	 %3688 xmalloc_1
%3690:	bitcast	 %3689
%3691:	sext	 %3567
%3692:	getelementptr	 %3305 XXX %3691
%3693:	getelementptr	 %3692 XXX XXX
%3694:	store	 %3690 %3693
%3695:	sext	 %3568
%3696:	getelementptr	 %3305 XXX %3695
%3697:	sext	 %3567
%3698:	getelementptr	 %3305 XXX %3697
%3699:	call	 %3696 %3698 copy
%3700:	add	 %3567 XXX
%3701:	br	 if.end279

BASIC BLOCK if.end279
%3702:	phi	 %3700 %3567
%3703:	sext	 %3568
%3704:	getelementptr	 %3305 XXX %3703
%3705:	getelementptr	 %3704 XXX XXX
%3706:	load	 %3705
%3707:	add	 %3706 XXX
%3708:	store	 %3707 %3705
%3709:	sext	 %3706
%3710:	sext	 %3568
%3711:	getelementptr	 %3305 XXX %3710
%3712:	getelementptr	 %3711 XXX XXX
%3713:	load	 %3712
%3714:	getelementptr	 %3713 %3709
%3715:	bitcast	 %3714
%3716:	bitcast	 %3307
%3717:	call	 %3715 %3716 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%3718:	icmp	 %3635 XXX
%3719:	br	 %3718 if.then290 if.end291

BASIC BLOCK if.then290
%3720:	br	 for.end294

BASIC BLOCK if.end291
%3721:	br	 for.inc292

BASIC BLOCK for.inc292
%3722:	phi	 %3702 %3567 %3567
%3723:	add	 %3568 XXX
%3724:	br	 for.cond174

BASIC BLOCK for.end294
%3725:	phi	 %3702 %3567
%3726:	icmp	 %3568 %3725
%3727:	br	 %3726 if.end318 if.then297

BASIC BLOCK if.then297
%3728:	getelementptr	 %3308 XXX XXX
%3729:	sext	 %3725
%3730:	getelementptr	 %3306 XXX %3729
%3731:	getelementptr	 %3730 XXX XXX
%3732:	call	 %3728 %3731 copyset
%3733:	getelementptr	 %3308 XXX XXX
%3734:	call	 %3733 zeroset
%3735:	getelementptr	 d XXX XXX
%3736:	load	 %3735
%3737:	sext	 %3736
%3738:	mul	 %3737 XXX
%3739:	call	 %3738 xmalloc_1
%3740:	bitcast	 %3739
%3741:	sext	 %3725
%3742:	getelementptr	 %3305 XXX %3741
%3743:	getelementptr	 %3742 XXX XXX
%3744:	store	 %3740 %3743
%3745:	sext	 %3725
%3746:	getelementptr	 %3305 XXX %3745
%3747:	getelementptr	 %3746 XXX XXX
%3748:	store	 XXX %3747
%3749:	sext	 %3725
%3750:	getelementptr	 %3305 XXX %3749
%3751:	getelementptr	 %3750 XXX XXX
%3752:	load	 %3751
%3753:	getelementptr	 %3752 XXX
%3754:	bitcast	 %3753
%3755:	bitcast	 %3307
%3756:	call	 %3754 %3755 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%3757:	add	 %3725 XXX
%3758:	br	 if.end318

BASIC BLOCK if.end318
%3759:	phi	 %3757 %3725
%3760:	br	 for.inc319

BASIC BLOCK for.inc319
%3761:	phi	 %3342 %3759 %3342
%3762:	add	 %3343 XXX
%3763:	br	 for.cond14

BASIC BLOCK for.end321
%3764:	getelementptr	 d XXX XXX
%3765:	load	 %3764
%3766:	sext	 %3765
%3767:	mul	 %3766 XXX
%3768:	call	 %3767 xmalloc_1
%3769:	bitcast	 %3768
%3770:	getelementptr	 %3311 XXX XXX
%3771:	store	 %3769 %3770
%3772:	getelementptr	 d XXX XXX
%3773:	load	 %3772
%3774:	sext	 %3773
%3775:	mul	 %3774 XXX
%3776:	call	 %3775 xmalloc_1
%3777:	bitcast	 %3776
%3778:	getelementptr	 %3312 XXX XXX
%3779:	store	 %3777 %3778
%3780:	getelementptr	 d XXX XXX
%3781:	load	 %3780
%3782:	icmp	 %3781 XXX
%3783:	br	 %3782 if.else423 if.then333

BASIC BLOCK if.then333
%3784:	br	 for.cond334

BASIC BLOCK for.cond334
%3785:	phi	 XXX %3849
%3786:	phi	 XXX %3822
%3787:	phi	 XXX %3851
%3788:	getelementptr	 d XXX XXX
%3789:	load	 %3788
%3790:	getelementptr	 %3789 XXX
%3791:	getelementptr	 %3790 XXX XXX
%3792:	getelementptr	 %3791 XXX XXX
%3793:	load	 %3792
%3794:	icmp	 %3787 %3793
%3795:	br	 %3794 for.end385 for.body341

BASIC BLOCK for.body341
%3796:	sext	 %3787
%3797:	getelementptr	 d XXX XXX
%3798:	load	 %3797
%3799:	getelementptr	 %3798 XXX
%3800:	getelementptr	 %3799 XXX XXX
%3801:	getelementptr	 %3800 XXX XXX
%3802:	load	 %3801
%3803:	getelementptr	 %3802 %3796
%3804:	getelementptr	 %3803 XXX XXX
%3805:	load	 %3804
%3806:	and	 %3805 XXX
%3807:	lshr	 %3806 XXX
%3808:	sext	 %3787
%3809:	getelementptr	 d XXX XXX
%3810:	load	 %3809
%3811:	getelementptr	 %3810 XXX
%3812:	getelementptr	 %3811 XXX XXX
%3813:	getelementptr	 %3812 XXX XXX
%3814:	load	 %3813
%3815:	getelementptr	 %3814 %3808
%3816:	getelementptr	 %3815 XXX XXX
%3817:	load	 %3816
%3818:	and	 %3817 XXX
%3819:	icmp	 %3807 %3818
%3820:	br	 %3819 if.end361 if.then360

BASIC BLOCK if.then360
%3821:	br	 if.end361

BASIC BLOCK if.end361
%3822:	phi	 XXX %3786
%3823:	sext	 %3787
%3824:	getelementptr	 d XXX XXX
%3825:	load	 %3824
%3826:	getelementptr	 %3825 XXX
%3827:	getelementptr	 %3826 XXX XXX
%3828:	getelementptr	 %3827 XXX XXX
%3829:	load	 %3828
%3830:	getelementptr	 %3829 %3823
%3831:	getelementptr	 %3830 XXX XXX
%3832:	load	 %3831
%3833:	and	 %3832 XXX
%3834:	lshr	 %3833 XXX
%3835:	sext	 %3787
%3836:	getelementptr	 d XXX XXX
%3837:	load	 %3836
%3838:	getelementptr	 %3837 XXX
%3839:	getelementptr	 %3838 XXX XXX
%3840:	getelementptr	 %3839 XXX XXX
%3841:	load	 %3840
%3842:	getelementptr	 %3841 %3835
%3843:	getelementptr	 %3842 XXX XXX
%3844:	load	 %3843
%3845:	and	 %3844 XXX
%3846:	icmp	 %3834 %3845
%3847:	br	 %3846 if.end382 if.then381

BASIC BLOCK if.then381
%3848:	br	 if.end382

BASIC BLOCK if.end382
%3849:	phi	 XXX %3785
%3850:	br	 for.inc383

BASIC BLOCK for.inc383
%3851:	add	 %3787 XXX
%3852:	br	 for.cond334

BASIC BLOCK for.end385
%3853:	getelementptr	 d XXX XXX
%3854:	load	 %3853
%3855:	getelementptr	 %3854 XXX
%3856:	getelementptr	 %3855 XXX XXX
%3857:	call	 %3856 %3311 copy
%3858:	call	 d %3311 XXX XXX state_index
%3859:	icmp	 %3786 XXX
%3860:	br	 %3859 if.else393 if.then391

BASIC BLOCK if.then391
%3861:	call	 d %3311 XXX XXX state_index
%3862:	br	 if.end394

BASIC BLOCK if.else393
%3863:	br	 if.end394

BASIC BLOCK if.end394
%3864:	phi	 %3861 %3858
%3865:	icmp	 %3785 XXX
%3866:	br	 %3865 if.else398 if.then396

BASIC BLOCK if.then396
%3867:	call	 d %3311 XXX XXX state_index
%3868:	br	 if.end399

BASIC BLOCK if.else398
%3869:	br	 if.end399

BASIC BLOCK if.end399
%3870:	phi	 %3867 %3858
%3871:	br	 for.cond400

BASIC BLOCK for.cond400
%3872:	phi	 XXX %3893
%3873:	icmp	 %3872 XXX
%3874:	br	 %3873 for.end421 for.body403

BASIC BLOCK for.body403
%3875:	sext	 %3872
%3876:	call	 __ctype_b_loc
%3877:	load	 %3876
%3878:	getelementptr	 %3877 %3875
%3879:	load	 %3878
%3880:	zext	 %3879
%3881:	and	 %3880 XXX
%3882:	icmp	 %3881 XXX
%3883:	br	 %3882 lor.lhs.false410 cond.true413

BASIC BLOCK lor.lhs.false410
%3884:	icmp	 %3872 XXX
%3885:	br	 %3884 cond.false414 cond.true413

BASIC BLOCK cond.true413
%3886:	br	 cond.end415

BASIC BLOCK cond.false414
%3887:	br	 cond.end415

BASIC BLOCK cond.end415
%3888:	phi	 %3870 %3858
%3889:	sext	 %3872
%3890:	getelementptr	 trans %3889
%3891:	store	 %3888 %3890
%3892:	br	 for.inc419

BASIC BLOCK for.inc419
%3893:	add	 %3872 XXX
%3894:	br	 for.cond400

BASIC BLOCK for.end421
%3895:	getelementptr	 trans XXX
%3896:	store	 %3864 %3895
%3897:	br	 if.end433

BASIC BLOCK if.else423
%3898:	br	 for.cond424

BASIC BLOCK for.cond424
%3899:	phi	 XXX %3906
%3900:	icmp	 %3899 XXX
%3901:	br	 %3900 for.end432 for.body427

BASIC BLOCK for.body427
%3902:	sext	 %3899
%3903:	getelementptr	 trans %3902
%3904:	store	 XXX %3903
%3905:	br	 for.inc430

BASIC BLOCK for.inc430
%3906:	add	 %3899 XXX
%3907:	br	 for.cond424

BASIC BLOCK for.end432
%3908:	br	 if.end433

BASIC BLOCK if.end433
%3909:	br	 for.cond434

BASIC BLOCK for.cond434
%3910:	phi	 XXX %4160
%3911:	icmp	 %3910 %3342
%3912:	br	 %3911 for.end646 for.body437

BASIC BLOCK for.body437
%3913:	getelementptr	 %3311 XXX XXX
%3914:	store	 XXX %3913
%3915:	br	 for.cond439

BASIC BLOCK for.cond439
%3916:	phi	 XXX %3964
%3917:	sext	 %3910
%3918:	getelementptr	 %3305 XXX %3917
%3919:	getelementptr	 %3918 XXX XXX
%3920:	load	 %3919
%3921:	icmp	 %3916 %3920
%3922:	br	 %3921 for.end477 for.body445

BASIC BLOCK for.body445
%3923:	br	 for.cond446

BASIC BLOCK for.cond446
%3924:	phi	 XXX %3961
%3925:	sext	 %3916
%3926:	sext	 %3910
%3927:	getelementptr	 %3305 XXX %3926
%3928:	getelementptr	 %3927 XXX XXX
%3929:	load	 %3928
%3930:	getelementptr	 %3929 %3925
%3931:	getelementptr	 %3930 XXX XXX
%3932:	load	 %3931
%3933:	zext	 %3932
%3934:	getelementptr	 d XXX XXX
%3935:	load	 %3934
%3936:	getelementptr	 %3935 %3933
%3937:	getelementptr	 %3936 XXX XXX
%3938:	load	 %3937
%3939:	icmp	 %3924 %3938
%3940:	br	 %3939 for.end474 for.body459

BASIC BLOCK for.body459
%3941:	sext	 %3924
%3942:	sext	 %3916
%3943:	sext	 %3910
%3944:	getelementptr	 %3305 XXX %3943
%3945:	getelementptr	 %3944 XXX XXX
%3946:	load	 %3945
%3947:	getelementptr	 %3946 %3942
%3948:	getelementptr	 %3947 XXX XXX
%3949:	load	 %3948
%3950:	zext	 %3949
%3951:	getelementptr	 d XXX XXX
%3952:	load	 %3951
%3953:	getelementptr	 %3952 %3950
%3954:	getelementptr	 %3953 XXX XXX
%3955:	load	 %3954
%3956:	getelementptr	 %3955 %3941
%3957:	bitcast	 %3956
%3958:	load	 %3957
%3959:	call	 %3958 %3311 insert
%3960:	br	 for.inc472

BASIC BLOCK for.inc472
%3961:	add	 %3924 XXX
%3962:	br	 for.cond446

BASIC BLOCK for.end474
%3963:	br	 for.inc475

BASIC BLOCK for.inc475
%3964:	add	 %3916 XXX
%3965:	br	 for.cond439

BASIC BLOCK for.end477
%3966:	getelementptr	 d XXX XXX
%3967:	load	 %3966
%3968:	icmp	 %3967 XXX
%3969:	br	 %3968 if.end498 if.then480

BASIC BLOCK if.then480
%3970:	br	 for.cond481

BASIC BLOCK for.cond481
%3971:	phi	 XXX %3992
%3972:	getelementptr	 d XXX XXX
%3973:	load	 %3972
%3974:	getelementptr	 %3973 XXX
%3975:	getelementptr	 %3974 XXX XXX
%3976:	getelementptr	 %3975 XXX XXX
%3977:	load	 %3976
%3978:	icmp	 %3971 %3977
%3979:	br	 %3978 for.end497 for.body488

BASIC BLOCK for.body488
%3980:	sext	 %3971
%3981:	getelementptr	 d XXX XXX
%3982:	load	 %3981
%3983:	getelementptr	 %3982 XXX
%3984:	getelementptr	 %3983 XXX XXX
%3985:	getelementptr	 %3984 XXX XXX
%3986:	load	 %3985
%3987:	getelementptr	 %3986 %3980
%3988:	bitcast	 %3987
%3989:	load	 %3988
%3990:	call	 %3989 %3311 insert
%3991:	br	 for.inc495

BASIC BLOCK for.inc495
%3992:	add	 %3971 XXX
%3993:	br	 for.cond481

BASIC BLOCK for.end497
%3994:	br	 if.end498

BASIC BLOCK if.end498
%3995:	sext	 %3910
%3996:	getelementptr	 %3306 XXX %3995
%3997:	getelementptr	 %3996 XXX XXX
%3998:	call	 XXX %3997 tstbit
%3999:	icmp	 %3998 XXX
%4000:	br	 %3999 if.end528 if.then504

BASIC BLOCK if.then504
%4001:	br	 for.cond505

BASIC BLOCK for.cond505
%4002:	phi	 XXX %4026
%4003:	phi	 XXX %4028
%4004:	getelementptr	 %3311 XXX XXX
%4005:	load	 %4004
%4006:	icmp	 %4003 %4005
%4007:	br	 %4006 for.end527 for.body509

BASIC BLOCK for.body509
%4008:	sext	 %4003
%4009:	getelementptr	 %3311 XXX XXX
%4010:	load	 %4009
%4011:	getelementptr	 %4010 %4008
%4012:	getelementptr	 %4011 XXX XXX
%4013:	load	 %4012
%4014:	and	 %4013 XXX
%4015:	lshr	 %4014 XXX
%4016:	sext	 %4003
%4017:	getelementptr	 %3311 XXX XXX
%4018:	load	 %4017
%4019:	getelementptr	 %4018 %4016
%4020:	getelementptr	 %4019 XXX XXX
%4021:	load	 %4020
%4022:	and	 %4021 XXX
%4023:	icmp	 %4015 %4022
%4024:	br	 %4023 if.end524 if.then523

BASIC BLOCK if.then523
%4025:	br	 if.end524

BASIC BLOCK if.end524
%4026:	phi	 XXX %4002
%4027:	br	 for.inc525

BASIC BLOCK for.inc525
%4028:	add	 %4003 XXX
%4029:	br	 for.cond505

BASIC BLOCK for.end527
%4030:	br	 if.end528

BASIC BLOCK if.end528
%4031:	phi	 %4002 XXX
%4032:	br	 for.cond529

BASIC BLOCK for.cond529
%4033:	phi	 XXX %4050
%4034:	sext	 %4033
%4035:	icmp	 %4034 XXX
%4036:	br	 %4035 for.end546 for.body533

BASIC BLOCK for.body533
%4037:	sext	 %4033
%4038:	sext	 %3910
%4039:	getelementptr	 %3306 XXX %4038
%4040:	getelementptr	 %4039 XXX %4037
%4041:	load	 %4040
%4042:	sext	 %4033
%4043:	getelementptr	 dfastate.letters XXX %4042
%4044:	load	 %4043
%4045:	and	 %4041 %4044
%4046:	icmp	 %4045 XXX
%4047:	br	 %4046 if.end543 if.then542

BASIC BLOCK if.then542
%4048:	br	 for.end546

BASIC BLOCK if.end543
%4049:	br	 for.inc544

BASIC BLOCK for.inc544
%4050:	add	 %4033 XXX
%4051:	br	 for.cond529

BASIC BLOCK for.end546
%4052:	sext	 %4033
%4053:	icmp	 %4052 XXX
%4054:	br	 %4053 if.end574 if.then550

BASIC BLOCK if.then550
%4055:	br	 for.cond551

BASIC BLOCK for.cond551
%4056:	phi	 XXX %4080
%4057:	phi	 XXX %4082
%4058:	getelementptr	 %3311 XXX XXX
%4059:	load	 %4058
%4060:	icmp	 %4057 %4059
%4061:	br	 %4060 for.end573 for.body555

BASIC BLOCK for.body555
%4062:	sext	 %4057
%4063:	getelementptr	 %3311 XXX XXX
%4064:	load	 %4063
%4065:	getelementptr	 %4064 %4062
%4066:	getelementptr	 %4065 XXX XXX
%4067:	load	 %4066
%4068:	and	 %4067 XXX
%4069:	lshr	 %4068 XXX
%4070:	sext	 %4057
%4071:	getelementptr	 %3311 XXX XXX
%4072:	load	 %4071
%4073:	getelementptr	 %4072 %4070
%4074:	getelementptr	 %4073 XXX XXX
%4075:	load	 %4074
%4076:	and	 %4075 XXX
%4077:	icmp	 %4069 %4076
%4078:	br	 %4077 if.end570 if.then569

BASIC BLOCK if.then569
%4079:	br	 if.end570

BASIC BLOCK if.end570
%4080:	phi	 XXX %4056
%4081:	br	 for.inc571

BASIC BLOCK for.inc571
%4082:	add	 %4057 XXX
%4083:	br	 for.cond551

BASIC BLOCK for.end573
%4084:	br	 if.end574

BASIC BLOCK if.end574
%4085:	phi	 %4056 XXX
%4086:	call	 d %3311 XXX XXX state_index
%4087:	icmp	 %4031 XXX
%4088:	br	 %4087 if.else579 if.then577

BASIC BLOCK if.then577
%4089:	call	 d %3311 XXX XXX state_index
%4090:	br	 if.end580

BASIC BLOCK if.else579
%4091:	br	 if.end580

BASIC BLOCK if.end580
%4092:	phi	 %4089 %4086
%4093:	icmp	 %4085 XXX
%4094:	br	 %4093 if.else584 if.then582

BASIC BLOCK if.then582
%4095:	call	 d %3311 XXX XXX state_index
%4096:	br	 if.end585

BASIC BLOCK if.else584
%4097:	br	 if.end585

BASIC BLOCK if.end585
%4098:	phi	 %4095 %4086
%4099:	br	 for.cond586

BASIC BLOCK for.cond586
%4100:	phi	 XXX %4157
%4101:	sext	 %4100
%4102:	icmp	 %4101 XXX
%4103:	br	 %4102 for.end643 for.body590

BASIC BLOCK for.body590
%4104:	br	 for.cond591

BASIC BLOCK for.cond591
%4105:	phi	 XXX %4154
%4106:	sext	 %4105
%4107:	icmp	 %4106 XXX
%4108:	br	 %4107 for.end640 for.body595

BASIC BLOCK for.body595
%4109:	sext	 %4100
%4110:	sext	 %3910
%4111:	getelementptr	 %3306 XXX %4110
%4112:	getelementptr	 %4111 XXX %4109
%4113:	load	 %4112
%4114:	shl	 XXX %4105
%4115:	and	 %4113 %4114
%4116:	icmp	 %4115 XXX
%4117:	br	 %4116 if.end637 if.then603

BASIC BLOCK if.then603
%4118:	sext	 %4100
%4119:	mul	 %4118 XXX
%4120:	sext	 %4105
%4121:	add	 %4119 %4120
%4122:	trunc	 %4121
%4123:	icmp	 %4122 XXX
%4124:	br	 %4123 if.else615 if.then612

BASIC BLOCK if.then612
%4125:	sext	 %4122
%4126:	getelementptr	 trans %4125
%4127:	store	 %4092 %4126
%4128:	br	 if.end636

BASIC BLOCK if.else615
%4129:	sext	 %4122
%4130:	call	 __ctype_b_loc
%4131:	load	 %4130
%4132:	getelementptr	 %4131 %4129
%4133:	load	 %4132
%4134:	zext	 %4133
%4135:	and	 %4134 XXX
%4136:	icmp	 %4135 XXX
%4137:	br	 %4136 lor.lhs.false622 if.then625

BASIC BLOCK lor.lhs.false622
%4138:	icmp	 %4122 XXX
%4139:	br	 %4138 if.else628 if.then625

BASIC BLOCK if.then625
%4140:	sext	 %4122
%4141:	getelementptr	 trans %4140
%4142:	store	 %4098 %4141
%4143:	br	 if.end635

BASIC BLOCK if.else628
%4144:	icmp	 %4122 XXX
%4145:	br	 %4144 if.end634 if.then631

BASIC BLOCK if.then631
%4146:	sext	 %4122
%4147:	getelementptr	 trans %4146
%4148:	store	 %4086 %4147
%4149:	br	 if.end634

BASIC BLOCK if.end634
%4150:	br	 if.end635

BASIC BLOCK if.end635
%4151:	br	 if.end636

BASIC BLOCK if.end636
%4152:	br	 if.end637

BASIC BLOCK if.end637
%4153:	br	 for.inc638

BASIC BLOCK for.inc638
%4154:	add	 %4105 XXX
%4155:	br	 for.cond591

BASIC BLOCK for.end640
%4156:	br	 for.inc641

BASIC BLOCK for.inc641
%4157:	add	 %4100 XXX
%4158:	br	 for.cond586

BASIC BLOCK for.end643
%4159:	br	 for.inc644

BASIC BLOCK for.inc644
%4160:	add	 %3910 XXX
%4161:	br	 for.cond434

BASIC BLOCK for.end646
%4162:	br	 for.cond647

BASIC BLOCK for.cond647
%4163:	phi	 XXX %4173
%4164:	icmp	 %4163 %3342
%4165:	br	 %4164 for.end656 for.body650

BASIC BLOCK for.body650
%4166:	sext	 %4163
%4167:	getelementptr	 %3305 XXX %4166
%4168:	getelementptr	 %4167 XXX XXX
%4169:	load	 %4168
%4170:	bitcast	 %4169
%4171:	call	 %4170 free
%4172:	br	 for.inc654

BASIC BLOCK for.inc654
%4173:	add	 %4163 XXX
%4174:	br	 for.cond647

BASIC BLOCK for.end656
%4175:	getelementptr	 %3311 XXX XXX
%4176:	load	 %4175
%4177:	bitcast	 %4176
%4178:	call	 %4177 free
%4179:	getelementptr	 %3312 XXX XXX
%4180:	load	 %4179
%4181:	bitcast	 %4180
%4182:	call	 %4181 free
%4183:	ret	

FUNCTION setbit

BASIC BLOCK entry
%4184:	sext	 b
%4185:	urem	 %4184 XXX
%4186:	trunc	 %4185
%4187:	shl	 XXX %4186
%4188:	sext	 b
%4189:	udiv	 %4188 XXX
%4190:	getelementptr	 c %4189
%4191:	load	 %4190
%4192:	or	 %4191 %4187
%4193:	store	 %4192 %4190
%4194:	ret	

FUNCTION zeroset

BASIC BLOCK entry
%4195:	br	 for.cond

BASIC BLOCK for.cond
%4196:	phi	 XXX %4204
%4197:	sext	 %4196
%4198:	icmp	 %4197 XXX
%4199:	br	 %4198 for.end for.body

BASIC BLOCK for.body
%4200:	sext	 %4196
%4201:	getelementptr	 s %4200
%4202:	store	 XXX %4201
%4203:	br	 for.inc

BASIC BLOCK for.inc
%4204:	add	 %4196 XXX
%4205:	br	 for.cond

BASIC BLOCK for.end
%4206:	ret	

FUNCTION copyset

BASIC BLOCK entry
%4207:	br	 for.cond

BASIC BLOCK for.cond
%4208:	phi	 XXX %4219
%4209:	sext	 %4208
%4210:	icmp	 %4209 XXX
%4211:	br	 %4210 for.end for.body

BASIC BLOCK for.body
%4212:	sext	 %4208
%4213:	getelementptr	 src %4212
%4214:	load	 %4213
%4215:	sext	 %4208
%4216:	getelementptr	 dst %4215
%4217:	store	 %4214 %4216
%4218:	br	 for.inc

BASIC BLOCK for.inc
%4219:	add	 %4208 XXX
%4220:	br	 for.cond

BASIC BLOCK for.end
%4221:	ret	

FUNCTION clrbit

BASIC BLOCK entry
%4222:	sext	 b
%4223:	urem	 %4222 XXX
%4224:	trunc	 %4223
%4225:	shl	 XXX %4224
%4226:	xor	 %4225 XXX
%4227:	sext	 b
%4228:	udiv	 %4227 XXX
%4229:	getelementptr	 c %4228
%4230:	load	 %4229
%4231:	and	 %4230 %4226
%4232:	store	 %4231 %4229
%4233:	ret	

FUNCTION tstbit

BASIC BLOCK entry
%4234:	sext	 b
%4235:	udiv	 %4234 XXX
%4236:	getelementptr	 c %4235
%4237:	load	 %4236
%4238:	sext	 b
%4239:	urem	 %4238 XXX
%4240:	trunc	 %4239
%4241:	shl	 XXX %4240
%4242:	and	 %4237 %4241
%4243:	ret	 %4242

FUNCTION dfaexec

BASIC BLOCK entry
%4244:	load	 dfaexec.sbit_init
%4245:	icmp	 %4244 XXX
%4246:	br	 %4245 if.then if.end

BASIC BLOCK if.then
%4247:	store	 XXX dfaexec.sbit_init
%4248:	br	 for.cond

BASIC BLOCK for.cond
%4249:	phi	 XXX %4269
%4250:	icmp	 %4249 XXX
%4251:	br	 %4250 for.end for.body

BASIC BLOCK for.body
%4252:	sext	 %4249
%4253:	call	 __ctype_b_loc
%4254:	load	 %4253
%4255:	getelementptr	 %4254 %4252
%4256:	load	 %4255
%4257:	zext	 %4256
%4258:	and	 %4257 XXX
%4259:	icmp	 %4258 XXX
%4260:	br	 %4259 lor.rhs lor.end

BASIC BLOCK lor.rhs
%4261:	icmp	 %4249 XXX
%4262:	br	 lor.end

BASIC BLOCK lor.end
%4263:	phi	 XXX %4261
%4264:	select	 %4263 XXX XXX
%4265:	sext	 %4249
%4266:	getelementptr	 dfaexec.sbit XXX %4265
%4267:	store	 %4264 %4266
%4268:	br	 for.inc

BASIC BLOCK for.inc
%4269:	add	 %4249 XXX
%4270:	br	 for.cond

BASIC BLOCK for.end
%4271:	store	 XXX XXX
%4272:	br	 if.end

BASIC BLOCK if.end
%4273:	getelementptr	 d XXX XXX
%4274:	load	 %4273
%4275:	icmp	 %4274 XXX
%4276:	br	 %4275 if.then11 if.end12

BASIC BLOCK if.then11
%4277:	call	 d build_state_zero
%4278:	br	 if.end12

BASIC BLOCK if.end12
%4279:	getelementptr	 d XXX XXX
%4280:	load	 %4279
%4281:	store	 XXX end
%4282:	br	 for.cond14

BASIC BLOCK for.cond14
%4283:	phi	 XXX %4362 %4313 %4397 XXX
%4284:	phi	 XXX %4313 %4314 %4314 %4314
%4285:	phi	 begin %4353 %4315 %4315 %4315
%4286:	phi	 %4280 %4286 %4384 %4286 %4286
%4287:	br	 while.cond

BASIC BLOCK while.cond
%4288:	phi	 %4283 %4311
%4289:	phi	 %4284 %4300
%4290:	phi	 %4285 %4307
%4291:	sext	 %4288
%4292:	getelementptr	 %4286 %4291
%4293:	load	 %4292
%4294:	icmp	 %4293 XXX
%4295:	br	 %4294 while.end while.body

BASIC BLOCK while.body
%4296:	getelementptr	 %4290 XXX
%4297:	load	 %4290
%4298:	zext	 %4297
%4299:	getelementptr	 %4293 %4298
%4300:	load	 %4299
%4301:	sext	 %4300
%4302:	getelementptr	 %4286 %4301
%4303:	load	 %4302
%4304:	icmp	 %4303 XXX
%4305:	br	 %4304 if.end26 if.then25

BASIC BLOCK if.then25
%4306:	br	 while.end

BASIC BLOCK if.end26
%4307:	getelementptr	 %4296 XXX
%4308:	load	 %4296
%4309:	zext	 %4308
%4310:	getelementptr	 %4303 %4309
%4311:	load	 %4310
%4312:	br	 while.cond

BASIC BLOCK while.end
%4313:	phi	 %4300 %4288
%4314:	phi	 %4288 %4289
%4315:	phi	 %4296 %4290
%4316:	icmp	 %4313 XXX
%4317:	br	 %4316 if.end62 land.lhs.true

BASIC BLOCK land.lhs.true
%4318:	icmp	 %4315 end
%4319:	br	 %4318 if.end62 land.lhs.true34

BASIC BLOCK land.lhs.true34
%4320:	sext	 %4313
%4321:	getelementptr	 d XXX XXX
%4322:	load	 %4321
%4323:	getelementptr	 %4322 %4320
%4324:	load	 %4323
%4325:	icmp	 %4324 XXX
%4326:	br	 %4325 if.end62 if.then38

BASIC BLOCK if.then38
%4327:	sext	 %4313
%4328:	getelementptr	 d XXX XXX
%4329:	load	 %4328
%4330:	getelementptr	 %4329 %4327
%4331:	load	 %4330
%4332:	load	 %4315
%4333:	zext	 %4332
%4334:	getelementptr	 dfaexec.sbit XXX %4333
%4335:	load	 %4334
%4336:	and	 %4331 %4335
%4337:	icmp	 %4336 XXX
%4338:	br	 %4337 if.end55 if.then45

BASIC BLOCK if.then45
%4339:	icmp	 backref XXX
%4340:	br	 %4339 if.end54 if.then47

BASIC BLOCK if.then47
%4341:	sext	 %4313
%4342:	getelementptr	 d XXX XXX
%4343:	load	 %4342
%4344:	getelementptr	 %4343 %4341
%4345:	getelementptr	 %4344 XXX XXX
%4346:	load	 %4345
%4347:	sext	 %4346
%4348:	icmp	 %4347 XXX
%4349:	zext	 %4348
%4350:	store	 %4349 backref
%4351:	br	 if.end54

BASIC BLOCK if.end54
%4352:	br	 return

BASIC BLOCK if.end55
%4353:	getelementptr	 %4315 XXX
%4354:	load	 %4315
%4355:	zext	 %4354
%4356:	sext	 %4313
%4357:	getelementptr	 d XXX XXX
%4358:	load	 %4357
%4359:	getelementptr	 %4358 %4356
%4360:	load	 %4359
%4361:	getelementptr	 %4360 %4355
%4362:	load	 %4361
%4363:	br	 for.cond14

BASIC BLOCK if.end62
%4364:	icmp	 count XXX
%4365:	br	 %4364 if.end74 land.lhs.true64

BASIC BLOCK land.lhs.true64
%4366:	icmp	 %4315 end
%4367:	br	 %4366 if.end74 land.lhs.true67

BASIC BLOCK land.lhs.true67
%4368:	getelementptr	 %4315 XXX
%4369:	load	 %4368
%4370:	zext	 %4369
%4371:	icmp	 %4370 XXX
%4372:	br	 %4371 if.end74 if.then72

BASIC BLOCK if.then72
%4373:	load	 count
%4374:	add	 %4373 XXX
%4375:	store	 %4374 count
%4376:	br	 if.end74

BASIC BLOCK if.end74
%4377:	icmp	 %4315 end
%4378:	br	 %4377 if.end78 if.then77

BASIC BLOCK if.then77
%4379:	br	 return

BASIC BLOCK if.end78
%4380:	icmp	 %4313 XXX
%4381:	br	 %4380 if.end83 if.then81

BASIC BLOCK if.then81
%4382:	call	 %4313 d build_state
%4383:	getelementptr	 d XXX XXX
%4384:	load	 %4383
%4385:	br	 for.cond14

BASIC BLOCK if.end83
%4386:	getelementptr	 %4315 XXX
%4387:	load	 %4386
%4388:	zext	 %4387
%4389:	icmp	 %4388 XXX
%4390:	br	 %4389 if.end93 land.lhs.true88

BASIC BLOCK land.lhs.true88
%4391:	icmp	 newline XXX
%4392:	br	 %4391 if.end93 if.then90

BASIC BLOCK if.then90
%4393:	sext	 %4314
%4394:	getelementptr	 d XXX XXX
%4395:	load	 %4394
%4396:	getelementptr	 %4395 %4393
%4397:	load	 %4396
%4398:	br	 for.cond14

BASIC BLOCK if.end93
%4399:	br	 for.cond14

BASIC BLOCK return
%4400:	phi	 %4315 XXX
%4401:	ret	 %4400

FUNCTION build_state_zero

BASIC BLOCK entry
%4402:	getelementptr	 d XXX XXX
%4403:	store	 XXX %4402
%4404:	getelementptr	 d XXX XXX
%4405:	store	 XXX %4404
%4406:	getelementptr	 d XXX XXX
%4407:	load	 %4406
%4408:	add	 %4407 XXX
%4409:	sext	 %4408
%4410:	call	 %4409 XXX xcalloc
%4411:	bitcast	 %4410
%4412:	getelementptr	 d XXX XXX
%4413:	store	 %4411 %4412
%4414:	getelementptr	 d XXX XXX
%4415:	load	 %4414
%4416:	getelementptr	 %4415 XXX
%4417:	getelementptr	 d XXX XXX
%4418:	store	 %4416 %4417
%4419:	getelementptr	 d XXX XXX
%4420:	load	 %4419
%4421:	sext	 %4420
%4422:	call	 %4421 XXX xcalloc
%4423:	bitcast	 %4422
%4424:	getelementptr	 d XXX XXX
%4425:	store	 %4423 %4424
%4426:	getelementptr	 d XXX XXX
%4427:	load	 %4426
%4428:	sext	 %4427
%4429:	mul	 %4428 XXX
%4430:	call	 %4429 xmalloc_1
%4431:	bitcast	 %4430
%4432:	getelementptr	 d XXX XXX
%4433:	store	 %4431 %4432
%4434:	getelementptr	 d XXX XXX
%4435:	load	 %4434
%4436:	sext	 %4435
%4437:	mul	 %4436 XXX
%4438:	call	 %4437 xmalloc_1
%4439:	bitcast	 %4438
%4440:	getelementptr	 d XXX XXX
%4441:	store	 %4439 %4440
%4442:	call	 XXX d build_state
%4443:	ret	

FUNCTION build_state

BASIC BLOCK entry
%4444:	getelementptr	 d XXX XXX
%4445:	load	 %4444
%4446:	icmp	 %4445 XXX
%4447:	br	 %4446 if.end22 if.then

BASIC BLOCK if.then
%4448:	br	 for.cond

BASIC BLOCK for.cond
%4449:	phi	 XXX %4496
%4450:	getelementptr	 d XXX XXX
%4451:	load	 %4450
%4452:	icmp	 %4449 %4451
%4453:	br	 %4452 for.end for.body

BASIC BLOCK for.body
%4454:	sext	 %4449
%4455:	getelementptr	 d XXX XXX
%4456:	load	 %4455
%4457:	getelementptr	 %4456 %4454
%4458:	load	 %4457
%4459:	icmp	 %4458 XXX
%4460:	br	 %4459 if.else if.then3

BASIC BLOCK if.then3
%4461:	sext	 %4449
%4462:	getelementptr	 d XXX XXX
%4463:	load	 %4462
%4464:	getelementptr	 %4463 %4461
%4465:	load	 %4464
%4466:	bitcast	 %4465
%4467:	call	 %4466 free
%4468:	sext	 %4449
%4469:	getelementptr	 d XXX XXX
%4470:	load	 %4469
%4471:	getelementptr	 %4470 %4468
%4472:	store	 XXX %4471
%4473:	br	 if.end20

BASIC BLOCK if.else
%4474:	sext	 %4449
%4475:	getelementptr	 d XXX XXX
%4476:	load	 %4475
%4477:	getelementptr	 %4476 %4474
%4478:	load	 %4477
%4479:	icmp	 %4478 XXX
%4480:	br	 %4479 if.end if.then13

BASIC BLOCK if.then13
%4481:	sext	 %4449
%4482:	getelementptr	 d XXX XXX
%4483:	load	 %4482
%4484:	getelementptr	 %4483 %4481
%4485:	load	 %4484
%4486:	bitcast	 %4485
%4487:	call	 %4486 free
%4488:	sext	 %4449
%4489:	getelementptr	 d XXX XXX
%4490:	load	 %4489
%4491:	getelementptr	 %4490 %4488
%4492:	store	 XXX %4491
%4493:	br	 if.end

BASIC BLOCK if.end
%4494:	br	 if.end20

BASIC BLOCK if.end20
%4495:	br	 for.inc

BASIC BLOCK for.inc
%4496:	add	 %4449 XXX
%4497:	br	 for.cond

BASIC BLOCK for.end
%4498:	getelementptr	 d XXX XXX
%4499:	store	 XXX %4498
%4500:	br	 if.end22

BASIC BLOCK if.end22
%4501:	getelementptr	 d XXX XXX
%4502:	load	 %4501
%4503:	add	 %4502 XXX
%4504:	store	 %4503 %4501
%4505:	sext	 s
%4506:	getelementptr	 d XXX XXX
%4507:	load	 %4506
%4508:	getelementptr	 %4507 %4505
%4509:	store	 XXX %4508
%4510:	sext	 s
%4511:	getelementptr	 d XXX XXX
%4512:	load	 %4511
%4513:	getelementptr	 %4512 %4510
%4514:	getelementptr	 %4513 XXX XXX
%4515:	load	 %4514
%4516:	zext	 %4515
%4517:	sext	 s
%4518:	getelementptr	 d XXX XXX
%4519:	load	 %4518
%4520:	getelementptr	 %4519 %4517
%4521:	getelementptr	 %4520 XXX XXX
%4522:	load	 %4521
%4523:	sext	 %4522
%4524:	icmp	 %4523 XXX
%4525:	select	 %4524 XXX XXX
%4526:	add	 %4525 XXX
%4527:	add	 %4526 XXX
%4528:	shl	 XXX %4527
%4529:	and	 %4516 %4528
%4530:	icmp	 %4529 XXX
%4531:	br	 %4530 if.end55 land.lhs.true

BASIC BLOCK land.lhs.true
%4532:	sext	 s
%4533:	getelementptr	 d XXX XXX
%4534:	load	 %4533
%4535:	getelementptr	 %4534 %4532
%4536:	getelementptr	 %4535 XXX XXX
%4537:	load	 %4536
%4538:	zext	 %4537
%4539:	sext	 s
%4540:	getelementptr	 d XXX XXX
%4541:	load	 %4540
%4542:	getelementptr	 %4541 %4539
%4543:	getelementptr	 %4542 XXX XXX
%4544:	load	 %4543
%4545:	sext	 %4544
%4546:	icmp	 %4545 XXX
%4547:	select	 %4546 XXX XXX
%4548:	add	 %4547 XXX
%4549:	shl	 XXX %4548
%4550:	and	 %4538 %4549
%4551:	icmp	 %4550 XXX
%4552:	br	 %4551 if.end55 if.then51

BASIC BLOCK if.then51
%4553:	sext	 s
%4554:	getelementptr	 d XXX XXX
%4555:	load	 %4554
%4556:	getelementptr	 %4555 %4553
%4557:	load	 %4556
%4558:	or	 %4557 XXX
%4559:	store	 %4558 %4556
%4560:	br	 if.end55

BASIC BLOCK if.end55
%4561:	sext	 s
%4562:	getelementptr	 d XXX XXX
%4563:	load	 %4562
%4564:	getelementptr	 %4563 %4561
%4565:	getelementptr	 %4564 XXX XXX
%4566:	load	 %4565
%4567:	zext	 %4566
%4568:	sext	 s
%4569:	getelementptr	 d XXX XXX
%4570:	load	 %4569
%4571:	getelementptr	 %4570 %4568
%4572:	getelementptr	 %4571 XXX XXX
%4573:	load	 %4572
%4574:	sext	 %4573
%4575:	icmp	 %4574 XXX
%4576:	select	 %4575 XXX XXX
%4577:	add	 %4576 XXX
%4578:	add	 %4577 XXX
%4579:	shl	 XXX %4578
%4580:	and	 %4567 %4579
%4581:	icmp	 %4580 XXX
%4582:	br	 %4581 if.end95 land.lhs.true73

BASIC BLOCK land.lhs.true73
%4583:	sext	 s
%4584:	getelementptr	 d XXX XXX
%4585:	load	 %4584
%4586:	getelementptr	 %4585 %4583
%4587:	getelementptr	 %4586 XXX XXX
%4588:	load	 %4587
%4589:	zext	 %4588
%4590:	sext	 s
%4591:	getelementptr	 d XXX XXX
%4592:	load	 %4591
%4593:	getelementptr	 %4592 %4590
%4594:	getelementptr	 %4593 XXX XXX
%4595:	load	 %4594
%4596:	sext	 %4595
%4597:	icmp	 %4596 XXX
%4598:	select	 %4597 XXX XXX
%4599:	add	 %4598 XXX
%4600:	shl	 XXX %4599
%4601:	and	 %4589 %4600
%4602:	icmp	 %4601 XXX
%4603:	br	 %4602 if.end95 if.then90

BASIC BLOCK if.then90
%4604:	sext	 s
%4605:	getelementptr	 d XXX XXX
%4606:	load	 %4605
%4607:	getelementptr	 %4606 %4604
%4608:	load	 %4607
%4609:	or	 %4608 XXX
%4610:	store	 %4609 %4607
%4611:	br	 if.end95

BASIC BLOCK if.end95
%4612:	sext	 s
%4613:	getelementptr	 d XXX XXX
%4614:	load	 %4613
%4615:	getelementptr	 %4614 %4612
%4616:	getelementptr	 %4615 XXX XXX
%4617:	load	 %4616
%4618:	zext	 %4617
%4619:	sext	 s
%4620:	getelementptr	 d XXX XXX
%4621:	load	 %4620
%4622:	getelementptr	 %4621 %4619
%4623:	getelementptr	 %4622 XXX XXX
%4624:	load	 %4623
%4625:	sext	 %4624
%4626:	icmp	 %4625 XXX
%4627:	select	 %4626 XXX XXX
%4628:	add	 %4627 XXX
%4629:	add	 %4628 XXX
%4630:	shl	 XXX %4629
%4631:	and	 %4618 %4630
%4632:	icmp	 %4631 XXX
%4633:	br	 %4632 if.end135 land.lhs.true113

BASIC BLOCK land.lhs.true113
%4634:	sext	 s
%4635:	getelementptr	 d XXX XXX
%4636:	load	 %4635
%4637:	getelementptr	 %4636 %4634
%4638:	getelementptr	 %4637 XXX XXX
%4639:	load	 %4638
%4640:	zext	 %4639
%4641:	sext	 s
%4642:	getelementptr	 d XXX XXX
%4643:	load	 %4642
%4644:	getelementptr	 %4643 %4641
%4645:	getelementptr	 %4644 XXX XXX
%4646:	load	 %4645
%4647:	sext	 %4646
%4648:	icmp	 %4647 XXX
%4649:	select	 %4648 XXX XXX
%4650:	add	 %4649 XXX
%4651:	shl	 XXX %4650
%4652:	and	 %4640 %4651
%4653:	icmp	 %4652 XXX
%4654:	br	 %4653 if.end135 if.then130

BASIC BLOCK if.then130
%4655:	sext	 s
%4656:	getelementptr	 d XXX XXX
%4657:	load	 %4656
%4658:	getelementptr	 %4657 %4655
%4659:	load	 %4658
%4660:	or	 %4659 XXX
%4661:	store	 %4660 %4658
%4662:	br	 if.end135

BASIC BLOCK if.end135
%4663:	call	 XXX xmalloc_1
%4664:	bitcast	 %4663
%4665:	call	 s d %4664 dfastate
%4666:	br	 for.cond136

BASIC BLOCK for.cond136
%4667:	phi	 XXX %4762
%4668:	icmp	 %4667 XXX
%4669:	br	 %4668 for.end194 for.body139

BASIC BLOCK for.body139
%4670:	sext	 %4667
%4671:	getelementptr	 %4664 %4670
%4672:	load	 %4671
%4673:	getelementptr	 d XXX XXX
%4674:	load	 %4673
%4675:	icmp	 %4672 %4674
%4676:	br	 %4675 if.end191 if.then145

BASIC BLOCK if.then145
%4677:	getelementptr	 d XXX XXX
%4678:	load	 %4677
%4679:	br	 while.cond

BASIC BLOCK while.cond
%4680:	sext	 %4667
%4681:	getelementptr	 %4664 %4680
%4682:	load	 %4681
%4683:	getelementptr	 d XXX XXX
%4684:	load	 %4683
%4685:	icmp	 %4682 %4684
%4686:	br	 %4685 while.end while.body

BASIC BLOCK while.body
%4687:	getelementptr	 d XXX XXX
%4688:	load	 %4687
%4689:	mul	 %4688 XXX
%4690:	store	 %4689 %4687
%4691:	br	 while.cond

BASIC BLOCK while.end
%4692:	getelementptr	 d XXX XXX
%4693:	load	 %4692
%4694:	bitcast	 %4693
%4695:	getelementptr	 d XXX XXX
%4696:	load	 %4695
%4697:	add	 %4696 XXX
%4698:	sext	 %4697
%4699:	mul	 %4698 XXX
%4700:	call	 %4694 %4699 xrealloc_1
%4701:	bitcast	 %4700
%4702:	getelementptr	 d XXX XXX
%4703:	store	 %4701 %4702
%4704:	getelementptr	 d XXX XXX
%4705:	load	 %4704
%4706:	getelementptr	 %4705 XXX
%4707:	getelementptr	 d XXX XXX
%4708:	store	 %4706 %4707
%4709:	getelementptr	 d XXX XXX
%4710:	load	 %4709
%4711:	bitcast	 %4710
%4712:	getelementptr	 d XXX XXX
%4713:	load	 %4712
%4714:	sext	 %4713
%4715:	mul	 %4714 XXX
%4716:	call	 %4711 %4715 xrealloc_1
%4717:	bitcast	 %4716
%4718:	getelementptr	 d XXX XXX
%4719:	store	 %4717 %4718
%4720:	getelementptr	 d XXX XXX
%4721:	load	 %4720
%4722:	bitcast	 %4721
%4723:	getelementptr	 d XXX XXX
%4724:	load	 %4723
%4725:	sext	 %4724
%4726:	mul	 %4725 XXX
%4727:	call	 %4722 %4726 xrealloc_1
%4728:	bitcast	 %4727
%4729:	getelementptr	 d XXX XXX
%4730:	store	 %4728 %4729
%4731:	getelementptr	 d XXX XXX
%4732:	load	 %4731
%4733:	bitcast	 %4732
%4734:	getelementptr	 d XXX XXX
%4735:	load	 %4734
%4736:	sext	 %4735
%4737:	mul	 %4736 XXX
%4738:	call	 %4733 %4737 xrealloc_1
%4739:	bitcast	 %4738
%4740:	getelementptr	 d XXX XXX
%4741:	store	 %4739 %4740
%4742:	br	 while.cond178

BASIC BLOCK while.cond178
%4743:	phi	 %4678 %4753
%4744:	getelementptr	 d XXX XXX
%4745:	load	 %4744
%4746:	icmp	 %4743 %4745
%4747:	br	 %4746 while.end190 while.body182

BASIC BLOCK while.body182
%4748:	sext	 %4743
%4749:	getelementptr	 d XXX XXX
%4750:	load	 %4749
%4751:	getelementptr	 %4750 %4748
%4752:	store	 XXX %4751
%4753:	add	 %4743 XXX
%4754:	sext	 %4743
%4755:	getelementptr	 d XXX XXX
%4756:	load	 %4755
%4757:	getelementptr	 %4756 %4754
%4758:	store	 XXX %4757
%4759:	br	 while.cond178

BASIC BLOCK while.end190
%4760:	br	 if.end191

BASIC BLOCK if.end191
%4761:	br	 for.inc192

BASIC BLOCK for.inc192
%4762:	add	 %4667 XXX
%4763:	br	 for.cond136

BASIC BLOCK for.end194
%4764:	getelementptr	 %4664 XXX
%4765:	load	 %4764
%4766:	sext	 s
%4767:	getelementptr	 d XXX XXX
%4768:	load	 %4767
%4769:	getelementptr	 %4768 %4766
%4770:	store	 %4765 %4769
%4771:	getelementptr	 %4664 XXX
%4772:	store	 XXX %4771
%4773:	sext	 s
%4774:	getelementptr	 d XXX XXX
%4775:	load	 %4774
%4776:	getelementptr	 %4775 %4773
%4777:	getelementptr	 %4776 XXX XXX
%4778:	load	 %4777
%4779:	icmp	 %4778 XXX
%4780:	br	 %4779 if.else209 if.then205

BASIC BLOCK if.then205
%4781:	sext	 s
%4782:	getelementptr	 d XXX XXX
%4783:	load	 %4782
%4784:	getelementptr	 %4783 %4781
%4785:	store	 %4664 %4784
%4786:	br	 if.end213

BASIC BLOCK if.else209
%4787:	sext	 s
%4788:	getelementptr	 d XXX XXX
%4789:	load	 %4788
%4790:	getelementptr	 %4789 %4787
%4791:	store	 %4664 %4790
%4792:	br	 if.end213

BASIC BLOCK if.end213
%4793:	ret	

FUNCTION dfainit

BASIC BLOCK entry
%4794:	getelementptr	 d XXX XXX
%4795:	store	 XXX %4794
%4796:	getelementptr	 d XXX XXX
%4797:	load	 %4796
%4798:	sext	 %4797
%4799:	mul	 %4798 XXX
%4800:	call	 %4799 xmalloc_1
%4801:	bitcast	 %4800
%4802:	getelementptr	 d XXX XXX
%4803:	store	 %4801 %4802
%4804:	getelementptr	 d XXX XXX
%4805:	store	 XXX %4804
%4806:	getelementptr	 d XXX XXX
%4807:	store	 XXX %4806
%4808:	getelementptr	 d XXX XXX
%4809:	load	 %4808
%4810:	sext	 %4809
%4811:	mul	 %4810 XXX
%4812:	call	 %4811 xmalloc_1
%4813:	bitcast	 %4812
%4814:	getelementptr	 d XXX XXX
%4815:	store	 %4813 %4814
%4816:	getelementptr	 d XXX XXX
%4817:	store	 XXX %4816
%4818:	getelementptr	 d XXX XXX
%4819:	store	 XXX %4818
%4820:	getelementptr	 d XXX XXX
%4821:	store	 XXX %4820
%4822:	getelementptr	 d XXX XXX
%4823:	store	 XXX %4822
%4824:	getelementptr	 d XXX XXX
%4825:	store	 XXX %4824
%4826:	getelementptr	 d XXX XXX
%4827:	store	 XXX %4826
%4828:	getelementptr	 d XXX XXX
%4829:	store	 XXX %4828
%4830:	ret	

FUNCTION dfacomp

BASIC BLOCK entry
%4831:	load	 case_fold
%4832:	icmp	 %4831 XXX
%4833:	br	 %4832 if.else24 if.then

BASIC BLOCK if.then
%4834:	call	 len malloc
%4835:	icmp	 %4834 XXX
%4836:	br	 %4835 if.then2 if.end

BASIC BLOCK if.then2
%4837:	call	 XXX gettext
%4838:	call	 %4837 dfaerror
%4839:	br	 if.end

BASIC BLOCK if.end
%4840:	store	 XXX case_fold
%4841:	br	 for.cond

BASIC BLOCK for.cond
%4842:	phi	 XXX %4877
%4843:	sext	 %4842
%4844:	icmp	 %4843 len
%4845:	br	 %4844 for.end for.body

BASIC BLOCK for.body
%4846:	sext	 %4842
%4847:	getelementptr	 s %4846
%4848:	load	 %4847
%4849:	sext	 %4848
%4850:	sext	 %4849
%4851:	call	 __ctype_b_loc
%4852:	load	 %4851
%4853:	getelementptr	 %4852 %4850
%4854:	load	 %4853
%4855:	zext	 %4854
%4856:	and	 %4855 XXX
%4857:	icmp	 %4856 XXX
%4858:	br	 %4857 if.else if.then11

BASIC BLOCK if.then11
%4859:	sext	 %4842
%4860:	getelementptr	 s %4859
%4861:	load	 %4860
%4862:	sext	 %4861
%4863:	call	 %4862 tolower
%4864:	trunc	 %4863
%4865:	sext	 %4842
%4866:	getelementptr	 %4834 %4865
%4867:	store	 %4864 %4866
%4868:	br	 if.end23

BASIC BLOCK if.else
%4869:	sext	 %4842
%4870:	getelementptr	 s %4869
%4871:	load	 %4870
%4872:	sext	 %4842
%4873:	getelementptr	 %4834 %4872
%4874:	store	 %4871 %4873
%4875:	br	 if.end23

BASIC BLOCK if.end23
%4876:	br	 for.inc

BASIC BLOCK for.inc
%4877:	add	 %4842 XXX
%4878:	br	 for.cond

BASIC BLOCK for.end
%4879:	call	 d dfainit
%4880:	call	 %4834 len d dfaparse
%4881:	call	 %4834 free
%4882:	call	 d dfamust
%4883:	getelementptr	 d XXX XXX
%4884:	store	 XXX %4883
%4885:	getelementptr	 d XXX XXX
%4886:	store	 XXX %4885
%4887:	getelementptr	 d XXX XXX
%4888:	store	 XXX %4887
%4889:	getelementptr	 d XXX XXX
%4890:	store	 XXX %4889
%4891:	getelementptr	 d XXX XXX
%4892:	store	 XXX %4891
%4893:	store	 XXX case_fold
%4894:	call	 s len d dfaparse
%4895:	call	 d searchflag dfaanalyze
%4896:	br	 if.end25

BASIC BLOCK if.else24
%4897:	call	 d dfainit
%4898:	call	 s len d dfaparse
%4899:	call	 d dfamust
%4900:	call	 d searchflag dfaanalyze
%4901:	br	 if.end25

BASIC BLOCK if.end25
%4902:	ret	

FUNCTION dfamust

BASIC BLOCK entry
%4903:	getelementptr	 dfa XXX XXX
%4904:	load	 %4903
%4905:	add	 %4904 XXX
%4906:	sext	 %4905
%4907:	mul	 %4906 XXX
%4908:	call	 %4907 malloc
%4909:	bitcast	 %4908
%4910:	icmp	 %4909 XXX
%4911:	br	 %4910 if.end if.then

BASIC BLOCK if.then
%4912:	br	 return

BASIC BLOCK if.end
%4913:	br	 for.cond

BASIC BLOCK for.cond
%4914:	phi	 XXX %4924
%4915:	getelementptr	 dfa XXX XXX
%4916:	load	 %4915
%4917:	icmp	 %4914 %4916
%4918:	br	 %4917 for.end for.body

BASIC BLOCK for.body
%4919:	sext	 %4914
%4920:	getelementptr	 %4909 %4919
%4921:	bitcast	 %4920
%4922:	call	 %4921 XXX XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%4923:	br	 for.inc

BASIC BLOCK for.inc
%4924:	add	 %4914 XXX
%4925:	br	 for.cond

BASIC BLOCK for.end
%4926:	br	 for.cond5

BASIC BLOCK for.cond5
%4927:	phi	 XXX %5003
%4928:	getelementptr	 dfa XXX XXX
%4929:	load	 %4928
%4930:	icmp	 %4927 %4929
%4931:	br	 %4930 for.end64 for.body9

BASIC BLOCK for.body9
%4932:	call	 XXX malloc
%4933:	bitcast	 %4932
%4934:	sext	 %4927
%4935:	getelementptr	 %4909 %4934
%4936:	getelementptr	 %4935 XXX XXX
%4937:	store	 %4933 %4936
%4938:	call	 XXX malloc
%4939:	sext	 %4927
%4940:	getelementptr	 %4909 %4939
%4941:	getelementptr	 %4940 XXX XXX
%4942:	store	 %4938 %4941
%4943:	call	 XXX malloc
%4944:	sext	 %4927
%4945:	getelementptr	 %4909 %4944
%4946:	getelementptr	 %4945 XXX XXX
%4947:	store	 %4943 %4946
%4948:	call	 XXX malloc
%4949:	sext	 %4927
%4950:	getelementptr	 %4909 %4949
%4951:	getelementptr	 %4950 XXX XXX
%4952:	store	 %4948 %4951
%4953:	sext	 %4927
%4954:	getelementptr	 %4909 %4953
%4955:	getelementptr	 %4954 XXX XXX
%4956:	load	 %4955
%4957:	icmp	 %4956 XXX
%4958:	br	 %4957 lor.lhs.false if.then44

BASIC BLOCK lor.lhs.false
%4959:	sext	 %4927
%4960:	getelementptr	 %4909 %4959
%4961:	getelementptr	 %4960 XXX XXX
%4962:	load	 %4961
%4963:	icmp	 %4962 XXX
%4964:	br	 %4963 lor.lhs.false32 if.then44

BASIC BLOCK lor.lhs.false32
%4965:	sext	 %4927
%4966:	getelementptr	 %4909 %4965
%4967:	getelementptr	 %4966 XXX XXX
%4968:	load	 %4967
%4969:	icmp	 %4968 XXX
%4970:	br	 %4969 lor.lhs.false38 if.then44

BASIC BLOCK lor.lhs.false38
%4971:	sext	 %4927
%4972:	getelementptr	 %4909 %4971
%4973:	getelementptr	 %4972 XXX XXX
%4974:	load	 %4973
%4975:	icmp	 %4974 XXX
%4976:	br	 %4975 if.end45 if.then44

BASIC BLOCK if.then44
%4977:	br	 done

BASIC BLOCK if.end45
%4978:	sext	 %4927
%4979:	getelementptr	 %4909 %4978
%4980:	getelementptr	 %4979 XXX XXX
%4981:	load	 %4980
%4982:	getelementptr	 %4981 XXX
%4983:	store	 XXX %4982
%4984:	sext	 %4927
%4985:	getelementptr	 %4909 %4984
%4986:	getelementptr	 %4985 XXX XXX
%4987:	load	 %4986
%4988:	getelementptr	 %4987 XXX
%4989:	store	 XXX %4988
%4990:	sext	 %4927
%4991:	getelementptr	 %4909 %4990
%4992:	getelementptr	 %4991 XXX XXX
%4993:	load	 %4992
%4994:	getelementptr	 %4993 XXX
%4995:	store	 XXX %4994
%4996:	sext	 %4927
%4997:	getelementptr	 %4909 %4996
%4998:	getelementptr	 %4997 XXX XXX
%4999:	load	 %4998
%5000:	getelementptr	 %4999 XXX
%5001:	store	 XXX %5000
%5002:	br	 for.inc62

BASIC BLOCK for.inc62
%5003:	add	 %4927 XXX
%5004:	br	 for.cond5

BASIC BLOCK for.end64
%5005:	br	 for.cond65

BASIC BLOCK for.cond65
%5006:	phi	 XXX %5401
%5007:	phi	 %4909 %5399
%5008:	getelementptr	 dfa XXX XXX
%5009:	load	 %5008
%5010:	icmp	 %5006 %5009
%5011:	br	 %5010 for.end371 for.body69

BASIC BLOCK for.body69
%5012:	sext	 %5006
%5013:	getelementptr	 dfa XXX XXX
%5014:	load	 %5013
%5015:	getelementptr	 %5014 %5012
%5016:	load	 %5015
%5017:	switch	 %5016 sw.default XXX sw.bb XXX sw.bb XXX sw.bb72 XXX sw.bb72 XXX sw.bb72 XXX sw.bb72 XXX sw.bb72 XXX sw.bb72 XXX sw.bb72 XXX sw.bb72 XXX sw.bb73 XXX sw.bb73 XXX sw.bb78 XXX sw.bb78 XXX sw.bb175 XXX sw.bb183 XXX sw.bb221

BASIC BLOCK sw.bb
%5018:	br	 done

BASIC BLOCK sw.bb72
%5019:	call	 %5007 resetmust
%5020:	br	 sw.epilog

BASIC BLOCK sw.bb73
%5021:	icmp	 %5007 %4909
%5022:	br	 %5021 if.end77 if.then76

BASIC BLOCK if.then76
%5023:	br	 done

BASIC BLOCK if.end77
%5024:	getelementptr	 %5007 XXX
%5025:	call	 %5024 resetmust
%5026:	br	 sw.epilog

BASIC BLOCK sw.bb78
%5027:	getelementptr	 %4909 XXX
%5028:	icmp	 %5007 %5027
%5029:	br	 %5028 if.end83 if.then82

BASIC BLOCK if.then82
%5030:	br	 done

BASIC BLOCK if.end83
%5031:	getelementptr	 %5007 XXX
%5032:	getelementptr	 %5031 XXX
%5033:	getelementptr	 %5032 XXX XXX
%5034:	load	 %5033
%5035:	getelementptr	 %5031 XXX XXX
%5036:	load	 %5035
%5037:	call	 %5034 %5036 strcmp
%5038:	icmp	 %5037 XXX
%5039:	br	 %5038 if.end94 if.then91

BASIC BLOCK if.then91
%5040:	getelementptr	 %5032 XXX XXX
%5041:	load	 %5040
%5042:	getelementptr	 %5041 XXX
%5043:	store	 XXX %5042
%5044:	br	 if.end94

BASIC BLOCK if.end94
%5045:	br	 while.cond

BASIC BLOCK while.cond
%5046:	phi	 XXX %5071
%5047:	sext	 %5046
%5048:	getelementptr	 %5032 XXX XXX
%5049:	load	 %5048
%5050:	getelementptr	 %5049 %5047
%5051:	load	 %5050
%5052:	sext	 %5051
%5053:	icmp	 %5052 XXX
%5054:	br	 %5053 land.end land.rhs

BASIC BLOCK land.rhs
%5055:	sext	 %5046
%5056:	getelementptr	 %5032 XXX XXX
%5057:	load	 %5056
%5058:	getelementptr	 %5057 %5055
%5059:	load	 %5058
%5060:	sext	 %5059
%5061:	sext	 %5046
%5062:	getelementptr	 %5031 XXX XXX
%5063:	load	 %5062
%5064:	getelementptr	 %5063 %5061
%5065:	load	 %5064
%5066:	sext	 %5065
%5067:	icmp	 %5060 %5066
%5068:	br	 land.end

BASIC BLOCK land.end
%5069:	phi	 XXX %5067
%5070:	br	 %5069 while.end while.body

BASIC BLOCK while.body
%5071:	add	 %5046 XXX
%5072:	br	 while.cond

BASIC BLOCK while.end
%5073:	sext	 %5046
%5074:	getelementptr	 %5032 XXX XXX
%5075:	load	 %5074
%5076:	getelementptr	 %5075 %5073
%5077:	store	 XXX %5076
%5078:	getelementptr	 %5032 XXX XXX
%5079:	load	 %5078
%5080:	call	 %5079 strlen
%5081:	trunc	 %5080
%5082:	getelementptr	 %5031 XXX XXX
%5083:	load	 %5082
%5084:	call	 %5083 strlen
%5085:	trunc	 %5084
%5086:	icmp	 %5081 %5085
%5087:	br	 %5086 if.end124 if.then123

BASIC BLOCK if.then123
%5088:	br	 if.end124

BASIC BLOCK if.end124
%5089:	phi	 %5085 %5081
%5090:	br	 for.cond125

BASIC BLOCK for.cond125
%5091:	phi	 XXX %5114
%5092:	icmp	 %5091 %5089
%5093:	br	 %5092 for.end146 for.body128

BASIC BLOCK for.body128
%5094:	sub	 %5081 %5091
%5095:	sub	 %5094 XXX
%5096:	sext	 %5095
%5097:	getelementptr	 %5032 XXX XXX
%5098:	load	 %5097
%5099:	getelementptr	 %5098 %5096
%5100:	load	 %5099
%5101:	sext	 %5100
%5102:	sub	 %5085 %5091
%5103:	sub	 %5102 XXX
%5104:	sext	 %5103
%5105:	getelementptr	 %5031 XXX XXX
%5106:	load	 %5105
%5107:	getelementptr	 %5106 %5104
%5108:	load	 %5107
%5109:	sext	 %5108
%5110:	icmp	 %5101 %5109
%5111:	br	 %5110 if.end143 if.then142

BASIC BLOCK if.then142
%5112:	br	 for.end146

BASIC BLOCK if.end143
%5113:	br	 for.inc144

BASIC BLOCK for.inc144
%5114:	add	 %5091 XXX
%5115:	br	 for.cond125

BASIC BLOCK for.end146
%5116:	br	 for.cond147

BASIC BLOCK for.cond147
%5117:	phi	 XXX %5133
%5118:	icmp	 %5117 %5091
%5119:	br	 %5118 for.end161 for.body150

BASIC BLOCK for.body150
%5120:	sub	 %5081 %5091
%5121:	add	 %5120 %5117
%5122:	sext	 %5121
%5123:	getelementptr	 %5032 XXX XXX
%5124:	load	 %5123
%5125:	getelementptr	 %5124 %5122
%5126:	load	 %5125
%5127:	sext	 %5117
%5128:	getelementptr	 %5032 XXX XXX
%5129:	load	 %5128
%5130:	getelementptr	 %5129 %5127
%5131:	store	 %5126 %5130
%5132:	br	 for.inc159

BASIC BLOCK for.inc159
%5133:	add	 %5117 XXX
%5134:	br	 for.cond147

BASIC BLOCK for.end161
%5135:	sext	 %5117
%5136:	getelementptr	 %5032 XXX XXX
%5137:	load	 %5136
%5138:	getelementptr	 %5137 %5135
%5139:	store	 XXX %5138
%5140:	getelementptr	 %5032 XXX XXX
%5141:	load	 %5140
%5142:	getelementptr	 %5031 XXX XXX
%5143:	load	 %5142
%5144:	call	 %5141 %5143 inboth
%5145:	icmp	 %5144 XXX
%5146:	br	 %5145 if.end171 if.then170

BASIC BLOCK if.then170
%5147:	br	 done

BASIC BLOCK if.end171
%5148:	getelementptr	 %5032 XXX XXX
%5149:	load	 %5148
%5150:	call	 %5149 freelist
%5151:	getelementptr	 %5032 XXX XXX
%5152:	load	 %5151
%5153:	bitcast	 %5152
%5154:	call	 %5153 free
%5155:	getelementptr	 %5032 XXX XXX
%5156:	store	 %5144 %5155
%5157:	br	 sw.epilog

BASIC BLOCK sw.bb175
%5158:	icmp	 %5007 %4909
%5159:	br	 %5158 if.end179 if.then178

BASIC BLOCK if.then178
%5160:	br	 done

BASIC BLOCK if.end179
%5161:	getelementptr	 %5007 XXX
%5162:	getelementptr	 %5161 XXX XXX
%5163:	load	 %5162
%5164:	getelementptr	 %5163 XXX
%5165:	store	 XXX %5164
%5166:	br	 sw.epilog

BASIC BLOCK sw.bb183
%5167:	getelementptr	 %4909 XXX
%5168:	icmp	 %5007 %5167
%5169:	br	 %5168 if.end188 if.then187

BASIC BLOCK if.then187
%5170:	br	 done

BASIC BLOCK if.end188
%5171:	br	 for.cond189

BASIC BLOCK for.cond189
%5172:	phi	 XXX %5201
%5173:	phi	 XXX %5199
%5174:	sext	 %5172
%5175:	getelementptr	 %4909 XXX
%5176:	getelementptr	 %5175 XXX XXX
%5177:	load	 %5176
%5178:	getelementptr	 %5177 %5174
%5179:	load	 %5178
%5180:	icmp	 %5179 XXX
%5181:	br	 %5180 for.end213 for.body196

BASIC BLOCK for.body196
%5182:	sext	 %5172
%5183:	getelementptr	 %4909 XXX
%5184:	getelementptr	 %5183 XXX XXX
%5185:	load	 %5184
%5186:	getelementptr	 %5185 %5182
%5187:	load	 %5186
%5188:	call	 %5187 strlen
%5189:	call	 %5173 strlen
%5190:	icmp	 %5188 %5189
%5191:	br	 %5190 if.end210 if.then205

BASIC BLOCK if.then205
%5192:	sext	 %5172
%5193:	getelementptr	 %4909 XXX
%5194:	getelementptr	 %5193 XXX XXX
%5195:	load	 %5194
%5196:	getelementptr	 %5195 %5192
%5197:	load	 %5196
%5198:	br	 if.end210

BASIC BLOCK if.end210
%5199:	phi	 %5197 %5173
%5200:	br	 for.inc211

BASIC BLOCK for.inc211
%5201:	add	 %5172 XXX
%5202:	br	 for.cond189

BASIC BLOCK for.end213
%5203:	getelementptr	 %4909 XXX
%5204:	getelementptr	 %5203 XXX XXX
%5205:	load	 %5204
%5206:	call	 %5173 %5205 strcmp
%5207:	icmp	 %5206 XXX
%5208:	br	 %5207 if.end220 if.then219

BASIC BLOCK if.then219
%5209:	br	 if.end220

BASIC BLOCK if.end220
%5210:	phi	 XXX XXX
%5211:	br	 done

BASIC BLOCK sw.bb221
%5212:	getelementptr	 %4909 XXX
%5213:	icmp	 %5007 %5212
%5214:	br	 %5213 if.end226 if.then225

BASIC BLOCK if.then225
%5215:	br	 done

BASIC BLOCK if.end226
%5216:	getelementptr	 %5007 XXX
%5217:	getelementptr	 %5216 XXX
%5218:	getelementptr	 %5217 XXX XXX
%5219:	load	 %5218
%5220:	getelementptr	 %5216 XXX XXX
%5221:	load	 %5220
%5222:	call	 %5219 %5221 addlists
%5223:	getelementptr	 %5217 XXX XXX
%5224:	store	 %5222 %5223
%5225:	getelementptr	 %5217 XXX XXX
%5226:	load	 %5225
%5227:	icmp	 %5226 XXX
%5228:	br	 %5227 if.end239 if.then238

BASIC BLOCK if.then238
%5229:	br	 done

BASIC BLOCK if.end239
%5230:	getelementptr	 %5217 XXX XXX
%5231:	load	 %5230
%5232:	getelementptr	 %5231 XXX
%5233:	load	 %5232
%5234:	sext	 %5233
%5235:	icmp	 %5234 XXX
%5236:	br	 %5235 if.end272 land.lhs.true

BASIC BLOCK land.lhs.true
%5237:	getelementptr	 %5216 XXX XXX
%5238:	load	 %5237
%5239:	getelementptr	 %5238 XXX
%5240:	load	 %5239
%5241:	sext	 %5240
%5242:	icmp	 %5241 XXX
%5243:	br	 %5242 if.end272 if.then250

BASIC BLOCK if.then250
%5244:	getelementptr	 %5217 XXX XXX
%5245:	load	 %5244
%5246:	call	 %5245 icpyalloc
%5247:	icmp	 %5246 XXX
%5248:	br	 %5247 if.end256 if.then255

BASIC BLOCK if.then255
%5249:	br	 done

BASIC BLOCK if.end256
%5250:	getelementptr	 %5216 XXX XXX
%5251:	load	 %5250
%5252:	call	 %5246 %5251 icatalloc
%5253:	icmp	 %5252 XXX
%5254:	br	 %5253 if.end262 if.then261

BASIC BLOCK if.then261
%5255:	br	 done

BASIC BLOCK if.end262
%5256:	getelementptr	 %5217 XXX XXX
%5257:	load	 %5256
%5258:	call	 %5252 strlen
%5259:	call	 %5257 %5252 %5258 enlist
%5260:	getelementptr	 %5217 XXX XXX
%5261:	store	 %5259 %5260
%5262:	call	 %5252 free
%5263:	getelementptr	 %5217 XXX XXX
%5264:	load	 %5263
%5265:	icmp	 %5264 XXX
%5266:	br	 %5265 if.end271 if.then270

BASIC BLOCK if.then270
%5267:	br	 done

BASIC BLOCK if.end271
%5268:	br	 if.end272

BASIC BLOCK if.end272
%5269:	getelementptr	 %5217 XXX XXX
%5270:	load	 %5269
%5271:	getelementptr	 %5270 XXX
%5272:	load	 %5271
%5273:	sext	 %5272
%5274:	icmp	 %5273 XXX
%5275:	br	 %5274 if.end288 if.then278

BASIC BLOCK if.then278
%5276:	getelementptr	 %5217 XXX XXX
%5277:	load	 %5276
%5278:	getelementptr	 %5216 XXX XXX
%5279:	load	 %5278
%5280:	call	 %5277 %5279 icatalloc
%5281:	getelementptr	 %5217 XXX XXX
%5282:	store	 %5280 %5281
%5283:	getelementptr	 %5217 XXX XXX
%5284:	load	 %5283
%5285:	icmp	 %5284 XXX
%5286:	br	 %5285 if.end287 if.then286

BASIC BLOCK if.then286
%5287:	br	 done

BASIC BLOCK if.end287
%5288:	br	 if.end288

BASIC BLOCK if.end288
%5289:	getelementptr	 %5216 XXX XXX
%5290:	load	 %5289
%5291:	getelementptr	 %5290 XXX
%5292:	load	 %5291
%5293:	sext	 %5292
%5294:	icmp	 %5293 XXX
%5295:	br	 %5294 if.end297 if.then294

BASIC BLOCK if.then294
%5296:	getelementptr	 %5217 XXX XXX
%5297:	load	 %5296
%5298:	getelementptr	 %5297 XXX
%5299:	store	 XXX %5298
%5300:	br	 if.end297

BASIC BLOCK if.end297
%5301:	getelementptr	 %5217 XXX XXX
%5302:	load	 %5301
%5303:	getelementptr	 %5216 XXX XXX
%5304:	load	 %5303
%5305:	call	 %5302 %5304 icatalloc
%5306:	getelementptr	 %5217 XXX XXX
%5307:	store	 %5305 %5306
%5308:	getelementptr	 %5217 XXX XXX
%5309:	load	 %5308
%5310:	icmp	 %5309 XXX
%5311:	br	 %5310 if.end306 if.then305

BASIC BLOCK if.then305
%5312:	br	 done

BASIC BLOCK if.end306
%5313:	getelementptr	 %5217 XXX XXX
%5314:	load	 %5313
%5315:	getelementptr	 %5314 XXX
%5316:	load	 %5315
%5317:	sext	 %5316
%5318:	icmp	 %5317 XXX
%5319:	br	 %5318 if.else land.lhs.true312

BASIC BLOCK land.lhs.true312
%5320:	getelementptr	 %5216 XXX XXX
%5321:	load	 %5320
%5322:	getelementptr	 %5321 XXX
%5323:	load	 %5322
%5324:	sext	 %5323
%5325:	icmp	 %5324 XXX
%5326:	br	 %5325 if.else if.then318

BASIC BLOCK if.then318
%5327:	getelementptr	 %5217 XXX XXX
%5328:	load	 %5327
%5329:	getelementptr	 %5216 XXX XXX
%5330:	load	 %5329
%5331:	call	 %5328 %5330 icatalloc
%5332:	getelementptr	 %5217 XXX XXX
%5333:	store	 %5331 %5332
%5334:	getelementptr	 %5217 XXX XXX
%5335:	load	 %5334
%5336:	icmp	 %5335 XXX
%5337:	br	 %5336 if.end327 if.then326

BASIC BLOCK if.then326
%5338:	br	 done

BASIC BLOCK if.end327
%5339:	br	 if.end330

BASIC BLOCK if.else
%5340:	getelementptr	 %5217 XXX XXX
%5341:	load	 %5340
%5342:	getelementptr	 %5341 XXX
%5343:	store	 XXX %5342
%5344:	br	 if.end330

BASIC BLOCK if.end330
%5345:	br	 sw.epilog

BASIC BLOCK sw.default
%5346:	icmp	 %5016 XXX
%5347:	br	 %5346 if.else334 if.then333

BASIC BLOCK if.then333
%5348:	br	 done

BASIC BLOCK if.else334
%5349:	icmp	 %5016 XXX
%5350:	br	 %5349 if.else338 if.then337

BASIC BLOCK if.then337
%5351:	br	 done

BASIC BLOCK if.else338
%5352:	icmp	 %5016 XXX
%5353:	br	 %5352 if.else342 if.then341

BASIC BLOCK if.then341
%5354:	call	 %5007 resetmust
%5355:	br	 if.end365

BASIC BLOCK if.else342
%5356:	call	 %5007 resetmust
%5357:	trunc	 %5016
%5358:	getelementptr	 %5007 XXX XXX
%5359:	load	 %5358
%5360:	getelementptr	 %5359 XXX
%5361:	store	 %5357 %5360
%5362:	getelementptr	 %5007 XXX XXX
%5363:	load	 %5362
%5364:	getelementptr	 %5363 XXX
%5365:	store	 %5357 %5364
%5366:	getelementptr	 %5007 XXX XXX
%5367:	load	 %5366
%5368:	getelementptr	 %5367 XXX
%5369:	store	 %5357 %5368
%5370:	getelementptr	 %5007 XXX XXX
%5371:	load	 %5370
%5372:	getelementptr	 %5371 XXX
%5373:	store	 XXX %5372
%5374:	getelementptr	 %5007 XXX XXX
%5375:	load	 %5374
%5376:	getelementptr	 %5375 XXX
%5377:	store	 XXX %5376
%5378:	getelementptr	 %5007 XXX XXX
%5379:	load	 %5378
%5380:	getelementptr	 %5379 XXX
%5381:	store	 XXX %5380
%5382:	getelementptr	 %5007 XXX XXX
%5383:	load	 %5382
%5384:	getelementptr	 %5007 XXX XXX
%5385:	load	 %5384
%5386:	call	 %5383 %5385 XXX enlist
%5387:	getelementptr	 %5007 XXX XXX
%5388:	store	 %5386 %5387
%5389:	getelementptr	 %5007 XXX XXX
%5390:	load	 %5389
%5391:	icmp	 %5390 XXX
%5392:	br	 %5391 if.end364 if.then363

BASIC BLOCK if.then363
%5393:	br	 done

BASIC BLOCK if.end364
%5394:	br	 if.end365

BASIC BLOCK if.end365
%5395:	br	 if.end366

BASIC BLOCK if.end366
%5396:	br	 if.end367

BASIC BLOCK if.end367
%5397:	br	 sw.epilog

BASIC BLOCK sw.epilog
%5398:	phi	 %5007 %5217 %5161 %5032 %5024 %5007
%5399:	getelementptr	 %5398 XXX
%5400:	br	 for.inc369

BASIC BLOCK for.inc369
%5401:	add	 %5006 XXX
%5402:	br	 for.cond65

BASIC BLOCK for.end371
%5403:	br	 done

BASIC BLOCK done
%5404:	phi	 XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX %5210 XXX XXX XXX XXX XXX XXX
%5405:	phi	 XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX %5173 XXX XXX XXX XXX XXX XXX
%5406:	call	 %5405 strlen
%5407:	icmp	 %5406 XXX
%5408:	br	 %5407 if.end383 if.then373

BASIC BLOCK if.then373
%5409:	call	 XXX malloc
%5410:	bitcast	 %5409
%5411:	getelementptr	 %5410 XXX XXX
%5412:	store	 %5404 %5411
%5413:	call	 %5405 strlen
%5414:	add	 %5413 XXX
%5415:	call	 %5414 malloc
%5416:	getelementptr	 %5410 XXX XXX
%5417:	store	 %5415 %5416
%5418:	getelementptr	 %5410 XXX XXX
%5419:	load	 %5418
%5420:	call	 %5419 %5405 strcpy
%5421:	getelementptr	 dfa XXX XXX
%5422:	load	 %5421
%5423:	getelementptr	 %5410 XXX XXX
%5424:	store	 %5422 %5423
%5425:	getelementptr	 dfa XXX XXX
%5426:	store	 %5410 %5425
%5427:	br	 if.end383

BASIC BLOCK if.end383
%5428:	br	 for.cond384

BASIC BLOCK for.cond384
%5429:	phi	 XXX %5461
%5430:	getelementptr	 dfa XXX XXX
%5431:	load	 %5430
%5432:	icmp	 %5429 %5431
%5433:	br	 %5432 for.end406 for.body388

BASIC BLOCK for.body388
%5434:	sext	 %5429
%5435:	getelementptr	 %4909 %5434
%5436:	getelementptr	 %5435 XXX XXX
%5437:	load	 %5436
%5438:	call	 %5437 freelist
%5439:	sext	 %5429
%5440:	getelementptr	 %4909 %5439
%5441:	getelementptr	 %5440 XXX XXX
%5442:	load	 %5441
%5443:	bitcast	 %5442
%5444:	call	 %5443 ifree
%5445:	sext	 %5429
%5446:	getelementptr	 %4909 %5445
%5447:	getelementptr	 %5446 XXX XXX
%5448:	load	 %5447
%5449:	call	 %5448 ifree
%5450:	sext	 %5429
%5451:	getelementptr	 %4909 %5450
%5452:	getelementptr	 %5451 XXX XXX
%5453:	load	 %5452
%5454:	call	 %5453 ifree
%5455:	sext	 %5429
%5456:	getelementptr	 %4909 %5455
%5457:	getelementptr	 %5456 XXX XXX
%5458:	load	 %5457
%5459:	call	 %5458 ifree
%5460:	br	 for.inc404

BASIC BLOCK for.inc404
%5461:	add	 %5429 XXX
%5462:	br	 for.cond384

BASIC BLOCK for.end406
%5463:	bitcast	 %4909
%5464:	call	 %5463 free
%5465:	br	 return

BASIC BLOCK return
%5466:	ret	

FUNCTION dfafree

BASIC BLOCK entry
%5467:	getelementptr	 d XXX XXX
%5468:	load	 %5467
%5469:	bitcast	 %5468
%5470:	call	 %5469 free
%5471:	getelementptr	 d XXX XXX
%5472:	load	 %5471
%5473:	bitcast	 %5472
%5474:	call	 %5473 free
%5475:	br	 for.cond

BASIC BLOCK for.cond
%5476:	phi	 XXX %5491
%5477:	getelementptr	 d XXX XXX
%5478:	load	 %5477
%5479:	icmp	 %5476 %5478
%5480:	br	 %5479 for.end for.body

BASIC BLOCK for.body
%5481:	sext	 %5476
%5482:	getelementptr	 d XXX XXX
%5483:	load	 %5482
%5484:	getelementptr	 %5483 %5481
%5485:	getelementptr	 %5484 XXX XXX
%5486:	getelementptr	 %5485 XXX XXX
%5487:	load	 %5486
%5488:	bitcast	 %5487
%5489:	call	 %5488 free
%5490:	br	 for.inc

BASIC BLOCK for.inc
%5491:	add	 %5476 XXX
%5492:	br	 for.cond

BASIC BLOCK for.end
%5493:	getelementptr	 d XXX XXX
%5494:	load	 %5493
%5495:	bitcast	 %5494
%5496:	call	 %5495 free
%5497:	br	 for.cond3

BASIC BLOCK for.cond3
%5498:	phi	 XXX %5521
%5499:	getelementptr	 d XXX XXX
%5500:	load	 %5499
%5501:	icmp	 %5498 %5500
%5502:	br	 %5501 for.end15 for.body5

BASIC BLOCK for.body5
%5503:	sext	 %5498
%5504:	getelementptr	 d XXX XXX
%5505:	load	 %5504
%5506:	getelementptr	 %5505 %5503
%5507:	getelementptr	 %5506 XXX XXX
%5508:	load	 %5507
%5509:	icmp	 %5508 XXX
%5510:	br	 %5509 if.end if.then

BASIC BLOCK if.then
%5511:	sext	 %5498
%5512:	getelementptr	 d XXX XXX
%5513:	load	 %5512
%5514:	getelementptr	 %5513 %5511
%5515:	getelementptr	 %5514 XXX XXX
%5516:	load	 %5515
%5517:	bitcast	 %5516
%5518:	call	 %5517 free
%5519:	br	 if.end

BASIC BLOCK if.end
%5520:	br	 for.inc13

BASIC BLOCK for.inc13
%5521:	add	 %5498 XXX
%5522:	br	 for.cond3

BASIC BLOCK for.end15
%5523:	getelementptr	 d XXX XXX
%5524:	load	 %5523
%5525:	bitcast	 %5524
%5526:	call	 %5525 free
%5527:	br	 for.cond17

BASIC BLOCK for.cond17
%5528:	phi	 XXX %5565
%5529:	getelementptr	 d XXX XXX
%5530:	load	 %5529
%5531:	icmp	 %5528 %5530
%5532:	br	 %5531 for.end38 for.body19

BASIC BLOCK for.body19
%5533:	sext	 %5528
%5534:	getelementptr	 d XXX XXX
%5535:	load	 %5534
%5536:	getelementptr	 %5535 %5533
%5537:	load	 %5536
%5538:	icmp	 %5537 XXX
%5539:	br	 %5538 if.else if.then23

BASIC BLOCK if.then23
%5540:	sext	 %5528
%5541:	getelementptr	 d XXX XXX
%5542:	load	 %5541
%5543:	getelementptr	 %5542 %5540
%5544:	load	 %5543
%5545:	bitcast	 %5544
%5546:	call	 %5545 free
%5547:	br	 if.end35

BASIC BLOCK if.else
%5548:	sext	 %5528
%5549:	getelementptr	 d XXX XXX
%5550:	load	 %5549
%5551:	getelementptr	 %5550 %5548
%5552:	load	 %5551
%5553:	icmp	 %5552 XXX
%5554:	br	 %5553 if.end34 if.then30

BASIC BLOCK if.then30
%5555:	sext	 %5528
%5556:	getelementptr	 d XXX XXX
%5557:	load	 %5556
%5558:	getelementptr	 %5557 %5555
%5559:	load	 %5558
%5560:	bitcast	 %5559
%5561:	call	 %5560 free
%5562:	br	 if.end34

BASIC BLOCK if.end34
%5563:	br	 if.end35

BASIC BLOCK if.end35
%5564:	br	 for.inc36

BASIC BLOCK for.inc36
%5565:	add	 %5528 XXX
%5566:	br	 for.cond17

BASIC BLOCK for.end38
%5567:	getelementptr	 d XXX XXX
%5568:	load	 %5567
%5569:	icmp	 %5568 XXX
%5570:	br	 %5569 if.end42 if.then40

BASIC BLOCK if.then40
%5571:	getelementptr	 d XXX XXX
%5572:	load	 %5571
%5573:	bitcast	 %5572
%5574:	call	 %5573 free
%5575:	br	 if.end42

BASIC BLOCK if.end42
%5576:	getelementptr	 d XXX XXX
%5577:	load	 %5576
%5578:	icmp	 %5577 XXX
%5579:	br	 %5578 if.end47 if.then45

BASIC BLOCK if.then45
%5580:	getelementptr	 d XXX XXX
%5581:	load	 %5580
%5582:	bitcast	 %5581
%5583:	call	 %5582 free
%5584:	br	 if.end47

BASIC BLOCK if.end47
%5585:	getelementptr	 d XXX XXX
%5586:	load	 %5585
%5587:	icmp	 %5586 XXX
%5588:	br	 %5587 if.end51 if.then49

BASIC BLOCK if.then49
%5589:	getelementptr	 d XXX XXX
%5590:	load	 %5589
%5591:	bitcast	 %5590
%5592:	call	 %5591 free
%5593:	br	 if.end51

BASIC BLOCK if.end51
%5594:	getelementptr	 d XXX XXX
%5595:	load	 %5594
%5596:	icmp	 %5595 XXX
%5597:	br	 %5596 if.end55 if.then53

BASIC BLOCK if.then53
%5598:	getelementptr	 d XXX XXX
%5599:	load	 %5598
%5600:	bitcast	 %5599
%5601:	call	 %5600 free
%5602:	br	 if.end55

BASIC BLOCK if.end55
%5603:	getelementptr	 d XXX XXX
%5604:	load	 %5603
%5605:	br	 for.cond56

BASIC BLOCK for.cond56
%5606:	phi	 %5604 %5610
%5607:	icmp	 %5606 XXX
%5608:	br	 %5607 for.end60 for.body58

BASIC BLOCK for.body58
%5609:	getelementptr	 %5606 XXX XXX
%5610:	load	 %5609
%5611:	getelementptr	 %5606 XXX XXX
%5612:	load	 %5611
%5613:	call	 %5612 free
%5614:	bitcast	 %5606
%5615:	call	 %5614 free
%5616:	br	 for.inc59

BASIC BLOCK for.inc59
%5617:	br	 for.cond56

BASIC BLOCK for.end60
%5618:	ret	

FUNCTION kwsalloc

BASIC BLOCK entry
%5619:	call	 XXX xmalloc
%5620:	bitcast	 %5619
%5621:	icmp	 %5620 XXX
%5622:	br	 %5621 if.then if.end

BASIC BLOCK if.then
%5623:	br	 return

BASIC BLOCK if.end
%5624:	getelementptr	 %5620 XXX XXX
%5625:	call	 %5624 XXX XXX xmalloc free _obstack_begin
%5626:	getelementptr	 %5620 XXX XXX
%5627:	store	 XXX %5626
%5628:	getelementptr	 %5620 XXX XXX
%5629:	getelementptr	 %5628 XXX XXX
%5630:	load	 %5629
%5631:	getelementptr	 %5628 XXX XXX
%5632:	load	 %5631
%5633:	ptrtoint	 %5630
%5634:	ptrtoint	 %5632
%5635:	sub	 %5633 %5634
%5636:	sext	 XXX
%5637:	icmp	 %5635 %5636
%5638:	br	 %5637 if.end5 if.then4

BASIC BLOCK if.then4
%5639:	call	 %5628 XXX _obstack_newchunk
%5640:	br	 if.end5

BASIC BLOCK if.end5
%5641:	getelementptr	 %5628 XXX XXX
%5642:	load	 %5641
%5643:	sext	 XXX
%5644:	getelementptr	 %5642 %5643
%5645:	store	 %5644 %5641
%5646:	getelementptr	 %5628 XXX XXX
%5647:	load	 %5646
%5648:	getelementptr	 %5628 XXX XXX
%5649:	load	 %5648
%5650:	icmp	 %5649 %5647
%5651:	br	 %5650 if.end11 if.then10

BASIC BLOCK if.then10
%5652:	getelementptr	 %5628 XXX XXX
%5653:	load	 %5652
%5654:	and	 %5653 XXX
%5655:	or	 %5654 XXX
%5656:	store	 %5655 %5652
%5657:	br	 if.end11

BASIC BLOCK if.end11
%5658:	getelementptr	 %5628 XXX XXX
%5659:	load	 %5658
%5660:	ptrtoint	 %5659
%5661:	sub	 %5660 XXX
%5662:	getelementptr	 %5628 XXX XXX
%5663:	load	 %5662
%5664:	sext	 %5663
%5665:	add	 %5661 %5664
%5666:	getelementptr	 %5628 XXX XXX
%5667:	load	 %5666
%5668:	xor	 %5667 XXX
%5669:	sext	 %5668
%5670:	and	 %5665 %5669
%5671:	getelementptr	 XXX %5670
%5672:	getelementptr	 %5628 XXX XXX
%5673:	store	 %5671 %5672
%5674:	getelementptr	 %5628 XXX XXX
%5675:	load	 %5674
%5676:	getelementptr	 %5628 XXX XXX
%5677:	load	 %5676
%5678:	bitcast	 %5677
%5679:	ptrtoint	 %5675
%5680:	ptrtoint	 %5678
%5681:	sub	 %5679 %5680
%5682:	getelementptr	 %5628 XXX XXX
%5683:	load	 %5682
%5684:	getelementptr	 %5628 XXX XXX
%5685:	load	 %5684
%5686:	bitcast	 %5685
%5687:	ptrtoint	 %5683
%5688:	ptrtoint	 %5686
%5689:	sub	 %5687 %5688
%5690:	icmp	 %5681 %5689
%5691:	br	 %5690 if.end34 if.then31

BASIC BLOCK if.then31
%5692:	getelementptr	 %5628 XXX XXX
%5693:	load	 %5692
%5694:	getelementptr	 %5628 XXX XXX
%5695:	store	 %5693 %5694
%5696:	br	 if.end34

BASIC BLOCK if.end34
%5697:	getelementptr	 %5628 XXX XXX
%5698:	load	 %5697
%5699:	getelementptr	 %5628 XXX XXX
%5700:	store	 %5698 %5699
%5701:	bitcast	 %5647
%5702:	getelementptr	 %5620 XXX XXX
%5703:	store	 %5701 %5702
%5704:	getelementptr	 %5620 XXX XXX
%5705:	load	 %5704
%5706:	icmp	 %5705 XXX
%5707:	br	 %5706 if.then39 if.end40

BASIC BLOCK if.then39
%5708:	bitcast	 %5620
%5709:	call	 %5708 kwsfree
%5710:	br	 return

BASIC BLOCK if.end40
%5711:	getelementptr	 %5620 XXX XXX
%5712:	load	 %5711
%5713:	getelementptr	 %5712 XXX XXX
%5714:	store	 XXX %5713
%5715:	getelementptr	 %5620 XXX XXX
%5716:	load	 %5715
%5717:	getelementptr	 %5716 XXX XXX
%5718:	store	 XXX %5717
%5719:	getelementptr	 %5620 XXX XXX
%5720:	load	 %5719
%5721:	getelementptr	 %5720 XXX XXX
%5722:	store	 XXX %5721
%5723:	getelementptr	 %5620 XXX XXX
%5724:	load	 %5723
%5725:	getelementptr	 %5724 XXX XXX
%5726:	store	 XXX %5725
%5727:	getelementptr	 %5620 XXX XXX
%5728:	load	 %5727
%5729:	getelementptr	 %5728 XXX XXX
%5730:	store	 XXX %5729
%5731:	getelementptr	 %5620 XXX XXX
%5732:	load	 %5731
%5733:	getelementptr	 %5732 XXX XXX
%5734:	store	 XXX %5733
%5735:	getelementptr	 %5620 XXX XXX
%5736:	load	 %5735
%5737:	getelementptr	 %5736 XXX XXX
%5738:	store	 XXX %5737
%5739:	getelementptr	 %5620 XXX XXX
%5740:	store	 XXX %5739
%5741:	getelementptr	 %5620 XXX XXX
%5742:	store	 XXX %5741
%5743:	getelementptr	 %5620 XXX XXX
%5744:	store	 XXX %5743
%5745:	getelementptr	 %5620 XXX XXX
%5746:	store	 trans %5745
%5747:	bitcast	 %5620
%5748:	br	 return

BASIC BLOCK return
%5749:	phi	 %5747 XXX XXX
%5750:	ret	 %5749

FUNCTION kwsfree

BASIC BLOCK entry
%5751:	bitcast	 kws
%5752:	getelementptr	 %5751 XXX XXX
%5753:	getelementptr	 %5752 XXX XXX
%5754:	load	 %5753
%5755:	bitcast	 %5754
%5756:	icmp	 XXX %5755
%5757:	br	 %5756 if.else land.lhs.true

BASIC BLOCK land.lhs.true
%5758:	getelementptr	 %5752 XXX XXX
%5759:	load	 %5758
%5760:	icmp	 XXX %5759
%5761:	br	 %5760 if.else if.then

BASIC BLOCK if.then
%5762:	getelementptr	 %5752 XXX XXX
%5763:	store	 XXX %5762
%5764:	getelementptr	 %5752 XXX XXX
%5765:	store	 XXX %5764
%5766:	br	 if.end

BASIC BLOCK if.else
%5767:	call	 %5752 XXX obstack_free
%5768:	br	 if.end

BASIC BLOCK if.end
%5769:	call	 kws free
%5770:	ret	

FUNCTION kwsincr

BASIC BLOCK entry
%5771:	alloca	 XXX
%5772:	alloca	 XXX
%5773:	bitcast	 kws
%5774:	getelementptr	 %5773 XXX XXX
%5775:	load	 %5774
%5776:	getelementptr	 text len
%5777:	br	 while.cond

BASIC BLOCK while.cond
%5778:	phi	 %5775 %6299
%5779:	phi	 len %5781
%5780:	phi	 %5776 %5801
%5781:	add	 %5779 XXX
%5782:	icmp	 %5779 XXX
%5783:	br	 %5782 while.end318 while.body

BASIC BLOCK while.body
%5784:	getelementptr	 %5773 XXX XXX
%5785:	load	 %5784
%5786:	icmp	 %5785 XXX
%5787:	br	 %5786 cond.false cond.true

BASIC BLOCK cond.true
%5788:	getelementptr	 %5780 XXX
%5789:	load	 %5788
%5790:	zext	 %5789
%5791:	getelementptr	 %5773 XXX XXX
%5792:	load	 %5791
%5793:	getelementptr	 %5792 %5790
%5794:	load	 %5793
%5795:	sext	 %5794
%5796:	br	 cond.end

BASIC BLOCK cond.false
%5797:	getelementptr	 %5780 XXX
%5798:	load	 %5797
%5799:	sext	 %5798
%5800:	br	 cond.end

BASIC BLOCK cond.end
%5801:	phi	 %5788 %5797
%5802:	phi	 %5795 %5799
%5803:	trunc	 %5802
%5804:	getelementptr	 %5778 XXX XXX
%5805:	load	 %5804
%5806:	getelementptr	 %5778 XXX XXX
%5807:	bitcast	 %5806
%5808:	getelementptr	 %5771 XXX XXX
%5809:	store	 %5807 %5808
%5810:	getelementptr	 %5772 XXX XXX
%5811:	store	 XXX %5810
%5812:	br	 while.cond11

BASIC BLOCK while.cond11
%5813:	phi	 XXX %5848
%5814:	phi	 %5805 %5849
%5815:	icmp	 %5814 XXX
%5816:	br	 %5815 land.end land.rhs

BASIC BLOCK land.rhs
%5817:	zext	 %5803
%5818:	getelementptr	 %5814 XXX XXX
%5819:	load	 %5818
%5820:	zext	 %5819
%5821:	icmp	 %5817 %5820
%5822:	br	 land.end

BASIC BLOCK land.end
%5823:	phi	 XXX %5821
%5824:	br	 %5823 while.end while.body17

BASIC BLOCK while.body17
%5825:	sext	 %5813
%5826:	getelementptr	 %5771 XXX %5825
%5827:	store	 %5814 %5826
%5828:	zext	 %5803
%5829:	getelementptr	 %5814 XXX XXX
%5830:	load	 %5829
%5831:	zext	 %5830
%5832:	icmp	 %5828 %5831
%5833:	br	 %5832 if.else if.then

BASIC BLOCK if.then
%5834:	add	 %5813 XXX
%5835:	sext	 %5813
%5836:	getelementptr	 %5772 XXX %5835
%5837:	store	 XXX %5836
%5838:	getelementptr	 %5814 XXX XXX
%5839:	load	 %5838
%5840:	br	 if.end

BASIC BLOCK if.else
%5841:	add	 %5813 XXX
%5842:	sext	 %5813
%5843:	getelementptr	 %5772 XXX %5842
%5844:	store	 XXX %5843
%5845:	getelementptr	 %5814 XXX XXX
%5846:	load	 %5845
%5847:	br	 if.end

BASIC BLOCK if.end
%5848:	phi	 %5834 %5841
%5849:	phi	 %5839 %5846
%5850:	br	 while.cond11

BASIC BLOCK while.end
%5851:	icmp	 %5814 XXX
%5852:	br	 %5851 if.then31 if.end316

BASIC BLOCK if.then31
%5853:	getelementptr	 %5773 XXX XXX
%5854:	getelementptr	 %5853 XXX XXX
%5855:	load	 %5854
%5856:	getelementptr	 %5853 XXX XXX
%5857:	load	 %5856
%5858:	ptrtoint	 %5855
%5859:	ptrtoint	 %5857
%5860:	sub	 %5858 %5859
%5861:	sext	 XXX
%5862:	icmp	 %5860 %5861
%5863:	br	 %5862 if.end36 if.then35

BASIC BLOCK if.then35
%5864:	call	 %5853 XXX _obstack_newchunk
%5865:	br	 if.end36

BASIC BLOCK if.end36
%5866:	getelementptr	 %5853 XXX XXX
%5867:	load	 %5866
%5868:	sext	 XXX
%5869:	getelementptr	 %5867 %5868
%5870:	store	 %5869 %5866
%5871:	getelementptr	 %5853 XXX XXX
%5872:	load	 %5871
%5873:	getelementptr	 %5853 XXX XXX
%5874:	load	 %5873
%5875:	icmp	 %5874 %5872
%5876:	br	 %5875 if.end43 if.then42

BASIC BLOCK if.then42
%5877:	getelementptr	 %5853 XXX XXX
%5878:	load	 %5877
%5879:	and	 %5878 XXX
%5880:	or	 %5879 XXX
%5881:	store	 %5880 %5877
%5882:	br	 if.end43

BASIC BLOCK if.end43
%5883:	getelementptr	 %5853 XXX XXX
%5884:	load	 %5883
%5885:	ptrtoint	 %5884
%5886:	sub	 %5885 XXX
%5887:	getelementptr	 %5853 XXX XXX
%5888:	load	 %5887
%5889:	sext	 %5888
%5890:	add	 %5886 %5889
%5891:	getelementptr	 %5853 XXX XXX
%5892:	load	 %5891
%5893:	xor	 %5892 XXX
%5894:	sext	 %5893
%5895:	and	 %5890 %5894
%5896:	getelementptr	 XXX %5895
%5897:	getelementptr	 %5853 XXX XXX
%5898:	store	 %5896 %5897
%5899:	getelementptr	 %5853 XXX XXX
%5900:	load	 %5899
%5901:	getelementptr	 %5853 XXX XXX
%5902:	load	 %5901
%5903:	bitcast	 %5902
%5904:	ptrtoint	 %5900
%5905:	ptrtoint	 %5903
%5906:	sub	 %5904 %5905
%5907:	getelementptr	 %5853 XXX XXX
%5908:	load	 %5907
%5909:	getelementptr	 %5853 XXX XXX
%5910:	load	 %5909
%5911:	bitcast	 %5910
%5912:	ptrtoint	 %5908
%5913:	ptrtoint	 %5911
%5914:	sub	 %5912 %5913
%5915:	icmp	 %5906 %5914
%5916:	br	 %5915 if.end66 if.then63

BASIC BLOCK if.then63
%5917:	getelementptr	 %5853 XXX XXX
%5918:	load	 %5917
%5919:	getelementptr	 %5853 XXX XXX
%5920:	store	 %5918 %5919
%5921:	br	 if.end66

BASIC BLOCK if.end66
%5922:	getelementptr	 %5853 XXX XXX
%5923:	load	 %5922
%5924:	getelementptr	 %5853 XXX XXX
%5925:	store	 %5923 %5924
%5926:	bitcast	 %5872
%5927:	icmp	 %5926 XXX
%5928:	br	 %5927 if.then70 if.end71

BASIC BLOCK if.then70
%5929:	call	 XXX gettext
%5930:	br	 return

BASIC BLOCK if.end71
%5931:	getelementptr	 %5926 XXX XXX
%5932:	store	 XXX %5931
%5933:	getelementptr	 %5926 XXX XXX
%5934:	store	 XXX %5933
%5935:	getelementptr	 %5773 XXX XXX
%5936:	getelementptr	 %5935 XXX XXX
%5937:	load	 %5936
%5938:	getelementptr	 %5935 XXX XXX
%5939:	load	 %5938
%5940:	ptrtoint	 %5937
%5941:	ptrtoint	 %5939
%5942:	sub	 %5940 %5941
%5943:	sext	 XXX
%5944:	icmp	 %5942 %5943
%5945:	br	 %5944 if.end87 if.then86

BASIC BLOCK if.then86
%5946:	call	 %5935 XXX _obstack_newchunk
%5947:	br	 if.end87

BASIC BLOCK if.end87
%5948:	getelementptr	 %5935 XXX XXX
%5949:	load	 %5948
%5950:	sext	 XXX
%5951:	getelementptr	 %5949 %5950
%5952:	store	 %5951 %5948
%5953:	getelementptr	 %5935 XXX XXX
%5954:	load	 %5953
%5955:	getelementptr	 %5935 XXX XXX
%5956:	load	 %5955
%5957:	icmp	 %5956 %5954
%5958:	br	 %5957 if.end102 if.then97

BASIC BLOCK if.then97
%5959:	getelementptr	 %5935 XXX XXX
%5960:	load	 %5959
%5961:	and	 %5960 XXX
%5962:	or	 %5961 XXX
%5963:	store	 %5962 %5959
%5964:	br	 if.end102

BASIC BLOCK if.end102
%5965:	getelementptr	 %5935 XXX XXX
%5966:	load	 %5965
%5967:	ptrtoint	 %5966
%5968:	sub	 %5967 XXX
%5969:	getelementptr	 %5935 XXX XXX
%5970:	load	 %5969
%5971:	sext	 %5970
%5972:	add	 %5968 %5971
%5973:	getelementptr	 %5935 XXX XXX
%5974:	load	 %5973
%5975:	xor	 %5974 XXX
%5976:	sext	 %5975
%5977:	and	 %5972 %5976
%5978:	getelementptr	 XXX %5977
%5979:	getelementptr	 %5935 XXX XXX
%5980:	store	 %5978 %5979
%5981:	getelementptr	 %5935 XXX XXX
%5982:	load	 %5981
%5983:	getelementptr	 %5935 XXX XXX
%5984:	load	 %5983
%5985:	bitcast	 %5984
%5986:	ptrtoint	 %5982
%5987:	ptrtoint	 %5985
%5988:	sub	 %5986 %5987
%5989:	getelementptr	 %5935 XXX XXX
%5990:	load	 %5989
%5991:	getelementptr	 %5935 XXX XXX
%5992:	load	 %5991
%5993:	bitcast	 %5992
%5994:	ptrtoint	 %5990
%5995:	ptrtoint	 %5993
%5996:	sub	 %5994 %5995
%5997:	icmp	 %5988 %5996
%5998:	br	 %5997 if.end130 if.then127

BASIC BLOCK if.then127
%5999:	getelementptr	 %5935 XXX XXX
%6000:	load	 %5999
%6001:	getelementptr	 %5935 XXX XXX
%6002:	store	 %6000 %6001
%6003:	br	 if.end130

BASIC BLOCK if.end130
%6004:	getelementptr	 %5935 XXX XXX
%6005:	load	 %6004
%6006:	getelementptr	 %5935 XXX XXX
%6007:	store	 %6005 %6006
%6008:	bitcast	 %5954
%6009:	getelementptr	 %5926 XXX XXX
%6010:	store	 %6008 %6009
%6011:	getelementptr	 %5926 XXX XXX
%6012:	load	 %6011
%6013:	icmp	 %6012 XXX
%6014:	br	 %6013 if.then136 if.end138

BASIC BLOCK if.then136
%6015:	call	 XXX gettext
%6016:	br	 return

BASIC BLOCK if.end138
%6017:	getelementptr	 %5926 XXX XXX
%6018:	load	 %6017
%6019:	getelementptr	 %6018 XXX XXX
%6020:	store	 XXX %6019
%6021:	getelementptr	 %5926 XXX XXX
%6022:	load	 %6021
%6023:	getelementptr	 %6022 XXX XXX
%6024:	store	 XXX %6023
%6025:	getelementptr	 %5926 XXX XXX
%6026:	load	 %6025
%6027:	getelementptr	 %6026 XXX XXX
%6028:	store	 %5778 %6027
%6029:	getelementptr	 %5926 XXX XXX
%6030:	load	 %6029
%6031:	getelementptr	 %6030 XXX XXX
%6032:	store	 XXX %6031
%6033:	getelementptr	 %5926 XXX XXX
%6034:	load	 %6033
%6035:	getelementptr	 %6034 XXX XXX
%6036:	store	 XXX %6035
%6037:	getelementptr	 %5778 XXX XXX
%6038:	load	 %6037
%6039:	add	 %6038 XXX
%6040:	getelementptr	 %5926 XXX XXX
%6041:	load	 %6040
%6042:	getelementptr	 %6041 XXX XXX
%6043:	store	 %6039 %6042
%6044:	getelementptr	 %5926 XXX XXX
%6045:	load	 %6044
%6046:	getelementptr	 %6045 XXX XXX
%6047:	store	 XXX %6046
%6048:	getelementptr	 %5926 XXX XXX
%6049:	store	 %5803 %6048
%6050:	getelementptr	 %5926 XXX XXX
%6051:	store	 XXX %6050
%6052:	add	 %5813 XXX
%6053:	sext	 %6052
%6054:	getelementptr	 %5772 XXX %6053
%6055:	load	 %6054
%6056:	icmp	 %6055 XXX
%6057:	br	 %6056 if.else160 if.then156

BASIC BLOCK if.then156
%6058:	sext	 %6052
%6059:	getelementptr	 %5771 XXX %6058
%6060:	load	 %6059
%6061:	getelementptr	 %6060 XXX XXX
%6062:	store	 %5926 %6061
%6063:	br	 if.end164

BASIC BLOCK if.else160
%6064:	sext	 %6052
%6065:	getelementptr	 %5771 XXX %6064
%6066:	load	 %6065
%6067:	getelementptr	 %6066 XXX XXX
%6068:	store	 %5926 %6067
%6069:	br	 if.end164

BASIC BLOCK if.end164
%6070:	br	 while.cond165

BASIC BLOCK while.cond165
%6071:	phi	 %6052 %6105
%6072:	icmp	 %6071 XXX
%6073:	br	 %6072 land.end172 land.rhs167

BASIC BLOCK land.rhs167
%6074:	sext	 %6071
%6075:	getelementptr	 %5771 XXX %6074
%6076:	load	 %6075
%6077:	getelementptr	 %6076 XXX XXX
%6078:	load	 %6077
%6079:	icmp	 %6078 XXX
%6080:	xor	 %6079 XXX
%6081:	br	 land.end172

BASIC BLOCK land.end172
%6082:	phi	 XXX %6080
%6083:	br	 %6082 while.end190 while.body173

BASIC BLOCK while.body173
%6084:	sext	 %6071
%6085:	getelementptr	 %5772 XXX %6084
%6086:	load	 %6085
%6087:	icmp	 %6086 XXX
%6088:	br	 %6087 if.else183 if.then178

BASIC BLOCK if.then178
%6089:	sext	 %6071
%6090:	getelementptr	 %5771 XXX %6089
%6091:	load	 %6090
%6092:	getelementptr	 %6091 XXX XXX
%6093:	load	 %6092
%6094:	add	 %6093 XXX
%6095:	store	 %6094 %6092
%6096:	br	 if.end188

BASIC BLOCK if.else183
%6097:	sext	 %6071
%6098:	getelementptr	 %5771 XXX %6097
%6099:	load	 %6098
%6100:	getelementptr	 %6099 XXX XXX
%6101:	load	 %6100
%6102:	add	 %6101 XXX
%6103:	store	 %6102 %6100
%6104:	br	 if.end188

BASIC BLOCK if.end188
%6105:	add	 %6071 XXX
%6106:	br	 while.cond165

BASIC BLOCK while.end190
%6107:	icmp	 %6071 XXX
%6108:	br	 %6107 if.end315 land.lhs.true

BASIC BLOCK land.lhs.true
%6109:	sext	 %6071
%6110:	getelementptr	 %5772 XXX %6109
%6111:	load	 %6110
%6112:	icmp	 %6111 XXX
%6113:	br	 %6112 lor.lhs.false land.lhs.true196

BASIC BLOCK land.lhs.true196
%6114:	sext	 %6071
%6115:	getelementptr	 %5771 XXX %6114
%6116:	load	 %6115
%6117:	getelementptr	 %6116 XXX XXX
%6118:	load	 %6117
%6119:	add	 %6118 XXX
%6120:	store	 %6119 %6117
%6121:	sext	 %6119
%6122:	icmp	 %6121 XXX
%6123:	br	 %6122 lor.lhs.false if.then214

BASIC BLOCK lor.lhs.false
%6124:	sext	 %6071
%6125:	getelementptr	 %5772 XXX %6124
%6126:	load	 %6125
%6127:	icmp	 %6126 XXX
%6128:	br	 %6127 if.end315 land.lhs.true207

BASIC BLOCK land.lhs.true207
%6129:	sext	 %6071
%6130:	getelementptr	 %5771 XXX %6129
%6131:	load	 %6130
%6132:	getelementptr	 %6131 XXX XXX
%6133:	load	 %6132
%6134:	add	 %6133 XXX
%6135:	store	 %6134 %6132
%6136:	sext	 %6134
%6137:	icmp	 %6136 XXX
%6138:	br	 %6137 if.end315 if.then214

BASIC BLOCK if.then214
%6139:	sext	 %6071
%6140:	getelementptr	 %5771 XXX %6139
%6141:	load	 %6140
%6142:	getelementptr	 %6141 XXX XXX
%6143:	load	 %6142
%6144:	sext	 %6143
%6145:	switch	 %6144 sw.default298 XXX sw.bb XXX sw.bb257

BASIC BLOCK sw.bb
%6146:	add	 %6071 XXX
%6147:	sext	 %6146
%6148:	getelementptr	 %5772 XXX %6147
%6149:	load	 %6148
%6150:	switch	 %6149 sw.default XXX sw.bb222 XXX sw.bb231

BASIC BLOCK sw.bb222
%6151:	sext	 %6071
%6152:	getelementptr	 %5771 XXX %6151
%6153:	load	 %6152
%6154:	getelementptr	 %6153 XXX XXX
%6155:	load	 %6154
%6156:	getelementptr	 %6155 XXX XXX
%6157:	load	 %6156
%6158:	getelementptr	 %6155 XXX XXX
%6159:	store	 %6153 %6158
%6160:	getelementptr	 %6153 XXX XXX
%6161:	store	 %6157 %6160
%6162:	getelementptr	 %6153 XXX XXX
%6163:	store	 XXX %6162
%6164:	getelementptr	 %6155 XXX XXX
%6165:	store	 XXX %6164
%6166:	br	 sw.epilog

BASIC BLOCK sw.bb231
%6167:	sext	 %6071
%6168:	getelementptr	 %5771 XXX %6167
%6169:	load	 %6168
%6170:	getelementptr	 %6169 XXX XXX
%6171:	load	 %6170
%6172:	getelementptr	 %6171 XXX XXX
%6173:	load	 %6172
%6174:	getelementptr	 %6173 XXX XXX
%6175:	load	 %6174
%6176:	getelementptr	 %6173 XXX XXX
%6177:	load	 %6176
%6178:	getelementptr	 %6173 XXX XXX
%6179:	store	 %6171 %6178
%6180:	getelementptr	 %6171 XXX XXX
%6181:	store	 %6177 %6180
%6182:	getelementptr	 %6173 XXX XXX
%6183:	store	 %6169 %6182
%6184:	getelementptr	 %6169 XXX XXX
%6185:	store	 %6175 %6184
%6186:	getelementptr	 %6173 XXX XXX
%6187:	load	 %6186
%6188:	sext	 %6187
%6189:	icmp	 %6188 XXX
%6190:	select	 %6189 XXX XXX
%6191:	trunc	 %6190
%6192:	getelementptr	 %6171 XXX XXX
%6193:	store	 %6191 %6192
%6194:	getelementptr	 %6173 XXX XXX
%6195:	load	 %6194
%6196:	sext	 %6195
%6197:	icmp	 %6196 XXX
%6198:	select	 %6197 XXX XXX
%6199:	trunc	 %6198
%6200:	getelementptr	 %6169 XXX XXX
%6201:	store	 %6199 %6200
%6202:	getelementptr	 %6173 XXX XXX
%6203:	store	 XXX %6202
%6204:	br	 sw.epilog

BASIC BLOCK sw.default
%6205:	call	 abort
%6206:	unreachable	

BASIC BLOCK sw.epilog
%6207:	phi	 %6173 %6155
%6208:	br	 sw.epilog299

BASIC BLOCK sw.bb257
%6209:	add	 %6071 XXX
%6210:	sext	 %6209
%6211:	getelementptr	 %5772 XXX %6210
%6212:	load	 %6211
%6213:	switch	 %6212 sw.default296 XXX sw.bb261 XXX sw.bb270

BASIC BLOCK sw.bb261
%6214:	sext	 %6071
%6215:	getelementptr	 %5771 XXX %6214
%6216:	load	 %6215
%6217:	getelementptr	 %6216 XXX XXX
%6218:	load	 %6217
%6219:	getelementptr	 %6218 XXX XXX
%6220:	load	 %6219
%6221:	getelementptr	 %6218 XXX XXX
%6222:	store	 %6216 %6221
%6223:	getelementptr	 %6216 XXX XXX
%6224:	store	 %6220 %6223
%6225:	getelementptr	 %6216 XXX XXX
%6226:	store	 XXX %6225
%6227:	getelementptr	 %6218 XXX XXX
%6228:	store	 XXX %6227
%6229:	br	 sw.epilog297

BASIC BLOCK sw.bb270
%6230:	sext	 %6071
%6231:	getelementptr	 %5771 XXX %6230
%6232:	load	 %6231
%6233:	getelementptr	 %6232 XXX XXX
%6234:	load	 %6233
%6235:	getelementptr	 %6234 XXX XXX
%6236:	load	 %6235
%6237:	getelementptr	 %6236 XXX XXX
%6238:	load	 %6237
%6239:	getelementptr	 %6236 XXX XXX
%6240:	load	 %6239
%6241:	getelementptr	 %6236 XXX XXX
%6242:	store	 %6232 %6241
%6243:	getelementptr	 %6232 XXX XXX
%6244:	store	 %6238 %6243
%6245:	getelementptr	 %6236 XXX XXX
%6246:	store	 %6234 %6245
%6247:	getelementptr	 %6234 XXX XXX
%6248:	store	 %6240 %6247
%6249:	getelementptr	 %6236 XXX XXX
%6250:	load	 %6249
%6251:	sext	 %6250
%6252:	icmp	 %6251 XXX
%6253:	select	 %6252 XXX XXX
%6254:	trunc	 %6253
%6255:	getelementptr	 %6232 XXX XXX
%6256:	store	 %6254 %6255
%6257:	getelementptr	 %6236 XXX XXX
%6258:	load	 %6257
%6259:	sext	 %6258
%6260:	icmp	 %6259 XXX
%6261:	select	 %6260 XXX XXX
%6262:	trunc	 %6261
%6263:	getelementptr	 %6234 XXX XXX
%6264:	store	 %6262 %6263
%6265:	getelementptr	 %6236 XXX XXX
%6266:	store	 XXX %6265
%6267:	br	 sw.epilog297

BASIC BLOCK sw.default296
%6268:	call	 abort
%6269:	unreachable	

BASIC BLOCK sw.epilog297
%6270:	phi	 %6236 %6218
%6271:	br	 sw.epilog299

BASIC BLOCK sw.default298
%6272:	call	 abort
%6273:	unreachable	

BASIC BLOCK sw.epilog299
%6274:	phi	 %6270 %6207
%6275:	sub	 %6071 XXX
%6276:	sext	 %6275
%6277:	getelementptr	 %5772 XXX %6276
%6278:	load	 %6277
%6279:	icmp	 %6278 XXX
%6280:	br	 %6279 if.else309 if.then304

BASIC BLOCK if.then304
%6281:	sub	 %6071 XXX
%6282:	sext	 %6281
%6283:	getelementptr	 %5771 XXX %6282
%6284:	load	 %6283
%6285:	getelementptr	 %6284 XXX XXX
%6286:	store	 %6274 %6285
%6287:	br	 if.end314

BASIC BLOCK if.else309
%6288:	sub	 %6071 XXX
%6289:	sext	 %6288
%6290:	getelementptr	 %5771 XXX %6289
%6291:	load	 %6290
%6292:	getelementptr	 %6291 XXX XXX
%6293:	store	 %6274 %6292
%6294:	br	 if.end314

BASIC BLOCK if.end314
%6295:	br	 if.end315

BASIC BLOCK if.end315
%6296:	br	 if.end316

BASIC BLOCK if.end316
%6297:	phi	 %5814 %5926
%6298:	getelementptr	 %6297 XXX XXX
%6299:	load	 %6298
%6300:	br	 while.cond

BASIC BLOCK while.end318
%6301:	getelementptr	 %5778 XXX XXX
%6302:	load	 %6301
%6303:	icmp	 %6302 XXX
%6304:	br	 %6303 if.then321 if.end324

BASIC BLOCK if.then321
%6305:	getelementptr	 %5773 XXX XXX
%6306:	load	 %6305
%6307:	mul	 XXX %6306
%6308:	add	 XXX %6307
%6309:	getelementptr	 %5778 XXX XXX
%6310:	store	 %6308 %6309
%6311:	br	 if.end324

BASIC BLOCK if.end324
%6312:	getelementptr	 %5773 XXX XXX
%6313:	load	 %6312
%6314:	add	 %6313 XXX
%6315:	store	 %6314 %6312
%6316:	getelementptr	 %5778 XXX XXX
%6317:	load	 %6316
%6318:	getelementptr	 %5773 XXX XXX
%6319:	load	 %6318
%6320:	icmp	 %6317 %6319
%6321:	br	 %6320 if.end333 if.then330

BASIC BLOCK if.then330
%6322:	getelementptr	 %5778 XXX XXX
%6323:	load	 %6322
%6324:	getelementptr	 %5773 XXX XXX
%6325:	store	 %6323 %6324
%6326:	br	 if.end333

BASIC BLOCK if.end333
%6327:	getelementptr	 %5778 XXX XXX
%6328:	load	 %6327
%6329:	getelementptr	 %5773 XXX XXX
%6330:	load	 %6329
%6331:	icmp	 %6328 %6330
%6332:	br	 %6331 if.end340 if.then337

BASIC BLOCK if.then337
%6333:	getelementptr	 %5778 XXX XXX
%6334:	load	 %6333
%6335:	getelementptr	 %5773 XXX XXX
%6336:	store	 %6334 %6335
%6337:	br	 if.end340

BASIC BLOCK if.end340
%6338:	br	 return

BASIC BLOCK return
%6339:	phi	 %6015 %5929 XXX
%6340:	ret	 %6339

FUNCTION kwsprep

BASIC BLOCK entry
%6341:	alloca	 XXX
%6342:	alloca	 XXX
%6343:	alloca	 XXX
%6344:	bitcast	 kws
%6345:	getelementptr	 %6344 XXX XXX
%6346:	load	 %6345
%6347:	icmp	 %6346 XXX
%6348:	br	 %6347 if.else if.then

BASIC BLOCK if.then
%6349:	br	 for.cond

BASIC BLOCK for.cond
%6350:	phi	 XXX %6360
%6351:	icmp	 %6350 XXX
%6352:	br	 %6351 for.end for.body

BASIC BLOCK for.body
%6353:	getelementptr	 %6344 XXX XXX
%6354:	load	 %6353
%6355:	trunc	 %6354
%6356:	sext	 %6350
%6357:	getelementptr	 %6341 XXX %6356
%6358:	store	 %6355 %6357
%6359:	br	 for.inc

BASIC BLOCK for.inc
%6360:	add	 %6350 XXX
%6361:	br	 for.cond

BASIC BLOCK for.end
%6362:	br	 if.end

BASIC BLOCK if.else
%6363:	br	 for.cond3

BASIC BLOCK for.cond3
%6364:	phi	 XXX %6371
%6365:	icmp	 %6364 XXX
%6366:	br	 %6365 for.end11 for.body6

BASIC BLOCK for.body6
%6367:	sext	 %6364
%6368:	getelementptr	 %6341 XXX %6367
%6369:	store	 XXX %6368
%6370:	br	 for.inc9

BASIC BLOCK for.inc9
%6371:	add	 %6364 XXX
%6372:	br	 for.cond3

BASIC BLOCK for.end11
%6373:	br	 if.end

BASIC BLOCK if.end
%6374:	getelementptr	 %6344 XXX XXX
%6375:	load	 %6374
%6376:	icmp	 %6375 XXX
%6377:	br	 %6376 if.else113 land.lhs.true

BASIC BLOCK land.lhs.true
%6378:	getelementptr	 %6344 XXX XXX
%6379:	load	 %6378
%6380:	icmp	 %6379 XXX
%6381:	br	 %6380 if.else113 if.then17

BASIC BLOCK if.then17
%6382:	getelementptr	 %6344 XXX XXX
%6383:	getelementptr	 %6344 XXX XXX
%6384:	load	 %6383
%6385:	getelementptr	 %6382 XXX XXX
%6386:	load	 %6385
%6387:	getelementptr	 %6382 XXX XXX
%6388:	load	 %6387
%6389:	ptrtoint	 %6386
%6390:	ptrtoint	 %6388
%6391:	sub	 %6389 %6390
%6392:	sext	 %6384
%6393:	icmp	 %6391 %6392
%6394:	br	 %6393 if.end23 if.then22

BASIC BLOCK if.then22
%6395:	call	 %6382 %6384 _obstack_newchunk
%6396:	br	 if.end23

BASIC BLOCK if.end23
%6397:	getelementptr	 %6382 XXX XXX
%6398:	load	 %6397
%6399:	sext	 %6384
%6400:	getelementptr	 %6398 %6399
%6401:	store	 %6400 %6397
%6402:	getelementptr	 %6382 XXX XXX
%6403:	load	 %6402
%6404:	getelementptr	 %6382 XXX XXX
%6405:	load	 %6404
%6406:	icmp	 %6405 %6403
%6407:	br	 %6406 if.end29 if.then28

BASIC BLOCK if.then28
%6408:	getelementptr	 %6382 XXX XXX
%6409:	load	 %6408
%6410:	and	 %6409 XXX
%6411:	or	 %6410 XXX
%6412:	store	 %6411 %6408
%6413:	br	 if.end29

BASIC BLOCK if.end29
%6414:	getelementptr	 %6382 XXX XXX
%6415:	load	 %6414
%6416:	ptrtoint	 %6415
%6417:	sub	 %6416 XXX
%6418:	getelementptr	 %6382 XXX XXX
%6419:	load	 %6418
%6420:	sext	 %6419
%6421:	add	 %6417 %6420
%6422:	getelementptr	 %6382 XXX XXX
%6423:	load	 %6422
%6424:	xor	 %6423 XXX
%6425:	sext	 %6424
%6426:	and	 %6421 %6425
%6427:	getelementptr	 XXX %6426
%6428:	getelementptr	 %6382 XXX XXX
%6429:	store	 %6427 %6428
%6430:	getelementptr	 %6382 XXX XXX
%6431:	load	 %6430
%6432:	getelementptr	 %6382 XXX XXX
%6433:	load	 %6432
%6434:	bitcast	 %6433
%6435:	ptrtoint	 %6431
%6436:	ptrtoint	 %6434
%6437:	sub	 %6435 %6436
%6438:	getelementptr	 %6382 XXX XXX
%6439:	load	 %6438
%6440:	getelementptr	 %6382 XXX XXX
%6441:	load	 %6440
%6442:	bitcast	 %6441
%6443:	ptrtoint	 %6439
%6444:	ptrtoint	 %6442
%6445:	sub	 %6443 %6444
%6446:	icmp	 %6437 %6445
%6447:	br	 %6446 if.end52 if.then49

BASIC BLOCK if.then49
%6448:	getelementptr	 %6382 XXX XXX
%6449:	load	 %6448
%6450:	getelementptr	 %6382 XXX XXX
%6451:	store	 %6449 %6450
%6452:	br	 if.end52

BASIC BLOCK if.end52
%6453:	getelementptr	 %6382 XXX XXX
%6454:	load	 %6453
%6455:	getelementptr	 %6382 XXX XXX
%6456:	store	 %6454 %6455
%6457:	getelementptr	 %6344 XXX XXX
%6458:	store	 %6403 %6457
%6459:	getelementptr	 %6344 XXX XXX
%6460:	load	 %6459
%6461:	sub	 %6460 XXX
%6462:	getelementptr	 %6344 XXX XXX
%6463:	load	 %6462
%6464:	br	 for.cond56

BASIC BLOCK for.cond56
%6465:	phi	 %6463 %6481
%6466:	phi	 %6461 %6483
%6467:	icmp	 %6466 XXX
%6468:	br	 %6467 for.end66 for.body59

BASIC BLOCK for.body59
%6469:	getelementptr	 %6465 XXX XXX
%6470:	load	 %6469
%6471:	getelementptr	 %6470 XXX XXX
%6472:	load	 %6471
%6473:	sext	 %6466
%6474:	getelementptr	 %6344 XXX XXX
%6475:	load	 %6474
%6476:	getelementptr	 %6475 %6473
%6477:	store	 %6472 %6476
%6478:	getelementptr	 %6465 XXX XXX
%6479:	load	 %6478
%6480:	getelementptr	 %6479 XXX XXX
%6481:	load	 %6480
%6482:	br	 for.inc65

BASIC BLOCK for.inc65
%6483:	add	 %6466 XXX
%6484:	br	 for.cond56

BASIC BLOCK for.end66
%6485:	br	 for.cond67

BASIC BLOCK for.cond67
%6486:	phi	 XXX %6505
%6487:	getelementptr	 %6344 XXX XXX
%6488:	load	 %6487
%6489:	icmp	 %6486 %6488
%6490:	br	 %6489 for.end83 for.body71

BASIC BLOCK for.body71
%6491:	getelementptr	 %6344 XXX XXX
%6492:	load	 %6491
%6493:	add	 %6486 XXX
%6494:	sub	 %6492 %6493
%6495:	trunc	 %6494
%6496:	sext	 %6486
%6497:	getelementptr	 %6344 XXX XXX
%6498:	load	 %6497
%6499:	getelementptr	 %6498 %6496
%6500:	load	 %6499
%6501:	zext	 %6500
%6502:	getelementptr	 %6341 XXX %6501
%6503:	store	 %6495 %6502
%6504:	br	 for.inc81

BASIC BLOCK for.inc81
%6505:	add	 %6486 XXX
%6506:	br	 for.cond67

BASIC BLOCK for.end83
%6507:	getelementptr	 %6344 XXX XXX
%6508:	load	 %6507
%6509:	getelementptr	 %6344 XXX XXX
%6510:	store	 %6508 %6509
%6511:	br	 for.cond86

BASIC BLOCK for.cond86
%6512:	phi	 XXX %6543
%6513:	getelementptr	 %6344 XXX XXX
%6514:	load	 %6513
%6515:	sub	 %6514 XXX
%6516:	icmp	 %6512 %6515
%6517:	br	 %6516 for.end112 for.body91

BASIC BLOCK for.body91
%6518:	sext	 %6512
%6519:	getelementptr	 %6344 XXX XXX
%6520:	load	 %6519
%6521:	getelementptr	 %6520 %6518
%6522:	load	 %6521
%6523:	sext	 %6522
%6524:	getelementptr	 %6344 XXX XXX
%6525:	load	 %6524
%6526:	sub	 %6525 XXX
%6527:	sext	 %6526
%6528:	getelementptr	 %6344 XXX XXX
%6529:	load	 %6528
%6530:	getelementptr	 %6529 %6527
%6531:	load	 %6530
%6532:	sext	 %6531
%6533:	icmp	 %6523 %6532
%6534:	br	 %6533 if.end109 if.then104

BASIC BLOCK if.then104
%6535:	getelementptr	 %6344 XXX XXX
%6536:	load	 %6535
%6537:	add	 %6512 XXX
%6538:	sub	 %6536 %6537
%6539:	getelementptr	 %6344 XXX XXX
%6540:	store	 %6538 %6539
%6541:	br	 if.end109

BASIC BLOCK if.end109
%6542:	br	 for.inc110

BASIC BLOCK for.inc110
%6543:	add	 %6512 XXX
%6544:	br	 for.cond86

BASIC BLOCK for.end112
%6545:	br	 if.end234

BASIC BLOCK if.else113
%6546:	getelementptr	 %6344 XXX XXX
%6547:	load	 %6546
%6548:	store	 %6547 %6342
%6549:	br	 for.cond115

BASIC BLOCK for.cond115
%6550:	phi	 %6547 %6635
%6551:	icmp	 %6550 XXX
%6552:	br	 %6551 for.end164 for.body116

BASIC BLOCK for.body116
%6553:	getelementptr	 %6550 XXX XXX
%6554:	load	 %6553
%6555:	call	 %6554 %6342 enqueue
%6556:	getelementptr	 %6344 XXX XXX
%6557:	load	 %6556
%6558:	getelementptr	 %6550 XXX XXX
%6559:	store	 %6557 %6558
%6560:	getelementptr	 %6344 XXX XXX
%6561:	load	 %6560
%6562:	getelementptr	 %6550 XXX XXX
%6563:	store	 %6561 %6562
%6564:	getelementptr	 %6550 XXX XXX
%6565:	load	 %6564
%6566:	getelementptr	 %6550 XXX XXX
%6567:	load	 %6566
%6568:	getelementptr	 %6341 XXX XXX
%6569:	call	 %6565 %6567 %6568 treedelta
%6570:	getelementptr	 %6550 XXX XXX
%6571:	load	 %6570
%6572:	getelementptr	 %6550 XXX XXX
%6573:	load	 %6572
%6574:	getelementptr	 %6344 XXX XXX
%6575:	load	 %6574
%6576:	call	 %6571 %6573 %6575 treefails
%6577:	getelementptr	 %6550 XXX XXX
%6578:	load	 %6577
%6579:	br	 for.cond125

BASIC BLOCK for.cond125
%6580:	phi	 %6578 %6631
%6581:	icmp	 %6580 XXX
%6582:	br	 %6581 for.end161 for.body127

BASIC BLOCK for.body127
%6583:	getelementptr	 %6580 XXX XXX
%6584:	load	 %6583
%6585:	getelementptr	 %6550 XXX XXX
%6586:	load	 %6585
%6587:	call	 %6584 %6586 hasevery
%6588:	icmp	 %6587 XXX
%6589:	br	 %6588 if.then131 if.end144

BASIC BLOCK if.then131
%6590:	getelementptr	 %6550 XXX XXX
%6591:	load	 %6590
%6592:	getelementptr	 %6580 XXX XXX
%6593:	load	 %6592
%6594:	sub	 %6591 %6593
%6595:	getelementptr	 %6580 XXX XXX
%6596:	load	 %6595
%6597:	icmp	 %6594 %6596
%6598:	br	 %6597 if.end143 if.then138

BASIC BLOCK if.then138
%6599:	getelementptr	 %6550 XXX XXX
%6600:	load	 %6599
%6601:	getelementptr	 %6580 XXX XXX
%6602:	load	 %6601
%6603:	sub	 %6600 %6602
%6604:	getelementptr	 %6580 XXX XXX
%6605:	store	 %6603 %6604
%6606:	br	 if.end143

BASIC BLOCK if.end143
%6607:	br	 if.end144

BASIC BLOCK if.end144
%6608:	getelementptr	 %6550 XXX XXX
%6609:	load	 %6608
%6610:	icmp	 %6609 XXX
%6611:	br	 %6610 if.end158 land.lhs.true146

BASIC BLOCK land.lhs.true146
%6612:	getelementptr	 %6580 XXX XXX
%6613:	load	 %6612
%6614:	getelementptr	 %6550 XXX XXX
%6615:	load	 %6614
%6616:	getelementptr	 %6580 XXX XXX
%6617:	load	 %6616
%6618:	sub	 %6615 %6617
%6619:	icmp	 %6613 %6618
%6620:	br	 %6619 if.end158 if.then153

BASIC BLOCK if.then153
%6621:	getelementptr	 %6550 XXX XXX
%6622:	load	 %6621
%6623:	getelementptr	 %6580 XXX XXX
%6624:	load	 %6623
%6625:	sub	 %6622 %6624
%6626:	getelementptr	 %6580 XXX XXX
%6627:	store	 %6625 %6626
%6628:	br	 if.end158

BASIC BLOCK if.end158
%6629:	br	 for.inc159

BASIC BLOCK for.inc159
%6630:	getelementptr	 %6580 XXX XXX
%6631:	load	 %6630
%6632:	br	 for.cond125

BASIC BLOCK for.end161
%6633:	br	 for.inc162

BASIC BLOCK for.inc162
%6634:	getelementptr	 %6550 XXX XXX
%6635:	load	 %6634
%6636:	br	 for.cond115

BASIC BLOCK for.end164
%6637:	getelementptr	 %6344 XXX XXX
%6638:	load	 %6637
%6639:	getelementptr	 %6638 XXX XXX
%6640:	load	 %6639
%6641:	br	 for.cond167

BASIC BLOCK for.cond167
%6642:	phi	 %6640 %6673
%6643:	icmp	 %6642 XXX
%6644:	br	 %6643 for.end189 for.body169

BASIC BLOCK for.body169
%6645:	getelementptr	 %6642 XXX XXX
%6646:	load	 %6645
%6647:	getelementptr	 %6642 XXX XXX
%6648:	load	 %6647
%6649:	getelementptr	 %6648 XXX XXX
%6650:	load	 %6649
%6651:	icmp	 %6646 %6650
%6652:	br	 %6651 if.end178 if.then174

BASIC BLOCK if.then174
%6653:	getelementptr	 %6642 XXX XXX
%6654:	load	 %6653
%6655:	getelementptr	 %6654 XXX XXX
%6656:	load	 %6655
%6657:	getelementptr	 %6642 XXX XXX
%6658:	store	 %6656 %6657
%6659:	br	 if.end178

BASIC BLOCK if.end178
%6660:	getelementptr	 %6642 XXX XXX
%6661:	load	 %6660
%6662:	getelementptr	 %6642 XXX XXX
%6663:	load	 %6662
%6664:	icmp	 %6661 %6663
%6665:	br	 %6664 if.end186 if.then183

BASIC BLOCK if.then183
%6666:	getelementptr	 %6642 XXX XXX
%6667:	load	 %6666
%6668:	getelementptr	 %6642 XXX XXX
%6669:	store	 %6667 %6668
%6670:	br	 if.end186

BASIC BLOCK if.end186
%6671:	br	 for.inc187

BASIC BLOCK for.inc187
%6672:	getelementptr	 %6642 XXX XXX
%6673:	load	 %6672
%6674:	br	 for.cond167

BASIC BLOCK for.end189
%6675:	br	 for.cond190

BASIC BLOCK for.cond190
%6676:	phi	 XXX %6683
%6677:	icmp	 %6676 XXX
%6678:	br	 %6677 for.end198 for.body193

BASIC BLOCK for.body193
%6679:	sext	 %6676
%6680:	getelementptr	 %6343 XXX %6679
%6681:	store	 XXX %6680
%6682:	br	 for.inc196

BASIC BLOCK for.inc196
%6683:	add	 %6676 XXX
%6684:	br	 for.cond190

BASIC BLOCK for.end198
%6685:	getelementptr	 %6344 XXX XXX
%6686:	load	 %6685
%6687:	getelementptr	 %6686 XXX XXX
%6688:	load	 %6687
%6689:	getelementptr	 %6343 XXX XXX
%6690:	call	 %6688 %6689 treenext
%6691:	getelementptr	 %6344 XXX XXX
%6692:	load	 %6691
%6693:	icmp	 %6692 XXX
%6694:	br	 %6693 if.else220 if.then205

BASIC BLOCK if.then205
%6695:	br	 for.cond206

BASIC BLOCK for.cond206
%6696:	phi	 XXX %6710
%6697:	icmp	 %6696 XXX
%6698:	br	 %6697 for.end219 for.body209

BASIC BLOCK for.body209
%6699:	sext	 %6696
%6700:	getelementptr	 %6692 %6699
%6701:	load	 %6700
%6702:	zext	 %6701
%6703:	getelementptr	 %6343 XXX %6702
%6704:	load	 %6703
%6705:	sext	 %6696
%6706:	getelementptr	 %6344 XXX XXX
%6707:	getelementptr	 %6706 XXX %6705
%6708:	store	 %6704 %6707
%6709:	br	 for.inc217

BASIC BLOCK for.inc217
%6710:	add	 %6696 XXX
%6711:	br	 for.cond206

BASIC BLOCK for.end219
%6712:	br	 if.end233

BASIC BLOCK if.else220
%6713:	br	 for.cond221

BASIC BLOCK for.cond221
%6714:	phi	 XXX %6725
%6715:	icmp	 %6714 XXX
%6716:	br	 %6715 for.end232 for.body224

BASIC BLOCK for.body224
%6717:	sext	 %6714
%6718:	getelementptr	 %6343 XXX %6717
%6719:	load	 %6718
%6720:	sext	 %6714
%6721:	getelementptr	 %6344 XXX XXX
%6722:	getelementptr	 %6721 XXX %6720
%6723:	store	 %6719 %6722
%6724:	br	 for.inc230

BASIC BLOCK for.inc230
%6725:	add	 %6714 XXX
%6726:	br	 for.cond221

BASIC BLOCK for.end232
%6727:	br	 if.end233

BASIC BLOCK if.end233
%6728:	br	 if.end234

BASIC BLOCK if.end234
%6729:	getelementptr	 %6344 XXX XXX
%6730:	load	 %6729
%6731:	icmp	 %6730 XXX
%6732:	br	 %6731 if.else253 if.then238

BASIC BLOCK if.then238
%6733:	br	 for.cond239

BASIC BLOCK for.cond239
%6734:	phi	 XXX %6748
%6735:	icmp	 %6734 XXX
%6736:	br	 %6735 for.end252 for.body242

BASIC BLOCK for.body242
%6737:	sext	 %6734
%6738:	getelementptr	 %6730 %6737
%6739:	load	 %6738
%6740:	zext	 %6739
%6741:	getelementptr	 %6341 XXX %6740
%6742:	load	 %6741
%6743:	sext	 %6734
%6744:	getelementptr	 %6344 XXX XXX
%6745:	getelementptr	 %6744 XXX %6743
%6746:	store	 %6742 %6745
%6747:	br	 for.inc250

BASIC BLOCK for.inc250
%6748:	add	 %6734 XXX
%6749:	br	 for.cond239

BASIC BLOCK for.end252
%6750:	br	 if.end266

BASIC BLOCK if.else253
%6751:	br	 for.cond254

BASIC BLOCK for.cond254
%6752:	phi	 XXX %6763
%6753:	icmp	 %6752 XXX
%6754:	br	 %6753 for.end265 for.body257

BASIC BLOCK for.body257
%6755:	sext	 %6752
%6756:	getelementptr	 %6341 XXX %6755
%6757:	load	 %6756
%6758:	sext	 %6752
%6759:	getelementptr	 %6344 XXX XXX
%6760:	getelementptr	 %6759 XXX %6758
%6761:	store	 %6757 %6760
%6762:	br	 for.inc263

BASIC BLOCK for.inc263
%6763:	add	 %6752 XXX
%6764:	br	 for.cond254

BASIC BLOCK for.end265
%6765:	br	 if.end266

BASIC BLOCK if.end266
%6766:	ret	 XXX

FUNCTION enqueue

BASIC BLOCK entry
%6767:	icmp	 tree XXX
%6768:	br	 %6767 if.then if.end

BASIC BLOCK if.then
%6769:	br	 return

BASIC BLOCK if.end
%6770:	getelementptr	 tree XXX XXX
%6771:	load	 %6770
%6772:	call	 %6771 last enqueue
%6773:	getelementptr	 tree XXX XXX
%6774:	load	 %6773
%6775:	call	 %6774 last enqueue
%6776:	getelementptr	 tree XXX XXX
%6777:	load	 %6776
%6778:	load	 last
%6779:	getelementptr	 %6778 XXX XXX
%6780:	store	 %6777 %6779
%6781:	store	 %6777 last
%6782:	br	 return

BASIC BLOCK return
%6783:	ret	

FUNCTION treedelta

BASIC BLOCK entry
%6784:	icmp	 tree XXX
%6785:	br	 %6784 if.then if.end

BASIC BLOCK if.then
%6786:	br	 if.end7

BASIC BLOCK if.end
%6787:	getelementptr	 tree XXX XXX
%6788:	load	 %6787
%6789:	call	 %6788 depth delta treedelta
%6790:	getelementptr	 tree XXX XXX
%6791:	load	 %6790
%6792:	call	 %6791 depth delta treedelta
%6793:	getelementptr	 tree XXX XXX
%6794:	load	 %6793
%6795:	zext	 %6794
%6796:	getelementptr	 delta %6795
%6797:	load	 %6796
%6798:	zext	 %6797
%6799:	icmp	 depth %6798
%6800:	br	 %6799 if.end7 if.then2

BASIC BLOCK if.then2
%6801:	trunc	 depth
%6802:	getelementptr	 tree XXX XXX
%6803:	load	 %6802
%6804:	zext	 %6803
%6805:	getelementptr	 delta %6804
%6806:	store	 %6801 %6805
%6807:	br	 if.end7

BASIC BLOCK if.end7
%6808:	ret	

FUNCTION treefails

BASIC BLOCK entry
%6809:	icmp	 tree XXX
%6810:	br	 %6809 if.then if.end

BASIC BLOCK if.then
%6811:	br	 return

BASIC BLOCK if.end
%6812:	getelementptr	 tree XXX XXX
%6813:	load	 %6812
%6814:	call	 %6813 fail recourse treefails
%6815:	getelementptr	 tree XXX XXX
%6816:	load	 %6815
%6817:	call	 %6816 fail recourse treefails
%6818:	br	 while.cond

BASIC BLOCK while.cond
%6819:	phi	 fail %6864
%6820:	icmp	 %6819 XXX
%6821:	br	 %6820 while.end24 while.body

BASIC BLOCK while.body
%6822:	getelementptr	 %6819 XXX XXX
%6823:	load	 %6822
%6824:	br	 while.cond2

BASIC BLOCK while.cond2
%6825:	phi	 %6823 %6852
%6826:	icmp	 %6825 XXX
%6827:	br	 %6826 land.end land.rhs

BASIC BLOCK land.rhs
%6828:	getelementptr	 tree XXX XXX
%6829:	load	 %6828
%6830:	zext	 %6829
%6831:	getelementptr	 %6825 XXX XXX
%6832:	load	 %6831
%6833:	zext	 %6832
%6834:	icmp	 %6830 %6833
%6835:	br	 land.end

BASIC BLOCK land.end
%6836:	phi	 XXX %6834
%6837:	br	 %6836 while.end while.body7

BASIC BLOCK while.body7
%6838:	getelementptr	 tree XXX XXX
%6839:	load	 %6838
%6840:	zext	 %6839
%6841:	getelementptr	 %6825 XXX XXX
%6842:	load	 %6841
%6843:	zext	 %6842
%6844:	icmp	 %6840 %6843
%6845:	br	 %6844 if.else if.then14

BASIC BLOCK if.then14
%6846:	getelementptr	 %6825 XXX XXX
%6847:	load	 %6846
%6848:	br	 if.end17

BASIC BLOCK if.else
%6849:	getelementptr	 %6825 XXX XXX
%6850:	load	 %6849
%6851:	br	 if.end17

BASIC BLOCK if.end17
%6852:	phi	 %6847 %6850
%6853:	br	 while.cond2

BASIC BLOCK while.end
%6854:	icmp	 %6825 XXX
%6855:	br	 %6854 if.end22 if.then19

BASIC BLOCK if.then19
%6856:	getelementptr	 %6825 XXX XXX
%6857:	load	 %6856
%6858:	getelementptr	 tree XXX XXX
%6859:	load	 %6858
%6860:	getelementptr	 %6859 XXX XXX
%6861:	store	 %6857 %6860
%6862:	br	 return

BASIC BLOCK if.end22
%6863:	getelementptr	 %6819 XXX XXX
%6864:	load	 %6863
%6865:	br	 while.cond

BASIC BLOCK while.end24
%6866:	getelementptr	 tree XXX XXX
%6867:	load	 %6866
%6868:	getelementptr	 %6867 XXX XXX
%6869:	store	 recourse %6868
%6870:	br	 return

BASIC BLOCK return
%6871:	ret	

FUNCTION hasevery

BASIC BLOCK entry
%6872:	icmp	 b XXX
%6873:	br	 %6872 if.then if.end

BASIC BLOCK if.then
%6874:	br	 return

BASIC BLOCK if.end
%6875:	getelementptr	 b XXX XXX
%6876:	load	 %6875
%6877:	call	 a %6876 hasevery
%6878:	icmp	 %6877 XXX
%6879:	br	 %6878 if.then2 if.end3

BASIC BLOCK if.then2
%6880:	br	 return

BASIC BLOCK if.end3
%6881:	getelementptr	 b XXX XXX
%6882:	load	 %6881
%6883:	call	 a %6882 hasevery
%6884:	icmp	 %6883 XXX
%6885:	br	 %6884 if.then6 if.end7

BASIC BLOCK if.then6
%6886:	br	 return

BASIC BLOCK if.end7
%6887:	br	 while.cond

BASIC BLOCK while.cond
%6888:	phi	 a %6915
%6889:	icmp	 %6888 XXX
%6890:	br	 %6889 land.end land.rhs

BASIC BLOCK land.rhs
%6891:	getelementptr	 b XXX XXX
%6892:	load	 %6891
%6893:	zext	 %6892
%6894:	getelementptr	 %6888 XXX XXX
%6895:	load	 %6894
%6896:	zext	 %6895
%6897:	icmp	 %6893 %6896
%6898:	br	 land.end

BASIC BLOCK land.end
%6899:	phi	 XXX %6897
%6900:	br	 %6899 while.end while.body

BASIC BLOCK while.body
%6901:	getelementptr	 b XXX XXX
%6902:	load	 %6901
%6903:	zext	 %6902
%6904:	getelementptr	 %6888 XXX XXX
%6905:	load	 %6904
%6906:	zext	 %6905
%6907:	icmp	 %6903 %6906
%6908:	br	 %6907 if.else if.then18

BASIC BLOCK if.then18
%6909:	getelementptr	 %6888 XXX XXX
%6910:	load	 %6909
%6911:	br	 if.end21

BASIC BLOCK if.else
%6912:	getelementptr	 %6888 XXX XXX
%6913:	load	 %6912
%6914:	br	 if.end21

BASIC BLOCK if.end21
%6915:	phi	 %6910 %6913
%6916:	br	 while.cond

BASIC BLOCK while.end
%6917:	icmp	 %6888 XXX
%6918:	xor	 %6917 XXX
%6919:	xor	 %6918 XXX
%6920:	zext	 %6919
%6921:	br	 return

BASIC BLOCK return
%6922:	phi	 %6920 XXX XXX XXX
%6923:	ret	 %6922

FUNCTION treenext

BASIC BLOCK entry
%6924:	icmp	 tree XXX
%6925:	br	 %6924 if.then if.end

BASIC BLOCK if.then
%6926:	br	 return

BASIC BLOCK if.end
%6927:	getelementptr	 tree XXX XXX
%6928:	load	 %6927
%6929:	call	 %6928 next treenext
%6930:	getelementptr	 tree XXX XXX
%6931:	load	 %6930
%6932:	call	 %6931 next treenext
%6933:	getelementptr	 tree XXX XXX
%6934:	load	 %6933
%6935:	getelementptr	 tree XXX XXX
%6936:	load	 %6935
%6937:	zext	 %6936
%6938:	getelementptr	 next %6937
%6939:	store	 %6934 %6938
%6940:	br	 return

BASIC BLOCK return
%6941:	ret	

FUNCTION kwsexec

BASIC BLOCK entry
%6942:	bitcast	 kws
%6943:	getelementptr	 %6942 XXX XXX
%6944:	load	 %6943
%6945:	icmp	 %6944 XXX
%6946:	br	 %6945 if.else land.lhs.true

BASIC BLOCK land.lhs.true
%6947:	getelementptr	 %6942 XXX XXX
%6948:	load	 %6947
%6949:	icmp	 %6948 XXX
%6950:	br	 %6949 if.else if.then

BASIC BLOCK if.then
%6951:	call	 kws text size bmexec
%6952:	icmp	 kwsmatch XXX
%6953:	br	 %6952 if.end land.lhs.true3

BASIC BLOCK land.lhs.true3
%6954:	icmp	 %6951 XXX
%6955:	br	 %6954 if.end if.then5

BASIC BLOCK if.then5
%6956:	getelementptr	 kwsmatch XXX XXX
%6957:	store	 XXX %6956
%6958:	getelementptr	 kwsmatch XXX XXX
%6959:	getelementptr	 %6958 XXX XXX
%6960:	store	 %6951 %6959
%6961:	getelementptr	 %6942 XXX XXX
%6962:	load	 %6961
%6963:	sext	 %6962
%6964:	getelementptr	 kwsmatch XXX XXX
%6965:	getelementptr	 %6964 XXX XXX
%6966:	store	 %6963 %6965
%6967:	br	 if.end

BASIC BLOCK if.end
%6968:	br	 return

BASIC BLOCK if.else
%6969:	call	 kws text size kwsmatch cwexec
%6970:	br	 return

BASIC BLOCK return
%6971:	phi	 %6951 %6969
%6972:	ret	 %6971

FUNCTION bmexec

BASIC BLOCK entry
%6973:	bitcast	 kws
%6974:	getelementptr	 %6973 XXX XXX
%6975:	load	 %6974
%6976:	icmp	 %6975 XXX
%6977:	br	 %6976 if.end if.then

BASIC BLOCK if.then
%6978:	br	 return

BASIC BLOCK if.end
%6979:	sext	 %6975
%6980:	icmp	 %6979 size
%6981:	br	 %6980 if.end4 if.then3

BASIC BLOCK if.then3
%6982:	br	 return

BASIC BLOCK if.end4
%6983:	icmp	 %6975 XXX
%6984:	br	 %6983 if.end9 if.then7

BASIC BLOCK if.then7
%6985:	getelementptr	 %6973 XXX XXX
%6986:	load	 %6985
%6987:	getelementptr	 %6986 XXX
%6988:	load	 %6987
%6989:	sext	 %6988
%6990:	call	 text %6989 size memchr
%6991:	br	 return

BASIC BLOCK if.end9
%6992:	getelementptr	 %6973 XXX XXX
%6993:	getelementptr	 %6992 XXX XXX
%6994:	getelementptr	 %6973 XXX XXX
%6995:	load	 %6994
%6996:	sext	 %6975
%6997:	getelementptr	 %6995 %6996
%6998:	getelementptr	 %6997 XXX
%6999:	load	 %6998
%7000:	zext	 %6999
%7001:	getelementptr	 %6973 XXX XXX
%7002:	load	 %7001
%7003:	sext	 %6975
%7004:	getelementptr	 text %7003
%7005:	mul	 XXX %6975
%7006:	sext	 %7005
%7007:	icmp	 size %7006
%7008:	br	 %7007 if.end124 if.then18

BASIC BLOCK if.then18
%7009:	getelementptr	 text size
%7010:	mul	 XXX %6975
%7011:	sext	 %7010
%7012:	sub	 XXX %7011
%7013:	getelementptr	 %7009 %7012
%7014:	br	 for.cond

BASIC BLOCK for.cond
%7015:	phi	 %7004 %7146
%7016:	br	 while.cond

BASIC BLOCK while.cond
%7017:	phi	 %7015 %7108
%7018:	icmp	 %7017 %7013
%7019:	br	 %7018 while.end while.body

BASIC BLOCK while.body
%7020:	getelementptr	 %7017 XXX
%7021:	load	 %7020
%7022:	zext	 %7021
%7023:	getelementptr	 %6993 %7022
%7024:	load	 %7023
%7025:	zext	 %7024
%7026:	sext	 %7025
%7027:	getelementptr	 %7017 %7026
%7028:	getelementptr	 %7027 XXX
%7029:	load	 %7028
%7030:	zext	 %7029
%7031:	getelementptr	 %6993 %7030
%7032:	load	 %7031
%7033:	zext	 %7032
%7034:	sext	 %7033
%7035:	getelementptr	 %7027 %7034
%7036:	icmp	 %7033 XXX
%7037:	br	 %7036 if.end39 if.then38

BASIC BLOCK if.then38
%7038:	br	 found

BASIC BLOCK if.end39
%7039:	getelementptr	 %7035 XXX
%7040:	load	 %7039
%7041:	zext	 %7040
%7042:	getelementptr	 %6993 %7041
%7043:	load	 %7042
%7044:	zext	 %7043
%7045:	sext	 %7044
%7046:	getelementptr	 %7035 %7045
%7047:	getelementptr	 %7046 XXX
%7048:	load	 %7047
%7049:	zext	 %7048
%7050:	getelementptr	 %6993 %7049
%7051:	load	 %7050
%7052:	zext	 %7051
%7053:	sext	 %7052
%7054:	getelementptr	 %7046 %7053
%7055:	getelementptr	 %7054 XXX
%7056:	load	 %7055
%7057:	zext	 %7056
%7058:	getelementptr	 %6993 %7057
%7059:	load	 %7058
%7060:	zext	 %7059
%7061:	sext	 %7060
%7062:	getelementptr	 %7054 %7061
%7063:	icmp	 %7060 XXX
%7064:	br	 %7063 if.end61 if.then60

BASIC BLOCK if.then60
%7065:	br	 found

BASIC BLOCK if.end61
%7066:	getelementptr	 %7062 XXX
%7067:	load	 %7066
%7068:	zext	 %7067
%7069:	getelementptr	 %6993 %7068
%7070:	load	 %7069
%7071:	zext	 %7070
%7072:	sext	 %7071
%7073:	getelementptr	 %7062 %7072
%7074:	getelementptr	 %7073 XXX
%7075:	load	 %7074
%7076:	zext	 %7075
%7077:	getelementptr	 %6993 %7076
%7078:	load	 %7077
%7079:	zext	 %7078
%7080:	sext	 %7079
%7081:	getelementptr	 %7073 %7080
%7082:	getelementptr	 %7081 XXX
%7083:	load	 %7082
%7084:	zext	 %7083
%7085:	getelementptr	 %6993 %7084
%7086:	load	 %7085
%7087:	zext	 %7086
%7088:	sext	 %7087
%7089:	getelementptr	 %7081 %7088
%7090:	icmp	 %7087 XXX
%7091:	br	 %7090 if.end83 if.then82

BASIC BLOCK if.then82
%7092:	br	 found

BASIC BLOCK if.end83
%7093:	getelementptr	 %7089 XXX
%7094:	load	 %7093
%7095:	zext	 %7094
%7096:	getelementptr	 %6993 %7095
%7097:	load	 %7096
%7098:	zext	 %7097
%7099:	sext	 %7098
%7100:	getelementptr	 %7089 %7099
%7101:	getelementptr	 %7100 XXX
%7102:	load	 %7101
%7103:	zext	 %7102
%7104:	getelementptr	 %6993 %7103
%7105:	load	 %7104
%7106:	zext	 %7105
%7107:	sext	 %7106
%7108:	getelementptr	 %7100 %7107
%7109:	br	 while.cond

BASIC BLOCK while.end
%7110:	br	 for.end123

BASIC BLOCK found
%7111:	phi	 %7035 %7062 %7089
%7112:	getelementptr	 %7111 XXX
%7113:	load	 %7112
%7114:	zext	 %7113
%7115:	icmp	 %7114 %7000
%7116:	br	 %7115 if.end120 if.then100

BASIC BLOCK if.then100
%7117:	br	 for.cond101

BASIC BLOCK for.cond101
%7118:	phi	 XXX %7136
%7119:	icmp	 %7118 %6975
%7120:	br	 %7119 land.end land.rhs

BASIC BLOCK land.rhs
%7121:	sub	 XXX %7118
%7122:	sext	 %7121
%7123:	getelementptr	 %7111 %7122
%7124:	load	 %7123
%7125:	zext	 %7124
%7126:	sub	 XXX %7118
%7127:	sext	 %7126
%7128:	getelementptr	 %6997 %7127
%7129:	load	 %7128
%7130:	zext	 %7129
%7131:	icmp	 %7125 %7130
%7132:	br	 land.end

BASIC BLOCK land.end
%7133:	phi	 XXX %7131
%7134:	br	 %7133 for.end for.body

BASIC BLOCK for.body
%7135:	br	 for.inc

BASIC BLOCK for.inc
%7136:	add	 %7118 XXX
%7137:	br	 for.cond101

BASIC BLOCK for.end
%7138:	icmp	 %7118 %6975
%7139:	br	 %7138 if.end119 if.then115

BASIC BLOCK if.then115
%7140:	sext	 %6975
%7141:	sub	 XXX %7140
%7142:	getelementptr	 %7111 %7141
%7143:	br	 return

BASIC BLOCK if.end119
%7144:	br	 if.end120

BASIC BLOCK if.end120
%7145:	sext	 %7002
%7146:	getelementptr	 %7111 %7145
%7147:	br	 for.cond

BASIC BLOCK for.end123
%7148:	br	 if.end124

BASIC BLOCK if.end124
%7149:	phi	 %7017 %7004
%7150:	getelementptr	 text size
%7151:	getelementptr	 %7149 XXX
%7152:	load	 %7151
%7153:	zext	 %7152
%7154:	getelementptr	 %6993 %7153
%7155:	load	 %7154
%7156:	zext	 %7155
%7157:	br	 while.cond130

BASIC BLOCK while.cond130
%7158:	phi	 %7149 %7167 %7167
%7159:	phi	 %7156 %7173 %7002
%7160:	sext	 %7159
%7161:	ptrtoint	 %7150
%7162:	ptrtoint	 %7158
%7163:	sub	 %7161 %7162
%7164:	icmp	 %7160 %7163
%7165:	br	 %7164 while.end177 while.body134

BASIC BLOCK while.body134
%7166:	sext	 %7159
%7167:	getelementptr	 %7158 %7166
%7168:	getelementptr	 %7167 XXX
%7169:	load	 %7168
%7170:	zext	 %7169
%7171:	getelementptr	 %6993 %7170
%7172:	load	 %7171
%7173:	zext	 %7172
%7174:	icmp	 %7173 XXX
%7175:	br	 %7174 if.end144 if.then143

BASIC BLOCK if.then143
%7176:	br	 while.cond130

BASIC BLOCK if.end144
%7177:	getelementptr	 %7167 XXX
%7178:	load	 %7177
%7179:	zext	 %7178
%7180:	icmp	 %7179 %7000
%7181:	br	 %7180 if.end176 if.then149

BASIC BLOCK if.then149
%7182:	br	 for.cond150

BASIC BLOCK for.cond150
%7183:	phi	 XXX %7201
%7184:	icmp	 %7183 %6975
%7185:	br	 %7184 land.end164 land.rhs153

BASIC BLOCK land.rhs153
%7186:	sub	 XXX %7183
%7187:	sext	 %7186
%7188:	getelementptr	 %7167 %7187
%7189:	load	 %7188
%7190:	zext	 %7189
%7191:	sub	 XXX %7183
%7192:	sext	 %7191
%7193:	getelementptr	 %6997 %7192
%7194:	load	 %7193
%7195:	zext	 %7194
%7196:	icmp	 %7190 %7195
%7197:	br	 land.end164

BASIC BLOCK land.end164
%7198:	phi	 XXX %7196
%7199:	br	 %7198 for.end168 for.body165

BASIC BLOCK for.body165
%7200:	br	 for.inc166

BASIC BLOCK for.inc166
%7201:	add	 %7183 XXX
%7202:	br	 for.cond150

BASIC BLOCK for.end168
%7203:	icmp	 %7183 %6975
%7204:	br	 %7203 if.end175 if.then171

BASIC BLOCK if.then171
%7205:	sext	 %6975
%7206:	sub	 XXX %7205
%7207:	getelementptr	 %7167 %7206
%7208:	br	 return

BASIC BLOCK if.end175
%7209:	br	 if.end176

BASIC BLOCK if.end176
%7210:	br	 while.cond130

BASIC BLOCK while.end177
%7211:	br	 return

BASIC BLOCK return
%7212:	phi	 text XXX %6990 %7142 %7207 XXX
%7213:	ret	 %7212

FUNCTION cwexec

BASIC BLOCK entry
%7214:	bitcast	 kws
%7215:	getelementptr	 %7214 XXX XXX
%7216:	load	 %7215
%7217:	sext	 %7216
%7218:	icmp	 len %7217
%7219:	br	 %7218 if.end if.then

BASIC BLOCK if.then
%7220:	br	 return

BASIC BLOCK if.end
%7221:	getelementptr	 %7214 XXX XXX
%7222:	getelementptr	 %7221 XXX XXX
%7223:	getelementptr	 %7214 XXX XXX
%7224:	getelementptr	 %7223 XXX XXX
%7225:	getelementptr	 %7214 XXX XXX
%7226:	load	 %7225
%7227:	getelementptr	 text len
%7228:	getelementptr	 %7214 XXX XXX
%7229:	load	 %7228
%7230:	icmp	 %7229 XXX
%7231:	br	 %7230 if.else if.then9

BASIC BLOCK if.then9
%7232:	br	 if.end11

BASIC BLOCK if.else
%7233:	getelementptr	 %7214 XXX XXX
%7234:	load	 %7233
%7235:	br	 match

BASIC BLOCK if.end11
%7236:	getelementptr	 %7214 XXX XXX
%7237:	load	 %7236
%7238:	mul	 XXX %7237
%7239:	sext	 %7238
%7240:	icmp	 len %7239
%7241:	br	 %7240 if.else20 if.then16

BASIC BLOCK if.then16
%7242:	getelementptr	 %7214 XXX XXX
%7243:	load	 %7242
%7244:	mul	 XXX %7243
%7245:	sext	 %7244
%7246:	sub	 XXX %7245
%7247:	getelementptr	 %7227 %7246
%7248:	br	 if.end21

BASIC BLOCK if.else20
%7249:	br	 if.end21

BASIC BLOCK if.end21
%7250:	phi	 %7247 XXX
%7251:	br	 while.cond

BASIC BLOCK while.cond
%7252:	phi	 XXX %7252 %7330
%7253:	phi	 XXX %7253 %7332
%7254:	phi	 %7229 %7311 %7334
%7255:	phi	 text %7312 %7312
%7256:	ptrtoint	 %7227
%7257:	ptrtoint	 %7255
%7258:	sub	 %7256 %7257
%7259:	sext	 %7254
%7260:	icmp	 %7258 %7259
%7261:	br	 %7260 while.end109 while.body

BASIC BLOCK while.body
%7262:	icmp	 %7250 XXX
%7263:	br	 %7262 if.else48 land.lhs.true

BASIC BLOCK land.lhs.true
%7264:	icmp	 %7255 %7250
%7265:	br	 %7264 if.else48 if.then27

BASIC BLOCK if.then27
%7266:	sub	 %7254 XXX
%7267:	sext	 %7266
%7268:	getelementptr	 %7255 %7267
%7269:	br	 while.cond30

BASIC BLOCK while.cond30
%7270:	phi	 %7268 %7297
%7271:	load	 %7270
%7272:	zext	 %7271
%7273:	getelementptr	 %7224 %7272
%7274:	load	 %7273
%7275:	zext	 %7274
%7276:	icmp	 %7275 XXX
%7277:	br	 %7276 land.end land.rhs

BASIC BLOCK land.rhs
%7278:	icmp	 %7270 %7250
%7279:	br	 land.end

BASIC BLOCK land.end
%7280:	phi	 XXX %7278
%7281:	br	 %7280 while.end while.body35

BASIC BLOCK while.body35
%7282:	sext	 %7275
%7283:	getelementptr	 %7270 %7282
%7284:	load	 %7283
%7285:	zext	 %7284
%7286:	getelementptr	 %7224 %7285
%7287:	load	 %7286
%7288:	zext	 %7287
%7289:	sext	 %7288
%7290:	getelementptr	 %7283 %7289
%7291:	load	 %7290
%7292:	zext	 %7291
%7293:	getelementptr	 %7224 %7292
%7294:	load	 %7293
%7295:	zext	 %7294
%7296:	sext	 %7295
%7297:	getelementptr	 %7290 %7296
%7298:	br	 while.cond30

BASIC BLOCK while.end
%7299:	getelementptr	 %7270 XXX
%7300:	br	 if.end55

BASIC BLOCK if.else48
%7301:	sext	 %7254
%7302:	getelementptr	 %7255 %7301
%7303:	getelementptr	 %7302 XXX
%7304:	load	 %7303
%7305:	zext	 %7304
%7306:	getelementptr	 %7224 %7305
%7307:	load	 %7306
%7308:	zext	 %7307
%7309:	br	 if.end55

BASIC BLOCK if.end55
%7310:	phi	 %7271 %7304
%7311:	phi	 %7275 %7308
%7312:	phi	 %7299 %7302
%7313:	icmp	 %7311 XXX
%7314:	br	 %7313 if.end58 if.then57

BASIC BLOCK if.then57
%7315:	br	 while.cond

BASIC BLOCK if.end58
%7316:	getelementptr	 %7312 XXX
%7317:	zext	 %7310
%7318:	getelementptr	 %7222 %7317
%7319:	load	 %7318
%7320:	getelementptr	 %7319 XXX XXX
%7321:	load	 %7320
%7322:	icmp	 %7321 XXX
%7323:	br	 %7322 if.end64 if.then63

BASIC BLOCK if.then63
%7324:	br	 if.end64

BASIC BLOCK if.end64
%7325:	phi	 %7316 %7252
%7326:	phi	 %7319 %7253
%7327:	getelementptr	 %7319 XXX XXX
%7328:	load	 %7327
%7329:	br	 while.cond65

BASIC BLOCK while.cond65
%7330:	phi	 %7325 %7390
%7331:	phi	 %7316 %7350
%7332:	phi	 %7326 %7391
%7333:	phi	 %7319 %7384
%7334:	phi	 %7328 %7395
%7335:	icmp	 %7331 text
%7336:	br	 %7335 while.end105 while.body68

BASIC BLOCK while.body68
%7337:	icmp	 %7226 XXX
%7338:	br	 %7337 cond.false cond.true

BASIC BLOCK cond.true
%7339:	getelementptr	 %7331 XXX
%7340:	load	 %7339
%7341:	zext	 %7340
%7342:	getelementptr	 %7226 %7341
%7343:	load	 %7342
%7344:	sext	 %7343
%7345:	br	 cond.end

BASIC BLOCK cond.false
%7346:	getelementptr	 %7331 XXX
%7347:	load	 %7346
%7348:	sext	 %7347
%7349:	br	 cond.end

BASIC BLOCK cond.end
%7350:	phi	 %7339 %7346
%7351:	phi	 %7344 %7348
%7352:	trunc	 %7351
%7353:	getelementptr	 %7333 XXX XXX
%7354:	load	 %7353
%7355:	br	 while.cond77

BASIC BLOCK while.cond77
%7356:	phi	 %7354 %7379
%7357:	icmp	 %7356 XXX
%7358:	br	 %7357 land.end84 land.rhs79

BASIC BLOCK land.rhs79
%7359:	zext	 %7352
%7360:	getelementptr	 %7356 XXX XXX
%7361:	load	 %7360
%7362:	zext	 %7361
%7363:	icmp	 %7359 %7362
%7364:	br	 land.end84

BASIC BLOCK land.end84
%7365:	phi	 XXX %7363
%7366:	br	 %7365 while.end94 while.body85

BASIC BLOCK while.body85
%7367:	zext	 %7352
%7368:	getelementptr	 %7356 XXX XXX
%7369:	load	 %7368
%7370:	zext	 %7369
%7371:	icmp	 %7367 %7370
%7372:	br	 %7371 if.else92 if.then91

BASIC BLOCK if.then91
%7373:	getelementptr	 %7356 XXX XXX
%7374:	load	 %7373
%7375:	br	 if.end93

BASIC BLOCK if.else92
%7376:	getelementptr	 %7356 XXX XXX
%7377:	load	 %7376
%7378:	br	 if.end93

BASIC BLOCK if.end93
%7379:	phi	 %7374 %7377
%7380:	br	 while.cond77

BASIC BLOCK while.end94
%7381:	icmp	 %7356 XXX
%7382:	br	 %7381 if.else102 if.then96

BASIC BLOCK if.then96
%7383:	getelementptr	 %7356 XXX XXX
%7384:	load	 %7383
%7385:	getelementptr	 %7384 XXX XXX
%7386:	load	 %7385
%7387:	icmp	 %7386 XXX
%7388:	br	 %7387 if.end101 if.then100

BASIC BLOCK if.then100
%7389:	br	 if.end101

BASIC BLOCK if.end101
%7390:	phi	 %7350 %7330
%7391:	phi	 %7384 %7332
%7392:	br	 if.end103

BASIC BLOCK if.else102
%7393:	br	 while.end105

BASIC BLOCK if.end103
%7394:	getelementptr	 %7384 XXX XXX
%7395:	load	 %7394
%7396:	br	 while.cond65

BASIC BLOCK while.end105
%7397:	icmp	 %7330 XXX
%7398:	br	 %7397 if.end108 if.then107

BASIC BLOCK if.then107
%7399:	br	 match

BASIC BLOCK if.end108
%7400:	br	 while.cond

BASIC BLOCK while.end109
%7401:	br	 return

BASIC BLOCK match
%7402:	phi	 %7330 %7464 text
%7403:	phi	 %7227 %7419 %7227
%7404:	phi	 %7332 %7462 %7234
%7405:	phi	 %7312 %7432 text
%7406:	ptrtoint	 %7403
%7407:	ptrtoint	 %7402
%7408:	sub	 %7406 %7407
%7409:	getelementptr	 %7214 XXX XXX
%7410:	load	 %7409
%7411:	sext	 %7410
%7412:	icmp	 %7408 %7411
%7413:	br	 %7412 if.end120 if.then116

BASIC BLOCK if.then116
%7414:	getelementptr	 %7214 XXX XXX
%7415:	load	 %7414
%7416:	sext	 %7415
%7417:	getelementptr	 %7402 %7416
%7418:	br	 if.end120

BASIC BLOCK if.end120
%7419:	phi	 %7417 %7403
%7420:	br	 while.cond121

BASIC BLOCK while.cond121
%7421:	phi	 %7404 %7421 %7462 %7421
%7422:	phi	 XXX %7422 %7464 %7422
%7423:	phi	 XXX %7438 %7536 XXX
%7424:	phi	 %7405 %7432 %7432 %7432
%7425:	ptrtoint	 %7419
%7426:	ptrtoint	 %7424
%7427:	sub	 %7425 %7426
%7428:	sext	 %7423
%7429:	icmp	 %7427 %7428
%7430:	br	 %7429 while.end211 while.body128

BASIC BLOCK while.body128
%7431:	sext	 %7423
%7432:	getelementptr	 %7424 %7431
%7433:	getelementptr	 %7432 XXX
%7434:	load	 %7433
%7435:	zext	 %7434
%7436:	getelementptr	 %7224 %7435
%7437:	load	 %7436
%7438:	zext	 %7437
%7439:	icmp	 %7438 XXX
%7440:	br	 %7439 if.end138 if.then137

BASIC BLOCK if.then137
%7441:	br	 while.cond121

BASIC BLOCK if.end138
%7442:	getelementptr	 %7432 XXX
%7443:	zext	 %7434
%7444:	getelementptr	 %7222 %7443
%7445:	load	 %7444
%7446:	icmp	 %7445 XXX
%7447:	br	 %7446 if.then143 if.end144

BASIC BLOCK if.then143
%7448:	br	 while.cond121

BASIC BLOCK if.end144
%7449:	getelementptr	 %7445 XXX XXX
%7450:	load	 %7449
%7451:	icmp	 %7450 XXX
%7452:	br	 %7451 if.end151 land.lhs.true147

BASIC BLOCK land.lhs.true147
%7453:	icmp	 %7442 %7402
%7454:	br	 %7453 if.end151 if.then150

BASIC BLOCK if.then150
%7455:	br	 if.end151

BASIC BLOCK if.end151
%7456:	phi	 %7445 %7421 %7421
%7457:	phi	 %7442 %7422 %7422
%7458:	getelementptr	 %7445 XXX XXX
%7459:	load	 %7458
%7460:	br	 while.cond153

BASIC BLOCK while.cond153
%7461:	phi	 %7442 %7481
%7462:	phi	 %7456 %7523
%7463:	phi	 %7445 %7515
%7464:	phi	 %7457 %7524
%7465:	phi	 %7459 %7528
%7466:	icmp	 %7461 text
%7467:	br	 %7466 while.end204 while.body156

BASIC BLOCK while.body156
%7468:	icmp	 %7226 XXX
%7469:	br	 %7468 cond.false163 cond.true158

BASIC BLOCK cond.true158
%7470:	getelementptr	 %7461 XXX
%7471:	load	 %7470
%7472:	zext	 %7471
%7473:	getelementptr	 %7226 %7472
%7474:	load	 %7473
%7475:	sext	 %7474
%7476:	br	 cond.end166

BASIC BLOCK cond.false163
%7477:	getelementptr	 %7461 XXX
%7478:	load	 %7477
%7479:	sext	 %7478
%7480:	br	 cond.end166

BASIC BLOCK cond.end166
%7481:	phi	 %7470 %7477
%7482:	phi	 %7475 %7479
%7483:	trunc	 %7482
%7484:	getelementptr	 %7463 XXX XXX
%7485:	load	 %7484
%7486:	br	 while.cond170

BASIC BLOCK while.cond170
%7487:	phi	 %7485 %7510
%7488:	icmp	 %7487 XXX
%7489:	br	 %7488 land.end178 land.rhs172

BASIC BLOCK land.rhs172
%7490:	zext	 %7483
%7491:	getelementptr	 %7487 XXX XXX
%7492:	load	 %7491
%7493:	zext	 %7492
%7494:	icmp	 %7490 %7493
%7495:	br	 land.end178

BASIC BLOCK land.end178
%7496:	phi	 XXX %7494
%7497:	br	 %7496 while.end190 while.body179

BASIC BLOCK while.body179
%7498:	zext	 %7483
%7499:	getelementptr	 %7487 XXX XXX
%7500:	load	 %7499
%7501:	zext	 %7500
%7502:	icmp	 %7498 %7501
%7503:	br	 %7502 if.else187 if.then185

BASIC BLOCK if.then185
%7504:	getelementptr	 %7487 XXX XXX
%7505:	load	 %7504
%7506:	br	 if.end189

BASIC BLOCK if.else187
%7507:	getelementptr	 %7487 XXX XXX
%7508:	load	 %7507
%7509:	br	 if.end189

BASIC BLOCK if.end189
%7510:	phi	 %7505 %7508
%7511:	br	 while.cond170

BASIC BLOCK while.end190
%7512:	icmp	 %7487 XXX
%7513:	br	 %7512 if.else201 if.then192

BASIC BLOCK if.then192
%7514:	getelementptr	 %7487 XXX XXX
%7515:	load	 %7514
%7516:	getelementptr	 %7515 XXX XXX
%7517:	load	 %7516
%7518:	icmp	 %7517 XXX
%7519:	br	 %7518 if.end200 land.lhs.true196

BASIC BLOCK land.lhs.true196
%7520:	icmp	 %7481 %7402
%7521:	br	 %7520 if.end200 if.then199

BASIC BLOCK if.then199
%7522:	br	 if.end200

BASIC BLOCK if.end200
%7523:	phi	 %7515 %7462 %7462
%7524:	phi	 %7481 %7464 %7464
%7525:	br	 if.end202

BASIC BLOCK if.else201
%7526:	br	 while.end204

BASIC BLOCK if.end202
%7527:	getelementptr	 %7515 XXX XXX
%7528:	load	 %7527
%7529:	br	 while.cond153

BASIC BLOCK while.end204
%7530:	icmp	 %7464 XXX
%7531:	br	 %7530 if.end207 if.then206

BASIC BLOCK if.then206
%7532:	br	 match

BASIC BLOCK if.end207
%7533:	icmp	 %7465 XXX
%7534:	br	 %7533 if.then209 if.end210

BASIC BLOCK if.then209
%7535:	br	 if.end210

BASIC BLOCK if.end210
%7536:	phi	 %7465 XXX
%7537:	br	 while.cond121

BASIC BLOCK while.end211
%7538:	icmp	 kwsmatch XXX
%7539:	br	 %7538 if.end219 if.then213

BASIC BLOCK if.then213
%7540:	getelementptr	 %7421 XXX XXX
%7541:	load	 %7540
%7542:	udiv	 %7541 XXX
%7543:	getelementptr	 kwsmatch XXX XXX
%7544:	store	 %7542 %7543
%7545:	getelementptr	 kwsmatch XXX XXX
%7546:	getelementptr	 %7545 XXX XXX
%7547:	store	 %7402 %7546
%7548:	getelementptr	 %7421 XXX XXX
%7549:	load	 %7548
%7550:	sext	 %7549
%7551:	getelementptr	 kwsmatch XXX XXX
%7552:	getelementptr	 %7551 XXX XXX
%7553:	store	 %7550 %7552
%7554:	br	 if.end219

BASIC BLOCK if.end219
%7555:	br	 return

BASIC BLOCK return
%7556:	phi	 XXX %7402 XXX
%7557:	ret	 %7556

FUNCTION Gcompile

BASIC BLOCK entry
%7558:	call	 XXX re_set_syntax
%7559:	load	 match_icase
%7560:	call	 XXX %7559 dfasyntax
%7561:	call	 pattern size regex re_compile_pattern
%7562:	icmp	 %7561 XXX
%7563:	br	 %7562 if.end if.then

BASIC BLOCK if.then
%7564:	call	 %7561 XXX fatal
%7565:	br	 if.end

BASIC BLOCK if.end
%7566:	call	 dfa_1 dfainit
%7567:	load	 match_words
%7568:	icmp	 %7567 XXX
%7569:	br	 %7568 lor.lhs.false if.then3

BASIC BLOCK lor.lhs.false
%7570:	load	 match_lines
%7571:	icmp	 %7570 XXX
%7572:	br	 %7571 if.else if.then3

BASIC BLOCK if.then3
%7573:	add	 size XXX
%7574:	call	 %7573 xmalloc
%7575:	call	 %7574 XXX strcpy
%7576:	load	 match_lines
%7577:	icmp	 %7576 XXX
%7578:	br	 %7577 if.end9 if.then7

BASIC BLOCK if.then7
%7579:	call	 %7574 XXX strcpy
%7580:	br	 if.end9

BASIC BLOCK if.end9
%7581:	load	 match_words
%7582:	icmp	 %7581 XXX
%7583:	br	 %7582 if.end13 if.then11

BASIC BLOCK if.then11
%7584:	call	 %7574 XXX strcpy
%7585:	br	 if.end13

BASIC BLOCK if.end13
%7586:	call	 %7574 strlen
%7587:	trunc	 %7586
%7588:	sext	 %7587
%7589:	getelementptr	 %7574 %7588
%7590:	call	 %7589 pattern size XXX XXX llvm.memcpy.p0i8.p0i8.i64
%7591:	sext	 %7587
%7592:	add	 %7591 size
%7593:	trunc	 %7592
%7594:	load	 match_words
%7595:	icmp	 %7594 XXX
%7596:	br	 %7595 if.end23 if.then19

BASIC BLOCK if.then19
%7597:	sext	 %7593
%7598:	getelementptr	 %7574 %7597
%7599:	call	 %7598 XXX strcpy
%7600:	br	 if.end23

BASIC BLOCK if.end23
%7601:	load	 match_lines
%7602:	icmp	 %7601 XXX
%7603:	br	 %7602 if.end29 if.then25

BASIC BLOCK if.then25
%7604:	sext	 %7593
%7605:	getelementptr	 %7574 %7604
%7606:	call	 %7605 XXX strcpy
%7607:	br	 if.end29

BASIC BLOCK if.end29
%7608:	sext	 %7593
%7609:	getelementptr	 %7574 %7608
%7610:	call	 %7609 strlen
%7611:	sext	 %7593
%7612:	add	 %7611 %7610
%7613:	trunc	 %7612
%7614:	sext	 %7613
%7615:	call	 %7574 %7614 dfa_1 XXX dfacomp
%7616:	br	 if.end37

BASIC BLOCK if.else
%7617:	call	 pattern size dfa_1 XXX dfacomp
%7618:	br	 if.end37

BASIC BLOCK if.end37
%7619:	call	 kwsmusts
%7620:	ret	

FUNCTION EGexecute

BASIC BLOCK entry
%7621:	alloca	 XXX
%7622:	alloca	 XXX
%7623:	getelementptr	 buf size
%7624:	br	 for.cond

BASIC BLOCK for.cond
%7625:	phi	 buf %7853
%7626:	phi	 buf %7852
%7627:	icmp	 %7626 %7623
%7628:	br	 %7627 for.end for.body

BASIC BLOCK for.body
%7629:	load	 kwset
%7630:	icmp	 %7629 XXX
%7631:	br	 %7630 if.else if.then

BASIC BLOCK if.then
%7632:	load	 kwset
%7633:	ptrtoint	 %7623
%7634:	ptrtoint	 %7625
%7635:	sub	 %7633 %7634
%7636:	call	 %7632 %7625 %7635 %7622 kwsexec
%7637:	icmp	 %7636 XXX
%7638:	br	 %7637 if.then2 if.end

BASIC BLOCK if.then2
%7639:	br	 failure

BASIC BLOCK if.end
%7640:	ptrtoint	 %7623
%7641:	ptrtoint	 %7636
%7642:	sub	 %7640 %7641
%7643:	call	 %7636 XXX %7642 memchr
%7644:	icmp	 %7643 XXX
%7645:	br	 %7644 if.then8 if.end9

BASIC BLOCK if.then8
%7646:	br	 if.end9

BASIC BLOCK if.end9
%7647:	phi	 %7643 %7623
%7648:	br	 while.cond

BASIC BLOCK while.cond
%7649:	phi	 %7636 %7659
%7650:	icmp	 %7649 buf
%7651:	br	 %7650 land.end land.rhs

BASIC BLOCK land.rhs
%7652:	getelementptr	 %7649 XXX
%7653:	load	 %7652
%7654:	sext	 %7653
%7655:	icmp	 %7654 XXX
%7656:	br	 land.end

BASIC BLOCK land.end
%7657:	phi	 XXX %7655
%7658:	br	 %7657 while.end while.body

BASIC BLOCK while.body
%7659:	getelementptr	 %7649 XXX
%7660:	br	 while.cond

BASIC BLOCK while.end
%7661:	load	 %7647
%7662:	getelementptr	 %7622 XXX XXX
%7663:	load	 %7662
%7664:	load	 lastexact
%7665:	icmp	 %7663 %7664
%7666:	br	 %7665 if.end16 if.then15

BASIC BLOCK if.then15
%7667:	br	 success

BASIC BLOCK if.end16
%7668:	call	 dfa_1 %7649 %7647 XXX XXX %7621 dfaexec
%7669:	icmp	 %7668 XXX
%7670:	br	 %7669 if.then19 if.end20

BASIC BLOCK if.then19
%7671:	store	 %7661 %7647
%7672:	br	 for.inc

BASIC BLOCK if.end20
%7673:	store	 %7661 %7647
%7674:	load	 %7621
%7675:	icmp	 %7674 XXX
%7676:	br	 %7675 if.then22 if.end23

BASIC BLOCK if.then22
%7677:	br	 success

BASIC BLOCK if.end23
%7678:	br	 if.end50

BASIC BLOCK if.else
%7679:	load	 %7623
%7680:	call	 dfa_1 %7625 %7623 XXX XXX %7621 dfaexec
%7681:	store	 %7679 %7623
%7682:	icmp	 %7680 XXX
%7683:	br	 %7682 if.then26 if.end27

BASIC BLOCK if.then26
%7684:	br	 failure

BASIC BLOCK if.end27
%7685:	ptrtoint	 %7623
%7686:	ptrtoint	 %7680
%7687:	sub	 %7685 %7686
%7688:	call	 %7680 XXX %7687 memchr
%7689:	icmp	 %7688 XXX
%7690:	br	 %7689 if.then33 if.end34

BASIC BLOCK if.then33
%7691:	br	 if.end34

BASIC BLOCK if.end34
%7692:	phi	 %7688 %7623
%7693:	br	 while.cond35

BASIC BLOCK while.cond35
%7694:	phi	 %7680 %7704
%7695:	icmp	 %7694 buf
%7696:	br	 %7695 land.end43 land.rhs38

BASIC BLOCK land.rhs38
%7697:	getelementptr	 %7694 XXX
%7698:	load	 %7697
%7699:	sext	 %7698
%7700:	icmp	 %7699 XXX
%7701:	br	 land.end43

BASIC BLOCK land.end43
%7702:	phi	 XXX %7700
%7703:	br	 %7702 while.end46 while.body44

BASIC BLOCK while.body44
%7704:	getelementptr	 %7694 XXX
%7705:	br	 while.cond35

BASIC BLOCK while.end46
%7706:	load	 %7621
%7707:	icmp	 %7706 XXX
%7708:	br	 %7707 if.then48 if.end49

BASIC BLOCK if.then48
%7709:	br	 success

BASIC BLOCK if.end49
%7710:	br	 if.end50

BASIC BLOCK if.end50
%7711:	phi	 %7649 %7694
%7712:	phi	 %7647 %7692
%7713:	load	 XXX
%7714:	and	 %7713 XXX
%7715:	store	 %7714 XXX
%7716:	ptrtoint	 %7712
%7717:	ptrtoint	 %7711
%7718:	sub	 %7716 %7717
%7719:	trunc	 %7718
%7720:	ptrtoint	 %7712
%7721:	ptrtoint	 %7711
%7722:	sub	 %7720 %7721
%7723:	trunc	 %7722
%7724:	call	 regex %7711 %7719 XXX %7723 EGexecute.regs re_search
%7725:	icmp	 %7724 XXX
%7726:	br	 %7725 if.end163 if.then62

BASIC BLOCK if.then62
%7727:	load	 XXX
%7728:	getelementptr	 %7727 XXX
%7729:	load	 %7728
%7730:	sub	 %7729 %7724
%7731:	load	 match_lines
%7732:	icmp	 %7731 XXX
%7733:	br	 %7732 land.lhs.true lor.lhs.false

BASIC BLOCK land.lhs.true
%7734:	load	 match_words
%7735:	icmp	 %7734 XXX
%7736:	br	 %7735 if.then74 lor.lhs.false

BASIC BLOCK lor.lhs.false
%7737:	load	 match_lines
%7738:	icmp	 %7737 XXX
%7739:	br	 %7738 if.end75 land.lhs.true67

BASIC BLOCK land.lhs.true67
%7740:	sext	 %7730
%7741:	ptrtoint	 %7712
%7742:	ptrtoint	 %7711
%7743:	sub	 %7741 %7742
%7744:	icmp	 %7740 %7743
%7745:	br	 %7744 if.end75 if.then74

BASIC BLOCK if.then74
%7746:	br	 success

BASIC BLOCK if.end75
%7747:	load	 match_words
%7748:	icmp	 %7747 XXX
%7749:	br	 %7748 if.end162 if.then77

BASIC BLOCK if.then77
%7750:	br	 while.cond78

BASIC BLOCK while.cond78
%7751:	phi	 %7724 %7846
%7752:	phi	 %7730 %7847
%7753:	icmp	 %7751 XXX
%7754:	br	 %7753 while.end161 while.body81

BASIC BLOCK while.body81
%7755:	icmp	 %7751 XXX
%7756:	br	 %7755 lor.lhs.false84 land.lhs.true100

BASIC BLOCK lor.lhs.false84
%7757:	sub	 %7751 XXX
%7758:	sext	 %7757
%7759:	getelementptr	 %7711 %7758
%7760:	load	 %7759
%7761:	sext	 %7760
%7762:	sext	 %7761
%7763:	call	 __ctype_b_loc
%7764:	load	 %7763
%7765:	getelementptr	 %7764 %7762
%7766:	load	 %7765
%7767:	zext	 %7766
%7768:	and	 %7767 XXX
%7769:	icmp	 %7768 XXX
%7770:	br	 %7769 lor.lhs.false93 if.end125

BASIC BLOCK lor.lhs.false93
%7771:	sub	 %7751 XXX
%7772:	sext	 %7771
%7773:	getelementptr	 %7711 %7772
%7774:	load	 %7773
%7775:	sext	 %7774
%7776:	icmp	 %7775 XXX
%7777:	br	 %7776 land.lhs.true100 if.end125

BASIC BLOCK land.lhs.true100
%7778:	sext	 %7752
%7779:	ptrtoint	 %7712
%7780:	ptrtoint	 %7711
%7781:	sub	 %7779 %7780
%7782:	icmp	 %7778 %7781
%7783:	br	 %7782 lor.lhs.false107 if.then124

BASIC BLOCK lor.lhs.false107
%7784:	add	 %7751 %7752
%7785:	sext	 %7784
%7786:	getelementptr	 %7711 %7785
%7787:	load	 %7786
%7788:	sext	 %7787
%7789:	sext	 %7788
%7790:	call	 __ctype_b_loc
%7791:	load	 %7790
%7792:	getelementptr	 %7791 %7789
%7793:	load	 %7792
%7794:	zext	 %7793
%7795:	and	 %7794 XXX
%7796:	icmp	 %7795 XXX
%7797:	br	 %7796 lor.lhs.false117 if.end125

BASIC BLOCK lor.lhs.false117
%7798:	add	 %7751 %7752
%7799:	sext	 %7798
%7800:	getelementptr	 %7711 %7799
%7801:	load	 %7800
%7802:	sext	 %7801
%7803:	icmp	 %7802 XXX
%7804:	br	 %7803 if.then124 if.end125

BASIC BLOCK if.then124
%7805:	br	 success

BASIC BLOCK if.end125
%7806:	icmp	 %7752 XXX
%7807:	br	 %7806 if.end133 if.then128

BASIC BLOCK if.then128
%7808:	add	 %7752 XXX
%7809:	load	 XXX
%7810:	and	 %7809 XXX
%7811:	or	 %7810 XXX
%7812:	store	 %7811 XXX
%7813:	add	 %7751 %7808
%7814:	call	 regex %7711 %7813 %7751 EGexecute.regs re_match
%7815:	br	 if.end133

BASIC BLOCK if.end133
%7816:	phi	 %7814 %7752
%7817:	icmp	 %7816 XXX
%7818:	br	 %7817 if.end160 if.then136

BASIC BLOCK if.then136
%7819:	sext	 %7751
%7820:	ptrtoint	 %7712
%7821:	ptrtoint	 %7711
%7822:	sub	 %7820 %7821
%7823:	icmp	 %7819 %7822
%7824:	br	 %7823 if.end144 if.then143

BASIC BLOCK if.then143
%7825:	br	 while.end161

BASIC BLOCK if.end144
%7826:	add	 %7751 XXX
%7827:	load	 XXX
%7828:	and	 %7827 XXX
%7829:	store	 %7828 XXX
%7830:	ptrtoint	 %7712
%7831:	ptrtoint	 %7711
%7832:	sub	 %7830 %7831
%7833:	trunc	 %7832
%7834:	ptrtoint	 %7712
%7835:	ptrtoint	 %7711
%7836:	sub	 %7834 %7835
%7837:	sext	 %7826
%7838:	sub	 %7836 %7837
%7839:	trunc	 %7838
%7840:	call	 regex %7711 %7833 %7826 %7839 EGexecute.regs re_search
%7841:	load	 XXX
%7842:	getelementptr	 %7841 XXX
%7843:	load	 %7842
%7844:	sub	 %7843 %7840
%7845:	br	 if.end160

BASIC BLOCK if.end160
%7846:	phi	 %7840 %7751
%7847:	phi	 %7844 %7816
%7848:	br	 while.cond78

BASIC BLOCK while.end161
%7849:	br	 if.end162

BASIC BLOCK if.end162
%7850:	br	 if.end163

BASIC BLOCK if.end163
%7851:	br	 for.inc

BASIC BLOCK for.inc
%7852:	phi	 %7712 %7647
%7853:	getelementptr	 %7852 XXX
%7854:	br	 for.cond

BASIC BLOCK for.end
%7855:	br	 failure

BASIC BLOCK failure
%7856:	br	 return

BASIC BLOCK success
%7857:	phi	 %7649 %7711 %7711 %7649 %7694
%7858:	phi	 %7647 %7712 %7712 %7647 %7692
%7859:	icmp	 %7858 %7623
%7860:	br	 %7859 cond.false cond.true

BASIC BLOCK cond.true
%7861:	getelementptr	 %7858 XXX
%7862:	br	 cond.end

BASIC BLOCK cond.false
%7863:	br	 cond.end

BASIC BLOCK cond.end
%7864:	phi	 %7861 %7858
%7865:	store	 %7864 endp
%7866:	br	 return

BASIC BLOCK return
%7867:	phi	 %7857 XXX
%7868:	ret	 %7867

FUNCTION Ecompile

BASIC BLOCK entry
%7869:	load	 matcher
%7870:	call	 %7869 XXX strcmp
%7871:	icmp	 %7870 XXX
%7872:	br	 %7871 if.else if.then

BASIC BLOCK if.then
%7873:	call	 XXX re_set_syntax
%7874:	load	 match_icase
%7875:	call	 XXX %7874 dfasyntax
%7876:	br	 if.end8

BASIC BLOCK if.else
%7877:	load	 matcher
%7878:	call	 %7877 XXX strcmp
%7879:	icmp	 %7878 XXX
%7880:	br	 %7879 if.else6 if.then4

BASIC BLOCK if.then4
%7881:	call	 XXX re_set_syntax
%7882:	load	 match_icase
%7883:	call	 XXX %7882 dfasyntax
%7884:	br	 if.end

BASIC BLOCK if.else6
%7885:	call	 XXX re_set_syntax
%7886:	load	 match_icase
%7887:	call	 XXX %7886 dfasyntax
%7888:	br	 if.end

BASIC BLOCK if.end
%7889:	br	 if.end8

BASIC BLOCK if.end8
%7890:	call	 pattern size regex re_compile_pattern
%7891:	icmp	 %7890 XXX
%7892:	br	 %7891 if.end12 if.then11

BASIC BLOCK if.then11
%7893:	call	 %7890 XXX fatal
%7894:	br	 if.end12

BASIC BLOCK if.end12
%7895:	call	 dfa_1 dfainit
%7896:	load	 match_words
%7897:	icmp	 %7896 XXX
%7898:	br	 %7897 lor.lhs.false if.then14

BASIC BLOCK lor.lhs.false
%7899:	load	 match_lines
%7900:	icmp	 %7899 XXX
%7901:	br	 %7900 if.else48 if.then14

BASIC BLOCK if.then14
%7902:	add	 size XXX
%7903:	call	 %7902 xmalloc
%7904:	call	 %7903 XXX strcpy
%7905:	load	 match_lines
%7906:	icmp	 %7905 XXX
%7907:	br	 %7906 if.end20 if.then18

BASIC BLOCK if.then18
%7908:	call	 %7903 XXX strcpy
%7909:	br	 if.end20

BASIC BLOCK if.end20
%7910:	load	 match_words
%7911:	icmp	 %7910 XXX
%7912:	br	 %7911 if.end24 if.then22

BASIC BLOCK if.then22
%7913:	call	 %7903 XXX strcpy
%7914:	br	 if.end24

BASIC BLOCK if.end24
%7915:	call	 %7903 strlen
%7916:	trunc	 %7915
%7917:	sext	 %7916
%7918:	getelementptr	 %7903 %7917
%7919:	call	 %7918 pattern size XXX XXX llvm.memcpy.p0i8.p0i8.i64
%7920:	sext	 %7916
%7921:	add	 %7920 size
%7922:	trunc	 %7921
%7923:	load	 match_words
%7924:	icmp	 %7923 XXX
%7925:	br	 %7924 if.end34 if.then30

BASIC BLOCK if.then30
%7926:	sext	 %7922
%7927:	getelementptr	 %7903 %7926
%7928:	call	 %7927 XXX strcpy
%7929:	br	 if.end34

BASIC BLOCK if.end34
%7930:	load	 match_lines
%7931:	icmp	 %7930 XXX
%7932:	br	 %7931 if.end40 if.then36

BASIC BLOCK if.then36
%7933:	sext	 %7922
%7934:	getelementptr	 %7903 %7933
%7935:	call	 %7934 XXX strcpy
%7936:	br	 if.end40

BASIC BLOCK if.end40
%7937:	sext	 %7922
%7938:	getelementptr	 %7903 %7937
%7939:	call	 %7938 strlen
%7940:	sext	 %7922
%7941:	add	 %7940 %7939
%7942:	trunc	 %7941
%7943:	sext	 %7942
%7944:	call	 %7903 %7943 dfa_1 XXX dfacomp
%7945:	br	 if.end49

BASIC BLOCK if.else48
%7946:	call	 pattern size dfa_1 XXX dfacomp
%7947:	br	 if.end49

BASIC BLOCK if.end49
%7948:	call	 kwsmusts
%7949:	ret	

FUNCTION Fcompile

BASIC BLOCK entry
%7950:	call	 kwsinit
%7951:	br	 do.body

BASIC BLOCK do.body
%7952:	phi	 pattern %7981
%7953:	br	 for.cond

BASIC BLOCK for.cond
%7954:	phi	 %7952 %7965
%7955:	getelementptr	 pattern size
%7956:	icmp	 %7954 %7955
%7957:	br	 %7956 land.end land.rhs

BASIC BLOCK land.rhs
%7958:	load	 %7954
%7959:	sext	 %7958
%7960:	icmp	 %7959 XXX
%7961:	br	 land.end

BASIC BLOCK land.end
%7962:	phi	 XXX %7960
%7963:	br	 %7962 for.end for.body

BASIC BLOCK for.body
%7964:	br	 for.inc

BASIC BLOCK for.inc
%7965:	getelementptr	 %7954 XXX
%7966:	br	 for.cond

BASIC BLOCK for.end
%7967:	load	 kwset
%7968:	ptrtoint	 %7954
%7969:	ptrtoint	 %7952
%7970:	sub	 %7968 %7969
%7971:	call	 %7967 %7952 %7970 kwsincr
%7972:	icmp	 %7971 XXX
%7973:	br	 %7972 if.end if.then

BASIC BLOCK if.then
%7974:	call	 %7971 XXX fatal
%7975:	br	 if.end

BASIC BLOCK if.end
%7976:	getelementptr	 pattern size
%7977:	icmp	 %7954 %7976
%7978:	br	 %7977 if.end10 if.then8

BASIC BLOCK if.then8
%7979:	getelementptr	 %7954 XXX
%7980:	br	 if.end10

BASIC BLOCK if.end10
%7981:	phi	 %7979 %7954
%7982:	br	 do.cond

BASIC BLOCK do.cond
%7983:	getelementptr	 pattern size
%7984:	icmp	 %7981 %7983
%7985:	br	 %7984 do.end do.body

BASIC BLOCK do.end
%7986:	load	 kwset
%7987:	call	 %7986 kwsprep
%7988:	icmp	 %7987 XXX
%7989:	br	 %7988 if.end18 if.then17

BASIC BLOCK if.then17
%7990:	call	 %7987 XXX fatal
%7991:	br	 if.end18

BASIC BLOCK if.end18
%7992:	ret	

FUNCTION Fexecute

BASIC BLOCK entry
%7993:	alloca	 XXX
%7994:	br	 for.cond

BASIC BLOCK for.cond
%7995:	phi	 buf %8099
%7996:	getelementptr	 buf size
%7997:	icmp	 %7995 %7996
%7998:	br	 %7997 for.end70 for.body

BASIC BLOCK for.body
%7999:	load	 kwset
%8000:	getelementptr	 buf size
%8001:	ptrtoint	 %8000
%8002:	ptrtoint	 %7995
%8003:	sub	 %8001 %8002
%8004:	call	 %7999 %7995 %8003 %7993 kwsexec
%8005:	icmp	 %8004 XXX
%8006:	br	 %8005 if.then if.end

BASIC BLOCK if.then
%8007:	br	 return

BASIC BLOCK if.end
%8008:	getelementptr	 %7993 XXX XXX
%8009:	getelementptr	 %8008 XXX XXX
%8010:	load	 %8009
%8011:	load	 match_lines
%8012:	icmp	 %8011 XXX
%8013:	br	 %8012 if.else if.then4

BASIC BLOCK if.then4
%8014:	icmp	 %8004 buf
%8015:	br	 %8014 if.end10 land.lhs.true

BASIC BLOCK land.lhs.true
%8016:	getelementptr	 %8004 XXX
%8017:	load	 %8016
%8018:	sext	 %8017
%8019:	icmp	 %8018 XXX
%8020:	br	 %8019 if.end10 if.then9

BASIC BLOCK if.then9
%8021:	br	 for.inc

BASIC BLOCK if.end10
%8022:	getelementptr	 %8004 %8010
%8023:	getelementptr	 buf size
%8024:	icmp	 %8022 %8023
%8025:	br	 %8024 if.end21 land.lhs.true15

BASIC BLOCK land.lhs.true15
%8026:	getelementptr	 %8004 %8010
%8027:	load	 %8026
%8028:	sext	 %8027
%8029:	icmp	 %8028 XXX
%8030:	br	 %8029 if.end21 if.then20

BASIC BLOCK if.then20
%8031:	br	 for.inc

BASIC BLOCK if.end21
%8032:	br	 success

BASIC BLOCK if.else
%8033:	load	 match_words
%8034:	icmp	 %8033 XXX
%8035:	br	 %8034 if.else67 if.then23

BASIC BLOCK if.then23
%8036:	br	 for.cond24

BASIC BLOCK for.cond24
%8037:	phi	 %8004 %8088
%8038:	phi	 %8010 %8091
%8039:	icmp	 %8038 XXX
%8040:	br	 %8039 land.end land.rhs

BASIC BLOCK land.rhs
%8041:	icmp	 %8037 XXX
%8042:	br	 land.end

BASIC BLOCK land.end
%8043:	phi	 XXX %8041
%8044:	br	 %8043 for.end for.body27

BASIC BLOCK for.body27
%8045:	icmp	 %8037 buf
%8046:	br	 %8045 if.end42 land.lhs.true30

BASIC BLOCK land.lhs.true30
%8047:	getelementptr	 %8037 XXX
%8048:	load	 %8047
%8049:	zext	 %8048
%8050:	sext	 %8049
%8051:	call	 __ctype_b_loc
%8052:	load	 %8051
%8053:	getelementptr	 %8052 %8050
%8054:	load	 %8053
%8055:	zext	 %8054
%8056:	and	 %8055 XXX
%8057:	icmp	 %8056 XXX
%8058:	br	 %8057 lor.lhs.false if.then41

BASIC BLOCK lor.lhs.false
%8059:	getelementptr	 %8037 XXX
%8060:	load	 %8059
%8061:	zext	 %8060
%8062:	icmp	 %8061 XXX
%8063:	br	 %8062 if.end42 if.then41

BASIC BLOCK if.then41
%8064:	br	 for.end

BASIC BLOCK if.end42
%8065:	getelementptr	 %8037 %8038
%8066:	getelementptr	 buf size
%8067:	icmp	 %8065 %8066
%8068:	br	 %8067 if.else65 land.lhs.true47

BASIC BLOCK land.lhs.true47
%8069:	getelementptr	 %8037 %8038
%8070:	load	 %8069
%8071:	zext	 %8070
%8072:	sext	 %8071
%8073:	call	 __ctype_b_loc
%8074:	load	 %8073
%8075:	getelementptr	 %8074 %8072
%8076:	load	 %8075
%8077:	zext	 %8076
%8078:	and	 %8077 XXX
%8079:	icmp	 %8078 XXX
%8080:	br	 %8079 lor.lhs.false56 if.then61

BASIC BLOCK lor.lhs.false56
%8081:	getelementptr	 %8037 %8038
%8082:	load	 %8081
%8083:	zext	 %8082
%8084:	icmp	 %8083 XXX
%8085:	br	 %8084 if.else65 if.then61

BASIC BLOCK if.then61
%8086:	load	 kwset
%8087:	add	 %8038 XXX
%8088:	call	 %8086 %8004 %8087 %7993 kwsexec
%8089:	getelementptr	 %7993 XXX XXX
%8090:	getelementptr	 %8089 XXX XXX
%8091:	load	 %8090
%8092:	br	 if.end66

BASIC BLOCK if.else65
%8093:	br	 success

BASIC BLOCK if.end66
%8094:	br	 for.cond24

BASIC BLOCK for.end
%8095:	br	 if.end68

BASIC BLOCK if.else67
%8096:	br	 success

BASIC BLOCK if.end68
%8097:	br	 if.end69

BASIC BLOCK if.end69
%8098:	br	 for.inc

BASIC BLOCK for.inc
%8099:	getelementptr	 %8004 XXX
%8100:	br	 for.cond

BASIC BLOCK for.end70
%8101:	br	 return

BASIC BLOCK success
%8102:	phi	 %8010 %8038 %8010
%8103:	getelementptr	 %8004 %8102
%8104:	getelementptr	 buf size
%8105:	getelementptr	 %8004 %8102
%8106:	ptrtoint	 %8104
%8107:	ptrtoint	 %8105
%8108:	sub	 %8106 %8107
%8109:	call	 %8103 XXX %8108 memchr
%8110:	icmp	 %8109 XXX
%8111:	br	 %8110 if.else82 if.then80

BASIC BLOCK if.then80
%8112:	getelementptr	 %8109 XXX
%8113:	br	 if.end84

BASIC BLOCK if.else82
%8114:	getelementptr	 buf size
%8115:	br	 if.end84

BASIC BLOCK if.end84
%8116:	phi	 %8112 %8114
%8117:	store	 %8116 endp
%8118:	br	 while.cond

BASIC BLOCK while.cond
%8119:	phi	 %8004 %8129
%8120:	icmp	 %8119 buf
%8121:	br	 %8120 land.end92 land.rhs87

BASIC BLOCK land.rhs87
%8122:	getelementptr	 %8119 XXX
%8123:	load	 %8122
%8124:	sext	 %8123
%8125:	icmp	 %8124 XXX
%8126:	br	 land.end92

BASIC BLOCK land.end92
%8127:	phi	 XXX %8125
%8128:	br	 %8127 while.end while.body

BASIC BLOCK while.body
%8129:	getelementptr	 %8119 XXX
%8130:	br	 while.cond

BASIC BLOCK while.end
%8131:	br	 return

BASIC BLOCK return
%8132:	phi	 %8119 XXX XXX
%8133:	ret	 %8132

FUNCTION btowc

BASIC BLOCK entry
%8134:	icmp	 c XXX
%8135:	br	 %8134 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%8136:	icmp	 c XXX
%8137:	br	 %8136 if.else if.then

BASIC BLOCK if.then
%8138:	br	 return

BASIC BLOCK if.else
%8139:	br	 return

BASIC BLOCK return
%8140:	phi	 XXX c
%8141:	ret	 %8140

FUNCTION re_set_syntax

BASIC BLOCK entry
%8142:	load	 re_syntax_options
%8143:	store	 syntax re_syntax_options
%8144:	ret	 %8142

FUNCTION re_compile_fastmap

BASIC BLOCK entry
%8145:	alloca	 XXX
%8146:	getelementptr	 bufp XXX XXX
%8147:	load	 %8146
%8148:	getelementptr	 bufp XXX XXX
%8149:	load	 %8148
%8150:	getelementptr	 bufp XXX XXX
%8151:	load	 %8150
%8152:	getelementptr	 %8149 %8151
%8153:	br	 do.body

BASIC BLOCK do.body
%8154:	alloca	 XXX
%8155:	bitcast	 %8154
%8156:	getelementptr	 %8145 XXX XXX
%8157:	store	 %8155 %8156
%8158:	getelementptr	 %8145 XXX XXX
%8159:	load	 %8158
%8160:	icmp	 %8159 XXX
%8161:	br	 %8160 if.end if.then

BASIC BLOCK if.then
%8162:	br	 return

BASIC BLOCK if.end
%8163:	getelementptr	 %8145 XXX XXX
%8164:	store	 XXX %8163
%8165:	getelementptr	 %8145 XXX XXX
%8166:	store	 XXX %8165
%8167:	br	 do.end

BASIC BLOCK do.end
%8168:	call	 %8147 XXX XXX XXX XXX llvm.memset.p0i8.i64
%8169:	getelementptr	 bufp XXX XXX
%8170:	load	 %8169
%8171:	and	 %8170 XXX
%8172:	or	 %8171 XXX
%8173:	store	 %8172 %8169
%8174:	getelementptr	 bufp XXX XXX
%8175:	load	 %8174
%8176:	and	 %8175 XXX
%8177:	store	 %8176 %8174
%8178:	br	 while.body

BASIC BLOCK while.body
%8179:	phi	 %8149 %8214 %8557 %8555 %8533 %8548 %8382 %8382 %8410 %8217 %8152
%8180:	phi	 XXX XXX %8180 %8180 %8180 %8180 %8180 %8180 %8180 %8180 XXX
%8181:	phi	 XXX %8181 %8181 %8181 %8534 %8181 %8181 %8181 %8181 %8181 %8181
%8182:	icmp	 %8179 %8152
%8183:	br	 %8182 lor.lhs.false if.then8

BASIC BLOCK lor.lhs.false
%8184:	load	 %8179
%8185:	zext	 %8184
%8186:	icmp	 %8185 XXX
%8187:	br	 %8186 if.end22 if.then8

BASIC BLOCK if.then8
%8188:	getelementptr	 %8145 XXX XXX
%8189:	load	 %8188
%8190:	icmp	 %8189 XXX
%8191:	br	 %8190 if.then12 if.else

BASIC BLOCK if.then12
%8192:	sext	 %8180
%8193:	getelementptr	 bufp XXX XXX
%8194:	load	 %8193
%8195:	and	 %8194 XXX
%8196:	zext	 %8195
%8197:	or	 %8196 %8192
%8198:	trunc	 %8197
%8199:	load	 %8193
%8200:	and	 %8198 XXX
%8201:	and	 %8199 XXX
%8202:	or	 %8201 %8200
%8203:	store	 %8202 %8193
%8204:	zext	 %8200
%8205:	getelementptr	 %8145 XXX XXX
%8206:	load	 %8205
%8207:	add	 %8206 XXX
%8208:	store	 %8207 %8205
%8209:	zext	 %8207
%8210:	getelementptr	 %8145 XXX XXX
%8211:	load	 %8210
%8212:	getelementptr	 %8211 %8209
%8213:	bitcast	 %8212
%8214:	load	 %8213
%8215:	br	 while.body

BASIC BLOCK if.else
%8216:	br	 while.end

BASIC BLOCK if.end22
%8217:	getelementptr	 %8179 XXX
%8218:	load	 %8179
%8219:	zext	 %8218
%8220:	switch	 %8219 sw.default XXX sw.bb XXX sw.bb28 XXX sw.bb32 XXX sw.bb45 XXX sw.bb79 XXX sw.bb96 XXX sw.bb113 XXX sw.bb139 XXX sw.bb139 XXX sw.bb139 XXX sw.bb139 XXX sw.bb139 XXX sw.bb139 XXX sw.bb139 XXX sw.bb139 XXX sw.bb139 XXX sw.bb139 XXX sw.bb140 XXX sw.bb140 XXX sw.bb140 XXX sw.bb140 XXX sw.bb140 XXX sw.bb140 XXX sw.bb194 XXX sw.bb194 XXX sw.bb269 XXX sw.bb287 XXX sw.bb289 XXX sw.bb289

BASIC BLOCK sw.bb
%8221:	getelementptr	 bufp XXX XXX
%8222:	load	 %8221
%8223:	and	 %8222 XXX
%8224:	or	 %8223 XXX
%8225:	store	 %8224 %8221
%8226:	br	 done

BASIC BLOCK sw.bb28
%8227:	getelementptr	 %8217 XXX
%8228:	load	 %8227
%8229:	zext	 %8228
%8230:	getelementptr	 %8147 %8229
%8231:	store	 XXX %8230
%8232:	br	 sw.epilog

BASIC BLOCK sw.bb32
%8233:	getelementptr	 %8217 XXX
%8234:	load	 %8217
%8235:	zext	 %8234
%8236:	mul	 %8235 XXX
%8237:	sub	 %8236 XXX
%8238:	br	 for.cond

BASIC BLOCK for.cond
%8239:	phi	 %8237 %8257
%8240:	icmp	 %8239 XXX
%8241:	br	 %8240 for.end for.body

BASIC BLOCK for.body
%8242:	sdiv	 %8239 XXX
%8243:	sext	 %8242
%8244:	getelementptr	 %8233 %8243
%8245:	load	 %8244
%8246:	zext	 %8245
%8247:	srem	 %8239 XXX
%8248:	shl	 XXX %8247
%8249:	and	 %8246 %8248
%8250:	icmp	 %8249 XXX
%8251:	br	 %8250 if.end43 if.then40

BASIC BLOCK if.then40
%8252:	sext	 %8239
%8253:	getelementptr	 %8147 %8252
%8254:	store	 XXX %8253
%8255:	br	 if.end43

BASIC BLOCK if.end43
%8256:	br	 for.inc

BASIC BLOCK for.inc
%8257:	add	 %8239 XXX
%8258:	br	 for.cond

BASIC BLOCK for.end
%8259:	br	 sw.epilog

BASIC BLOCK sw.bb45
%8260:	load	 %8217
%8261:	zext	 %8260
%8262:	mul	 %8261 XXX
%8263:	br	 for.cond48

BASIC BLOCK for.cond48
%8264:	phi	 %8262 %8271
%8265:	icmp	 %8264 XXX
%8266:	br	 %8265 for.end55 for.body51

BASIC BLOCK for.body51
%8267:	sext	 %8264
%8268:	getelementptr	 %8147 %8267
%8269:	store	 XXX %8268
%8270:	br	 for.inc54

BASIC BLOCK for.inc54
%8271:	add	 %8264 XXX
%8272:	br	 for.cond48

BASIC BLOCK for.end55
%8273:	getelementptr	 %8217 XXX
%8274:	load	 %8217
%8275:	zext	 %8274
%8276:	mul	 %8275 XXX
%8277:	sub	 %8276 XXX
%8278:	br	 for.cond60

BASIC BLOCK for.cond60
%8279:	phi	 %8277 %8297
%8280:	icmp	 %8279 XXX
%8281:	br	 %8280 for.end78 for.body63

BASIC BLOCK for.body63
%8282:	sdiv	 %8279 XXX
%8283:	sext	 %8282
%8284:	getelementptr	 %8273 %8283
%8285:	load	 %8284
%8286:	zext	 %8285
%8287:	srem	 %8279 XXX
%8288:	shl	 XXX %8287
%8289:	and	 %8286 %8288
%8290:	icmp	 %8289 XXX
%8291:	br	 %8290 if.then72 if.end75

BASIC BLOCK if.then72
%8292:	sext	 %8279
%8293:	getelementptr	 %8147 %8292
%8294:	store	 XXX %8293
%8295:	br	 if.end75

BASIC BLOCK if.end75
%8296:	br	 for.inc76

BASIC BLOCK for.inc76
%8297:	add	 %8279 XXX
%8298:	br	 for.cond60

BASIC BLOCK for.end78
%8299:	br	 sw.epilog

BASIC BLOCK sw.bb79
%8300:	br	 for.cond80

BASIC BLOCK for.cond80
%8301:	phi	 XXX %8315
%8302:	icmp	 %8301 XXX
%8303:	br	 %8302 for.end95 for.body83

BASIC BLOCK for.body83
%8304:	sext	 %8301
%8305:	getelementptr	 re_syntax_table XXX %8304
%8306:	load	 %8305
%8307:	sext	 %8306
%8308:	icmp	 %8307 XXX
%8309:	br	 %8308 if.end92 if.then89

BASIC BLOCK if.then89
%8310:	sext	 %8301
%8311:	getelementptr	 %8147 %8310
%8312:	store	 XXX %8311
%8313:	br	 if.end92

BASIC BLOCK if.end92
%8314:	br	 for.inc93

BASIC BLOCK for.inc93
%8315:	add	 %8301 XXX
%8316:	br	 for.cond80

BASIC BLOCK for.end95
%8317:	br	 sw.epilog

BASIC BLOCK sw.bb96
%8318:	br	 for.cond97

BASIC BLOCK for.cond97
%8319:	phi	 XXX %8333
%8320:	icmp	 %8319 XXX
%8321:	br	 %8320 for.end112 for.body100

BASIC BLOCK for.body100
%8322:	sext	 %8319
%8323:	getelementptr	 re_syntax_table XXX %8322
%8324:	load	 %8323
%8325:	sext	 %8324
%8326:	icmp	 %8325 XXX
%8327:	br	 %8326 if.end109 if.then106

BASIC BLOCK if.then106
%8328:	sext	 %8319
%8329:	getelementptr	 %8147 %8328
%8330:	store	 XXX %8329
%8331:	br	 if.end109

BASIC BLOCK if.end109
%8332:	br	 for.inc110

BASIC BLOCK for.inc110
%8333:	add	 %8319 XXX
%8334:	br	 for.cond97

BASIC BLOCK for.end112
%8335:	br	 sw.epilog

BASIC BLOCK sw.bb113
%8336:	getelementptr	 %8147 XXX
%8337:	load	 %8336
%8338:	sext	 %8337
%8339:	br	 for.cond116

BASIC BLOCK for.cond116
%8340:	phi	 XXX %8347
%8341:	icmp	 %8340 XXX
%8342:	br	 %8341 for.end124 for.body119

BASIC BLOCK for.body119
%8343:	sext	 %8340
%8344:	getelementptr	 %8147 %8343
%8345:	store	 XXX %8344
%8346:	br	 for.inc122

BASIC BLOCK for.inc122
%8347:	add	 %8340 XXX
%8348:	br	 for.cond116

BASIC BLOCK for.end124
%8349:	getelementptr	 bufp XXX XXX
%8350:	load	 %8349
%8351:	and	 %8350 XXX
%8352:	icmp	 %8351 XXX
%8353:	br	 %8352 if.then127 if.else130

BASIC BLOCK if.then127
%8354:	trunc	 %8338
%8355:	getelementptr	 %8147 XXX
%8356:	store	 %8354 %8355
%8357:	br	 if.end138

BASIC BLOCK if.else130
%8358:	getelementptr	 bufp XXX XXX
%8359:	load	 %8358
%8360:	and	 %8359 XXX
%8361:	zext	 %8360
%8362:	icmp	 %8361 XXX
%8363:	br	 %8362 if.end137 if.then136

BASIC BLOCK if.then136
%8364:	br	 done

BASIC BLOCK if.end137
%8365:	br	 if.end138

BASIC BLOCK if.end138
%8366:	br	 sw.epilog

BASIC BLOCK sw.bb139
%8367:	br	 while.body

BASIC BLOCK sw.bb140
%8368:	br	 do.body141

BASIC BLOCK do.body141
%8369:	br	 do.body142

BASIC BLOCK do.body142
%8370:	load	 %8217
%8371:	zext	 %8370
%8372:	and	 %8371 XXX
%8373:	getelementptr	 %8217 XXX
%8374:	load	 %8373
%8375:	sext	 %8374
%8376:	shl	 %8375 XXX
%8377:	add	 %8372 %8376
%8378:	br	 do.end148

BASIC BLOCK do.end148
%8379:	getelementptr	 %8217 XXX
%8380:	br	 do.end150

BASIC BLOCK do.end150
%8381:	sext	 %8377
%8382:	getelementptr	 %8379 %8381
%8383:	icmp	 %8377 XXX
%8384:	br	 %8383 if.end155 if.then154

BASIC BLOCK if.then154
%8385:	br	 while.body

BASIC BLOCK if.end155
%8386:	load	 %8382
%8387:	zext	 %8386
%8388:	icmp	 %8387 XXX
%8389:	br	 %8388 if.end163 land.lhs.true

BASIC BLOCK land.lhs.true
%8390:	load	 %8382
%8391:	zext	 %8390
%8392:	icmp	 %8391 XXX
%8393:	br	 %8392 if.end163 if.then162

BASIC BLOCK if.then162
%8394:	br	 while.body

BASIC BLOCK if.end163
%8395:	getelementptr	 %8382 XXX
%8396:	br	 do.body165

BASIC BLOCK do.body165
%8397:	br	 do.body166

BASIC BLOCK do.body166
%8398:	load	 %8395
%8399:	zext	 %8398
%8400:	and	 %8399 XXX
%8401:	getelementptr	 %8395 XXX
%8402:	load	 %8401
%8403:	sext	 %8402
%8404:	shl	 %8403 XXX
%8405:	add	 %8400 %8404
%8406:	br	 do.end173

BASIC BLOCK do.end173
%8407:	getelementptr	 %8395 XXX
%8408:	br	 do.end175

BASIC BLOCK do.end175
%8409:	sext	 %8405
%8410:	getelementptr	 %8407 %8409
%8411:	getelementptr	 %8145 XXX XXX
%8412:	load	 %8411
%8413:	icmp	 %8412 XXX
%8414:	br	 %8413 land.lhs.true181 if.end193

BASIC BLOCK land.lhs.true181
%8415:	getelementptr	 %8145 XXX XXX
%8416:	load	 %8415
%8417:	sub	 %8416 XXX
%8418:	zext	 %8417
%8419:	getelementptr	 %8145 XXX XXX
%8420:	load	 %8419
%8421:	getelementptr	 %8420 %8418
%8422:	bitcast	 %8421
%8423:	load	 %8422
%8424:	icmp	 %8423 %8410
%8425:	br	 %8424 if.end193 if.then190

BASIC BLOCK if.then190
%8426:	getelementptr	 %8145 XXX XXX
%8427:	load	 %8426
%8428:	add	 %8427 XXX
%8429:	store	 %8428 %8426
%8430:	br	 if.end193

BASIC BLOCK if.end193
%8431:	br	 while.body

BASIC BLOCK sw.bb194
%8432:	br	 handle_on_failure_jump

BASIC BLOCK handle_on_failure_jump
%8433:	phi	 %8552 %8217
%8434:	phi	 XXX %8181
%8435:	br	 do.body195

BASIC BLOCK do.body195
%8436:	br	 do.body196

BASIC BLOCK do.body196
%8437:	load	 %8433
%8438:	zext	 %8437
%8439:	and	 %8438 XXX
%8440:	getelementptr	 %8433 XXX
%8441:	load	 %8440
%8442:	sext	 %8441
%8443:	shl	 %8442 XXX
%8444:	add	 %8439 %8443
%8445:	br	 do.end203

BASIC BLOCK do.end203
%8446:	getelementptr	 %8433 XXX
%8447:	br	 do.end205

BASIC BLOCK do.end205
%8448:	sext	 %8444
%8449:	getelementptr	 %8446 %8448
%8450:	icmp	 %8449 %8152
%8451:	br	 %8450 if.else249 if.then210

BASIC BLOCK if.then210
%8452:	getelementptr	 %8145 XXX XXX
%8453:	load	 %8452
%8454:	getelementptr	 %8145 XXX XXX
%8455:	load	 %8454
%8456:	icmp	 %8453 %8455
%8457:	br	 %8456 cond.false238 land.lhs.true215

BASIC BLOCK land.lhs.true215
%8458:	getelementptr	 %8145 XXX XXX
%8459:	load	 %8458
%8460:	load	 re_max_failures
%8461:	mul	 %8460 XXX
%8462:	icmp	 %8459 %8461
%8463:	br	 %8462 cond.false cond.true

BASIC BLOCK cond.true
%8464:	br	 XXX cond.true237 cond.false238

BASIC BLOCK cond.false
%8465:	getelementptr	 %8145 XXX XXX
%8466:	load	 %8465
%8467:	shl	 %8466 XXX
%8468:	zext	 %8467
%8469:	mul	 %8468 XXX
%8470:	alloca	 %8469
%8471:	getelementptr	 %8145 XXX XXX
%8472:	load	 %8471
%8473:	bitcast	 %8472
%8474:	getelementptr	 %8145 XXX XXX
%8475:	load	 %8474
%8476:	zext	 %8475
%8477:	mul	 %8476 XXX
%8478:	call	 %8470 %8473 %8477 XXX XXX llvm.memcpy.p0i8.p0i8.i64
%8479:	bitcast	 %8470
%8480:	getelementptr	 %8145 XXX XXX
%8481:	store	 %8479 %8480
%8482:	getelementptr	 %8145 XXX XXX
%8483:	load	 %8482
%8484:	icmp	 %8483 XXX
%8485:	br	 %8484 cond.false233 cond.true232

BASIC BLOCK cond.true232
%8486:	br	 cond.end

BASIC BLOCK cond.false233
%8487:	getelementptr	 %8145 XXX XXX
%8488:	load	 %8487
%8489:	shl	 %8488 XXX
%8490:	store	 %8489 %8487
%8491:	br	 cond.end

BASIC BLOCK cond.end
%8492:	phi	 XXX XXX
%8493:	icmp	 %8492 XXX
%8494:	br	 %8493 cond.true237 cond.false238

BASIC BLOCK cond.true237
%8495:	br	 XXX if.then247 if.end248

BASIC BLOCK cond.false238
%8496:	sext	 %8444
%8497:	getelementptr	 %8446 %8496
%8498:	getelementptr	 %8145 XXX XXX
%8499:	load	 %8498
%8500:	add	 %8499 XXX
%8501:	store	 %8500 %8498
%8502:	zext	 %8499
%8503:	getelementptr	 %8145 XXX XXX
%8504:	load	 %8503
%8505:	getelementptr	 %8504 %8502
%8506:	bitcast	 %8505
%8507:	store	 %8497 %8506
%8508:	br	 XXX if.then247 if.end248

BASIC BLOCK if.then247
%8509:	br	 return

BASIC BLOCK if.end248
%8510:	br	 if.end254

BASIC BLOCK if.else249
%8511:	getelementptr	 bufp XXX XXX
%8512:	load	 %8511
%8513:	and	 %8512 XXX
%8514:	or	 %8513 XXX
%8515:	store	 %8514 %8511
%8516:	br	 if.end254

BASIC BLOCK if.end254
%8517:	icmp	 %8434 XXX
%8518:	br	 %8517 if.end268 if.then256

BASIC BLOCK if.then256
%8519:	br	 do.body257

BASIC BLOCK do.body257
%8520:	br	 do.body258

BASIC BLOCK do.body258
%8521:	load	 %8446
%8522:	zext	 %8521
%8523:	and	 %8522 XXX
%8524:	getelementptr	 %8446 XXX
%8525:	load	 %8524
%8526:	sext	 %8525
%8527:	shl	 %8526 XXX
%8528:	add	 %8523 %8527
%8529:	br	 do.end265

BASIC BLOCK do.end265
%8530:	getelementptr	 %8446 XXX
%8531:	br	 do.end267

BASIC BLOCK do.end267
%8532:	br	 if.end268

BASIC BLOCK if.end268
%8533:	phi	 %8530 %8446
%8534:	phi	 XXX %8434
%8535:	br	 while.body

BASIC BLOCK sw.bb269
%8536:	getelementptr	 %8217 XXX
%8537:	br	 do.body271

BASIC BLOCK do.body271
%8538:	br	 do.body272

BASIC BLOCK do.body272
%8539:	load	 %8536
%8540:	zext	 %8539
%8541:	and	 %8540 XXX
%8542:	getelementptr	 %8536 XXX
%8543:	load	 %8542
%8544:	sext	 %8543
%8545:	shl	 %8544 XXX
%8546:	add	 %8541 %8545
%8547:	br	 do.end279

BASIC BLOCK do.end279
%8548:	getelementptr	 %8536 XXX
%8549:	br	 do.end281

BASIC BLOCK do.end281
%8550:	icmp	 %8546 XXX
%8551:	br	 %8550 if.end286 if.then284

BASIC BLOCK if.then284
%8552:	getelementptr	 %8548 XXX
%8553:	br	 handle_on_failure_jump

BASIC BLOCK if.end286
%8554:	br	 while.body

BASIC BLOCK sw.bb287
%8555:	getelementptr	 %8217 XXX
%8556:	br	 while.body

BASIC BLOCK sw.bb289
%8557:	getelementptr	 %8217 XXX
%8558:	br	 while.body

BASIC BLOCK sw.default
%8559:	call	 abort
%8560:	unreachable	

BASIC BLOCK sw.epilog
%8561:	br	 while.body

BASIC BLOCK while.end
%8562:	sext	 %8180
%8563:	getelementptr	 bufp XXX XXX
%8564:	load	 %8563
%8565:	and	 %8564 XXX
%8566:	zext	 %8565
%8567:	or	 %8566 %8562
%8568:	trunc	 %8567
%8569:	load	 %8563
%8570:	and	 %8568 XXX
%8571:	and	 %8569 XXX
%8572:	or	 %8571 %8570
%8573:	store	 %8572 %8563
%8574:	zext	 %8570
%8575:	br	 done

BASIC BLOCK done
%8576:	br	 return

BASIC BLOCK return
%8577:	phi	 XXX XXX XXX
%8578:	ret	 %8577

FUNCTION re_set_registers

BASIC BLOCK entry
%8579:	icmp	 num_regs XXX
%8580:	br	 %8579 if.else if.then

BASIC BLOCK if.then
%8581:	getelementptr	 bufp XXX XXX
%8582:	load	 %8581
%8583:	and	 %8582 XXX
%8584:	or	 %8583 XXX
%8585:	store	 %8584 %8581
%8586:	getelementptr	 regs XXX XXX
%8587:	store	 num_regs %8586
%8588:	getelementptr	 regs XXX XXX
%8589:	store	 starts %8588
%8590:	getelementptr	 regs XXX XXX
%8591:	store	 ends %8590
%8592:	br	 if.end

BASIC BLOCK if.else
%8593:	getelementptr	 bufp XXX XXX
%8594:	load	 %8593
%8595:	and	 %8594 XXX
%8596:	store	 %8595 %8593
%8597:	getelementptr	 regs XXX XXX
%8598:	store	 XXX %8597
%8599:	getelementptr	 regs XXX XXX
%8600:	store	 XXX %8599
%8601:	getelementptr	 regs XXX XXX
%8602:	store	 XXX %8601
%8603:	br	 if.end

BASIC BLOCK if.end
%8604:	ret	

FUNCTION re_search

BASIC BLOCK entry
%8605:	call	 bufp XXX XXX string size startpos range regs size re_search_2
%8606:	ret	 %8605

FUNCTION re_search_2

BASIC BLOCK entry
%8607:	getelementptr	 bufp XXX XXX
%8608:	load	 %8607
%8609:	getelementptr	 bufp XXX XXX
%8610:	load	 %8609
%8611:	add	 size1 size2
%8612:	add	 startpos range
%8613:	icmp	 startpos XXX
%8614:	br	 %8613 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%8615:	icmp	 startpos %8611
%8616:	br	 %8615 if.end if.then

BASIC BLOCK if.then
%8617:	br	 return

BASIC BLOCK if.end
%8618:	icmp	 %8612 XXX
%8619:	br	 %8618 if.else if.then6

BASIC BLOCK if.then6
%8620:	sub	 XXX startpos
%8621:	br	 if.end11

BASIC BLOCK if.else
%8622:	icmp	 %8612 %8611
%8623:	br	 %8622 if.end10 if.then8

BASIC BLOCK if.then8
%8624:	sub	 %8611 startpos
%8625:	br	 if.end10

BASIC BLOCK if.end10
%8626:	phi	 %8624 range
%8627:	br	 if.end11

BASIC BLOCK if.end11
%8628:	phi	 %8620 %8626
%8629:	getelementptr	 bufp XXX XXX
%8630:	load	 %8629
%8631:	icmp	 %8630 XXX
%8632:	br	 %8631 if.end24 land.lhs.true

BASIC BLOCK land.lhs.true
%8633:	getelementptr	 bufp XXX XXX
%8634:	load	 %8633
%8635:	getelementptr	 %8634 XXX
%8636:	load	 %8635
%8637:	zext	 %8636
%8638:	icmp	 %8637 XXX
%8639:	br	 %8638 if.end24 land.lhs.true15

BASIC BLOCK land.lhs.true15
%8640:	icmp	 %8628 XXX
%8641:	br	 %8640 if.end24 if.then18

BASIC BLOCK if.then18
%8642:	icmp	 startpos XXX
%8643:	br	 %8642 if.else22 if.then21

BASIC BLOCK if.then21
%8644:	br	 return

BASIC BLOCK if.else22
%8645:	br	 if.end23

BASIC BLOCK if.end23
%8646:	br	 if.end24

BASIC BLOCK if.end24
%8647:	phi	 XXX %8628 %8628 %8628
%8648:	icmp	 %8608 XXX
%8649:	br	 %8648 if.end32 land.lhs.true25

BASIC BLOCK land.lhs.true25
%8650:	getelementptr	 bufp XXX XXX
%8651:	load	 %8650
%8652:	lshr	 %8651 XXX
%8653:	and	 %8652 XXX
%8654:	zext	 %8653
%8655:	icmp	 %8654 XXX
%8656:	br	 %8655 if.then27 if.end32

BASIC BLOCK if.then27
%8657:	call	 bufp re_compile_fastmap
%8658:	icmp	 %8657 XXX
%8659:	br	 %8658 if.end31 if.then30

BASIC BLOCK if.then30
%8660:	br	 return

BASIC BLOCK if.end31
%8661:	br	 if.end32

BASIC BLOCK if.end32
%8662:	br	 for.cond

BASIC BLOCK for.cond
%8663:	phi	 startpos %8817
%8664:	phi	 %8647 %8818
%8665:	icmp	 %8608 XXX
%8666:	br	 %8665 if.end119 land.lhs.true34

BASIC BLOCK land.lhs.true34
%8667:	icmp	 %8663 %8611
%8668:	br	 %8667 if.end119 land.lhs.true37

BASIC BLOCK land.lhs.true37
%8669:	getelementptr	 bufp XXX XXX
%8670:	load	 %8669
%8671:	and	 %8670 XXX
%8672:	zext	 %8671
%8673:	icmp	 %8672 XXX
%8674:	br	 %8673 if.then42 if.end119

BASIC BLOCK if.then42
%8675:	icmp	 %8664 XXX
%8676:	br	 %8675 if.else85 if.then45

BASIC BLOCK if.then45
%8677:	icmp	 %8663 size1
%8678:	br	 %8677 if.end55 land.lhs.true48

BASIC BLOCK land.lhs.true48
%8679:	add	 %8663 %8664
%8680:	icmp	 %8679 size1
%8681:	br	 %8680 if.end55 if.then52

BASIC BLOCK if.then52
%8682:	sub	 size1 %8663
%8683:	sub	 %8664 %8682
%8684:	br	 if.end55

BASIC BLOCK if.end55
%8685:	phi	 %8683 XXX XXX
%8686:	icmp	 %8663 size1
%8687:	br	 %8686 cond.false cond.true

BASIC BLOCK cond.true
%8688:	sext	 size1
%8689:	sub	 XXX %8688
%8690:	getelementptr	 string2 %8689
%8691:	br	 cond.end

BASIC BLOCK cond.false
%8692:	br	 cond.end

BASIC BLOCK cond.end
%8693:	phi	 %8690 string1
%8694:	sext	 %8663
%8695:	getelementptr	 %8693 %8694
%8696:	icmp	 %8610 XXX
%8697:	br	 %8696 if.else68 if.then61

BASIC BLOCK if.then61
%8698:	br	 while.cond

BASIC BLOCK while.cond
%8699:	phi	 %8664 %8717
%8700:	phi	 %8695 %8714
%8701:	icmp	 %8699 %8685
%8702:	br	 %8701 land.end land.rhs

BASIC BLOCK land.rhs
%8703:	getelementptr	 %8700 XXX
%8704:	load	 %8700
%8705:	zext	 %8704
%8706:	getelementptr	 %8610 %8705
%8707:	load	 %8706
%8708:	zext	 %8707
%8709:	getelementptr	 %8608 %8708
%8710:	load	 %8709
%8711:	icmp	 %8710 XXX
%8712:	xor	 %8711 XXX
%8713:	br	 land.end

BASIC BLOCK land.end
%8714:	phi	 %8703 %8700
%8715:	phi	 XXX %8712
%8716:	br	 %8715 while.end while.body

BASIC BLOCK while.body
%8717:	add	 %8699 XXX
%8718:	br	 while.cond

BASIC BLOCK while.end
%8719:	br	 if.end82

BASIC BLOCK if.else68
%8720:	br	 while.cond69

BASIC BLOCK while.cond69
%8721:	phi	 %8664 %8736
%8722:	phi	 %8695 %8733
%8723:	icmp	 %8721 %8685
%8724:	br	 %8723 land.end78 land.rhs72

BASIC BLOCK land.rhs72
%8725:	getelementptr	 %8722 XXX
%8726:	load	 %8722
%8727:	zext	 %8726
%8728:	getelementptr	 %8608 %8727
%8729:	load	 %8728
%8730:	icmp	 %8729 XXX
%8731:	xor	 %8730 XXX
%8732:	br	 land.end78

BASIC BLOCK land.end78
%8733:	phi	 %8725 %8722
%8734:	phi	 XXX %8731
%8735:	br	 %8734 while.end81 while.body79

BASIC BLOCK while.body79
%8736:	add	 %8721 XXX
%8737:	br	 while.cond69

BASIC BLOCK while.end81
%8738:	br	 if.end82

BASIC BLOCK if.end82
%8739:	phi	 %8699 %8721
%8740:	sub	 %8664 %8739
%8741:	add	 %8663 %8740
%8742:	br	 if.end118

BASIC BLOCK if.else85
%8743:	icmp	 size1 XXX
%8744:	br	 %8743 lor.lhs.false88 cond.true91

BASIC BLOCK lor.lhs.false88
%8745:	icmp	 %8663 size1
%8746:	br	 %8745 cond.false96 cond.true91

BASIC BLOCK cond.true91
%8747:	sub	 %8663 size1
%8748:	sext	 %8747
%8749:	getelementptr	 string2 %8748
%8750:	load	 %8749
%8751:	sext	 %8750
%8752:	br	 cond.end100

BASIC BLOCK cond.false96
%8753:	sext	 %8663
%8754:	getelementptr	 string1 %8753
%8755:	load	 %8754
%8756:	sext	 %8755
%8757:	br	 cond.end100

BASIC BLOCK cond.end100
%8758:	phi	 %8751 %8756
%8759:	trunc	 %8758
%8760:	icmp	 %8610 XXX
%8761:	br	 %8760 cond.false108 cond.true104

BASIC BLOCK cond.true104
%8762:	zext	 %8759
%8763:	getelementptr	 %8610 %8762
%8764:	load	 %8763
%8765:	sext	 %8764
%8766:	br	 cond.end110

BASIC BLOCK cond.false108
%8767:	sext	 %8759
%8768:	br	 cond.end110

BASIC BLOCK cond.end110
%8769:	phi	 %8765 %8767
%8770:	trunc	 %8769
%8771:	zext	 %8770
%8772:	getelementptr	 %8608 %8771
%8773:	load	 %8772
%8774:	icmp	 %8773 XXX
%8775:	br	 %8774 if.then116 if.end117

BASIC BLOCK if.then116
%8776:	br	 advance

BASIC BLOCK if.end117
%8777:	br	 if.end118

BASIC BLOCK if.end118
%8778:	phi	 %8741 %8663
%8779:	phi	 %8739 %8664
%8780:	br	 if.end119

BASIC BLOCK if.end119
%8781:	phi	 %8663 %8778 %8663 %8663
%8782:	phi	 %8664 %8779 %8664 %8664
%8783:	icmp	 %8782 XXX
%8784:	br	 %8783 if.end134 land.lhs.true122

BASIC BLOCK land.lhs.true122
%8785:	icmp	 %8781 %8611
%8786:	br	 %8785 if.end134 land.lhs.true125

BASIC BLOCK land.lhs.true125
%8787:	icmp	 %8608 XXX
%8788:	br	 %8787 if.end134 land.lhs.true127

BASIC BLOCK land.lhs.true127
%8789:	getelementptr	 bufp XXX XXX
%8790:	load	 %8789
%8791:	and	 %8790 XXX
%8792:	zext	 %8791
%8793:	icmp	 %8792 XXX
%8794:	br	 %8793 if.then133 if.end134

BASIC BLOCK if.then133
%8795:	br	 return

BASIC BLOCK if.end134
%8796:	call	 bufp string1 size1 string2 size2 %8781 regs stop re_match_2_internal
%8797:	icmp	 %8796 XXX
%8798:	br	 %8797 if.end139 if.then138

BASIC BLOCK if.then138
%8799:	br	 return

BASIC BLOCK if.end139
%8800:	icmp	 %8796 XXX
%8801:	br	 %8800 if.end143 if.then142

BASIC BLOCK if.then142
%8802:	br	 return

BASIC BLOCK if.end143
%8803:	br	 advance

BASIC BLOCK advance
%8804:	phi	 %8781 %8663
%8805:	phi	 %8782 %8664
%8806:	icmp	 %8805 XXX
%8807:	br	 %8806 if.then145 if.else146

BASIC BLOCK if.then145
%8808:	br	 for.end

BASIC BLOCK if.else146
%8809:	icmp	 %8805 XXX
%8810:	br	 %8809 if.else151 if.then149

BASIC BLOCK if.then149
%8811:	add	 %8805 XXX
%8812:	add	 %8804 XXX
%8813:	br	 if.end154

BASIC BLOCK if.else151
%8814:	add	 %8805 XXX
%8815:	add	 %8804 XXX
%8816:	br	 if.end154

BASIC BLOCK if.end154
%8817:	phi	 %8812 %8815
%8818:	phi	 %8811 %8814
%8819:	br	 if.end155

BASIC BLOCK if.end155
%8820:	br	 for.cond

BASIC BLOCK for.end
%8821:	br	 return

BASIC BLOCK return
%8822:	phi	 XXX XXX %8781 XXX XXX XXX XXX
%8823:	ret	 %8822

FUNCTION re_match

BASIC BLOCK entry
%8824:	call	 bufp XXX XXX string size pos regs size re_match_2_internal
%8825:	ret	 %8824

FUNCTION re_match_2

BASIC BLOCK entry
%8826:	call	 bufp string1 size1 string2 size2 pos regs stop re_match_2_internal
%8827:	ret	 %8826

FUNCTION re_compile_pattern

BASIC BLOCK entry
%8828:	getelementptr	 bufp XXX XXX
%8829:	load	 %8828
%8830:	and	 %8829 XXX
%8831:	store	 %8830 %8828
%8832:	getelementptr	 bufp XXX XXX
%8833:	load	 %8832
%8834:	and	 %8833 XXX
%8835:	store	 %8834 %8832
%8836:	getelementptr	 bufp XXX XXX
%8837:	load	 %8836
%8838:	and	 %8837 XXX
%8839:	or	 %8838 XXX
%8840:	store	 %8839 %8836
%8841:	load	 re_syntax_options
%8842:	call	 pattern length %8841 bufp regex_compile
%8843:	icmp	 %8842 XXX
%8844:	br	 %8843 if.then if.end

BASIC BLOCK if.then
%8845:	br	 return

BASIC BLOCK if.end
%8846:	sext	 %8842
%8847:	getelementptr	 re_error_msgid XXX %8846
%8848:	load	 %8847
%8849:	call	 %8848 gettext
%8850:	br	 return

BASIC BLOCK return
%8851:	phi	 %8849 XXX
%8852:	ret	 %8851

FUNCTION regex_compile

BASIC BLOCK entry
%8853:	alloca	 XXX
%8854:	alloca	 XXX
%8855:	alloca	 XXX
%8856:	store	 pattern %8854
%8857:	getelementptr	 pattern size
%8858:	getelementptr	 bufp XXX XXX
%8859:	load	 %8858
%8860:	call	 XXX xmalloc
%8861:	bitcast	 %8860
%8862:	getelementptr	 %8853 XXX XXX
%8863:	store	 %8861 %8862
%8864:	getelementptr	 %8853 XXX XXX
%8865:	load	 %8864
%8866:	icmp	 %8865 XXX
%8867:	br	 %8866 if.end if.then

BASIC BLOCK if.then
%8868:	br	 return

BASIC BLOCK if.end
%8869:	getelementptr	 %8853 XXX XXX
%8870:	store	 XXX %8869
%8871:	getelementptr	 %8853 XXX XXX
%8872:	store	 XXX %8871
%8873:	getelementptr	 bufp XXX XXX
%8874:	store	 syntax %8873
%8875:	getelementptr	 bufp XXX XXX
%8876:	load	 %8875
%8877:	and	 %8876 XXX
%8878:	store	 %8877 %8875
%8879:	getelementptr	 bufp XXX XXX
%8880:	load	 %8879
%8881:	and	 %8880 XXX
%8882:	store	 %8881 %8879
%8883:	getelementptr	 bufp XXX XXX
%8884:	load	 %8883
%8885:	and	 %8884 XXX
%8886:	store	 %8885 %8883
%8887:	getelementptr	 bufp XXX XXX
%8888:	store	 XXX %8887
%8889:	getelementptr	 bufp XXX XXX
%8890:	store	 XXX %8889
%8891:	call	 init_syntax_once
%8892:	getelementptr	 bufp XXX XXX
%8893:	load	 %8892
%8894:	icmp	 %8893 XXX
%8895:	br	 %8894 if.end24 if.then10

BASIC BLOCK if.then10
%8896:	getelementptr	 bufp XXX XXX
%8897:	load	 %8896
%8898:	icmp	 %8897 XXX
%8899:	br	 %8898 if.else if.then11

BASIC BLOCK if.then11
%8900:	getelementptr	 bufp XXX XXX
%8901:	load	 %8900
%8902:	call	 %8901 XXX realloc
%8903:	getelementptr	 bufp XXX XXX
%8904:	store	 %8902 %8903
%8905:	br	 if.end17

BASIC BLOCK if.else
%8906:	call	 XXX xmalloc
%8907:	getelementptr	 bufp XXX XXX
%8908:	store	 %8906 %8907
%8909:	br	 if.end17

BASIC BLOCK if.end17
%8910:	getelementptr	 bufp XXX XXX
%8911:	load	 %8910
%8912:	icmp	 %8911 XXX
%8913:	br	 %8912 if.then20 if.end22

BASIC BLOCK if.then20
%8914:	getelementptr	 %8853 XXX XXX
%8915:	load	 %8914
%8916:	bitcast	 %8915
%8917:	call	 %8916 free
%8918:	br	 return

BASIC BLOCK if.end22
%8919:	getelementptr	 bufp XXX XXX
%8920:	store	 XXX %8919
%8921:	br	 if.end24

BASIC BLOCK if.end24
%8922:	getelementptr	 bufp XXX XXX
%8923:	load	 %8922
%8924:	br	 while.cond

BASIC BLOCK while.cond
%8925:	phi	 XXX %13391
%8926:	phi	 XXX %13392
%8927:	phi	 %8923 %13393
%8928:	phi	 XXX %13394
%8929:	phi	 XXX %13395
%8930:	phi	 %8923 %13396
%8931:	load	 %8854
%8932:	icmp	 %8931 %8857
%8933:	br	 %8932 while.end3390 while.body

BASIC BLOCK while.body
%8934:	br	 do.body

BASIC BLOCK do.body
%8935:	load	 %8854
%8936:	icmp	 %8935 %8857
%8937:	br	 %8936 if.end29 if.then28

BASIC BLOCK if.then28
%8938:	br	 return

BASIC BLOCK if.end29
%8939:	load	 %8854
%8940:	getelementptr	 %8939 XXX
%8941:	store	 %8940 %8854
%8942:	load	 %8939
%8943:	icmp	 %8859 XXX
%8944:	br	 %8943 if.end32 if.then31

BASIC BLOCK if.then31
%8945:	zext	 %8942
%8946:	getelementptr	 %8859 %8945
%8947:	load	 %8946
%8948:	br	 if.end32

BASIC BLOCK if.end32
%8949:	phi	 %8947 %8942
%8950:	br	 do.end

BASIC BLOCK do.end
%8951:	zext	 %8949
%8952:	switch	 %8951 sw.default3160 XXX sw.bb XXX sw.bb116 XXX sw.bb208 XXX sw.bb208 XXX sw.bb216 XXX sw.bb623 XXX sw.bb703 XXX sw.bb1319 XXX sw.bb1324 XXX sw.bb1329 XXX sw.bb1334 XXX sw.bb1339 XXX sw.bb1347

BASIC BLOCK sw.bb
%8953:	load	 %8854
%8954:	getelementptr	 pattern XXX
%8955:	icmp	 %8953 %8954
%8956:	br	 %8955 lor.lhs.false if.then41

BASIC BLOCK lor.lhs.false
%8957:	and	 syntax XXX
%8958:	icmp	 %8957 XXX
%8959:	br	 %8958 lor.lhs.false37 if.then41

BASIC BLOCK lor.lhs.false37
%8960:	load	 %8854
%8961:	call	 pattern %8960 syntax at_begline_loc_p
%8962:	sext	 %8961
%8963:	icmp	 %8962 XXX
%8964:	br	 %8963 if.else114 if.then41

BASIC BLOCK if.then41
%8965:	br	 do.body42

BASIC BLOCK do.body42
%8966:	br	 while.cond43

BASIC BLOCK while.cond43
%8967:	phi	 %8926 %9060
%8968:	phi	 %8927 %9061
%8969:	phi	 %8928 %9062
%8970:	phi	 %8929 %9063
%8971:	phi	 %8930 %9064
%8972:	getelementptr	 bufp XXX XXX
%8973:	load	 %8972
%8974:	ptrtoint	 %8971
%8975:	ptrtoint	 %8973
%8976:	sub	 %8974 %8975
%8977:	add	 %8976 XXX
%8978:	getelementptr	 bufp XXX XXX
%8979:	load	 %8978
%8980:	icmp	 %8977 %8979
%8981:	br	 %8980 while.end while.body48

BASIC BLOCK while.body48
%8982:	br	 do.body49

BASIC BLOCK do.body49
%8983:	getelementptr	 bufp XXX XXX
%8984:	load	 %8983
%8985:	getelementptr	 bufp XXX XXX
%8986:	load	 %8985
%8987:	icmp	 %8986 XXX
%8988:	br	 %8987 if.end55 if.then54

BASIC BLOCK if.then54
%8989:	br	 return

BASIC BLOCK if.end55
%8990:	getelementptr	 bufp XXX XXX
%8991:	load	 %8990
%8992:	shl	 %8991 XXX
%8993:	store	 %8992 %8990
%8994:	getelementptr	 bufp XXX XXX
%8995:	load	 %8994
%8996:	icmp	 %8995 XXX
%8997:	br	 %8996 if.end62 if.then60

BASIC BLOCK if.then60
%8998:	getelementptr	 bufp XXX XXX
%8999:	store	 XXX %8998
%9000:	br	 if.end62

BASIC BLOCK if.end62
%9001:	getelementptr	 bufp XXX XXX
%9002:	load	 %9001
%9003:	getelementptr	 bufp XXX XXX
%9004:	load	 %9003
%9005:	call	 %9002 %9004 realloc
%9006:	getelementptr	 bufp XXX XXX
%9007:	store	 %9005 %9006
%9008:	getelementptr	 bufp XXX XXX
%9009:	load	 %9008
%9010:	icmp	 %9009 XXX
%9011:	br	 %9010 if.end71 if.then70

BASIC BLOCK if.then70
%9012:	br	 return

BASIC BLOCK if.end71
%9013:	getelementptr	 bufp XXX XXX
%9014:	load	 %9013
%9015:	icmp	 %8984 %9014
%9016:	br	 %9015 if.end110 if.then75

BASIC BLOCK if.then75
%9017:	ptrtoint	 %8971
%9018:	ptrtoint	 %8984
%9019:	sub	 %9017 %9018
%9020:	getelementptr	 bufp XXX XXX
%9021:	load	 %9020
%9022:	getelementptr	 %9021 %9019
%9023:	ptrtoint	 %8968
%9024:	ptrtoint	 %8984
%9025:	sub	 %9023 %9024
%9026:	getelementptr	 bufp XXX XXX
%9027:	load	 %9026
%9028:	getelementptr	 %9027 %9025
%9029:	icmp	 %8967 XXX
%9030:	br	 %9029 if.end93 if.then87

BASIC BLOCK if.then87
%9031:	ptrtoint	 %8967
%9032:	ptrtoint	 %8984
%9033:	sub	 %9031 %9032
%9034:	getelementptr	 bufp XXX XXX
%9035:	load	 %9034
%9036:	getelementptr	 %9035 %9033
%9037:	br	 if.end93

BASIC BLOCK if.end93
%9038:	phi	 %9036 %8967
%9039:	icmp	 %8969 XXX
%9040:	br	 %9039 if.end101 if.then95

BASIC BLOCK if.then95
%9041:	ptrtoint	 %8969
%9042:	ptrtoint	 %8984
%9043:	sub	 %9041 %9042
%9044:	getelementptr	 bufp XXX XXX
%9045:	load	 %9044
%9046:	getelementptr	 %9045 %9043
%9047:	br	 if.end101

BASIC BLOCK if.end101
%9048:	phi	 %9046 %8969
%9049:	icmp	 %8970 XXX
%9050:	br	 %9049 if.end109 if.then103

BASIC BLOCK if.then103
%9051:	ptrtoint	 %8970
%9052:	ptrtoint	 %8984
%9053:	sub	 %9051 %9052
%9054:	getelementptr	 bufp XXX XXX
%9055:	load	 %9054
%9056:	getelementptr	 %9055 %9053
%9057:	br	 if.end109

BASIC BLOCK if.end109
%9058:	phi	 %9056 %8970
%9059:	br	 if.end110

BASIC BLOCK if.end110
%9060:	phi	 %9038 %8967
%9061:	phi	 %9028 %8968
%9062:	phi	 %9048 %8969
%9063:	phi	 %9058 %8970
%9064:	phi	 %9022 %8971
%9065:	br	 do.end111

BASIC BLOCK do.end111
%9066:	br	 while.cond43

BASIC BLOCK while.end
%9067:	getelementptr	 %8971 XXX
%9068:	store	 XXX %8971
%9069:	br	 do.end113

BASIC BLOCK do.end113
%9070:	br	 if.end115

BASIC BLOCK if.else114
%9071:	br	 normal_char

BASIC BLOCK if.end115
%9072:	br	 sw.epilog3389

BASIC BLOCK sw.bb116
%9073:	load	 %8854
%9074:	icmp	 %9073 %8857
%9075:	br	 %9074 lor.lhs.false119 if.then126

BASIC BLOCK lor.lhs.false119
%9076:	and	 syntax XXX
%9077:	icmp	 %9076 XXX
%9078:	br	 %9077 lor.lhs.false122 if.then126

BASIC BLOCK lor.lhs.false122
%9079:	load	 %8854
%9080:	call	 %9079 %8857 syntax at_endline_loc_p
%9081:	sext	 %9080
%9082:	icmp	 %9081 XXX
%9083:	br	 %9082 if.else206 if.then126

BASIC BLOCK if.then126
%9084:	br	 do.body127

BASIC BLOCK do.body127
%9085:	br	 while.cond128

BASIC BLOCK while.cond128
%9086:	phi	 %8926 %9179
%9087:	phi	 %8927 %9180
%9088:	phi	 %8928 %9181
%9089:	phi	 %8929 %9182
%9090:	phi	 %8930 %9183
%9091:	getelementptr	 bufp XXX XXX
%9092:	load	 %9091
%9093:	ptrtoint	 %9090
%9094:	ptrtoint	 %9092
%9095:	sub	 %9093 %9094
%9096:	add	 %9095 XXX
%9097:	getelementptr	 bufp XXX XXX
%9098:	load	 %9097
%9099:	icmp	 %9096 %9098
%9100:	br	 %9099 while.end203 while.body137

BASIC BLOCK while.body137
%9101:	br	 do.body138

BASIC BLOCK do.body138
%9102:	getelementptr	 bufp XXX XXX
%9103:	load	 %9102
%9104:	getelementptr	 bufp XXX XXX
%9105:	load	 %9104
%9106:	icmp	 %9105 XXX
%9107:	br	 %9106 if.end145 if.then144

BASIC BLOCK if.then144
%9108:	br	 return

BASIC BLOCK if.end145
%9109:	getelementptr	 bufp XXX XXX
%9110:	load	 %9109
%9111:	shl	 %9110 XXX
%9112:	store	 %9111 %9109
%9113:	getelementptr	 bufp XXX XXX
%9114:	load	 %9113
%9115:	icmp	 %9114 XXX
%9116:	br	 %9115 if.end153 if.then151

BASIC BLOCK if.then151
%9117:	getelementptr	 bufp XXX XXX
%9118:	store	 XXX %9117
%9119:	br	 if.end153

BASIC BLOCK if.end153
%9120:	getelementptr	 bufp XXX XXX
%9121:	load	 %9120
%9122:	getelementptr	 bufp XXX XXX
%9123:	load	 %9122
%9124:	call	 %9121 %9123 realloc
%9125:	getelementptr	 bufp XXX XXX
%9126:	store	 %9124 %9125
%9127:	getelementptr	 bufp XXX XXX
%9128:	load	 %9127
%9129:	icmp	 %9128 XXX
%9130:	br	 %9129 if.end162 if.then161

BASIC BLOCK if.then161
%9131:	br	 return

BASIC BLOCK if.end162
%9132:	getelementptr	 bufp XXX XXX
%9133:	load	 %9132
%9134:	icmp	 %9103 %9133
%9135:	br	 %9134 if.end201 if.then166

BASIC BLOCK if.then166
%9136:	ptrtoint	 %9090
%9137:	ptrtoint	 %9103
%9138:	sub	 %9136 %9137
%9139:	getelementptr	 bufp XXX XXX
%9140:	load	 %9139
%9141:	getelementptr	 %9140 %9138
%9142:	ptrtoint	 %9087
%9143:	ptrtoint	 %9103
%9144:	sub	 %9142 %9143
%9145:	getelementptr	 bufp XXX XXX
%9146:	load	 %9145
%9147:	getelementptr	 %9146 %9144
%9148:	icmp	 %9086 XXX
%9149:	br	 %9148 if.end184 if.then178

BASIC BLOCK if.then178
%9150:	ptrtoint	 %9086
%9151:	ptrtoint	 %9103
%9152:	sub	 %9150 %9151
%9153:	getelementptr	 bufp XXX XXX
%9154:	load	 %9153
%9155:	getelementptr	 %9154 %9152
%9156:	br	 if.end184

BASIC BLOCK if.end184
%9157:	phi	 %9155 %9086
%9158:	icmp	 %9088 XXX
%9159:	br	 %9158 if.end192 if.then186

BASIC BLOCK if.then186
%9160:	ptrtoint	 %9088
%9161:	ptrtoint	 %9103
%9162:	sub	 %9160 %9161
%9163:	getelementptr	 bufp XXX XXX
%9164:	load	 %9163
%9165:	getelementptr	 %9164 %9162
%9166:	br	 if.end192

BASIC BLOCK if.end192
%9167:	phi	 %9165 %9088
%9168:	icmp	 %9089 XXX
%9169:	br	 %9168 if.end200 if.then194

BASIC BLOCK if.then194
%9170:	ptrtoint	 %9089
%9171:	ptrtoint	 %9103
%9172:	sub	 %9170 %9171
%9173:	getelementptr	 bufp XXX XXX
%9174:	load	 %9173
%9175:	getelementptr	 %9174 %9172
%9176:	br	 if.end200

BASIC BLOCK if.end200
%9177:	phi	 %9175 %9089
%9178:	br	 if.end201

BASIC BLOCK if.end201
%9179:	phi	 %9157 %9086
%9180:	phi	 %9147 %9087
%9181:	phi	 %9167 %9088
%9182:	phi	 %9177 %9089
%9183:	phi	 %9141 %9090
%9184:	br	 do.end202

BASIC BLOCK do.end202
%9185:	br	 while.cond128

BASIC BLOCK while.end203
%9186:	getelementptr	 %9090 XXX
%9187:	store	 XXX %9090
%9188:	br	 do.end205

BASIC BLOCK do.end205
%9189:	br	 if.end207

BASIC BLOCK if.else206
%9190:	br	 normal_char

BASIC BLOCK if.end207
%9191:	br	 sw.epilog3389

BASIC BLOCK sw.bb208
%9192:	and	 syntax XXX
%9193:	icmp	 %9192 XXX
%9194:	br	 %9193 lor.lhs.false211 if.then214

BASIC BLOCK lor.lhs.false211
%9195:	and	 syntax XXX
%9196:	icmp	 %9195 XXX
%9197:	br	 %9196 if.end215 if.then214

BASIC BLOCK if.then214
%9198:	br	 normal_char

BASIC BLOCK if.end215
%9199:	br	 handle_plus

BASIC BLOCK handle_plus
%9200:	phi	 %10685 %8949
%9201:	br	 sw.bb216

BASIC BLOCK sw.bb216
%9202:	phi	 %9200 %8949
%9203:	icmp	 %8928 XXX
%9204:	br	 %9203 if.then218 if.end229

BASIC BLOCK if.then218
%9205:	and	 syntax XXX
%9206:	icmp	 %9205 XXX
%9207:	br	 %9206 if.else223 if.then221

BASIC BLOCK if.then221
%9208:	getelementptr	 %8853 XXX XXX
%9209:	load	 %9208
%9210:	bitcast	 %9209
%9211:	call	 %9210 free
%9212:	br	 return

BASIC BLOCK if.else223
%9213:	and	 syntax XXX
%9214:	icmp	 %9213 XXX
%9215:	br	 %9214 if.then226 if.end227

BASIC BLOCK if.then226
%9216:	br	 normal_char

BASIC BLOCK if.end227
%9217:	br	 if.end228

BASIC BLOCK if.end228
%9218:	br	 if.end229

BASIC BLOCK if.end229
%9219:	br	 for.cond

BASIC BLOCK for.cond
%9220:	phi	 XXX %9228
%9221:	phi	 XXX %9234
%9222:	phi	 %9202 %9319
%9223:	zext	 %9222
%9224:	icmp	 %9223 XXX
%9225:	zext	 %9224
%9226:	sext	 %9220
%9227:	or	 %9226 %9225
%9228:	trunc	 %9227
%9229:	zext	 %9222
%9230:	icmp	 %9229 XXX
%9231:	zext	 %9230
%9232:	sext	 %9221
%9233:	or	 %9232 %9231
%9234:	trunc	 %9233
%9235:	load	 %8854
%9236:	icmp	 %9235 %8857
%9237:	br	 %9236 if.end244 if.then243

BASIC BLOCK if.then243
%9238:	br	 for.end

BASIC BLOCK if.end244
%9239:	br	 do.body245

BASIC BLOCK do.body245
%9240:	load	 %8854
%9241:	icmp	 %9240 %8857
%9242:	br	 %9241 if.end249 if.then248

BASIC BLOCK if.then248
%9243:	br	 return

BASIC BLOCK if.end249
%9244:	load	 %8854
%9245:	getelementptr	 %9244 XXX
%9246:	store	 %9245 %8854
%9247:	load	 %9244
%9248:	icmp	 %8859 XXX
%9249:	br	 %9248 if.end255 if.then252

BASIC BLOCK if.then252
%9250:	zext	 %9247
%9251:	getelementptr	 %8859 %9250
%9252:	load	 %9251
%9253:	br	 if.end255

BASIC BLOCK if.end255
%9254:	phi	 %9252 %9247
%9255:	br	 do.end256

BASIC BLOCK do.end256
%9256:	zext	 %9254
%9257:	icmp	 %9256 XXX
%9258:	br	 %9257 lor.lhs.false260 if.then270

BASIC BLOCK lor.lhs.false260
%9259:	and	 syntax XXX
%9260:	icmp	 %9259 XXX
%9261:	br	 %9260 land.lhs.true if.else271

BASIC BLOCK land.lhs.true
%9262:	zext	 %9254
%9263:	icmp	 %9262 XXX
%9264:	br	 %9263 lor.lhs.false266 if.then270

BASIC BLOCK lor.lhs.false266
%9265:	zext	 %9254
%9266:	icmp	 %9265 XXX
%9267:	br	 %9266 if.else271 if.then270

BASIC BLOCK if.then270
%9268:	br	 if.end310

BASIC BLOCK if.else271
%9269:	and	 syntax XXX
%9270:	icmp	 %9269 XXX
%9271:	br	 %9270 if.else307 land.lhs.true274

BASIC BLOCK land.lhs.true274
%9272:	zext	 %9254
%9273:	icmp	 %9272 XXX
%9274:	br	 %9273 if.else307 if.then278

BASIC BLOCK if.then278
%9275:	load	 %8854
%9276:	icmp	 %9275 %8857
%9277:	br	 %9276 if.end283 if.then281

BASIC BLOCK if.then281
%9278:	getelementptr	 %8853 XXX XXX
%9279:	load	 %9278
%9280:	bitcast	 %9279
%9281:	call	 %9280 free
%9282:	br	 return

BASIC BLOCK if.end283
%9283:	br	 do.body284

BASIC BLOCK do.body284
%9284:	load	 %8854
%9285:	icmp	 %9284 %8857
%9286:	br	 %9285 if.end288 if.then287

BASIC BLOCK if.then287
%9287:	br	 return

BASIC BLOCK if.end288
%9288:	load	 %8854
%9289:	getelementptr	 %9288 XXX
%9290:	store	 %9289 %8854
%9291:	load	 %9288
%9292:	icmp	 %8859 XXX
%9293:	br	 %9292 if.end294 if.then291

BASIC BLOCK if.then291
%9294:	zext	 %9291
%9295:	getelementptr	 %8859 %9294
%9296:	load	 %9295
%9297:	br	 if.end294

BASIC BLOCK if.end294
%9298:	phi	 %9296 %9291
%9299:	br	 do.end295

BASIC BLOCK do.end295
%9300:	zext	 %9298
%9301:	icmp	 %9300 XXX
%9302:	br	 %9301 lor.lhs.false299 if.end306

BASIC BLOCK lor.lhs.false299
%9303:	zext	 %9298
%9304:	icmp	 %9303 XXX
%9305:	br	 %9304 if.then303 if.end306

BASIC BLOCK if.then303
%9306:	load	 %8854
%9307:	getelementptr	 %9306 XXX
%9308:	store	 %9307 %8854
%9309:	load	 %8854
%9310:	getelementptr	 %9309 XXX
%9311:	store	 %9310 %8854
%9312:	br	 for.end

BASIC BLOCK if.end306
%9313:	br	 if.end309

BASIC BLOCK if.else307
%9314:	load	 %8854
%9315:	getelementptr	 %9314 XXX
%9316:	store	 %9315 %8854
%9317:	br	 for.end

BASIC BLOCK if.end309
%9318:	br	 if.end310

BASIC BLOCK if.end310
%9319:	phi	 %9254 %9298
%9320:	br	 for.cond

BASIC BLOCK for.end
%9321:	icmp	 %8928 XXX
%9322:	br	 %9321 if.then312 if.end313

BASIC BLOCK if.then312
%9323:	br	 sw.epilog3389

BASIC BLOCK if.end313
%9324:	icmp	 %9234 XXX
%9325:	br	 %9324 if.end450 if.then315

BASIC BLOCK if.then315
%9326:	br	 while.cond316

BASIC BLOCK while.cond316
%9327:	phi	 %8926 %9420
%9328:	phi	 %8927 %9421
%9329:	phi	 %8928 %9422
%9330:	phi	 %8929 %9423
%9331:	phi	 %8930 %9424
%9332:	getelementptr	 bufp XXX XXX
%9333:	load	 %9332
%9334:	ptrtoint	 %9331
%9335:	ptrtoint	 %9333
%9336:	sub	 %9334 %9335
%9337:	add	 %9336 XXX
%9338:	getelementptr	 bufp XXX XXX
%9339:	load	 %9338
%9340:	icmp	 %9337 %9339
%9341:	br	 %9340 while.end391 while.body325

BASIC BLOCK while.body325
%9342:	br	 do.body326

BASIC BLOCK do.body326
%9343:	getelementptr	 bufp XXX XXX
%9344:	load	 %9343
%9345:	getelementptr	 bufp XXX XXX
%9346:	load	 %9345
%9347:	icmp	 %9346 XXX
%9348:	br	 %9347 if.end333 if.then332

BASIC BLOCK if.then332
%9349:	br	 return

BASIC BLOCK if.end333
%9350:	getelementptr	 bufp XXX XXX
%9351:	load	 %9350
%9352:	shl	 %9351 XXX
%9353:	store	 %9352 %9350
%9354:	getelementptr	 bufp XXX XXX
%9355:	load	 %9354
%9356:	icmp	 %9355 XXX
%9357:	br	 %9356 if.end341 if.then339

BASIC BLOCK if.then339
%9358:	getelementptr	 bufp XXX XXX
%9359:	store	 XXX %9358
%9360:	br	 if.end341

BASIC BLOCK if.end341
%9361:	getelementptr	 bufp XXX XXX
%9362:	load	 %9361
%9363:	getelementptr	 bufp XXX XXX
%9364:	load	 %9363
%9365:	call	 %9362 %9364 realloc
%9366:	getelementptr	 bufp XXX XXX
%9367:	store	 %9365 %9366
%9368:	getelementptr	 bufp XXX XXX
%9369:	load	 %9368
%9370:	icmp	 %9369 XXX
%9371:	br	 %9370 if.end350 if.then349

BASIC BLOCK if.then349
%9372:	br	 return

BASIC BLOCK if.end350
%9373:	getelementptr	 bufp XXX XXX
%9374:	load	 %9373
%9375:	icmp	 %9344 %9374
%9376:	br	 %9375 if.end389 if.then354

BASIC BLOCK if.then354
%9377:	ptrtoint	 %9331
%9378:	ptrtoint	 %9344
%9379:	sub	 %9377 %9378
%9380:	getelementptr	 bufp XXX XXX
%9381:	load	 %9380
%9382:	getelementptr	 %9381 %9379
%9383:	ptrtoint	 %9328
%9384:	ptrtoint	 %9344
%9385:	sub	 %9383 %9384
%9386:	getelementptr	 bufp XXX XXX
%9387:	load	 %9386
%9388:	getelementptr	 %9387 %9385
%9389:	icmp	 %9327 XXX
%9390:	br	 %9389 if.end372 if.then366

BASIC BLOCK if.then366
%9391:	ptrtoint	 %9327
%9392:	ptrtoint	 %9344
%9393:	sub	 %9391 %9392
%9394:	getelementptr	 bufp XXX XXX
%9395:	load	 %9394
%9396:	getelementptr	 %9395 %9393
%9397:	br	 if.end372

BASIC BLOCK if.end372
%9398:	phi	 %9396 %9327
%9399:	icmp	 %9329 XXX
%9400:	br	 %9399 if.end380 if.then374

BASIC BLOCK if.then374
%9401:	ptrtoint	 %9329
%9402:	ptrtoint	 %9344
%9403:	sub	 %9401 %9402
%9404:	getelementptr	 bufp XXX XXX
%9405:	load	 %9404
%9406:	getelementptr	 %9405 %9403
%9407:	br	 if.end380

BASIC BLOCK if.end380
%9408:	phi	 %9406 %9329
%9409:	icmp	 %9330 XXX
%9410:	br	 %9409 if.end388 if.then382

BASIC BLOCK if.then382
%9411:	ptrtoint	 %9330
%9412:	ptrtoint	 %9344
%9413:	sub	 %9411 %9412
%9414:	getelementptr	 bufp XXX XXX
%9415:	load	 %9414
%9416:	getelementptr	 %9415 %9413
%9417:	br	 if.end388

BASIC BLOCK if.end388
%9418:	phi	 %9416 %9330
%9419:	br	 if.end389

BASIC BLOCK if.end389
%9420:	phi	 %9398 %9327
%9421:	phi	 %9388 %9328
%9422:	phi	 %9408 %9329
%9423:	phi	 %9418 %9330
%9424:	phi	 %9382 %9331
%9425:	br	 do.end390

BASIC BLOCK do.end390
%9426:	br	 while.cond316

BASIC BLOCK while.end391
%9427:	icmp	 %8859 XXX
%9428:	br	 %9427 cond.false cond.true

BASIC BLOCK cond.true
%9429:	load	 %8854
%9430:	getelementptr	 %9429 XXX
%9431:	load	 %9430
%9432:	zext	 %9431
%9433:	getelementptr	 %8859 %9432
%9434:	load	 %9433
%9435:	sext	 %9434
%9436:	br	 cond.end

BASIC BLOCK cond.false
%9437:	load	 %8854
%9438:	getelementptr	 %9437 XXX
%9439:	load	 %9438
%9440:	sext	 %9439
%9441:	br	 cond.end

BASIC BLOCK cond.end
%9442:	phi	 %9435 %9440
%9443:	icmp	 %8859 XXX
%9444:	br	 %9443 cond.false403 cond.true400

BASIC BLOCK cond.true400
%9445:	getelementptr	 %8859 XXX
%9446:	load	 %9445
%9447:	sext	 %9446
%9448:	br	 cond.end404

BASIC BLOCK cond.false403
%9449:	br	 cond.end404

BASIC BLOCK cond.end404
%9450:	phi	 %9447 XXX
%9451:	icmp	 %9442 %9450
%9452:	br	 %9451 if.else441 land.lhs.true408

BASIC BLOCK land.lhs.true408
%9453:	sext	 %9228
%9454:	icmp	 %9453 XXX
%9455:	br	 %9454 if.else441 land.lhs.true411

BASIC BLOCK land.lhs.true411
%9456:	load	 %8854
%9457:	icmp	 %9456 %8857
%9458:	br	 %9457 if.else441 land.lhs.true414

BASIC BLOCK land.lhs.true414
%9459:	icmp	 %8859 XXX
%9460:	br	 %9459 cond.false420 cond.true416

BASIC BLOCK cond.true416
%9461:	load	 %8854
%9462:	load	 %9461
%9463:	zext	 %9462
%9464:	getelementptr	 %8859 %9463
%9465:	load	 %9464
%9466:	sext	 %9465
%9467:	br	 cond.end422

BASIC BLOCK cond.false420
%9468:	load	 %8854
%9469:	load	 %9468
%9470:	sext	 %9469
%9471:	br	 cond.end422

BASIC BLOCK cond.end422
%9472:	phi	 %9466 %9470
%9473:	icmp	 %8859 XXX
%9474:	br	 %9473 cond.false428 cond.true425

BASIC BLOCK cond.true425
%9475:	getelementptr	 %8859 XXX
%9476:	load	 %9475
%9477:	sext	 %9476
%9478:	br	 cond.end429

BASIC BLOCK cond.false428
%9479:	br	 cond.end429

BASIC BLOCK cond.end429
%9480:	phi	 %9477 XXX
%9481:	icmp	 %9472 %9480
%9482:	br	 %9481 if.else441 land.lhs.true433

BASIC BLOCK land.lhs.true433
%9483:	and	 syntax XXX
%9484:	icmp	 %9483 XXX
%9485:	br	 %9484 if.then436 if.else441

BASIC BLOCK if.then436
%9486:	ptrtoint	 %9329
%9487:	ptrtoint	 %9331
%9488:	sub	 %9486 %9487
%9489:	sub	 %9488 XXX
%9490:	trunc	 %9489
%9491:	call	 XXX %9331 %9490 store_op1
%9492:	br	 if.end448

BASIC BLOCK if.else441
%9493:	getelementptr	 %9329 XXX
%9494:	ptrtoint	 %9493
%9495:	ptrtoint	 %9331
%9496:	sub	 %9494 %9495
%9497:	sub	 %9496 XXX
%9498:	trunc	 %9497
%9499:	call	 XXX %9331 %9498 store_op1
%9500:	br	 if.end448

BASIC BLOCK if.end448
%9501:	phi	 XXX XXX
%9502:	getelementptr	 %9331 XXX
%9503:	br	 if.end450

BASIC BLOCK if.end450
%9504:	phi	 %9327 %8926
%9505:	phi	 %9328 %8927
%9506:	phi	 %9329 %8928
%9507:	phi	 %9330 %8929
%9508:	phi	 %9501 XXX
%9509:	phi	 %9502 %8930
%9510:	br	 while.cond451

BASIC BLOCK while.cond451
%9511:	phi	 %9504 %9604
%9512:	phi	 %9505 %9605
%9513:	phi	 %9506 %9606
%9514:	phi	 %9507 %9607
%9515:	phi	 %9509 %9608
%9516:	getelementptr	 bufp XXX XXX
%9517:	load	 %9516
%9518:	ptrtoint	 %9515
%9519:	ptrtoint	 %9517
%9520:	sub	 %9518 %9519
%9521:	add	 %9520 XXX
%9522:	getelementptr	 bufp XXX XXX
%9523:	load	 %9522
%9524:	icmp	 %9521 %9523
%9525:	br	 %9524 while.end526 while.body460

BASIC BLOCK while.body460
%9526:	br	 do.body461

BASIC BLOCK do.body461
%9527:	getelementptr	 bufp XXX XXX
%9528:	load	 %9527
%9529:	getelementptr	 bufp XXX XXX
%9530:	load	 %9529
%9531:	icmp	 %9530 XXX
%9532:	br	 %9531 if.end468 if.then467

BASIC BLOCK if.then467
%9533:	br	 return

BASIC BLOCK if.end468
%9534:	getelementptr	 bufp XXX XXX
%9535:	load	 %9534
%9536:	shl	 %9535 XXX
%9537:	store	 %9536 %9534
%9538:	getelementptr	 bufp XXX XXX
%9539:	load	 %9538
%9540:	icmp	 %9539 XXX
%9541:	br	 %9540 if.end476 if.then474

BASIC BLOCK if.then474
%9542:	getelementptr	 bufp XXX XXX
%9543:	store	 XXX %9542
%9544:	br	 if.end476

BASIC BLOCK if.end476
%9545:	getelementptr	 bufp XXX XXX
%9546:	load	 %9545
%9547:	getelementptr	 bufp XXX XXX
%9548:	load	 %9547
%9549:	call	 %9546 %9548 realloc
%9550:	getelementptr	 bufp XXX XXX
%9551:	store	 %9549 %9550
%9552:	getelementptr	 bufp XXX XXX
%9553:	load	 %9552
%9554:	icmp	 %9553 XXX
%9555:	br	 %9554 if.end485 if.then484

BASIC BLOCK if.then484
%9556:	br	 return

BASIC BLOCK if.end485
%9557:	getelementptr	 bufp XXX XXX
%9558:	load	 %9557
%9559:	icmp	 %9528 %9558
%9560:	br	 %9559 if.end524 if.then489

BASIC BLOCK if.then489
%9561:	ptrtoint	 %9515
%9562:	ptrtoint	 %9528
%9563:	sub	 %9561 %9562
%9564:	getelementptr	 bufp XXX XXX
%9565:	load	 %9564
%9566:	getelementptr	 %9565 %9563
%9567:	ptrtoint	 %9512
%9568:	ptrtoint	 %9528
%9569:	sub	 %9567 %9568
%9570:	getelementptr	 bufp XXX XXX
%9571:	load	 %9570
%9572:	getelementptr	 %9571 %9569
%9573:	icmp	 %9511 XXX
%9574:	br	 %9573 if.end507 if.then501

BASIC BLOCK if.then501
%9575:	ptrtoint	 %9511
%9576:	ptrtoint	 %9528
%9577:	sub	 %9575 %9576
%9578:	getelementptr	 bufp XXX XXX
%9579:	load	 %9578
%9580:	getelementptr	 %9579 %9577
%9581:	br	 if.end507

BASIC BLOCK if.end507
%9582:	phi	 %9580 %9511
%9583:	icmp	 %9513 XXX
%9584:	br	 %9583 if.end515 if.then509

BASIC BLOCK if.then509
%9585:	ptrtoint	 %9513
%9586:	ptrtoint	 %9528
%9587:	sub	 %9585 %9586
%9588:	getelementptr	 bufp XXX XXX
%9589:	load	 %9588
%9590:	getelementptr	 %9589 %9587
%9591:	br	 if.end515

BASIC BLOCK if.end515
%9592:	phi	 %9590 %9513
%9593:	icmp	 %9514 XXX
%9594:	br	 %9593 if.end523 if.then517

BASIC BLOCK if.then517
%9595:	ptrtoint	 %9514
%9596:	ptrtoint	 %9528
%9597:	sub	 %9595 %9596
%9598:	getelementptr	 bufp XXX XXX
%9599:	load	 %9598
%9600:	getelementptr	 %9599 %9597
%9601:	br	 if.end523

BASIC BLOCK if.end523
%9602:	phi	 %9600 %9514
%9603:	br	 if.end524

BASIC BLOCK if.end524
%9604:	phi	 %9582 %9511
%9605:	phi	 %9572 %9512
%9606:	phi	 %9592 %9513
%9607:	phi	 %9602 %9514
%9608:	phi	 %9566 %9515
%9609:	br	 do.end525

BASIC BLOCK do.end525
%9610:	br	 while.cond451

BASIC BLOCK while.end526
%9611:	sext	 %9508
%9612:	icmp	 %9611 XXX
%9613:	select	 %9612 XXX XXX
%9614:	getelementptr	 %9515 XXX
%9615:	ptrtoint	 %9614
%9616:	ptrtoint	 %9513
%9617:	sub	 %9615 %9616
%9618:	sub	 %9617 XXX
%9619:	trunc	 %9618
%9620:	call	 %9613 %9513 %9619 %9515 insert_op1
%9621:	getelementptr	 %9515 XXX
%9622:	icmp	 %9228 XXX
%9623:	br	 %9622 if.then538 if.end622

BASIC BLOCK if.then538
%9624:	br	 while.cond539

BASIC BLOCK while.cond539
%9625:	phi	 %9511 %9718
%9626:	phi	 %9512 %9719
%9627:	phi	 %9513 %9720
%9628:	phi	 XXX %9721
%9629:	phi	 %9621 %9722
%9630:	getelementptr	 bufp XXX XXX
%9631:	load	 %9630
%9632:	ptrtoint	 %9629
%9633:	ptrtoint	 %9631
%9634:	sub	 %9632 %9633
%9635:	add	 %9634 XXX
%9636:	getelementptr	 bufp XXX XXX
%9637:	load	 %9636
%9638:	icmp	 %9635 %9637
%9639:	br	 %9638 while.end614 while.body548

BASIC BLOCK while.body548
%9640:	br	 do.body549

BASIC BLOCK do.body549
%9641:	getelementptr	 bufp XXX XXX
%9642:	load	 %9641
%9643:	getelementptr	 bufp XXX XXX
%9644:	load	 %9643
%9645:	icmp	 %9644 XXX
%9646:	br	 %9645 if.end556 if.then555

BASIC BLOCK if.then555
%9647:	br	 return

BASIC BLOCK if.end556
%9648:	getelementptr	 bufp XXX XXX
%9649:	load	 %9648
%9650:	shl	 %9649 XXX
%9651:	store	 %9650 %9648
%9652:	getelementptr	 bufp XXX XXX
%9653:	load	 %9652
%9654:	icmp	 %9653 XXX
%9655:	br	 %9654 if.end564 if.then562

BASIC BLOCK if.then562
%9656:	getelementptr	 bufp XXX XXX
%9657:	store	 XXX %9656
%9658:	br	 if.end564

BASIC BLOCK if.end564
%9659:	getelementptr	 bufp XXX XXX
%9660:	load	 %9659
%9661:	getelementptr	 bufp XXX XXX
%9662:	load	 %9661
%9663:	call	 %9660 %9662 realloc
%9664:	getelementptr	 bufp XXX XXX
%9665:	store	 %9663 %9664
%9666:	getelementptr	 bufp XXX XXX
%9667:	load	 %9666
%9668:	icmp	 %9667 XXX
%9669:	br	 %9668 if.end573 if.then572

BASIC BLOCK if.then572
%9670:	br	 return

BASIC BLOCK if.end573
%9671:	getelementptr	 bufp XXX XXX
%9672:	load	 %9671
%9673:	icmp	 %9642 %9672
%9674:	br	 %9673 if.end612 if.then577

BASIC BLOCK if.then577
%9675:	ptrtoint	 %9629
%9676:	ptrtoint	 %9642
%9677:	sub	 %9675 %9676
%9678:	getelementptr	 bufp XXX XXX
%9679:	load	 %9678
%9680:	getelementptr	 %9679 %9677
%9681:	ptrtoint	 %9626
%9682:	ptrtoint	 %9642
%9683:	sub	 %9681 %9682
%9684:	getelementptr	 bufp XXX XXX
%9685:	load	 %9684
%9686:	getelementptr	 %9685 %9683
%9687:	icmp	 %9625 XXX
%9688:	br	 %9687 if.end595 if.then589

BASIC BLOCK if.then589
%9689:	ptrtoint	 %9625
%9690:	ptrtoint	 %9642
%9691:	sub	 %9689 %9690
%9692:	getelementptr	 bufp XXX XXX
%9693:	load	 %9692
%9694:	getelementptr	 %9693 %9691
%9695:	br	 if.end595

BASIC BLOCK if.end595
%9696:	phi	 %9694 %9625
%9697:	icmp	 %9627 XXX
%9698:	br	 %9697 if.end603 if.then597

BASIC BLOCK if.then597
%9699:	ptrtoint	 %9627
%9700:	ptrtoint	 %9642
%9701:	sub	 %9699 %9700
%9702:	getelementptr	 bufp XXX XXX
%9703:	load	 %9702
%9704:	getelementptr	 %9703 %9701
%9705:	br	 if.end603

BASIC BLOCK if.end603
%9706:	phi	 %9704 %9627
%9707:	icmp	 %9628 XXX
%9708:	br	 %9707 if.end611 if.then605

BASIC BLOCK if.then605
%9709:	ptrtoint	 %9628
%9710:	ptrtoint	 %9642
%9711:	sub	 %9709 %9710
%9712:	getelementptr	 bufp XXX XXX
%9713:	load	 %9712
%9714:	getelementptr	 %9713 %9711
%9715:	br	 if.end611

BASIC BLOCK if.end611
%9716:	phi	 %9714 %9628
%9717:	br	 if.end612

BASIC BLOCK if.end612
%9718:	phi	 %9696 %9625
%9719:	phi	 %9686 %9626
%9720:	phi	 %9706 %9627
%9721:	phi	 %9716 %9628
%9722:	phi	 %9680 %9629
%9723:	br	 do.end613

BASIC BLOCK do.end613
%9724:	br	 while.cond539

BASIC BLOCK while.end614
%9725:	getelementptr	 %9627 XXX
%9726:	ptrtoint	 %9725
%9727:	ptrtoint	 %9627
%9728:	sub	 %9726 %9727
%9729:	sub	 %9728 XXX
%9730:	trunc	 %9729
%9731:	call	 XXX %9627 %9730 %9629 insert_op1
%9732:	getelementptr	 %9629 XXX
%9733:	br	 if.end622

BASIC BLOCK if.end622
%9734:	phi	 %9511 %9625
%9735:	phi	 %9512 %9626
%9736:	phi	 %9513 %9627
%9737:	phi	 XXX %9628
%9738:	phi	 %9621 %9732
%9739:	br	 sw.epilog3389

BASIC BLOCK sw.bb623
%9740:	br	 do.body624

BASIC BLOCK do.body624
%9741:	br	 while.cond625

BASIC BLOCK while.cond625
%9742:	phi	 %8926 %9835
%9743:	phi	 %8927 %9836
%9744:	phi	 %8930 %9837
%9745:	phi	 %8929 %9838
%9746:	phi	 %8930 %9839
%9747:	getelementptr	 bufp XXX XXX
%9748:	load	 %9747
%9749:	ptrtoint	 %9746
%9750:	ptrtoint	 %9748
%9751:	sub	 %9749 %9750
%9752:	add	 %9751 XXX
%9753:	getelementptr	 bufp XXX XXX
%9754:	load	 %9753
%9755:	icmp	 %9752 %9754
%9756:	br	 %9755 while.end700 while.body634

BASIC BLOCK while.body634
%9757:	br	 do.body635

BASIC BLOCK do.body635
%9758:	getelementptr	 bufp XXX XXX
%9759:	load	 %9758
%9760:	getelementptr	 bufp XXX XXX
%9761:	load	 %9760
%9762:	icmp	 %9761 XXX
%9763:	br	 %9762 if.end642 if.then641

BASIC BLOCK if.then641
%9764:	br	 return

BASIC BLOCK if.end642
%9765:	getelementptr	 bufp XXX XXX
%9766:	load	 %9765
%9767:	shl	 %9766 XXX
%9768:	store	 %9767 %9765
%9769:	getelementptr	 bufp XXX XXX
%9770:	load	 %9769
%9771:	icmp	 %9770 XXX
%9772:	br	 %9771 if.end650 if.then648

BASIC BLOCK if.then648
%9773:	getelementptr	 bufp XXX XXX
%9774:	store	 XXX %9773
%9775:	br	 if.end650

BASIC BLOCK if.end650
%9776:	getelementptr	 bufp XXX XXX
%9777:	load	 %9776
%9778:	getelementptr	 bufp XXX XXX
%9779:	load	 %9778
%9780:	call	 %9777 %9779 realloc
%9781:	getelementptr	 bufp XXX XXX
%9782:	store	 %9780 %9781
%9783:	getelementptr	 bufp XXX XXX
%9784:	load	 %9783
%9785:	icmp	 %9784 XXX
%9786:	br	 %9785 if.end659 if.then658

BASIC BLOCK if.then658
%9787:	br	 return

BASIC BLOCK if.end659
%9788:	getelementptr	 bufp XXX XXX
%9789:	load	 %9788
%9790:	icmp	 %9759 %9789
%9791:	br	 %9790 if.end698 if.then663

BASIC BLOCK if.then663
%9792:	ptrtoint	 %9746
%9793:	ptrtoint	 %9759
%9794:	sub	 %9792 %9793
%9795:	getelementptr	 bufp XXX XXX
%9796:	load	 %9795
%9797:	getelementptr	 %9796 %9794
%9798:	ptrtoint	 %9743
%9799:	ptrtoint	 %9759
%9800:	sub	 %9798 %9799
%9801:	getelementptr	 bufp XXX XXX
%9802:	load	 %9801
%9803:	getelementptr	 %9802 %9800
%9804:	icmp	 %9742 XXX
%9805:	br	 %9804 if.end681 if.then675

BASIC BLOCK if.then675
%9806:	ptrtoint	 %9742
%9807:	ptrtoint	 %9759
%9808:	sub	 %9806 %9807
%9809:	getelementptr	 bufp XXX XXX
%9810:	load	 %9809
%9811:	getelementptr	 %9810 %9808
%9812:	br	 if.end681

BASIC BLOCK if.end681
%9813:	phi	 %9811 %9742
%9814:	icmp	 %9744 XXX
%9815:	br	 %9814 if.end689 if.then683

BASIC BLOCK if.then683
%9816:	ptrtoint	 %9744
%9817:	ptrtoint	 %9759
%9818:	sub	 %9816 %9817
%9819:	getelementptr	 bufp XXX XXX
%9820:	load	 %9819
%9821:	getelementptr	 %9820 %9818
%9822:	br	 if.end689

BASIC BLOCK if.end689
%9823:	phi	 %9821 %9744
%9824:	icmp	 %9745 XXX
%9825:	br	 %9824 if.end697 if.then691

BASIC BLOCK if.then691
%9826:	ptrtoint	 %9745
%9827:	ptrtoint	 %9759
%9828:	sub	 %9826 %9827
%9829:	getelementptr	 bufp XXX XXX
%9830:	load	 %9829
%9831:	getelementptr	 %9830 %9828
%9832:	br	 if.end697

BASIC BLOCK if.end697
%9833:	phi	 %9831 %9745
%9834:	br	 if.end698

BASIC BLOCK if.end698
%9835:	phi	 %9813 %9742
%9836:	phi	 %9803 %9743
%9837:	phi	 %9823 %9744
%9838:	phi	 %9833 %9745
%9839:	phi	 %9797 %9746
%9840:	br	 do.end699

BASIC BLOCK do.end699
%9841:	br	 while.cond625

BASIC BLOCK while.end700
%9842:	getelementptr	 %9746 XXX
%9843:	store	 XXX %9746
%9844:	br	 do.end702

BASIC BLOCK do.end702
%9845:	br	 sw.epilog3389

BASIC BLOCK sw.bb703
%9846:	load	 %8854
%9847:	icmp	 %9846 %8857
%9848:	br	 %9847 if.end708 if.then706

BASIC BLOCK if.then706
%9849:	getelementptr	 %8853 XXX XXX
%9850:	load	 %9849
%9851:	bitcast	 %9850
%9852:	call	 %9851 free
%9853:	br	 return

BASIC BLOCK if.end708
%9854:	br	 while.cond709

BASIC BLOCK while.cond709
%9855:	phi	 %8926 %9948
%9856:	phi	 %8927 %9949
%9857:	phi	 %8928 %9950
%9858:	phi	 %8929 %9951
%9859:	phi	 %8930 %9952
%9860:	getelementptr	 bufp XXX XXX
%9861:	load	 %9860
%9862:	ptrtoint	 %9859
%9863:	ptrtoint	 %9861
%9864:	sub	 %9862 %9863
%9865:	add	 %9864 XXX
%9866:	getelementptr	 bufp XXX XXX
%9867:	load	 %9866
%9868:	icmp	 %9865 %9867
%9869:	br	 %9868 while.end784 while.body718

BASIC BLOCK while.body718
%9870:	br	 do.body719

BASIC BLOCK do.body719
%9871:	getelementptr	 bufp XXX XXX
%9872:	load	 %9871
%9873:	getelementptr	 bufp XXX XXX
%9874:	load	 %9873
%9875:	icmp	 %9874 XXX
%9876:	br	 %9875 if.end726 if.then725

BASIC BLOCK if.then725
%9877:	br	 return

BASIC BLOCK if.end726
%9878:	getelementptr	 bufp XXX XXX
%9879:	load	 %9878
%9880:	shl	 %9879 XXX
%9881:	store	 %9880 %9878
%9882:	getelementptr	 bufp XXX XXX
%9883:	load	 %9882
%9884:	icmp	 %9883 XXX
%9885:	br	 %9884 if.end734 if.then732

BASIC BLOCK if.then732
%9886:	getelementptr	 bufp XXX XXX
%9887:	store	 XXX %9886
%9888:	br	 if.end734

BASIC BLOCK if.end734
%9889:	getelementptr	 bufp XXX XXX
%9890:	load	 %9889
%9891:	getelementptr	 bufp XXX XXX
%9892:	load	 %9891
%9893:	call	 %9890 %9892 realloc
%9894:	getelementptr	 bufp XXX XXX
%9895:	store	 %9893 %9894
%9896:	getelementptr	 bufp XXX XXX
%9897:	load	 %9896
%9898:	icmp	 %9897 XXX
%9899:	br	 %9898 if.end743 if.then742

BASIC BLOCK if.then742
%9900:	br	 return

BASIC BLOCK if.end743
%9901:	getelementptr	 bufp XXX XXX
%9902:	load	 %9901
%9903:	icmp	 %9872 %9902
%9904:	br	 %9903 if.end782 if.then747

BASIC BLOCK if.then747
%9905:	ptrtoint	 %9859
%9906:	ptrtoint	 %9872
%9907:	sub	 %9905 %9906
%9908:	getelementptr	 bufp XXX XXX
%9909:	load	 %9908
%9910:	getelementptr	 %9909 %9907
%9911:	ptrtoint	 %9856
%9912:	ptrtoint	 %9872
%9913:	sub	 %9911 %9912
%9914:	getelementptr	 bufp XXX XXX
%9915:	load	 %9914
%9916:	getelementptr	 %9915 %9913
%9917:	icmp	 %9855 XXX
%9918:	br	 %9917 if.end765 if.then759

BASIC BLOCK if.then759
%9919:	ptrtoint	 %9855
%9920:	ptrtoint	 %9872
%9921:	sub	 %9919 %9920
%9922:	getelementptr	 bufp XXX XXX
%9923:	load	 %9922
%9924:	getelementptr	 %9923 %9921
%9925:	br	 if.end765

BASIC BLOCK if.end765
%9926:	phi	 %9924 %9855
%9927:	icmp	 %9857 XXX
%9928:	br	 %9927 if.end773 if.then767

BASIC BLOCK if.then767
%9929:	ptrtoint	 %9857
%9930:	ptrtoint	 %9872
%9931:	sub	 %9929 %9930
%9932:	getelementptr	 bufp XXX XXX
%9933:	load	 %9932
%9934:	getelementptr	 %9933 %9931
%9935:	br	 if.end773

BASIC BLOCK if.end773
%9936:	phi	 %9934 %9857
%9937:	icmp	 %9858 XXX
%9938:	br	 %9937 if.end781 if.then775

BASIC BLOCK if.then775
%9939:	ptrtoint	 %9858
%9940:	ptrtoint	 %9872
%9941:	sub	 %9939 %9940
%9942:	getelementptr	 bufp XXX XXX
%9943:	load	 %9942
%9944:	getelementptr	 %9943 %9941
%9945:	br	 if.end781

BASIC BLOCK if.end781
%9946:	phi	 %9944 %9858
%9947:	br	 if.end782

BASIC BLOCK if.end782
%9948:	phi	 %9926 %9855
%9949:	phi	 %9916 %9856
%9950:	phi	 %9936 %9857
%9951:	phi	 %9946 %9858
%9952:	phi	 %9910 %9859
%9953:	br	 do.end783

BASIC BLOCK do.end783
%9954:	br	 while.cond709

BASIC BLOCK while.end784
%9955:	br	 do.body785

BASIC BLOCK do.body785
%9956:	br	 while.cond786

BASIC BLOCK while.cond786
%9957:	phi	 %9855 %10050
%9958:	phi	 %9856 %10051
%9959:	phi	 %9859 %10052
%9960:	phi	 %9858 %10053
%9961:	phi	 %9859 %10054
%9962:	getelementptr	 bufp XXX XXX
%9963:	load	 %9962
%9964:	ptrtoint	 %9961
%9965:	ptrtoint	 %9963
%9966:	sub	 %9964 %9965
%9967:	add	 %9966 XXX
%9968:	getelementptr	 bufp XXX XXX
%9969:	load	 %9968
%9970:	icmp	 %9967 %9969
%9971:	br	 %9970 while.end861 while.body795

BASIC BLOCK while.body795
%9972:	br	 do.body796

BASIC BLOCK do.body796
%9973:	getelementptr	 bufp XXX XXX
%9974:	load	 %9973
%9975:	getelementptr	 bufp XXX XXX
%9976:	load	 %9975
%9977:	icmp	 %9976 XXX
%9978:	br	 %9977 if.end803 if.then802

BASIC BLOCK if.then802
%9979:	br	 return

BASIC BLOCK if.end803
%9980:	getelementptr	 bufp XXX XXX
%9981:	load	 %9980
%9982:	shl	 %9981 XXX
%9983:	store	 %9982 %9980
%9984:	getelementptr	 bufp XXX XXX
%9985:	load	 %9984
%9986:	icmp	 %9985 XXX
%9987:	br	 %9986 if.end811 if.then809

BASIC BLOCK if.then809
%9988:	getelementptr	 bufp XXX XXX
%9989:	store	 XXX %9988
%9990:	br	 if.end811

BASIC BLOCK if.end811
%9991:	getelementptr	 bufp XXX XXX
%9992:	load	 %9991
%9993:	getelementptr	 bufp XXX XXX
%9994:	load	 %9993
%9995:	call	 %9992 %9994 realloc
%9996:	getelementptr	 bufp XXX XXX
%9997:	store	 %9995 %9996
%9998:	getelementptr	 bufp XXX XXX
%9999:	load	 %9998
%10000:	icmp	 %9999 XXX
%10001:	br	 %10000 if.end820 if.then819

BASIC BLOCK if.then819
%10002:	br	 return

BASIC BLOCK if.end820
%10003:	getelementptr	 bufp XXX XXX
%10004:	load	 %10003
%10005:	icmp	 %9974 %10004
%10006:	br	 %10005 if.end859 if.then824

BASIC BLOCK if.then824
%10007:	ptrtoint	 %9961
%10008:	ptrtoint	 %9974
%10009:	sub	 %10007 %10008
%10010:	getelementptr	 bufp XXX XXX
%10011:	load	 %10010
%10012:	getelementptr	 %10011 %10009
%10013:	ptrtoint	 %9958
%10014:	ptrtoint	 %9974
%10015:	sub	 %10013 %10014
%10016:	getelementptr	 bufp XXX XXX
%10017:	load	 %10016
%10018:	getelementptr	 %10017 %10015
%10019:	icmp	 %9957 XXX
%10020:	br	 %10019 if.end842 if.then836

BASIC BLOCK if.then836
%10021:	ptrtoint	 %9957
%10022:	ptrtoint	 %9974
%10023:	sub	 %10021 %10022
%10024:	getelementptr	 bufp XXX XXX
%10025:	load	 %10024
%10026:	getelementptr	 %10025 %10023
%10027:	br	 if.end842

BASIC BLOCK if.end842
%10028:	phi	 %10026 %9957
%10029:	icmp	 %9959 XXX
%10030:	br	 %10029 if.end850 if.then844

BASIC BLOCK if.then844
%10031:	ptrtoint	 %9959
%10032:	ptrtoint	 %9974
%10033:	sub	 %10031 %10032
%10034:	getelementptr	 bufp XXX XXX
%10035:	load	 %10034
%10036:	getelementptr	 %10035 %10033
%10037:	br	 if.end850

BASIC BLOCK if.end850
%10038:	phi	 %10036 %9959
%10039:	icmp	 %9960 XXX
%10040:	br	 %10039 if.end858 if.then852

BASIC BLOCK if.then852
%10041:	ptrtoint	 %9960
%10042:	ptrtoint	 %9974
%10043:	sub	 %10041 %10042
%10044:	getelementptr	 bufp XXX XXX
%10045:	load	 %10044
%10046:	getelementptr	 %10045 %10043
%10047:	br	 if.end858

BASIC BLOCK if.end858
%10048:	phi	 %10046 %9960
%10049:	br	 if.end859

BASIC BLOCK if.end859
%10050:	phi	 %10028 %9957
%10051:	phi	 %10018 %9958
%10052:	phi	 %10038 %9959
%10053:	phi	 %10048 %9960
%10054:	phi	 %10012 %9961
%10055:	br	 do.end860

BASIC BLOCK do.end860
%10056:	br	 while.cond786

BASIC BLOCK while.end861
%10057:	load	 %8854
%10058:	load	 %10057
%10059:	sext	 %10058
%10060:	icmp	 %10059 XXX
%10061:	select	 %10060 XXX XXX
%10062:	trunc	 %10061
%10063:	getelementptr	 %9961 XXX
%10064:	store	 %10062 %9961
%10065:	br	 do.end868

BASIC BLOCK do.end868
%10066:	load	 %8854
%10067:	load	 %10066
%10068:	sext	 %10067
%10069:	icmp	 %10068 XXX
%10070:	br	 %10069 if.end874 if.then872

BASIC BLOCK if.then872
%10071:	load	 %8854
%10072:	getelementptr	 %10071 XXX
%10073:	store	 %10072 %8854
%10074:	br	 if.end874

BASIC BLOCK if.end874
%10075:	load	 %8854
%10076:	br	 do.body875

BASIC BLOCK do.body875
%10077:	br	 while.cond876

BASIC BLOCK while.cond876
%10078:	phi	 %9957 %10171
%10079:	phi	 %9958 %10172
%10080:	phi	 %9959 %10173
%10081:	phi	 %9960 %10174
%10082:	phi	 %10063 %10175
%10083:	getelementptr	 bufp XXX XXX
%10084:	load	 %10083
%10085:	ptrtoint	 %10082
%10086:	ptrtoint	 %10084
%10087:	sub	 %10085 %10086
%10088:	add	 %10087 XXX
%10089:	getelementptr	 bufp XXX XXX
%10090:	load	 %10089
%10091:	icmp	 %10088 %10090
%10092:	br	 %10091 while.end951 while.body885

BASIC BLOCK while.body885
%10093:	br	 do.body886

BASIC BLOCK do.body886
%10094:	getelementptr	 bufp XXX XXX
%10095:	load	 %10094
%10096:	getelementptr	 bufp XXX XXX
%10097:	load	 %10096
%10098:	icmp	 %10097 XXX
%10099:	br	 %10098 if.end893 if.then892

BASIC BLOCK if.then892
%10100:	br	 return

BASIC BLOCK if.end893
%10101:	getelementptr	 bufp XXX XXX
%10102:	load	 %10101
%10103:	shl	 %10102 XXX
%10104:	store	 %10103 %10101
%10105:	getelementptr	 bufp XXX XXX
%10106:	load	 %10105
%10107:	icmp	 %10106 XXX
%10108:	br	 %10107 if.end901 if.then899

BASIC BLOCK if.then899
%10109:	getelementptr	 bufp XXX XXX
%10110:	store	 XXX %10109
%10111:	br	 if.end901

BASIC BLOCK if.end901
%10112:	getelementptr	 bufp XXX XXX
%10113:	load	 %10112
%10114:	getelementptr	 bufp XXX XXX
%10115:	load	 %10114
%10116:	call	 %10113 %10115 realloc
%10117:	getelementptr	 bufp XXX XXX
%10118:	store	 %10116 %10117
%10119:	getelementptr	 bufp XXX XXX
%10120:	load	 %10119
%10121:	icmp	 %10120 XXX
%10122:	br	 %10121 if.end910 if.then909

BASIC BLOCK if.then909
%10123:	br	 return

BASIC BLOCK if.end910
%10124:	getelementptr	 bufp XXX XXX
%10125:	load	 %10124
%10126:	icmp	 %10095 %10125
%10127:	br	 %10126 if.end949 if.then914

BASIC BLOCK if.then914
%10128:	ptrtoint	 %10082
%10129:	ptrtoint	 %10095
%10130:	sub	 %10128 %10129
%10131:	getelementptr	 bufp XXX XXX
%10132:	load	 %10131
%10133:	getelementptr	 %10132 %10130
%10134:	ptrtoint	 %10079
%10135:	ptrtoint	 %10095
%10136:	sub	 %10134 %10135
%10137:	getelementptr	 bufp XXX XXX
%10138:	load	 %10137
%10139:	getelementptr	 %10138 %10136
%10140:	icmp	 %10078 XXX
%10141:	br	 %10140 if.end932 if.then926

BASIC BLOCK if.then926
%10142:	ptrtoint	 %10078
%10143:	ptrtoint	 %10095
%10144:	sub	 %10142 %10143
%10145:	getelementptr	 bufp XXX XXX
%10146:	load	 %10145
%10147:	getelementptr	 %10146 %10144
%10148:	br	 if.end932

BASIC BLOCK if.end932
%10149:	phi	 %10147 %10078
%10150:	icmp	 %10080 XXX
%10151:	br	 %10150 if.end940 if.then934

BASIC BLOCK if.then934
%10152:	ptrtoint	 %10080
%10153:	ptrtoint	 %10095
%10154:	sub	 %10152 %10153
%10155:	getelementptr	 bufp XXX XXX
%10156:	load	 %10155
%10157:	getelementptr	 %10156 %10154
%10158:	br	 if.end940

BASIC BLOCK if.end940
%10159:	phi	 %10157 %10080
%10160:	icmp	 %10081 XXX
%10161:	br	 %10160 if.end948 if.then942

BASIC BLOCK if.then942
%10162:	ptrtoint	 %10081
%10163:	ptrtoint	 %10095
%10164:	sub	 %10162 %10163
%10165:	getelementptr	 bufp XXX XXX
%10166:	load	 %10165
%10167:	getelementptr	 %10166 %10164
%10168:	br	 if.end948

BASIC BLOCK if.end948
%10169:	phi	 %10167 %10081
%10170:	br	 if.end949

BASIC BLOCK if.end949
%10171:	phi	 %10149 %10078
%10172:	phi	 %10139 %10079
%10173:	phi	 %10159 %10080
%10174:	phi	 %10169 %10081
%10175:	phi	 %10133 %10082
%10176:	br	 do.end950

BASIC BLOCK do.end950
%10177:	br	 while.cond876

BASIC BLOCK while.end951
%10178:	getelementptr	 %10082 XXX
%10179:	store	 XXX %10082
%10180:	br	 do.end953

BASIC BLOCK do.end953
%10181:	call	 %10178 XXX XXX XXX XXX llvm.memset.p0i8.i64
%10182:	getelementptr	 %10178 XXX
%10183:	load	 %10182
%10184:	zext	 %10183
%10185:	icmp	 %10184 XXX
%10186:	br	 %10185 if.end966 land.lhs.true958

BASIC BLOCK land.lhs.true958
%10187:	and	 syntax XXX
%10188:	icmp	 %10187 XXX
%10189:	br	 %10188 if.end966 if.then961

BASIC BLOCK if.then961
%10190:	getelementptr	 %10178 XXX
%10191:	load	 %10190
%10192:	zext	 %10191
%10193:	or	 %10192 XXX
%10194:	trunc	 %10193
%10195:	store	 %10194 %10190
%10196:	br	 if.end966

BASIC BLOCK if.end966
%10197:	br	 for.cond967

BASIC BLOCK for.cond967
%10198:	phi	 XXX %10198 %10610
%10199:	load	 %8854
%10200:	icmp	 %10199 %8857
%10201:	br	 %10200 if.end972 if.then970

BASIC BLOCK if.then970
%10202:	getelementptr	 %8853 XXX XXX
%10203:	load	 %10202
%10204:	bitcast	 %10203
%10205:	call	 %10204 free
%10206:	br	 return

BASIC BLOCK if.end972
%10207:	br	 do.body973

BASIC BLOCK do.body973
%10208:	load	 %8854
%10209:	icmp	 %10208 %8857
%10210:	br	 %10209 if.end977 if.then976

BASIC BLOCK if.then976
%10211:	br	 return

BASIC BLOCK if.end977
%10212:	load	 %8854
%10213:	getelementptr	 %10212 XXX
%10214:	store	 %10213 %8854
%10215:	load	 %10212
%10216:	icmp	 %8859 XXX
%10217:	br	 %10216 if.end983 if.then980

BASIC BLOCK if.then980
%10218:	zext	 %10215
%10219:	getelementptr	 %8859 %10218
%10220:	load	 %10219
%10221:	br	 if.end983

BASIC BLOCK if.end983
%10222:	phi	 %10220 %10215
%10223:	br	 do.end984

BASIC BLOCK do.end984
%10224:	and	 syntax XXX
%10225:	icmp	 %10224 XXX
%10226:	br	 %10225 if.end1017 land.lhs.true987

BASIC BLOCK land.lhs.true987
%10227:	zext	 %10222
%10228:	icmp	 %10227 XXX
%10229:	br	 %10228 if.end1017 if.then991

BASIC BLOCK if.then991
%10230:	load	 %8854
%10231:	icmp	 %10230 %8857
%10232:	br	 %10231 if.end996 if.then994

BASIC BLOCK if.then994
%10233:	getelementptr	 %8853 XXX XXX
%10234:	load	 %10233
%10235:	bitcast	 %10234
%10236:	call	 %10235 free
%10237:	br	 return

BASIC BLOCK if.end996
%10238:	br	 do.body997

BASIC BLOCK do.body997
%10239:	load	 %8854
%10240:	icmp	 %10239 %8857
%10241:	br	 %10240 if.end1001 if.then1000

BASIC BLOCK if.then1000
%10242:	br	 return

BASIC BLOCK if.end1001
%10243:	load	 %8854
%10244:	getelementptr	 %10243 XXX
%10245:	store	 %10244 %8854
%10246:	load	 %10243
%10247:	icmp	 %8859 XXX
%10248:	br	 %10247 if.end1007 if.then1004

BASIC BLOCK if.then1004
%10249:	zext	 %10246
%10250:	getelementptr	 %8859 %10249
%10251:	load	 %10250
%10252:	br	 if.end1007

BASIC BLOCK if.end1007
%10253:	phi	 %10251 %10246
%10254:	br	 do.end1008

BASIC BLOCK do.end1008
%10255:	zext	 %10253
%10256:	srem	 %10255 XXX
%10257:	shl	 XXX %10256
%10258:	zext	 %10253
%10259:	sdiv	 %10258 XXX
%10260:	sext	 %10259
%10261:	getelementptr	 %10178 %10260
%10262:	load	 %10261
%10263:	zext	 %10262
%10264:	or	 %10263 %10257
%10265:	trunc	 %10264
%10266:	store	 %10265 %10261
%10267:	br	 for.cond967

BASIC BLOCK if.end1017
%10268:	zext	 %10222
%10269:	icmp	 %10268 XXX
%10270:	br	 %10269 if.end1026 land.lhs.true1021

BASIC BLOCK land.lhs.true1021
%10271:	load	 %8854
%10272:	getelementptr	 %10075 XXX
%10273:	icmp	 %10271 %10272
%10274:	br	 %10273 if.end1026 if.then1025

BASIC BLOCK if.then1025
%10275:	br	 for.end1298

BASIC BLOCK if.end1026
%10276:	sext	 %10198
%10277:	icmp	 %10276 XXX
%10278:	br	 %10277 if.end1039 land.lhs.true1029

BASIC BLOCK land.lhs.true1029
%10279:	zext	 %10222
%10280:	icmp	 %10279 XXX
%10281:	br	 %10280 if.end1039 land.lhs.true1033

BASIC BLOCK land.lhs.true1033
%10282:	load	 %8854
%10283:	load	 %10282
%10284:	sext	 %10283
%10285:	icmp	 %10284 XXX
%10286:	br	 %10285 if.end1039 if.then1037

BASIC BLOCK if.then1037
%10287:	getelementptr	 %8853 XXX XXX
%10288:	load	 %10287
%10289:	bitcast	 %10288
%10290:	call	 %10289 free
%10291:	br	 return

BASIC BLOCK if.end1039
%10292:	zext	 %10222
%10293:	icmp	 %10292 XXX
%10294:	br	 %10293 if.else1077 land.lhs.true1043

BASIC BLOCK land.lhs.true1043
%10295:	load	 %8854
%10296:	getelementptr	 %10295 XXX
%10297:	icmp	 %10296 pattern
%10298:	br	 %10297 land.lhs.true1052 land.lhs.true1047

BASIC BLOCK land.lhs.true1047
%10299:	load	 %8854
%10300:	getelementptr	 %10299 XXX
%10301:	load	 %10300
%10302:	sext	 %10301
%10303:	icmp	 %10302 XXX
%10304:	br	 %10303 land.lhs.true1052 if.else1077

BASIC BLOCK land.lhs.true1052
%10305:	load	 %8854
%10306:	getelementptr	 %10305 XXX
%10307:	icmp	 %10306 pattern
%10308:	br	 %10307 land.lhs.true1066 land.lhs.true1056

BASIC BLOCK land.lhs.true1056
%10309:	load	 %8854
%10310:	getelementptr	 %10309 XXX
%10311:	load	 %10310
%10312:	sext	 %10311
%10313:	icmp	 %10312 XXX
%10314:	br	 %10313 land.lhs.true1066 land.lhs.true1061

BASIC BLOCK land.lhs.true1061
%10315:	load	 %8854
%10316:	getelementptr	 %10315 XXX
%10317:	load	 %10316
%10318:	sext	 %10317
%10319:	icmp	 %10318 XXX
%10320:	br	 %10319 land.lhs.true1066 if.else1077

BASIC BLOCK land.lhs.true1066
%10321:	load	 %8854
%10322:	load	 %10321
%10323:	sext	 %10322
%10324:	icmp	 %10323 XXX
%10325:	br	 %10324 if.else1077 if.then1070

BASIC BLOCK if.then1070
%10326:	call	 %8854 %8857 %8859 syntax %10178 compile_range
%10327:	icmp	 %10326 XXX
%10328:	br	 %10327 if.end1076 if.then1074

BASIC BLOCK if.then1074
%10329:	getelementptr	 %8853 XXX XXX
%10330:	load	 %10329
%10331:	bitcast	 %10330
%10332:	call	 %10331 free
%10333:	br	 return

BASIC BLOCK if.end1076
%10334:	br	 if.end1297

BASIC BLOCK if.else1077
%10335:	load	 %8854
%10336:	getelementptr	 %10335 XXX
%10337:	load	 %10336
%10338:	sext	 %10337
%10339:	icmp	 %10338 XXX
%10340:	br	 %10339 if.else1107 land.lhs.true1082

BASIC BLOCK land.lhs.true1082
%10341:	load	 %8854
%10342:	getelementptr	 %10341 XXX
%10343:	load	 %10342
%10344:	sext	 %10343
%10345:	icmp	 %10344 XXX
%10346:	br	 %10345 if.else1107 if.then1087

BASIC BLOCK if.then1087
%10347:	br	 do.body1089

BASIC BLOCK do.body1089
%10348:	load	 %8854
%10349:	icmp	 %10348 %8857
%10350:	br	 %10349 if.end1093 if.then1092

BASIC BLOCK if.then1092
%10351:	br	 return

BASIC BLOCK if.end1093
%10352:	load	 %8854
%10353:	getelementptr	 %10352 XXX
%10354:	store	 %10353 %8854
%10355:	load	 %10352
%10356:	icmp	 %8859 XXX
%10357:	br	 %10356 if.end1099 if.then1096

BASIC BLOCK if.then1096
%10358:	zext	 %10355
%10359:	getelementptr	 %8859 %10358
%10360:	load	 %10359
%10361:	br	 if.end1099

BASIC BLOCK if.end1099
%10362:	br	 do.end1100

BASIC BLOCK do.end1100
%10363:	call	 %8854 %8857 %8859 syntax %10178 compile_range
%10364:	icmp	 %10363 XXX
%10365:	br	 %10364 if.end1106 if.then1104

BASIC BLOCK if.then1104
%10366:	getelementptr	 %8853 XXX XXX
%10367:	load	 %10366
%10368:	bitcast	 %10367
%10369:	call	 %10368 free
%10370:	br	 return

BASIC BLOCK if.end1106
%10371:	br	 if.end1296

BASIC BLOCK if.else1107
%10372:	and	 syntax XXX
%10373:	icmp	 %10372 XXX
%10374:	br	 %10373 if.else1284 land.lhs.true1110

BASIC BLOCK land.lhs.true1110
%10375:	zext	 %10222
%10376:	icmp	 %10375 XXX
%10377:	br	 %10376 if.else1284 land.lhs.true1114

BASIC BLOCK land.lhs.true1114
%10378:	load	 %8854
%10379:	load	 %10378
%10380:	sext	 %10379
%10381:	icmp	 %10380 XXX
%10382:	br	 %10381 if.else1284 if.then1118

BASIC BLOCK if.then1118
%10383:	br	 do.body1119

BASIC BLOCK do.body1119
%10384:	load	 %8854
%10385:	icmp	 %10384 %8857
%10386:	br	 %10385 if.end1123 if.then1122

BASIC BLOCK if.then1122
%10387:	br	 return

BASIC BLOCK if.end1123
%10388:	load	 %8854
%10389:	getelementptr	 %10388 XXX
%10390:	store	 %10389 %8854
%10391:	load	 %10388
%10392:	icmp	 %8859 XXX
%10393:	br	 %10392 if.end1129 if.then1126

BASIC BLOCK if.then1126
%10394:	zext	 %10391
%10395:	getelementptr	 %8859 %10394
%10396:	load	 %10395
%10397:	br	 if.end1129

BASIC BLOCK if.end1129
%10398:	br	 do.end1130

BASIC BLOCK do.end1130
%10399:	load	 %8854
%10400:	icmp	 %10399 %8857
%10401:	br	 %10400 if.end1135 if.then1133

BASIC BLOCK if.then1133
%10402:	getelementptr	 %8853 XXX XXX
%10403:	load	 %10402
%10404:	bitcast	 %10403
%10405:	call	 %10404 free
%10406:	br	 return

BASIC BLOCK if.end1135
%10407:	br	 for.cond1136

BASIC BLOCK for.cond1136
%10408:	phi	 XXX %10441
%10409:	br	 do.body1137

BASIC BLOCK do.body1137
%10410:	load	 %8854
%10411:	icmp	 %10410 %8857
%10412:	br	 %10411 if.end1141 if.then1140

BASIC BLOCK if.then1140
%10413:	br	 return

BASIC BLOCK if.end1141
%10414:	load	 %8854
%10415:	getelementptr	 %10414 XXX
%10416:	store	 %10415 %8854
%10417:	load	 %10414
%10418:	icmp	 %8859 XXX
%10419:	br	 %10418 if.end1147 if.then1144

BASIC BLOCK if.then1144
%10420:	zext	 %10417
%10421:	getelementptr	 %8859 %10420
%10422:	load	 %10421
%10423:	br	 if.end1147

BASIC BLOCK if.end1147
%10424:	phi	 %10422 %10417
%10425:	br	 do.end1148

BASIC BLOCK do.end1148
%10426:	zext	 %10424
%10427:	icmp	 %10426 XXX
%10428:	br	 %10427 lor.lhs.false1156 land.lhs.true1152

BASIC BLOCK land.lhs.true1152
%10429:	load	 %8854
%10430:	load	 %10429
%10431:	sext	 %10430
%10432:	icmp	 %10431 XXX
%10433:	br	 %10432 lor.lhs.false1156 if.then1163

BASIC BLOCK lor.lhs.false1156
%10434:	load	 %8854
%10435:	icmp	 %10434 %8857
%10436:	br	 %10435 lor.lhs.false1159 if.then1163

BASIC BLOCK lor.lhs.false1159
%10437:	zext	 %10408
%10438:	icmp	 %10437 XXX
%10439:	br	 %10438 if.end1164 if.then1163

BASIC BLOCK if.then1163
%10440:	br	 for.end1167

BASIC BLOCK if.end1164
%10441:	add	 %10408 XXX
%10442:	zext	 %10408
%10443:	getelementptr	 %8855 XXX %10442
%10444:	store	 %10424 %10443
%10445:	br	 for.cond1136

BASIC BLOCK for.end1167
%10446:	zext	 %10408
%10447:	getelementptr	 %8855 XXX %10446
%10448:	store	 XXX %10447
%10449:	zext	 %10424
%10450:	icmp	 %10449 XXX
%10451:	br	 %10450 if.else1268 land.lhs.true1173

BASIC BLOCK land.lhs.true1173
%10452:	load	 %8854
%10453:	load	 %10452
%10454:	sext	 %10453
%10455:	icmp	 %10454 XXX
%10456:	br	 %10455 if.else1268 if.then1177

BASIC BLOCK if.then1177
%10457:	getelementptr	 %8855 XXX XXX
%10458:	call	 %10457 XXX strcmp
%10459:	icmp	 %10458 XXX
%10460:	zext	 %10459
%10461:	trunc	 %10460
%10462:	getelementptr	 %8855 XXX XXX
%10463:	call	 %10462 XXX strcmp
%10464:	icmp	 %10463 XXX
%10465:	zext	 %10464
%10466:	trunc	 %10465
%10467:	getelementptr	 %8855 XXX XXX
%10468:	call	 %10467 wctype
%10469:	icmp	 %10468 XXX
%10470:	br	 %10469 if.end1193 if.then1191

BASIC BLOCK if.then1191
%10471:	getelementptr	 %8853 XXX XXX
%10472:	load	 %10471
%10473:	bitcast	 %10472
%10474:	call	 %10473 free
%10475:	br	 return

BASIC BLOCK if.end1193
%10476:	br	 do.body1194

BASIC BLOCK do.body1194
%10477:	load	 %8854
%10478:	icmp	 %10477 %8857
%10479:	br	 %10478 if.end1198 if.then1197

BASIC BLOCK if.then1197
%10480:	br	 return

BASIC BLOCK if.end1198
%10481:	load	 %8854
%10482:	getelementptr	 %10481 XXX
%10483:	store	 %10482 %8854
%10484:	load	 %10481
%10485:	icmp	 %8859 XXX
%10486:	br	 %10485 if.end1204 if.then1201

BASIC BLOCK if.then1201
%10487:	zext	 %10484
%10488:	getelementptr	 %8859 %10487
%10489:	load	 %10488
%10490:	br	 if.end1204

BASIC BLOCK if.end1204
%10491:	br	 do.end1205

BASIC BLOCK do.end1205
%10492:	load	 %8854
%10493:	icmp	 %10492 %8857
%10494:	br	 %10493 if.end1210 if.then1208

BASIC BLOCK if.then1208
%10495:	getelementptr	 %8853 XXX XXX
%10496:	load	 %10495
%10497:	bitcast	 %10496
%10498:	call	 %10497 free
%10499:	br	 return

BASIC BLOCK if.end1210
%10500:	br	 for.cond1211

BASIC BLOCK for.cond1211
%10501:	phi	 XXX %10565
%10502:	icmp	 %10501 XXX
%10503:	br	 %10502 for.end1267 for.body

BASIC BLOCK for.body
%10504:	call	 %10501 btowc
%10505:	call	 %10504 %10468 iswctype
%10506:	icmp	 %10505 XXX
%10507:	br	 %10506 if.end1230 if.then1217

BASIC BLOCK if.then1217
%10508:	trunc	 %10501
%10509:	zext	 %10508
%10510:	srem	 %10509 XXX
%10511:	shl	 XXX %10510
%10512:	trunc	 %10501
%10513:	zext	 %10512
%10514:	sdiv	 %10513 XXX
%10515:	sext	 %10514
%10516:	getelementptr	 %10178 %10515
%10517:	load	 %10516
%10518:	zext	 %10517
%10519:	or	 %10518 %10511
%10520:	trunc	 %10519
%10521:	store	 %10520 %10516
%10522:	br	 if.end1230

BASIC BLOCK if.end1230
%10523:	icmp	 %8859 XXX
%10524:	br	 %10523 if.end1265 land.lhs.true1232

BASIC BLOCK land.lhs.true1232
%10525:	sext	 %10466
%10526:	icmp	 %10525 XXX
%10527:	br	 %10526 lor.lhs.false1235 land.lhs.true1238

BASIC BLOCK lor.lhs.false1235
%10528:	sext	 %10461
%10529:	icmp	 %10528 XXX
%10530:	br	 %10529 if.end1265 land.lhs.true1238

BASIC BLOCK land.lhs.true1238
%10531:	sext	 %10501
%10532:	call	 __ctype_b_loc
%10533:	load	 %10532
%10534:	getelementptr	 %10533 %10531
%10535:	load	 %10534
%10536:	zext	 %10535
%10537:	and	 %10536 XXX
%10538:	icmp	 %10537 XXX
%10539:	br	 %10538 lor.lhs.false1245 if.then1252

BASIC BLOCK lor.lhs.false1245
%10540:	sext	 %10501
%10541:	call	 __ctype_b_loc
%10542:	load	 %10541
%10543:	getelementptr	 %10542 %10540
%10544:	load	 %10543
%10545:	zext	 %10544
%10546:	and	 %10545 XXX
%10547:	icmp	 %10546 XXX
%10548:	br	 %10547 if.end1265 if.then1252

BASIC BLOCK if.then1252
%10549:	trunc	 %10501
%10550:	zext	 %10549
%10551:	srem	 %10550 XXX
%10552:	shl	 XXX %10551
%10553:	trunc	 %10501
%10554:	zext	 %10553
%10555:	sdiv	 %10554 XXX
%10556:	sext	 %10555
%10557:	getelementptr	 %10178 %10556
%10558:	load	 %10557
%10559:	zext	 %10558
%10560:	or	 %10559 %10552
%10561:	trunc	 %10560
%10562:	store	 %10561 %10557
%10563:	br	 if.end1265

BASIC BLOCK if.end1265
%10564:	br	 for.inc

BASIC BLOCK for.inc
%10565:	add	 %10501 XXX
%10566:	br	 for.cond1211

BASIC BLOCK for.end1267
%10567:	br	 if.end1283

BASIC BLOCK if.else1268
%10568:	add	 %10408 XXX
%10569:	br	 while.cond1270

BASIC BLOCK while.cond1270
%10570:	phi	 %10568 %10571
%10571:	add	 %10570 XXX
%10572:	icmp	 %10570 XXX
%10573:	br	 %10572 while.end1274 while.body1272

BASIC BLOCK while.body1272
%10574:	load	 %8854
%10575:	getelementptr	 %10574 XXX
%10576:	store	 %10575 %8854
%10577:	br	 while.cond1270

BASIC BLOCK while.end1274
%10578:	getelementptr	 %10178 XXX
%10579:	load	 %10578
%10580:	zext	 %10579
%10581:	or	 %10580 XXX
%10582:	trunc	 %10581
%10583:	store	 %10582 %10578
%10584:	getelementptr	 %10178 XXX
%10585:	load	 %10584
%10586:	zext	 %10585
%10587:	or	 %10586 XXX
%10588:	trunc	 %10587
%10589:	store	 %10588 %10584
%10590:	br	 if.end1283

BASIC BLOCK if.end1283
%10591:	phi	 XXX XXX
%10592:	br	 if.end1295

BASIC BLOCK if.else1284
%10593:	zext	 %10222
%10594:	srem	 %10593 XXX
%10595:	shl	 XXX %10594
%10596:	zext	 %10222
%10597:	sdiv	 %10596 XXX
%10598:	sext	 %10597
%10599:	getelementptr	 %10178 %10598
%10600:	load	 %10599
%10601:	zext	 %10600
%10602:	or	 %10601 %10595
%10603:	trunc	 %10602
%10604:	store	 %10603 %10599
%10605:	br	 if.end1295

BASIC BLOCK if.end1295
%10606:	phi	 %10591 XXX
%10607:	br	 if.end1296

BASIC BLOCK if.end1296
%10608:	phi	 %10198 %10606
%10609:	br	 if.end1297

BASIC BLOCK if.end1297
%10610:	phi	 %10608 %10198
%10611:	br	 for.cond967

BASIC BLOCK for.end1298
%10612:	br	 while.cond1299

BASIC BLOCK while.cond1299
%10613:	getelementptr	 %10178 XXX
%10614:	load	 %10613
%10615:	zext	 %10614
%10616:	icmp	 %10615 XXX
%10617:	br	 %10616 land.end land.rhs

BASIC BLOCK land.rhs
%10618:	getelementptr	 %10178 XXX
%10619:	load	 %10618
%10620:	zext	 %10619
%10621:	sub	 %10620 XXX
%10622:	sext	 %10621
%10623:	getelementptr	 %10178 %10622
%10624:	load	 %10623
%10625:	zext	 %10624
%10626:	icmp	 %10625 XXX
%10627:	br	 land.end

BASIC BLOCK land.end
%10628:	phi	 XXX %10626
%10629:	br	 %10628 while.end1315 while.body1312

BASIC BLOCK while.body1312
%10630:	getelementptr	 %10178 XXX
%10631:	load	 %10630
%10632:	add	 %10631 XXX
%10633:	store	 %10632 %10630
%10634:	br	 while.cond1299

BASIC BLOCK while.end1315
%10635:	getelementptr	 %10178 XXX
%10636:	load	 %10635
%10637:	zext	 %10636
%10638:	sext	 %10637
%10639:	getelementptr	 %10178 %10638
%10640:	br	 sw.epilog3389

BASIC BLOCK sw.bb1319
%10641:	and	 syntax XXX
%10642:	icmp	 %10641 XXX
%10643:	br	 %10642 if.else1323 if.then1322

BASIC BLOCK if.then1322
%10644:	br	 handle_open

BASIC BLOCK if.else1323
%10645:	br	 normal_char

BASIC BLOCK sw.bb1324
%10646:	and	 syntax XXX
%10647:	icmp	 %10646 XXX
%10648:	br	 %10647 if.else1328 if.then1327

BASIC BLOCK if.then1327
%10649:	br	 handle_close

BASIC BLOCK if.else1328
%10650:	br	 normal_char

BASIC BLOCK sw.bb1329
%10651:	and	 syntax XXX
%10652:	icmp	 %10651 XXX
%10653:	br	 %10652 if.else1333 if.then1332

BASIC BLOCK if.then1332
%10654:	br	 handle_alt

BASIC BLOCK if.else1333
%10655:	br	 normal_char

BASIC BLOCK sw.bb1334
%10656:	and	 syntax XXX
%10657:	icmp	 %10656 XXX
%10658:	br	 %10657 if.else1338 if.then1337

BASIC BLOCK if.then1337
%10659:	br	 handle_alt

BASIC BLOCK if.else1338
%10660:	br	 normal_char

BASIC BLOCK sw.bb1339
%10661:	and	 syntax XXX
%10662:	icmp	 %10661 XXX
%10663:	br	 %10662 if.else1346 land.lhs.true1342

BASIC BLOCK land.lhs.true1342
%10664:	and	 syntax XXX
%10665:	icmp	 %10664 XXX
%10666:	br	 %10665 if.else1346 if.then1345

BASIC BLOCK if.then1345
%10667:	br	 handle_interval

BASIC BLOCK if.else1346
%10668:	br	 normal_char

BASIC BLOCK sw.bb1347
%10669:	load	 %8854
%10670:	icmp	 %10669 %8857
%10671:	br	 %10670 if.end1352 if.then1350

BASIC BLOCK if.then1350
%10672:	getelementptr	 %8853 XXX XXX
%10673:	load	 %10672
%10674:	bitcast	 %10673
%10675:	call	 %10674 free
%10676:	br	 return

BASIC BLOCK if.end1352
%10677:	br	 do.body1353

BASIC BLOCK do.body1353
%10678:	load	 %8854
%10679:	icmp	 %10678 %8857
%10680:	br	 %10679 if.end1357 if.then1356

BASIC BLOCK if.then1356
%10681:	br	 return

BASIC BLOCK if.end1357
%10682:	load	 %8854
%10683:	getelementptr	 %10682 XXX
%10684:	store	 %10683 %8854
%10685:	load	 %10682
%10686:	br	 do.end1359

BASIC BLOCK do.end1359
%10687:	zext	 %10685
%10688:	switch	 %10687 sw.default XXX sw.bb1361 XXX sw.bb1521 XXX sw.bb1770 XXX sw.bb1950 XXX sw.bb2374 XXX sw.bb2458 XXX sw.bb2542 XXX sw.bb2626 XXX sw.bb2710 XXX sw.bb2794 XXX sw.bb2878 XXX sw.bb2962 XXX sw.bb3046 XXX sw.bb3046 XXX sw.bb3046 XXX sw.bb3046 XXX sw.bb3046 XXX sw.bb3046 XXX sw.bb3046 XXX sw.bb3046 XXX sw.bb3046 XXX sw.bb3145 XXX sw.bb3145

BASIC BLOCK sw.bb1361
%10689:	and	 syntax XXX
%10690:	icmp	 %10689 XXX
%10691:	br	 %10690 if.end1365 if.then1364

BASIC BLOCK if.then1364
%10692:	br	 normal_backslash

BASIC BLOCK if.end1365
%10693:	br	 handle_open

BASIC BLOCK handle_open
%10694:	getelementptr	 bufp XXX XXX
%10695:	load	 %10694
%10696:	add	 %10695 XXX
%10697:	store	 %10696 %10694
%10698:	add	 %8925 XXX
%10699:	getelementptr	 %8853 XXX XXX
%10700:	load	 %10699
%10701:	getelementptr	 %8853 XXX XXX
%10702:	load	 %10701
%10703:	icmp	 %10700 %10702
%10704:	br	 %10703 if.end1387 if.then1373

BASIC BLOCK if.then1373
%10705:	getelementptr	 %8853 XXX XXX
%10706:	load	 %10705
%10707:	bitcast	 %10706
%10708:	getelementptr	 %8853 XXX XXX
%10709:	load	 %10708
%10710:	shl	 %10709 XXX
%10711:	zext	 %10710
%10712:	mul	 %10711 XXX
%10713:	call	 %10707 %10712 realloc
%10714:	bitcast	 %10713
%10715:	getelementptr	 %8853 XXX XXX
%10716:	store	 %10714 %10715
%10717:	getelementptr	 %8853 XXX XXX
%10718:	load	 %10717
%10719:	icmp	 %10718 XXX
%10720:	br	 %10719 if.end1384 if.then1383

BASIC BLOCK if.then1383
%10721:	br	 return

BASIC BLOCK if.end1384
%10722:	getelementptr	 %8853 XXX XXX
%10723:	load	 %10722
%10724:	shl	 %10723 XXX
%10725:	store	 %10724 %10722
%10726:	br	 if.end1387

BASIC BLOCK if.end1387
%10727:	getelementptr	 bufp XXX XXX
%10728:	load	 %10727
%10729:	ptrtoint	 %8927
%10730:	ptrtoint	 %10728
%10731:	sub	 %10729 %10730
%10732:	getelementptr	 %8853 XXX XXX
%10733:	load	 %10732
%10734:	zext	 %10733
%10735:	getelementptr	 %8853 XXX XXX
%10736:	load	 %10735
%10737:	getelementptr	 %10736 %10734
%10738:	getelementptr	 %10737 XXX XXX
%10739:	store	 %10731 %10738
%10740:	icmp	 %8926 XXX
%10741:	br	 %10740 cond.false1403 cond.true1397

BASIC BLOCK cond.true1397
%10742:	getelementptr	 bufp XXX XXX
%10743:	load	 %10742
%10744:	ptrtoint	 %8926
%10745:	ptrtoint	 %10743
%10746:	sub	 %10744 %10745
%10747:	add	 %10746 XXX
%10748:	br	 cond.end1404

BASIC BLOCK cond.false1403
%10749:	br	 cond.end1404

BASIC BLOCK cond.end1404
%10750:	phi	 %10747 XXX
%10751:	getelementptr	 %8853 XXX XXX
%10752:	load	 %10751
%10753:	zext	 %10752
%10754:	getelementptr	 %8853 XXX XXX
%10755:	load	 %10754
%10756:	getelementptr	 %10755 %10753
%10757:	getelementptr	 %10756 XXX XXX
%10758:	store	 %10750 %10757
%10759:	getelementptr	 bufp XXX XXX
%10760:	load	 %10759
%10761:	ptrtoint	 %8930
%10762:	ptrtoint	 %10760
%10763:	sub	 %10761 %10762
%10764:	getelementptr	 %8853 XXX XXX
%10765:	load	 %10764
%10766:	zext	 %10765
%10767:	getelementptr	 %8853 XXX XXX
%10768:	load	 %10767
%10769:	getelementptr	 %10768 %10766
%10770:	getelementptr	 %10769 XXX XXX
%10771:	store	 %10763 %10770
%10772:	getelementptr	 %8853 XXX XXX
%10773:	load	 %10772
%10774:	zext	 %10773
%10775:	getelementptr	 %8853 XXX XXX
%10776:	load	 %10775
%10777:	getelementptr	 %10776 %10774
%10778:	getelementptr	 %10777 XXX XXX
%10779:	store	 %10698 %10778
%10780:	icmp	 %10698 XXX
%10781:	br	 %10780 if.end1518 if.then1426

BASIC BLOCK if.then1426
%10782:	getelementptr	 bufp XXX XXX
%10783:	load	 %10782
%10784:	ptrtoint	 %8930
%10785:	ptrtoint	 %10783
%10786:	sub	 %10784 %10785
%10787:	add	 %10786 XXX
%10788:	getelementptr	 %8853 XXX XXX
%10789:	load	 %10788
%10790:	zext	 %10789
%10791:	getelementptr	 %8853 XXX XXX
%10792:	load	 %10791
%10793:	getelementptr	 %10792 %10790
%10794:	getelementptr	 %10793 XXX XXX
%10795:	store	 %10787 %10794
%10796:	br	 do.body1436

BASIC BLOCK do.body1436
%10797:	br	 while.cond1437

BASIC BLOCK while.cond1437
%10798:	phi	 %8926 %10891
%10799:	phi	 %8927 %10892
%10800:	phi	 %8928 %10893
%10801:	phi	 %8929 %10894
%10802:	phi	 %8930 %10895
%10803:	getelementptr	 bufp XXX XXX
%10804:	load	 %10803
%10805:	ptrtoint	 %10802
%10806:	ptrtoint	 %10804
%10807:	sub	 %10805 %10806
%10808:	add	 %10807 XXX
%10809:	getelementptr	 bufp XXX XXX
%10810:	load	 %10809
%10811:	icmp	 %10808 %10810
%10812:	br	 %10811 while.end1512 while.body1446

BASIC BLOCK while.body1446
%10813:	br	 do.body1447

BASIC BLOCK do.body1447
%10814:	getelementptr	 bufp XXX XXX
%10815:	load	 %10814
%10816:	getelementptr	 bufp XXX XXX
%10817:	load	 %10816
%10818:	icmp	 %10817 XXX
%10819:	br	 %10818 if.end1454 if.then1453

BASIC BLOCK if.then1453
%10820:	br	 return

BASIC BLOCK if.end1454
%10821:	getelementptr	 bufp XXX XXX
%10822:	load	 %10821
%10823:	shl	 %10822 XXX
%10824:	store	 %10823 %10821
%10825:	getelementptr	 bufp XXX XXX
%10826:	load	 %10825
%10827:	icmp	 %10826 XXX
%10828:	br	 %10827 if.end1462 if.then1460

BASIC BLOCK if.then1460
%10829:	getelementptr	 bufp XXX XXX
%10830:	store	 XXX %10829
%10831:	br	 if.end1462

BASIC BLOCK if.end1462
%10832:	getelementptr	 bufp XXX XXX
%10833:	load	 %10832
%10834:	getelementptr	 bufp XXX XXX
%10835:	load	 %10834
%10836:	call	 %10833 %10835 realloc
%10837:	getelementptr	 bufp XXX XXX
%10838:	store	 %10836 %10837
%10839:	getelementptr	 bufp XXX XXX
%10840:	load	 %10839
%10841:	icmp	 %10840 XXX
%10842:	br	 %10841 if.end1471 if.then1470

BASIC BLOCK if.then1470
%10843:	br	 return

BASIC BLOCK if.end1471
%10844:	getelementptr	 bufp XXX XXX
%10845:	load	 %10844
%10846:	icmp	 %10815 %10845
%10847:	br	 %10846 if.end1510 if.then1475

BASIC BLOCK if.then1475
%10848:	ptrtoint	 %10802
%10849:	ptrtoint	 %10815
%10850:	sub	 %10848 %10849
%10851:	getelementptr	 bufp XXX XXX
%10852:	load	 %10851
%10853:	getelementptr	 %10852 %10850
%10854:	ptrtoint	 %10799
%10855:	ptrtoint	 %10815
%10856:	sub	 %10854 %10855
%10857:	getelementptr	 bufp XXX XXX
%10858:	load	 %10857
%10859:	getelementptr	 %10858 %10856
%10860:	icmp	 %10798 XXX
%10861:	br	 %10860 if.end1493 if.then1487

BASIC BLOCK if.then1487
%10862:	ptrtoint	 %10798
%10863:	ptrtoint	 %10815
%10864:	sub	 %10862 %10863
%10865:	getelementptr	 bufp XXX XXX
%10866:	load	 %10865
%10867:	getelementptr	 %10866 %10864
%10868:	br	 if.end1493

BASIC BLOCK if.end1493
%10869:	phi	 %10867 %10798
%10870:	icmp	 %10800 XXX
%10871:	br	 %10870 if.end1501 if.then1495

BASIC BLOCK if.then1495
%10872:	ptrtoint	 %10800
%10873:	ptrtoint	 %10815
%10874:	sub	 %10872 %10873
%10875:	getelementptr	 bufp XXX XXX
%10876:	load	 %10875
%10877:	getelementptr	 %10876 %10874
%10878:	br	 if.end1501

BASIC BLOCK if.end1501
%10879:	phi	 %10877 %10800
%10880:	icmp	 %10801 XXX
%10881:	br	 %10880 if.end1509 if.then1503

BASIC BLOCK if.then1503
%10882:	ptrtoint	 %10801
%10883:	ptrtoint	 %10815
%10884:	sub	 %10882 %10883
%10885:	getelementptr	 bufp XXX XXX
%10886:	load	 %10885
%10887:	getelementptr	 %10886 %10884
%10888:	br	 if.end1509

BASIC BLOCK if.end1509
%10889:	phi	 %10887 %10801
%10890:	br	 if.end1510

BASIC BLOCK if.end1510
%10891:	phi	 %10869 %10798
%10892:	phi	 %10859 %10799
%10893:	phi	 %10879 %10800
%10894:	phi	 %10889 %10801
%10895:	phi	 %10853 %10802
%10896:	br	 do.end1511

BASIC BLOCK do.end1511
%10897:	br	 while.cond1437

BASIC BLOCK while.end1512
%10898:	getelementptr	 %10802 XXX
%10899:	store	 XXX %10802
%10900:	trunc	 %10698
%10901:	getelementptr	 %10898 XXX
%10902:	store	 %10900 %10898
%10903:	getelementptr	 %10901 XXX
%10904:	store	 XXX %10901
%10905:	br	 do.end1517

BASIC BLOCK do.end1517
%10906:	br	 if.end1518

BASIC BLOCK if.end1518
%10907:	phi	 %10903 %8930
%10908:	getelementptr	 %8853 XXX XXX
%10909:	load	 %10908
%10910:	add	 %10909 XXX
%10911:	store	 %10910 %10908
%10912:	br	 sw.epilog

BASIC BLOCK sw.bb1521
%10913:	and	 syntax XXX
%10914:	icmp	 %10913 XXX
%10915:	br	 %10914 if.end1525 if.then1524

BASIC BLOCK if.then1524
%10916:	br	 normal_backslash

BASIC BLOCK if.end1525
%10917:	getelementptr	 %8853 XXX XXX
%10918:	load	 %10917
%10919:	icmp	 %10918 XXX
%10920:	br	 %10919 if.end1535 if.then1529

BASIC BLOCK if.then1529
%10921:	and	 syntax XXX
%10922:	icmp	 %10921 XXX
%10923:	br	 %10922 if.else1533 if.then1532

BASIC BLOCK if.then1532
%10924:	br	 normal_backslash

BASIC BLOCK if.else1533
%10925:	getelementptr	 %8853 XXX XXX
%10926:	load	 %10925
%10927:	bitcast	 %10926
%10928:	call	 %10927 free
%10929:	br	 return

BASIC BLOCK if.end1535
%10930:	br	 handle_close

BASIC BLOCK handle_close
%10931:	phi	 %10685 %8949
%10932:	icmp	 %8926 XXX
%10933:	br	 %10932 if.end1623 if.then1537

BASIC BLOCK if.then1537
%10934:	br	 do.body1538

BASIC BLOCK do.body1538
%10935:	br	 while.cond1539

BASIC BLOCK while.cond1539
%10936:	phi	 %8926 %11029
%10937:	phi	 %8927 %11030
%10938:	phi	 %8928 %11031
%10939:	phi	 %8929 %11032
%10940:	phi	 %8930 %11033
%10941:	getelementptr	 bufp XXX XXX
%10942:	load	 %10941
%10943:	ptrtoint	 %10940
%10944:	ptrtoint	 %10942
%10945:	sub	 %10943 %10944
%10946:	add	 %10945 XXX
%10947:	getelementptr	 bufp XXX XXX
%10948:	load	 %10947
%10949:	icmp	 %10946 %10948
%10950:	br	 %10949 while.end1614 while.body1548

BASIC BLOCK while.body1548
%10951:	br	 do.body1549

BASIC BLOCK do.body1549
%10952:	getelementptr	 bufp XXX XXX
%10953:	load	 %10952
%10954:	getelementptr	 bufp XXX XXX
%10955:	load	 %10954
%10956:	icmp	 %10955 XXX
%10957:	br	 %10956 if.end1556 if.then1555

BASIC BLOCK if.then1555
%10958:	br	 return

BASIC BLOCK if.end1556
%10959:	getelementptr	 bufp XXX XXX
%10960:	load	 %10959
%10961:	shl	 %10960 XXX
%10962:	store	 %10961 %10959
%10963:	getelementptr	 bufp XXX XXX
%10964:	load	 %10963
%10965:	icmp	 %10964 XXX
%10966:	br	 %10965 if.end1564 if.then1562

BASIC BLOCK if.then1562
%10967:	getelementptr	 bufp XXX XXX
%10968:	store	 XXX %10967
%10969:	br	 if.end1564

BASIC BLOCK if.end1564
%10970:	getelementptr	 bufp XXX XXX
%10971:	load	 %10970
%10972:	getelementptr	 bufp XXX XXX
%10973:	load	 %10972
%10974:	call	 %10971 %10973 realloc
%10975:	getelementptr	 bufp XXX XXX
%10976:	store	 %10974 %10975
%10977:	getelementptr	 bufp XXX XXX
%10978:	load	 %10977
%10979:	icmp	 %10978 XXX
%10980:	br	 %10979 if.end1573 if.then1572

BASIC BLOCK if.then1572
%10981:	br	 return

BASIC BLOCK if.end1573
%10982:	getelementptr	 bufp XXX XXX
%10983:	load	 %10982
%10984:	icmp	 %10953 %10983
%10985:	br	 %10984 if.end1612 if.then1577

BASIC BLOCK if.then1577
%10986:	ptrtoint	 %10940
%10987:	ptrtoint	 %10953
%10988:	sub	 %10986 %10987
%10989:	getelementptr	 bufp XXX XXX
%10990:	load	 %10989
%10991:	getelementptr	 %10990 %10988
%10992:	ptrtoint	 %10937
%10993:	ptrtoint	 %10953
%10994:	sub	 %10992 %10993
%10995:	getelementptr	 bufp XXX XXX
%10996:	load	 %10995
%10997:	getelementptr	 %10996 %10994
%10998:	icmp	 %10936 XXX
%10999:	br	 %10998 if.end1595 if.then1589

BASIC BLOCK if.then1589
%11000:	ptrtoint	 %10936
%11001:	ptrtoint	 %10953
%11002:	sub	 %11000 %11001
%11003:	getelementptr	 bufp XXX XXX
%11004:	load	 %11003
%11005:	getelementptr	 %11004 %11002
%11006:	br	 if.end1595

BASIC BLOCK if.end1595
%11007:	phi	 %11005 %10936
%11008:	icmp	 %10938 XXX
%11009:	br	 %11008 if.end1603 if.then1597

BASIC BLOCK if.then1597
%11010:	ptrtoint	 %10938
%11011:	ptrtoint	 %10953
%11012:	sub	 %11010 %11011
%11013:	getelementptr	 bufp XXX XXX
%11014:	load	 %11013
%11015:	getelementptr	 %11014 %11012
%11016:	br	 if.end1603

BASIC BLOCK if.end1603
%11017:	phi	 %11015 %10938
%11018:	icmp	 %10939 XXX
%11019:	br	 %11018 if.end1611 if.then1605

BASIC BLOCK if.then1605
%11020:	ptrtoint	 %10939
%11021:	ptrtoint	 %10953
%11022:	sub	 %11020 %11021
%11023:	getelementptr	 bufp XXX XXX
%11024:	load	 %11023
%11025:	getelementptr	 %11024 %11022
%11026:	br	 if.end1611

BASIC BLOCK if.end1611
%11027:	phi	 %11025 %10939
%11028:	br	 if.end1612

BASIC BLOCK if.end1612
%11029:	phi	 %11007 %10936
%11030:	phi	 %10997 %10937
%11031:	phi	 %11017 %10938
%11032:	phi	 %11027 %10939
%11033:	phi	 %10991 %10940
%11034:	br	 do.end1613

BASIC BLOCK do.end1613
%11035:	br	 while.cond1539

BASIC BLOCK while.end1614
%11036:	getelementptr	 %10940 XXX
%11037:	store	 XXX %10940
%11038:	br	 do.end1616

BASIC BLOCK do.end1616
%11039:	getelementptr	 %11036 XXX
%11040:	ptrtoint	 %11039
%11041:	ptrtoint	 %10936
%11042:	sub	 %11040 %11041
%11043:	sub	 %11042 XXX
%11044:	trunc	 %11043
%11045:	call	 XXX %10936 %11044 store_op1
%11046:	br	 if.end1623

BASIC BLOCK if.end1623
%11047:	phi	 %10936 %8926
%11048:	phi	 %10937 %8927
%11049:	phi	 %10938 %8928
%11050:	phi	 %10939 %8929
%11051:	phi	 %11036 %8930
%11052:	getelementptr	 %8853 XXX XXX
%11053:	load	 %11052
%11054:	icmp	 %11053 XXX
%11055:	br	 %11054 if.end1633 if.then1627

BASIC BLOCK if.then1627
%11056:	and	 syntax XXX
%11057:	icmp	 %11056 XXX
%11058:	br	 %11057 if.else1631 if.then1630

BASIC BLOCK if.then1630
%11059:	br	 normal_char

BASIC BLOCK if.else1631
%11060:	getelementptr	 %8853 XXX XXX
%11061:	load	 %11060
%11062:	bitcast	 %11061
%11063:	call	 %11062 free
%11064:	br	 return

BASIC BLOCK if.end1633
%11065:	getelementptr	 %8853 XXX XXX
%11066:	load	 %11065
%11067:	add	 %11066 XXX
%11068:	store	 %11067 %11065
%11069:	getelementptr	 bufp XXX XXX
%11070:	load	 %11069
%11071:	getelementptr	 %8853 XXX XXX
%11072:	load	 %11071
%11073:	zext	 %11072
%11074:	getelementptr	 %8853 XXX XXX
%11075:	load	 %11074
%11076:	getelementptr	 %11075 %11073
%11077:	getelementptr	 %11076 XXX XXX
%11078:	load	 %11077
%11079:	getelementptr	 %11070 %11078
%11080:	getelementptr	 %8853 XXX XXX
%11081:	load	 %11080
%11082:	zext	 %11081
%11083:	getelementptr	 %8853 XXX XXX
%11084:	load	 %11083
%11085:	getelementptr	 %11084 %11082
%11086:	getelementptr	 %11085 XXX XXX
%11087:	load	 %11086
%11088:	icmp	 %11087 XXX
%11089:	br	 %11088 cond.false1658 cond.true1649

BASIC BLOCK cond.true1649
%11090:	getelementptr	 bufp XXX XXX
%11091:	load	 %11090
%11092:	getelementptr	 %8853 XXX XXX
%11093:	load	 %11092
%11094:	zext	 %11093
%11095:	getelementptr	 %8853 XXX XXX
%11096:	load	 %11095
%11097:	getelementptr	 %11096 %11094
%11098:	getelementptr	 %11097 XXX XXX
%11099:	load	 %11098
%11100:	getelementptr	 %11091 %11099
%11101:	getelementptr	 %11100 XXX
%11102:	br	 cond.end1659

BASIC BLOCK cond.false1658
%11103:	br	 cond.end1659

BASIC BLOCK cond.end1659
%11104:	phi	 %11101 XXX
%11105:	getelementptr	 bufp XXX XXX
%11106:	load	 %11105
%11107:	getelementptr	 %8853 XXX XXX
%11108:	load	 %11107
%11109:	zext	 %11108
%11110:	getelementptr	 %8853 XXX XXX
%11111:	load	 %11110
%11112:	getelementptr	 %11111 %11109
%11113:	getelementptr	 %11112 XXX XXX
%11114:	load	 %11113
%11115:	getelementptr	 %11106 %11114
%11116:	getelementptr	 %8853 XXX XXX
%11117:	load	 %11116
%11118:	zext	 %11117
%11119:	getelementptr	 %8853 XXX XXX
%11120:	load	 %11119
%11121:	getelementptr	 %11120 %11118
%11122:	getelementptr	 %11121 XXX XXX
%11123:	load	 %11122
%11124:	icmp	 %11123 XXX
%11125:	br	 %11124 if.end1769 if.then1675

BASIC BLOCK if.then1675
%11126:	getelementptr	 bufp XXX XXX
%11127:	load	 %11126
%11128:	getelementptr	 %8853 XXX XXX
%11129:	load	 %11128
%11130:	zext	 %11129
%11131:	getelementptr	 %8853 XXX XXX
%11132:	load	 %11131
%11133:	getelementptr	 %11132 %11130
%11134:	getelementptr	 %11133 XXX XXX
%11135:	load	 %11134
%11136:	getelementptr	 %11127 %11135
%11137:	sub	 %8925 %11123
%11138:	trunc	 %11137
%11139:	store	 %11138 %11136
%11140:	br	 do.body1685

BASIC BLOCK do.body1685
%11141:	br	 while.cond1686

BASIC BLOCK while.cond1686
%11142:	phi	 %11104 %11235
%11143:	phi	 %11079 %11236
%11144:	phi	 %11115 %11237
%11145:	phi	 XXX %11238
%11146:	phi	 %11051 %11239
%11147:	getelementptr	 bufp XXX XXX
%11148:	load	 %11147
%11149:	ptrtoint	 %11146
%11150:	ptrtoint	 %11148
%11151:	sub	 %11149 %11150
%11152:	add	 %11151 XXX
%11153:	getelementptr	 bufp XXX XXX
%11154:	load	 %11153
%11155:	icmp	 %11152 %11154
%11156:	br	 %11155 while.end1761 while.body1695

BASIC BLOCK while.body1695
%11157:	br	 do.body1696

BASIC BLOCK do.body1696
%11158:	getelementptr	 bufp XXX XXX
%11159:	load	 %11158
%11160:	getelementptr	 bufp XXX XXX
%11161:	load	 %11160
%11162:	icmp	 %11161 XXX
%11163:	br	 %11162 if.end1703 if.then1702

BASIC BLOCK if.then1702
%11164:	br	 return

BASIC BLOCK if.end1703
%11165:	getelementptr	 bufp XXX XXX
%11166:	load	 %11165
%11167:	shl	 %11166 XXX
%11168:	store	 %11167 %11165
%11169:	getelementptr	 bufp XXX XXX
%11170:	load	 %11169
%11171:	icmp	 %11170 XXX
%11172:	br	 %11171 if.end1711 if.then1709

BASIC BLOCK if.then1709
%11173:	getelementptr	 bufp XXX XXX
%11174:	store	 XXX %11173
%11175:	br	 if.end1711

BASIC BLOCK if.end1711
%11176:	getelementptr	 bufp XXX XXX
%11177:	load	 %11176
%11178:	getelementptr	 bufp XXX XXX
%11179:	load	 %11178
%11180:	call	 %11177 %11179 realloc
%11181:	getelementptr	 bufp XXX XXX
%11182:	store	 %11180 %11181
%11183:	getelementptr	 bufp XXX XXX
%11184:	load	 %11183
%11185:	icmp	 %11184 XXX
%11186:	br	 %11185 if.end1720 if.then1719

BASIC BLOCK if.then1719
%11187:	br	 return

BASIC BLOCK if.end1720
%11188:	getelementptr	 bufp XXX XXX
%11189:	load	 %11188
%11190:	icmp	 %11159 %11189
%11191:	br	 %11190 if.end1759 if.then1724

BASIC BLOCK if.then1724
%11192:	ptrtoint	 %11146
%11193:	ptrtoint	 %11159
%11194:	sub	 %11192 %11193
%11195:	getelementptr	 bufp XXX XXX
%11196:	load	 %11195
%11197:	getelementptr	 %11196 %11194
%11198:	ptrtoint	 %11143
%11199:	ptrtoint	 %11159
%11200:	sub	 %11198 %11199
%11201:	getelementptr	 bufp XXX XXX
%11202:	load	 %11201
%11203:	getelementptr	 %11202 %11200
%11204:	icmp	 %11142 XXX
%11205:	br	 %11204 if.end1742 if.then1736

BASIC BLOCK if.then1736
%11206:	ptrtoint	 %11142
%11207:	ptrtoint	 %11159
%11208:	sub	 %11206 %11207
%11209:	getelementptr	 bufp XXX XXX
%11210:	load	 %11209
%11211:	getelementptr	 %11210 %11208
%11212:	br	 if.end1742

BASIC BLOCK if.end1742
%11213:	phi	 %11211 %11142
%11214:	icmp	 %11144 XXX
%11215:	br	 %11214 if.end1750 if.then1744

BASIC BLOCK if.then1744
%11216:	ptrtoint	 %11144
%11217:	ptrtoint	 %11159
%11218:	sub	 %11216 %11217
%11219:	getelementptr	 bufp XXX XXX
%11220:	load	 %11219
%11221:	getelementptr	 %11220 %11218
%11222:	br	 if.end1750

BASIC BLOCK if.end1750
%11223:	phi	 %11221 %11144
%11224:	icmp	 %11145 XXX
%11225:	br	 %11224 if.end1758 if.then1752

BASIC BLOCK if.then1752
%11226:	ptrtoint	 %11145
%11227:	ptrtoint	 %11159
%11228:	sub	 %11226 %11227
%11229:	getelementptr	 bufp XXX XXX
%11230:	load	 %11229
%11231:	getelementptr	 %11230 %11228
%11232:	br	 if.end1758

BASIC BLOCK if.end1758
%11233:	phi	 %11231 %11145
%11234:	br	 if.end1759

BASIC BLOCK if.end1759
%11235:	phi	 %11213 %11142
%11236:	phi	 %11203 %11143
%11237:	phi	 %11223 %11144
%11238:	phi	 %11233 %11145
%11239:	phi	 %11197 %11146
%11240:	br	 do.end1760

BASIC BLOCK do.end1760
%11241:	br	 while.cond1686

BASIC BLOCK while.end1761
%11242:	getelementptr	 %11146 XXX
%11243:	store	 XXX %11146
%11244:	trunc	 %11123
%11245:	getelementptr	 %11242 XXX
%11246:	store	 %11244 %11242
%11247:	sub	 %8925 %11123
%11248:	trunc	 %11247
%11249:	getelementptr	 %11245 XXX
%11250:	store	 %11248 %11245
%11251:	br	 do.end1768

BASIC BLOCK do.end1768
%11252:	br	 if.end1769

BASIC BLOCK if.end1769
%11253:	phi	 %11142 %11104
%11254:	phi	 %11143 %11079
%11255:	phi	 %11144 %11115
%11256:	phi	 %11145 XXX
%11257:	phi	 %11249 %11051
%11258:	br	 sw.epilog

BASIC BLOCK sw.bb1770
%11259:	and	 syntax XXX
%11260:	icmp	 %11259 XXX
%11261:	br	 %11260 lor.lhs.false1773 if.then1776

BASIC BLOCK lor.lhs.false1773
%11262:	and	 syntax XXX
%11263:	icmp	 %11262 XXX
%11264:	br	 %11263 if.end1777 if.then1776

BASIC BLOCK if.then1776
%11265:	br	 normal_backslash

BASIC BLOCK if.end1777
%11266:	br	 handle_alt

BASIC BLOCK handle_alt
%11267:	phi	 %10685 %8949 %8949
%11268:	and	 syntax XXX
%11269:	icmp	 %11268 XXX
%11270:	br	 %11269 if.end1781 if.then1780

BASIC BLOCK if.then1780
%11271:	br	 normal_char

BASIC BLOCK if.end1781
%11272:	br	 while.cond1782

BASIC BLOCK while.cond1782
%11273:	phi	 %8926 %11366
%11274:	phi	 %8927 %11367
%11275:	phi	 %8928 %11368
%11276:	phi	 %8929 %11369
%11277:	phi	 %8930 %11370
%11278:	getelementptr	 bufp XXX XXX
%11279:	load	 %11278
%11280:	ptrtoint	 %11277
%11281:	ptrtoint	 %11279
%11282:	sub	 %11280 %11281
%11283:	add	 %11282 XXX
%11284:	getelementptr	 bufp XXX XXX
%11285:	load	 %11284
%11286:	icmp	 %11283 %11285
%11287:	br	 %11286 while.end1857 while.body1791

BASIC BLOCK while.body1791
%11288:	br	 do.body1792

BASIC BLOCK do.body1792
%11289:	getelementptr	 bufp XXX XXX
%11290:	load	 %11289
%11291:	getelementptr	 bufp XXX XXX
%11292:	load	 %11291
%11293:	icmp	 %11292 XXX
%11294:	br	 %11293 if.end1799 if.then1798

BASIC BLOCK if.then1798
%11295:	br	 return

BASIC BLOCK if.end1799
%11296:	getelementptr	 bufp XXX XXX
%11297:	load	 %11296
%11298:	shl	 %11297 XXX
%11299:	store	 %11298 %11296
%11300:	getelementptr	 bufp XXX XXX
%11301:	load	 %11300
%11302:	icmp	 %11301 XXX
%11303:	br	 %11302 if.end1807 if.then1805

BASIC BLOCK if.then1805
%11304:	getelementptr	 bufp XXX XXX
%11305:	store	 XXX %11304
%11306:	br	 if.end1807

BASIC BLOCK if.end1807
%11307:	getelementptr	 bufp XXX XXX
%11308:	load	 %11307
%11309:	getelementptr	 bufp XXX XXX
%11310:	load	 %11309
%11311:	call	 %11308 %11310 realloc
%11312:	getelementptr	 bufp XXX XXX
%11313:	store	 %11311 %11312
%11314:	getelementptr	 bufp XXX XXX
%11315:	load	 %11314
%11316:	icmp	 %11315 XXX
%11317:	br	 %11316 if.end1816 if.then1815

BASIC BLOCK if.then1815
%11318:	br	 return

BASIC BLOCK if.end1816
%11319:	getelementptr	 bufp XXX XXX
%11320:	load	 %11319
%11321:	icmp	 %11290 %11320
%11322:	br	 %11321 if.end1855 if.then1820

BASIC BLOCK if.then1820
%11323:	ptrtoint	 %11277
%11324:	ptrtoint	 %11290
%11325:	sub	 %11323 %11324
%11326:	getelementptr	 bufp XXX XXX
%11327:	load	 %11326
%11328:	getelementptr	 %11327 %11325
%11329:	ptrtoint	 %11274
%11330:	ptrtoint	 %11290
%11331:	sub	 %11329 %11330
%11332:	getelementptr	 bufp XXX XXX
%11333:	load	 %11332
%11334:	getelementptr	 %11333 %11331
%11335:	icmp	 %11273 XXX
%11336:	br	 %11335 if.end1838 if.then1832

BASIC BLOCK if.then1832
%11337:	ptrtoint	 %11273
%11338:	ptrtoint	 %11290
%11339:	sub	 %11337 %11338
%11340:	getelementptr	 bufp XXX XXX
%11341:	load	 %11340
%11342:	getelementptr	 %11341 %11339
%11343:	br	 if.end1838

BASIC BLOCK if.end1838
%11344:	phi	 %11342 %11273
%11345:	icmp	 %11275 XXX
%11346:	br	 %11345 if.end1846 if.then1840

BASIC BLOCK if.then1840
%11347:	ptrtoint	 %11275
%11348:	ptrtoint	 %11290
%11349:	sub	 %11347 %11348
%11350:	getelementptr	 bufp XXX XXX
%11351:	load	 %11350
%11352:	getelementptr	 %11351 %11349
%11353:	br	 if.end1846

BASIC BLOCK if.end1846
%11354:	phi	 %11352 %11275
%11355:	icmp	 %11276 XXX
%11356:	br	 %11355 if.end1854 if.then1848

BASIC BLOCK if.then1848
%11357:	ptrtoint	 %11276
%11358:	ptrtoint	 %11290
%11359:	sub	 %11357 %11358
%11360:	getelementptr	 bufp XXX XXX
%11361:	load	 %11360
%11362:	getelementptr	 %11361 %11359
%11363:	br	 if.end1854

BASIC BLOCK if.end1854
%11364:	phi	 %11362 %11276
%11365:	br	 if.end1855

BASIC BLOCK if.end1855
%11366:	phi	 %11344 %11273
%11367:	phi	 %11334 %11274
%11368:	phi	 %11354 %11275
%11369:	phi	 %11364 %11276
%11370:	phi	 %11328 %11277
%11371:	br	 do.end1856

BASIC BLOCK do.end1856
%11372:	br	 while.cond1782

BASIC BLOCK while.end1857
%11373:	getelementptr	 %11277 XXX
%11374:	ptrtoint	 %11373
%11375:	ptrtoint	 %11274
%11376:	sub	 %11374 %11375
%11377:	sub	 %11376 XXX
%11378:	trunc	 %11377
%11379:	call	 XXX %11274 %11378 %11277 insert_op1
%11380:	getelementptr	 %11277 XXX
%11381:	icmp	 %11273 XXX
%11382:	br	 %11381 if.end1872 if.then1866

BASIC BLOCK if.then1866
%11383:	ptrtoint	 %11380
%11384:	ptrtoint	 %11273
%11385:	sub	 %11383 %11384
%11386:	sub	 %11385 XXX
%11387:	trunc	 %11386
%11388:	call	 XXX %11273 %11387 store_op1
%11389:	br	 if.end1872

BASIC BLOCK if.end1872
%11390:	br	 while.cond1873

BASIC BLOCK while.cond1873
%11391:	phi	 %11380 %11484
%11392:	phi	 %11274 %11485
%11393:	phi	 %11275 %11486
%11394:	phi	 XXX %11487
%11395:	phi	 %11380 %11488
%11396:	getelementptr	 bufp XXX XXX
%11397:	load	 %11396
%11398:	ptrtoint	 %11395
%11399:	ptrtoint	 %11397
%11400:	sub	 %11398 %11399
%11401:	add	 %11400 XXX
%11402:	getelementptr	 bufp XXX XXX
%11403:	load	 %11402
%11404:	icmp	 %11401 %11403
%11405:	br	 %11404 while.end1948 while.body1882

BASIC BLOCK while.body1882
%11406:	br	 do.body1883

BASIC BLOCK do.body1883
%11407:	getelementptr	 bufp XXX XXX
%11408:	load	 %11407
%11409:	getelementptr	 bufp XXX XXX
%11410:	load	 %11409
%11411:	icmp	 %11410 XXX
%11412:	br	 %11411 if.end1890 if.then1889

BASIC BLOCK if.then1889
%11413:	br	 return

BASIC BLOCK if.end1890
%11414:	getelementptr	 bufp XXX XXX
%11415:	load	 %11414
%11416:	shl	 %11415 XXX
%11417:	store	 %11416 %11414
%11418:	getelementptr	 bufp XXX XXX
%11419:	load	 %11418
%11420:	icmp	 %11419 XXX
%11421:	br	 %11420 if.end1898 if.then1896

BASIC BLOCK if.then1896
%11422:	getelementptr	 bufp XXX XXX
%11423:	store	 XXX %11422
%11424:	br	 if.end1898

BASIC BLOCK if.end1898
%11425:	getelementptr	 bufp XXX XXX
%11426:	load	 %11425
%11427:	getelementptr	 bufp XXX XXX
%11428:	load	 %11427
%11429:	call	 %11426 %11428 realloc
%11430:	getelementptr	 bufp XXX XXX
%11431:	store	 %11429 %11430
%11432:	getelementptr	 bufp XXX XXX
%11433:	load	 %11432
%11434:	icmp	 %11433 XXX
%11435:	br	 %11434 if.end1907 if.then1906

BASIC BLOCK if.then1906
%11436:	br	 return

BASIC BLOCK if.end1907
%11437:	getelementptr	 bufp XXX XXX
%11438:	load	 %11437
%11439:	icmp	 %11408 %11438
%11440:	br	 %11439 if.end1946 if.then1911

BASIC BLOCK if.then1911
%11441:	ptrtoint	 %11395
%11442:	ptrtoint	 %11408
%11443:	sub	 %11441 %11442
%11444:	getelementptr	 bufp XXX XXX
%11445:	load	 %11444
%11446:	getelementptr	 %11445 %11443
%11447:	ptrtoint	 %11392
%11448:	ptrtoint	 %11408
%11449:	sub	 %11447 %11448
%11450:	getelementptr	 bufp XXX XXX
%11451:	load	 %11450
%11452:	getelementptr	 %11451 %11449
%11453:	icmp	 %11391 XXX
%11454:	br	 %11453 if.end1929 if.then1923

BASIC BLOCK if.then1923
%11455:	ptrtoint	 %11391
%11456:	ptrtoint	 %11408
%11457:	sub	 %11455 %11456
%11458:	getelementptr	 bufp XXX XXX
%11459:	load	 %11458
%11460:	getelementptr	 %11459 %11457
%11461:	br	 if.end1929

BASIC BLOCK if.end1929
%11462:	phi	 %11460 %11391
%11463:	icmp	 %11393 XXX
%11464:	br	 %11463 if.end1937 if.then1931

BASIC BLOCK if.then1931
%11465:	ptrtoint	 %11393
%11466:	ptrtoint	 %11408
%11467:	sub	 %11465 %11466
%11468:	getelementptr	 bufp XXX XXX
%11469:	load	 %11468
%11470:	getelementptr	 %11469 %11467
%11471:	br	 if.end1937

BASIC BLOCK if.end1937
%11472:	phi	 %11470 %11393
%11473:	icmp	 %11394 XXX
%11474:	br	 %11473 if.end1945 if.then1939

BASIC BLOCK if.then1939
%11475:	ptrtoint	 %11394
%11476:	ptrtoint	 %11408
%11477:	sub	 %11475 %11476
%11478:	getelementptr	 bufp XXX XXX
%11479:	load	 %11478
%11480:	getelementptr	 %11479 %11477
%11481:	br	 if.end1945

BASIC BLOCK if.end1945
%11482:	phi	 %11480 %11394
%11483:	br	 if.end1946

BASIC BLOCK if.end1946
%11484:	phi	 %11462 %11391
%11485:	phi	 %11452 %11392
%11486:	phi	 %11472 %11393
%11487:	phi	 %11482 %11394
%11488:	phi	 %11446 %11395
%11489:	br	 do.end1947

BASIC BLOCK do.end1947
%11490:	br	 while.cond1873

BASIC BLOCK while.end1948
%11491:	getelementptr	 %11395 XXX
%11492:	br	 sw.epilog

BASIC BLOCK sw.bb1950
%11493:	and	 syntax XXX
%11494:	icmp	 %11493 XXX
%11495:	br	 %11494 if.then1966 lor.lhs.false1953

BASIC BLOCK lor.lhs.false1953
%11496:	and	 syntax XXX
%11497:	icmp	 %11496 XXX
%11498:	br	 %11497 lor.lhs.false1959 land.lhs.true1956

BASIC BLOCK land.lhs.true1956
%11499:	and	 syntax XXX
%11500:	icmp	 %11499 XXX
%11501:	br	 %11500 lor.lhs.false1959 if.then1966

BASIC BLOCK lor.lhs.false1959
%11502:	load	 %8854
%11503:	getelementptr	 %11502 XXX
%11504:	icmp	 %11503 pattern
%11505:	br	 %11504 if.end1967 land.lhs.true1963

BASIC BLOCK land.lhs.true1963
%11506:	load	 %8854
%11507:	icmp	 %11506 %8857
%11508:	br	 %11507 if.end1967 if.then1966

BASIC BLOCK if.then1966
%11509:	br	 normal_backslash

BASIC BLOCK if.end1967
%11510:	br	 handle_interval

BASIC BLOCK handle_interval
%11511:	phi	 %10685 %8949
%11512:	load	 %8854
%11513:	getelementptr	 %11512 XXX
%11514:	load	 %8854
%11515:	icmp	 %11514 %8857
%11516:	br	 %11515 if.end1977 if.then1971

BASIC BLOCK if.then1971
%11517:	and	 syntax XXX
%11518:	icmp	 %11517 XXX
%11519:	br	 %11518 if.else1975 if.then1974

BASIC BLOCK if.then1974
%11520:	br	 unfetch_interval

BASIC BLOCK if.else1975
%11521:	getelementptr	 %8853 XXX XXX
%11522:	load	 %11521
%11523:	bitcast	 %11522
%11524:	call	 %11523 free
%11525:	br	 return

BASIC BLOCK if.end1977
%11526:	load	 %8854
%11527:	icmp	 %11526 %8857
%11528:	br	 %11527 if.end2027 if.then1980

BASIC BLOCK if.then1980
%11529:	br	 do.body1981

BASIC BLOCK do.body1981
%11530:	load	 %8854
%11531:	icmp	 %11530 %8857
%11532:	br	 %11531 if.end1985 if.then1984

BASIC BLOCK if.then1984
%11533:	br	 return

BASIC BLOCK if.end1985
%11534:	load	 %8854
%11535:	getelementptr	 %11534 XXX
%11536:	store	 %11535 %8854
%11537:	load	 %11534
%11538:	icmp	 %8859 XXX
%11539:	br	 %11538 if.end1991 if.then1988

BASIC BLOCK if.then1988
%11540:	zext	 %11537
%11541:	getelementptr	 %8859 %11540
%11542:	load	 %11541
%11543:	br	 if.end1991

BASIC BLOCK if.end1991
%11544:	phi	 %11542 %11537
%11545:	br	 do.end1992

BASIC BLOCK do.end1992
%11546:	br	 while.cond1993

BASIC BLOCK while.cond1993
%11547:	phi	 %11544 %11586
%11548:	phi	 XXX %11566
%11549:	zext	 %11547
%11550:	sext	 %11549
%11551:	call	 __ctype_b_loc
%11552:	load	 %11551
%11553:	getelementptr	 %11552 %11550
%11554:	load	 %11553
%11555:	zext	 %11554
%11556:	and	 %11555 XXX
%11557:	icmp	 %11556 XXX
%11558:	br	 %11557 while.end2026 while.body2001

BASIC BLOCK while.body2001
%11559:	icmp	 %11548 XXX
%11560:	br	 %11559 if.end2005 if.then2004

BASIC BLOCK if.then2004
%11561:	br	 if.end2005

BASIC BLOCK if.end2005
%11562:	phi	 XXX %11548
%11563:	mul	 %11562 XXX
%11564:	zext	 %11547
%11565:	add	 %11563 %11564
%11566:	sub	 %11565 XXX
%11567:	load	 %8854
%11568:	icmp	 %11567 %8857
%11569:	br	 %11568 if.end2013 if.then2012

BASIC BLOCK if.then2012
%11570:	br	 while.end2026

BASIC BLOCK if.end2013
%11571:	br	 do.body2014

BASIC BLOCK do.body2014
%11572:	load	 %8854
%11573:	icmp	 %11572 %8857
%11574:	br	 %11573 if.end2018 if.then2017

BASIC BLOCK if.then2017
%11575:	br	 return

BASIC BLOCK if.end2018
%11576:	load	 %8854
%11577:	getelementptr	 %11576 XXX
%11578:	store	 %11577 %8854
%11579:	load	 %11576
%11580:	icmp	 %8859 XXX
%11581:	br	 %11580 if.end2024 if.then2021

BASIC BLOCK if.then2021
%11582:	zext	 %11579
%11583:	getelementptr	 %8859 %11582
%11584:	load	 %11583
%11585:	br	 if.end2024

BASIC BLOCK if.end2024
%11586:	phi	 %11584 %11579
%11587:	br	 do.end2025

BASIC BLOCK do.end2025
%11588:	br	 while.cond1993

BASIC BLOCK while.end2026
%11589:	phi	 %11566 %11548
%11590:	br	 if.end2027

BASIC BLOCK if.end2027
%11591:	phi	 %11547 %11511
%11592:	phi	 %11589 XXX
%11593:	zext	 %11591
%11594:	icmp	 %11593 XXX
%11595:	br	 %11594 if.else2086 if.then2031

BASIC BLOCK if.then2031
%11596:	load	 %8854
%11597:	icmp	 %11596 %8857
%11598:	br	 %11597 if.end2081 if.then2034

BASIC BLOCK if.then2034
%11599:	br	 do.body2035

BASIC BLOCK do.body2035
%11600:	load	 %8854
%11601:	icmp	 %11600 %8857
%11602:	br	 %11601 if.end2039 if.then2038

BASIC BLOCK if.then2038
%11603:	br	 return

BASIC BLOCK if.end2039
%11604:	load	 %8854
%11605:	getelementptr	 %11604 XXX
%11606:	store	 %11605 %8854
%11607:	load	 %11604
%11608:	icmp	 %8859 XXX
%11609:	br	 %11608 if.end2045 if.then2042

BASIC BLOCK if.then2042
%11610:	zext	 %11607
%11611:	getelementptr	 %8859 %11610
%11612:	load	 %11611
%11613:	br	 if.end2045

BASIC BLOCK if.end2045
%11614:	phi	 %11612 %11607
%11615:	br	 do.end2046

BASIC BLOCK do.end2046
%11616:	br	 while.cond2047

BASIC BLOCK while.cond2047
%11617:	phi	 %11614 %11656
%11618:	phi	 XXX %11636
%11619:	zext	 %11617
%11620:	sext	 %11619
%11621:	call	 __ctype_b_loc
%11622:	load	 %11621
%11623:	getelementptr	 %11622 %11620
%11624:	load	 %11623
%11625:	zext	 %11624
%11626:	and	 %11625 XXX
%11627:	icmp	 %11626 XXX
%11628:	br	 %11627 while.end2080 while.body2055

BASIC BLOCK while.body2055
%11629:	icmp	 %11618 XXX
%11630:	br	 %11629 if.end2059 if.then2058

BASIC BLOCK if.then2058
%11631:	br	 if.end2059

BASIC BLOCK if.end2059
%11632:	phi	 XXX %11618
%11633:	mul	 %11632 XXX
%11634:	zext	 %11617
%11635:	add	 %11633 %11634
%11636:	sub	 %11635 XXX
%11637:	load	 %8854
%11638:	icmp	 %11637 %8857
%11639:	br	 %11638 if.end2067 if.then2066

BASIC BLOCK if.then2066
%11640:	br	 while.end2080

BASIC BLOCK if.end2067
%11641:	br	 do.body2068

BASIC BLOCK do.body2068
%11642:	load	 %8854
%11643:	icmp	 %11642 %8857
%11644:	br	 %11643 if.end2072 if.then2071

BASIC BLOCK if.then2071
%11645:	br	 return

BASIC BLOCK if.end2072
%11646:	load	 %8854
%11647:	getelementptr	 %11646 XXX
%11648:	store	 %11647 %8854
%11649:	load	 %11646
%11650:	icmp	 %8859 XXX
%11651:	br	 %11650 if.end2078 if.then2075

BASIC BLOCK if.then2075
%11652:	zext	 %11649
%11653:	getelementptr	 %8859 %11652
%11654:	load	 %11653
%11655:	br	 if.end2078

BASIC BLOCK if.end2078
%11656:	phi	 %11654 %11649
%11657:	br	 do.end2079

BASIC BLOCK do.end2079
%11658:	br	 while.cond2047

BASIC BLOCK while.end2080
%11659:	phi	 %11636 %11618
%11660:	br	 if.end2081

BASIC BLOCK if.end2081
%11661:	phi	 %11617 %11591
%11662:	phi	 %11659 XXX
%11663:	icmp	 %11662 XXX
%11664:	br	 %11663 if.end2085 if.then2084

BASIC BLOCK if.then2084
%11665:	br	 if.end2085

BASIC BLOCK if.end2085
%11666:	phi	 XXX %11662
%11667:	br	 if.end2087

BASIC BLOCK if.else2086
%11668:	br	 if.end2087

BASIC BLOCK if.end2087
%11669:	phi	 %11661 %11591
%11670:	phi	 %11666 %11592
%11671:	icmp	 %11592 XXX
%11672:	br	 %11671 lor.lhs.false2090 if.then2096

BASIC BLOCK lor.lhs.false2090
%11673:	icmp	 %11670 XXX
%11674:	br	 %11673 lor.lhs.false2093 if.then2096

BASIC BLOCK lor.lhs.false2093
%11675:	icmp	 %11592 %11670
%11676:	br	 %11675 if.end2102 if.then2096

BASIC BLOCK if.then2096
%11677:	and	 syntax XXX
%11678:	icmp	 %11677 XXX
%11679:	br	 %11678 if.else2100 if.then2099

BASIC BLOCK if.then2099
%11680:	br	 unfetch_interval

BASIC BLOCK if.else2100
%11681:	getelementptr	 %8853 XXX XXX
%11682:	load	 %11681
%11683:	bitcast	 %11682
%11684:	call	 %11683 free
%11685:	br	 return

BASIC BLOCK if.end2102
%11686:	and	 syntax XXX
%11687:	icmp	 %11686 XXX
%11688:	br	 %11687 if.then2105 if.end2124

BASIC BLOCK if.then2105
%11689:	zext	 %11669
%11690:	icmp	 %11689 XXX
%11691:	br	 %11690 if.end2111 if.then2109

BASIC BLOCK if.then2109
%11692:	getelementptr	 %8853 XXX XXX
%11693:	load	 %11692
%11694:	bitcast	 %11693
%11695:	call	 %11694 free
%11696:	br	 return

BASIC BLOCK if.end2111
%11697:	br	 do.body2112

BASIC BLOCK do.body2112
%11698:	load	 %8854
%11699:	icmp	 %11698 %8857
%11700:	br	 %11699 if.end2116 if.then2115

BASIC BLOCK if.then2115
%11701:	br	 return

BASIC BLOCK if.end2116
%11702:	load	 %8854
%11703:	getelementptr	 %11702 XXX
%11704:	store	 %11703 %8854
%11705:	load	 %11702
%11706:	icmp	 %8859 XXX
%11707:	br	 %11706 if.end2122 if.then2119

BASIC BLOCK if.then2119
%11708:	zext	 %11705
%11709:	getelementptr	 %8859 %11708
%11710:	load	 %11709
%11711:	br	 if.end2122

BASIC BLOCK if.end2122
%11712:	phi	 %11710 %11705
%11713:	br	 do.end2123

BASIC BLOCK do.end2123
%11714:	br	 if.end2124

BASIC BLOCK if.end2124
%11715:	phi	 %11669 %11712
%11716:	zext	 %11715
%11717:	icmp	 %11716 XXX
%11718:	br	 %11717 if.end2134 if.then2128

BASIC BLOCK if.then2128
%11719:	and	 syntax XXX
%11720:	icmp	 %11719 XXX
%11721:	br	 %11720 if.else2132 if.then2131

BASIC BLOCK if.then2131
%11722:	br	 unfetch_interval

BASIC BLOCK if.else2132
%11723:	getelementptr	 %8853 XXX XXX
%11724:	load	 %11723
%11725:	bitcast	 %11724
%11726:	call	 %11725 free
%11727:	br	 return

BASIC BLOCK if.end2134
%11728:	icmp	 %8928 XXX
%11729:	br	 %11728 if.then2136 if.end2148

BASIC BLOCK if.then2136
%11730:	and	 syntax XXX
%11731:	icmp	 %11730 XXX
%11732:	br	 %11731 if.else2141 if.then2139

BASIC BLOCK if.then2139
%11733:	getelementptr	 %8853 XXX XXX
%11734:	load	 %11733
%11735:	bitcast	 %11734
%11736:	call	 %11735 free
%11737:	br	 return

BASIC BLOCK if.else2141
%11738:	and	 syntax XXX
%11739:	icmp	 %11738 XXX
%11740:	br	 %11739 if.else2145 if.then2144

BASIC BLOCK if.then2144
%11741:	br	 if.end2146

BASIC BLOCK if.else2145
%11742:	br	 unfetch_interval

BASIC BLOCK if.end2146
%11743:	br	 if.end2147

BASIC BLOCK if.end2147
%11744:	br	 if.end2148

BASIC BLOCK if.end2148
%11745:	phi	 %8928 %8930
%11746:	icmp	 %11670 XXX
%11747:	br	 %11746 if.else2235 if.then2151

BASIC BLOCK if.then2151
%11748:	br	 while.cond2152

BASIC BLOCK while.cond2152
%11749:	phi	 %8926 %11842
%11750:	phi	 %8927 %11843
%11751:	phi	 %11745 %11844
%11752:	phi	 %8929 %11845
%11753:	phi	 %8930 %11846
%11754:	getelementptr	 bufp XXX XXX
%11755:	load	 %11754
%11756:	ptrtoint	 %11753
%11757:	ptrtoint	 %11755
%11758:	sub	 %11756 %11757
%11759:	add	 %11758 XXX
%11760:	getelementptr	 bufp XXX XXX
%11761:	load	 %11760
%11762:	icmp	 %11759 %11761
%11763:	br	 %11762 while.end2227 while.body2161

BASIC BLOCK while.body2161
%11764:	br	 do.body2162

BASIC BLOCK do.body2162
%11765:	getelementptr	 bufp XXX XXX
%11766:	load	 %11765
%11767:	getelementptr	 bufp XXX XXX
%11768:	load	 %11767
%11769:	icmp	 %11768 XXX
%11770:	br	 %11769 if.end2169 if.then2168

BASIC BLOCK if.then2168
%11771:	br	 return

BASIC BLOCK if.end2169
%11772:	getelementptr	 bufp XXX XXX
%11773:	load	 %11772
%11774:	shl	 %11773 XXX
%11775:	store	 %11774 %11772
%11776:	getelementptr	 bufp XXX XXX
%11777:	load	 %11776
%11778:	icmp	 %11777 XXX
%11779:	br	 %11778 if.end2177 if.then2175

BASIC BLOCK if.then2175
%11780:	getelementptr	 bufp XXX XXX
%11781:	store	 XXX %11780
%11782:	br	 if.end2177

BASIC BLOCK if.end2177
%11783:	getelementptr	 bufp XXX XXX
%11784:	load	 %11783
%11785:	getelementptr	 bufp XXX XXX
%11786:	load	 %11785
%11787:	call	 %11784 %11786 realloc
%11788:	getelementptr	 bufp XXX XXX
%11789:	store	 %11787 %11788
%11790:	getelementptr	 bufp XXX XXX
%11791:	load	 %11790
%11792:	icmp	 %11791 XXX
%11793:	br	 %11792 if.end2186 if.then2185

BASIC BLOCK if.then2185
%11794:	br	 return

BASIC BLOCK if.end2186
%11795:	getelementptr	 bufp XXX XXX
%11796:	load	 %11795
%11797:	icmp	 %11766 %11796
%11798:	br	 %11797 if.end2225 if.then2190

BASIC BLOCK if.then2190
%11799:	ptrtoint	 %11753
%11800:	ptrtoint	 %11766
%11801:	sub	 %11799 %11800
%11802:	getelementptr	 bufp XXX XXX
%11803:	load	 %11802
%11804:	getelementptr	 %11803 %11801
%11805:	ptrtoint	 %11750
%11806:	ptrtoint	 %11766
%11807:	sub	 %11805 %11806
%11808:	getelementptr	 bufp XXX XXX
%11809:	load	 %11808
%11810:	getelementptr	 %11809 %11807
%11811:	icmp	 %11749 XXX
%11812:	br	 %11811 if.end2208 if.then2202

BASIC BLOCK if.then2202
%11813:	ptrtoint	 %11749
%11814:	ptrtoint	 %11766
%11815:	sub	 %11813 %11814
%11816:	getelementptr	 bufp XXX XXX
%11817:	load	 %11816
%11818:	getelementptr	 %11817 %11815
%11819:	br	 if.end2208

BASIC BLOCK if.end2208
%11820:	phi	 %11818 %11749
%11821:	icmp	 %11751 XXX
%11822:	br	 %11821 if.end2216 if.then2210

BASIC BLOCK if.then2210
%11823:	ptrtoint	 %11751
%11824:	ptrtoint	 %11766
%11825:	sub	 %11823 %11824
%11826:	getelementptr	 bufp XXX XXX
%11827:	load	 %11826
%11828:	getelementptr	 %11827 %11825
%11829:	br	 if.end2216

BASIC BLOCK if.end2216
%11830:	phi	 %11828 %11751
%11831:	icmp	 %11752 XXX
%11832:	br	 %11831 if.end2224 if.then2218

BASIC BLOCK if.then2218
%11833:	ptrtoint	 %11752
%11834:	ptrtoint	 %11766
%11835:	sub	 %11833 %11834
%11836:	getelementptr	 bufp XXX XXX
%11837:	load	 %11836
%11838:	getelementptr	 %11837 %11835
%11839:	br	 if.end2224

BASIC BLOCK if.end2224
%11840:	phi	 %11838 %11752
%11841:	br	 if.end2225

BASIC BLOCK if.end2225
%11842:	phi	 %11820 %11749
%11843:	phi	 %11810 %11750
%11844:	phi	 %11830 %11751
%11845:	phi	 %11840 %11752
%11846:	phi	 %11804 %11753
%11847:	br	 do.end2226

BASIC BLOCK do.end2226
%11848:	br	 while.cond2152

BASIC BLOCK while.end2227
%11849:	getelementptr	 %11753 XXX
%11850:	ptrtoint	 %11849
%11851:	ptrtoint	 %11751
%11852:	sub	 %11850 %11851
%11853:	sub	 %11852 XXX
%11854:	trunc	 %11853
%11855:	call	 XXX %11751 %11854 %11753 insert_op1
%11856:	getelementptr	 %11753 XXX
%11857:	br	 if.end2348

BASIC BLOCK if.else2235
%11858:	icmp	 %11670 XXX
%11859:	zext	 %11858
%11860:	mul	 %11859 XXX
%11861:	add	 XXX %11860
%11862:	br	 while.cond2240

BASIC BLOCK while.cond2240
%11863:	phi	 %8926 %11957
%11864:	phi	 %8927 %11958
%11865:	phi	 %11745 %11959
%11866:	phi	 %8929 %11960
%11867:	phi	 %8930 %11961
%11868:	getelementptr	 bufp XXX XXX
%11869:	load	 %11868
%11870:	ptrtoint	 %11867
%11871:	ptrtoint	 %11869
%11872:	sub	 %11870 %11871
%11873:	zext	 %11861
%11874:	add	 %11872 %11873
%11875:	getelementptr	 bufp XXX XXX
%11876:	load	 %11875
%11877:	icmp	 %11874 %11876
%11878:	br	 %11877 while.end2316 while.body2250

BASIC BLOCK while.body2250
%11879:	br	 do.body2251

BASIC BLOCK do.body2251
%11880:	getelementptr	 bufp XXX XXX
%11881:	load	 %11880
%11882:	getelementptr	 bufp XXX XXX
%11883:	load	 %11882
%11884:	icmp	 %11883 XXX
%11885:	br	 %11884 if.end2258 if.then2257

BASIC BLOCK if.then2257
%11886:	br	 return

BASIC BLOCK if.end2258
%11887:	getelementptr	 bufp XXX XXX
%11888:	load	 %11887
%11889:	shl	 %11888 XXX
%11890:	store	 %11889 %11887
%11891:	getelementptr	 bufp XXX XXX
%11892:	load	 %11891
%11893:	icmp	 %11892 XXX
%11894:	br	 %11893 if.end2266 if.then2264

BASIC BLOCK if.then2264
%11895:	getelementptr	 bufp XXX XXX
%11896:	store	 XXX %11895
%11897:	br	 if.end2266

BASIC BLOCK if.end2266
%11898:	getelementptr	 bufp XXX XXX
%11899:	load	 %11898
%11900:	getelementptr	 bufp XXX XXX
%11901:	load	 %11900
%11902:	call	 %11899 %11901 realloc
%11903:	getelementptr	 bufp XXX XXX
%11904:	store	 %11902 %11903
%11905:	getelementptr	 bufp XXX XXX
%11906:	load	 %11905
%11907:	icmp	 %11906 XXX
%11908:	br	 %11907 if.end2275 if.then2274

BASIC BLOCK if.then2274
%11909:	br	 return

BASIC BLOCK if.end2275
%11910:	getelementptr	 bufp XXX XXX
%11911:	load	 %11910
%11912:	icmp	 %11881 %11911
%11913:	br	 %11912 if.end2314 if.then2279

BASIC BLOCK if.then2279
%11914:	ptrtoint	 %11867
%11915:	ptrtoint	 %11881
%11916:	sub	 %11914 %11915
%11917:	getelementptr	 bufp XXX XXX
%11918:	load	 %11917
%11919:	getelementptr	 %11918 %11916
%11920:	ptrtoint	 %11864
%11921:	ptrtoint	 %11881
%11922:	sub	 %11920 %11921
%11923:	getelementptr	 bufp XXX XXX
%11924:	load	 %11923
%11925:	getelementptr	 %11924 %11922
%11926:	icmp	 %11863 XXX
%11927:	br	 %11926 if.end2297 if.then2291

BASIC BLOCK if.then2291
%11928:	ptrtoint	 %11863
%11929:	ptrtoint	 %11881
%11930:	sub	 %11928 %11929
%11931:	getelementptr	 bufp XXX XXX
%11932:	load	 %11931
%11933:	getelementptr	 %11932 %11930
%11934:	br	 if.end2297

BASIC BLOCK if.end2297
%11935:	phi	 %11933 %11863
%11936:	icmp	 %11865 XXX
%11937:	br	 %11936 if.end2305 if.then2299

BASIC BLOCK if.then2299
%11938:	ptrtoint	 %11865
%11939:	ptrtoint	 %11881
%11940:	sub	 %11938 %11939
%11941:	getelementptr	 bufp XXX XXX
%11942:	load	 %11941
%11943:	getelementptr	 %11942 %11940
%11944:	br	 if.end2305

BASIC BLOCK if.end2305
%11945:	phi	 %11943 %11865
%11946:	icmp	 %11866 XXX
%11947:	br	 %11946 if.end2313 if.then2307

BASIC BLOCK if.then2307
%11948:	ptrtoint	 %11866
%11949:	ptrtoint	 %11881
%11950:	sub	 %11948 %11949
%11951:	getelementptr	 bufp XXX XXX
%11952:	load	 %11951
%11953:	getelementptr	 %11952 %11950
%11954:	br	 if.end2313

BASIC BLOCK if.end2313
%11955:	phi	 %11953 %11866
%11956:	br	 if.end2314

BASIC BLOCK if.end2314
%11957:	phi	 %11935 %11863
%11958:	phi	 %11925 %11864
%11959:	phi	 %11945 %11865
%11960:	phi	 %11955 %11866
%11961:	phi	 %11919 %11867
%11962:	br	 do.end2315

BASIC BLOCK do.end2315
%11963:	br	 while.cond2240

BASIC BLOCK while.end2316
%11964:	getelementptr	 %11867 XXX
%11965:	icmp	 %11670 XXX
%11966:	zext	 %11965
%11967:	mul	 %11966 XXX
%11968:	sext	 %11967
%11969:	getelementptr	 %11964 %11968
%11970:	ptrtoint	 %11969
%11971:	ptrtoint	 %11865
%11972:	sub	 %11970 %11971
%11973:	sub	 %11972 XXX
%11974:	trunc	 %11973
%11975:	call	 XXX %11865 %11974 %11592 %11867 insert_op2
%11976:	getelementptr	 %11867 XXX
%11977:	call	 XXX %11865 XXX %11592 %11976 insert_op2
%11978:	getelementptr	 %11976 XXX
%11979:	icmp	 %11670 XXX
%11980:	br	 %11979 if.end2347 if.then2332

BASIC BLOCK if.then2332
%11981:	getelementptr	 %11865 XXX
%11982:	ptrtoint	 %11981
%11983:	ptrtoint	 %11978
%11984:	sub	 %11982 %11983
%11985:	sub	 %11984 XXX
%11986:	trunc	 %11985
%11987:	sub	 %11670 XXX
%11988:	call	 XXX %11978 %11986 %11987 store_op2
%11989:	getelementptr	 %11978 XXX
%11990:	ptrtoint	 %11989
%11991:	ptrtoint	 %11865
%11992:	sub	 %11990 %11991
%11993:	trunc	 %11992
%11994:	sub	 %11670 XXX
%11995:	call	 XXX %11865 %11993 %11994 %11989 insert_op2
%11996:	getelementptr	 %11989 XXX
%11997:	br	 if.end2347

BASIC BLOCK if.end2347
%11998:	phi	 %11996 %11978
%11999:	br	 if.end2348

BASIC BLOCK if.end2348
%12000:	phi	 %11749 %11863
%12001:	phi	 %11750 %11864
%12002:	phi	 %11751 %11865
%12003:	phi	 %11856 %11998
%12004:	br	 sw.epilog

BASIC BLOCK unfetch_interval
%12005:	store	 %11513 %8854
%12006:	br	 do.body2349

BASIC BLOCK do.body2349
%12007:	load	 %8854
%12008:	icmp	 %12007 %8857
%12009:	br	 %12008 if.end2353 if.then2352

BASIC BLOCK if.then2352
%12010:	br	 return

BASIC BLOCK if.end2353
%12011:	load	 %8854
%12012:	getelementptr	 %12011 XXX
%12013:	store	 %12012 %8854
%12014:	load	 %12011
%12015:	icmp	 %8859 XXX
%12016:	br	 %12015 if.end2359 if.then2356

BASIC BLOCK if.then2356
%12017:	zext	 %12014
%12018:	getelementptr	 %8859 %12017
%12019:	load	 %12018
%12020:	br	 if.end2359

BASIC BLOCK if.end2359
%12021:	phi	 %12019 %12014
%12022:	br	 do.end2360

BASIC BLOCK do.end2360
%12023:	and	 syntax XXX
%12024:	icmp	 %12023 XXX
%12025:	br	 %12024 if.then2363 if.end2373

BASIC BLOCK if.then2363
%12026:	load	 %8854
%12027:	icmp	 %12026 pattern
%12028:	br	 %12027 if.end2372 land.lhs.true2366

BASIC BLOCK land.lhs.true2366
%12029:	load	 %8854
%12030:	getelementptr	 %12029 XXX
%12031:	load	 %12030
%12032:	sext	 %12031
%12033:	icmp	 %12032 XXX
%12034:	br	 %12033 if.end2372 if.then2371

BASIC BLOCK if.then2371
%12035:	br	 normal_backslash

BASIC BLOCK if.end2372
%12036:	br	 if.end2373

BASIC BLOCK if.end2373
%12037:	br	 normal_char

BASIC BLOCK sw.bb2374
%12038:	load	 re_syntax_options
%12039:	and	 %12038 XXX
%12040:	icmp	 %12039 XXX
%12041:	br	 %12040 if.end2378 if.then2377

BASIC BLOCK if.then2377
%12042:	br	 normal_char

BASIC BLOCK if.end2378
%12043:	br	 do.body2379

BASIC BLOCK do.body2379
%12044:	br	 while.cond2380

BASIC BLOCK while.cond2380
%12045:	phi	 %8926 %12138
%12046:	phi	 %8927 %12139
%12047:	phi	 %8930 %12140
%12048:	phi	 %8929 %12141
%12049:	phi	 %8930 %12142
%12050:	getelementptr	 bufp XXX XXX
%12051:	load	 %12050
%12052:	ptrtoint	 %12049
%12053:	ptrtoint	 %12051
%12054:	sub	 %12052 %12053
%12055:	add	 %12054 XXX
%12056:	getelementptr	 bufp XXX XXX
%12057:	load	 %12056
%12058:	icmp	 %12055 %12057
%12059:	br	 %12058 while.end2455 while.body2389

BASIC BLOCK while.body2389
%12060:	br	 do.body2390

BASIC BLOCK do.body2390
%12061:	getelementptr	 bufp XXX XXX
%12062:	load	 %12061
%12063:	getelementptr	 bufp XXX XXX
%12064:	load	 %12063
%12065:	icmp	 %12064 XXX
%12066:	br	 %12065 if.end2397 if.then2396

BASIC BLOCK if.then2396
%12067:	br	 return

BASIC BLOCK if.end2397
%12068:	getelementptr	 bufp XXX XXX
%12069:	load	 %12068
%12070:	shl	 %12069 XXX
%12071:	store	 %12070 %12068
%12072:	getelementptr	 bufp XXX XXX
%12073:	load	 %12072
%12074:	icmp	 %12073 XXX
%12075:	br	 %12074 if.end2405 if.then2403

BASIC BLOCK if.then2403
%12076:	getelementptr	 bufp XXX XXX
%12077:	store	 XXX %12076
%12078:	br	 if.end2405

BASIC BLOCK if.end2405
%12079:	getelementptr	 bufp XXX XXX
%12080:	load	 %12079
%12081:	getelementptr	 bufp XXX XXX
%12082:	load	 %12081
%12083:	call	 %12080 %12082 realloc
%12084:	getelementptr	 bufp XXX XXX
%12085:	store	 %12083 %12084
%12086:	getelementptr	 bufp XXX XXX
%12087:	load	 %12086
%12088:	icmp	 %12087 XXX
%12089:	br	 %12088 if.end2414 if.then2413

BASIC BLOCK if.then2413
%12090:	br	 return

BASIC BLOCK if.end2414
%12091:	getelementptr	 bufp XXX XXX
%12092:	load	 %12091
%12093:	icmp	 %12062 %12092
%12094:	br	 %12093 if.end2453 if.then2418

BASIC BLOCK if.then2418
%12095:	ptrtoint	 %12049
%12096:	ptrtoint	 %12062
%12097:	sub	 %12095 %12096
%12098:	getelementptr	 bufp XXX XXX
%12099:	load	 %12098
%12100:	getelementptr	 %12099 %12097
%12101:	ptrtoint	 %12046
%12102:	ptrtoint	 %12062
%12103:	sub	 %12101 %12102
%12104:	getelementptr	 bufp XXX XXX
%12105:	load	 %12104
%12106:	getelementptr	 %12105 %12103
%12107:	icmp	 %12045 XXX
%12108:	br	 %12107 if.end2436 if.then2430

BASIC BLOCK if.then2430
%12109:	ptrtoint	 %12045
%12110:	ptrtoint	 %12062
%12111:	sub	 %12109 %12110
%12112:	getelementptr	 bufp XXX XXX
%12113:	load	 %12112
%12114:	getelementptr	 %12113 %12111
%12115:	br	 if.end2436

BASIC BLOCK if.end2436
%12116:	phi	 %12114 %12045
%12117:	icmp	 %12047 XXX
%12118:	br	 %12117 if.end2444 if.then2438

BASIC BLOCK if.then2438
%12119:	ptrtoint	 %12047
%12120:	ptrtoint	 %12062
%12121:	sub	 %12119 %12120
%12122:	getelementptr	 bufp XXX XXX
%12123:	load	 %12122
%12124:	getelementptr	 %12123 %12121
%12125:	br	 if.end2444

BASIC BLOCK if.end2444
%12126:	phi	 %12124 %12047
%12127:	icmp	 %12048 XXX
%12128:	br	 %12127 if.end2452 if.then2446

BASIC BLOCK if.then2446
%12129:	ptrtoint	 %12048
%12130:	ptrtoint	 %12062
%12131:	sub	 %12129 %12130
%12132:	getelementptr	 bufp XXX XXX
%12133:	load	 %12132
%12134:	getelementptr	 %12133 %12131
%12135:	br	 if.end2452

BASIC BLOCK if.end2452
%12136:	phi	 %12134 %12048
%12137:	br	 if.end2453

BASIC BLOCK if.end2453
%12138:	phi	 %12116 %12045
%12139:	phi	 %12106 %12046
%12140:	phi	 %12126 %12047
%12141:	phi	 %12136 %12048
%12142:	phi	 %12100 %12049
%12143:	br	 do.end2454

BASIC BLOCK do.end2454
%12144:	br	 while.cond2380

BASIC BLOCK while.end2455
%12145:	getelementptr	 %12049 XXX
%12146:	store	 XXX %12049
%12147:	br	 do.end2457

BASIC BLOCK do.end2457
%12148:	br	 sw.epilog

BASIC BLOCK sw.bb2458
%12149:	load	 re_syntax_options
%12150:	and	 %12149 XXX
%12151:	icmp	 %12150 XXX
%12152:	br	 %12151 if.end2462 if.then2461

BASIC BLOCK if.then2461
%12153:	br	 normal_char

BASIC BLOCK if.end2462
%12154:	br	 do.body2463

BASIC BLOCK do.body2463
%12155:	br	 while.cond2464

BASIC BLOCK while.cond2464
%12156:	phi	 %8926 %12249
%12157:	phi	 %8927 %12250
%12158:	phi	 %8930 %12251
%12159:	phi	 %8929 %12252
%12160:	phi	 %8930 %12253
%12161:	getelementptr	 bufp XXX XXX
%12162:	load	 %12161
%12163:	ptrtoint	 %12160
%12164:	ptrtoint	 %12162
%12165:	sub	 %12163 %12164
%12166:	add	 %12165 XXX
%12167:	getelementptr	 bufp XXX XXX
%12168:	load	 %12167
%12169:	icmp	 %12166 %12168
%12170:	br	 %12169 while.end2539 while.body2473

BASIC BLOCK while.body2473
%12171:	br	 do.body2474

BASIC BLOCK do.body2474
%12172:	getelementptr	 bufp XXX XXX
%12173:	load	 %12172
%12174:	getelementptr	 bufp XXX XXX
%12175:	load	 %12174
%12176:	icmp	 %12175 XXX
%12177:	br	 %12176 if.end2481 if.then2480

BASIC BLOCK if.then2480
%12178:	br	 return

BASIC BLOCK if.end2481
%12179:	getelementptr	 bufp XXX XXX
%12180:	load	 %12179
%12181:	shl	 %12180 XXX
%12182:	store	 %12181 %12179
%12183:	getelementptr	 bufp XXX XXX
%12184:	load	 %12183
%12185:	icmp	 %12184 XXX
%12186:	br	 %12185 if.end2489 if.then2487

BASIC BLOCK if.then2487
%12187:	getelementptr	 bufp XXX XXX
%12188:	store	 XXX %12187
%12189:	br	 if.end2489

BASIC BLOCK if.end2489
%12190:	getelementptr	 bufp XXX XXX
%12191:	load	 %12190
%12192:	getelementptr	 bufp XXX XXX
%12193:	load	 %12192
%12194:	call	 %12191 %12193 realloc
%12195:	getelementptr	 bufp XXX XXX
%12196:	store	 %12194 %12195
%12197:	getelementptr	 bufp XXX XXX
%12198:	load	 %12197
%12199:	icmp	 %12198 XXX
%12200:	br	 %12199 if.end2498 if.then2497

BASIC BLOCK if.then2497
%12201:	br	 return

BASIC BLOCK if.end2498
%12202:	getelementptr	 bufp XXX XXX
%12203:	load	 %12202
%12204:	icmp	 %12173 %12203
%12205:	br	 %12204 if.end2537 if.then2502

BASIC BLOCK if.then2502
%12206:	ptrtoint	 %12160
%12207:	ptrtoint	 %12173
%12208:	sub	 %12206 %12207
%12209:	getelementptr	 bufp XXX XXX
%12210:	load	 %12209
%12211:	getelementptr	 %12210 %12208
%12212:	ptrtoint	 %12157
%12213:	ptrtoint	 %12173
%12214:	sub	 %12212 %12213
%12215:	getelementptr	 bufp XXX XXX
%12216:	load	 %12215
%12217:	getelementptr	 %12216 %12214
%12218:	icmp	 %12156 XXX
%12219:	br	 %12218 if.end2520 if.then2514

BASIC BLOCK if.then2514
%12220:	ptrtoint	 %12156
%12221:	ptrtoint	 %12173
%12222:	sub	 %12220 %12221
%12223:	getelementptr	 bufp XXX XXX
%12224:	load	 %12223
%12225:	getelementptr	 %12224 %12222
%12226:	br	 if.end2520

BASIC BLOCK if.end2520
%12227:	phi	 %12225 %12156
%12228:	icmp	 %12158 XXX
%12229:	br	 %12228 if.end2528 if.then2522

BASIC BLOCK if.then2522
%12230:	ptrtoint	 %12158
%12231:	ptrtoint	 %12173
%12232:	sub	 %12230 %12231
%12233:	getelementptr	 bufp XXX XXX
%12234:	load	 %12233
%12235:	getelementptr	 %12234 %12232
%12236:	br	 if.end2528

BASIC BLOCK if.end2528
%12237:	phi	 %12235 %12158
%12238:	icmp	 %12159 XXX
%12239:	br	 %12238 if.end2536 if.then2530

BASIC BLOCK if.then2530
%12240:	ptrtoint	 %12159
%12241:	ptrtoint	 %12173
%12242:	sub	 %12240 %12241
%12243:	getelementptr	 bufp XXX XXX
%12244:	load	 %12243
%12245:	getelementptr	 %12244 %12242
%12246:	br	 if.end2536

BASIC BLOCK if.end2536
%12247:	phi	 %12245 %12159
%12248:	br	 if.end2537

BASIC BLOCK if.end2537
%12249:	phi	 %12227 %12156
%12250:	phi	 %12217 %12157
%12251:	phi	 %12237 %12158
%12252:	phi	 %12247 %12159
%12253:	phi	 %12211 %12160
%12254:	br	 do.end2538

BASIC BLOCK do.end2538
%12255:	br	 while.cond2464

BASIC BLOCK while.end2539
%12256:	getelementptr	 %12160 XXX
%12257:	store	 XXX %12160
%12258:	br	 do.end2541

BASIC BLOCK do.end2541
%12259:	br	 sw.epilog

BASIC BLOCK sw.bb2542
%12260:	load	 re_syntax_options
%12261:	and	 %12260 XXX
%12262:	icmp	 %12261 XXX
%12263:	br	 %12262 if.end2546 if.then2545

BASIC BLOCK if.then2545
%12264:	br	 normal_char

BASIC BLOCK if.end2546
%12265:	br	 do.body2547

BASIC BLOCK do.body2547
%12266:	br	 while.cond2548

BASIC BLOCK while.cond2548
%12267:	phi	 %8926 %12360
%12268:	phi	 %8927 %12361
%12269:	phi	 %8928 %12362
%12270:	phi	 %8929 %12363
%12271:	phi	 %8930 %12364
%12272:	getelementptr	 bufp XXX XXX
%12273:	load	 %12272
%12274:	ptrtoint	 %12271
%12275:	ptrtoint	 %12273
%12276:	sub	 %12274 %12275
%12277:	add	 %12276 XXX
%12278:	getelementptr	 bufp XXX XXX
%12279:	load	 %12278
%12280:	icmp	 %12277 %12279
%12281:	br	 %12280 while.end2623 while.body2557

BASIC BLOCK while.body2557
%12282:	br	 do.body2558

BASIC BLOCK do.body2558
%12283:	getelementptr	 bufp XXX XXX
%12284:	load	 %12283
%12285:	getelementptr	 bufp XXX XXX
%12286:	load	 %12285
%12287:	icmp	 %12286 XXX
%12288:	br	 %12287 if.end2565 if.then2564

BASIC BLOCK if.then2564
%12289:	br	 return

BASIC BLOCK if.end2565
%12290:	getelementptr	 bufp XXX XXX
%12291:	load	 %12290
%12292:	shl	 %12291 XXX
%12293:	store	 %12292 %12290
%12294:	getelementptr	 bufp XXX XXX
%12295:	load	 %12294
%12296:	icmp	 %12295 XXX
%12297:	br	 %12296 if.end2573 if.then2571

BASIC BLOCK if.then2571
%12298:	getelementptr	 bufp XXX XXX
%12299:	store	 XXX %12298
%12300:	br	 if.end2573

BASIC BLOCK if.end2573
%12301:	getelementptr	 bufp XXX XXX
%12302:	load	 %12301
%12303:	getelementptr	 bufp XXX XXX
%12304:	load	 %12303
%12305:	call	 %12302 %12304 realloc
%12306:	getelementptr	 bufp XXX XXX
%12307:	store	 %12305 %12306
%12308:	getelementptr	 bufp XXX XXX
%12309:	load	 %12308
%12310:	icmp	 %12309 XXX
%12311:	br	 %12310 if.end2582 if.then2581

BASIC BLOCK if.then2581
%12312:	br	 return

BASIC BLOCK if.end2582
%12313:	getelementptr	 bufp XXX XXX
%12314:	load	 %12313
%12315:	icmp	 %12284 %12314
%12316:	br	 %12315 if.end2621 if.then2586

BASIC BLOCK if.then2586
%12317:	ptrtoint	 %12271
%12318:	ptrtoint	 %12284
%12319:	sub	 %12317 %12318
%12320:	getelementptr	 bufp XXX XXX
%12321:	load	 %12320
%12322:	getelementptr	 %12321 %12319
%12323:	ptrtoint	 %12268
%12324:	ptrtoint	 %12284
%12325:	sub	 %12323 %12324
%12326:	getelementptr	 bufp XXX XXX
%12327:	load	 %12326
%12328:	getelementptr	 %12327 %12325
%12329:	icmp	 %12267 XXX
%12330:	br	 %12329 if.end2604 if.then2598

BASIC BLOCK if.then2598
%12331:	ptrtoint	 %12267
%12332:	ptrtoint	 %12284
%12333:	sub	 %12331 %12332
%12334:	getelementptr	 bufp XXX XXX
%12335:	load	 %12334
%12336:	getelementptr	 %12335 %12333
%12337:	br	 if.end2604

BASIC BLOCK if.end2604
%12338:	phi	 %12336 %12267
%12339:	icmp	 %12269 XXX
%12340:	br	 %12339 if.end2612 if.then2606

BASIC BLOCK if.then2606
%12341:	ptrtoint	 %12269
%12342:	ptrtoint	 %12284
%12343:	sub	 %12341 %12342
%12344:	getelementptr	 bufp XXX XXX
%12345:	load	 %12344
%12346:	getelementptr	 %12345 %12343
%12347:	br	 if.end2612

BASIC BLOCK if.end2612
%12348:	phi	 %12346 %12269
%12349:	icmp	 %12270 XXX
%12350:	br	 %12349 if.end2620 if.then2614

BASIC BLOCK if.then2614
%12351:	ptrtoint	 %12270
%12352:	ptrtoint	 %12284
%12353:	sub	 %12351 %12352
%12354:	getelementptr	 bufp XXX XXX
%12355:	load	 %12354
%12356:	getelementptr	 %12355 %12353
%12357:	br	 if.end2620

BASIC BLOCK if.end2620
%12358:	phi	 %12356 %12270
%12359:	br	 if.end2621

BASIC BLOCK if.end2621
%12360:	phi	 %12338 %12267
%12361:	phi	 %12328 %12268
%12362:	phi	 %12348 %12269
%12363:	phi	 %12358 %12270
%12364:	phi	 %12322 %12271
%12365:	br	 do.end2622

BASIC BLOCK do.end2622
%12366:	br	 while.cond2548

BASIC BLOCK while.end2623
%12367:	getelementptr	 %12271 XXX
%12368:	store	 XXX %12271
%12369:	br	 do.end2625

BASIC BLOCK do.end2625
%12370:	br	 sw.epilog

BASIC BLOCK sw.bb2626
%12371:	load	 re_syntax_options
%12372:	and	 %12371 XXX
%12373:	icmp	 %12372 XXX
%12374:	br	 %12373 if.end2630 if.then2629

BASIC BLOCK if.then2629
%12375:	br	 normal_char

BASIC BLOCK if.end2630
%12376:	br	 do.body2631

BASIC BLOCK do.body2631
%12377:	br	 while.cond2632

BASIC BLOCK while.cond2632
%12378:	phi	 %8926 %12471
%12379:	phi	 %8927 %12472
%12380:	phi	 %8928 %12473
%12381:	phi	 %8929 %12474
%12382:	phi	 %8930 %12475
%12383:	getelementptr	 bufp XXX XXX
%12384:	load	 %12383
%12385:	ptrtoint	 %12382
%12386:	ptrtoint	 %12384
%12387:	sub	 %12385 %12386
%12388:	add	 %12387 XXX
%12389:	getelementptr	 bufp XXX XXX
%12390:	load	 %12389
%12391:	icmp	 %12388 %12390
%12392:	br	 %12391 while.end2707 while.body2641

BASIC BLOCK while.body2641
%12393:	br	 do.body2642

BASIC BLOCK do.body2642
%12394:	getelementptr	 bufp XXX XXX
%12395:	load	 %12394
%12396:	getelementptr	 bufp XXX XXX
%12397:	load	 %12396
%12398:	icmp	 %12397 XXX
%12399:	br	 %12398 if.end2649 if.then2648

BASIC BLOCK if.then2648
%12400:	br	 return

BASIC BLOCK if.end2649
%12401:	getelementptr	 bufp XXX XXX
%12402:	load	 %12401
%12403:	shl	 %12402 XXX
%12404:	store	 %12403 %12401
%12405:	getelementptr	 bufp XXX XXX
%12406:	load	 %12405
%12407:	icmp	 %12406 XXX
%12408:	br	 %12407 if.end2657 if.then2655

BASIC BLOCK if.then2655
%12409:	getelementptr	 bufp XXX XXX
%12410:	store	 XXX %12409
%12411:	br	 if.end2657

BASIC BLOCK if.end2657
%12412:	getelementptr	 bufp XXX XXX
%12413:	load	 %12412
%12414:	getelementptr	 bufp XXX XXX
%12415:	load	 %12414
%12416:	call	 %12413 %12415 realloc
%12417:	getelementptr	 bufp XXX XXX
%12418:	store	 %12416 %12417
%12419:	getelementptr	 bufp XXX XXX
%12420:	load	 %12419
%12421:	icmp	 %12420 XXX
%12422:	br	 %12421 if.end2666 if.then2665

BASIC BLOCK if.then2665
%12423:	br	 return

BASIC BLOCK if.end2666
%12424:	getelementptr	 bufp XXX XXX
%12425:	load	 %12424
%12426:	icmp	 %12395 %12425
%12427:	br	 %12426 if.end2705 if.then2670

BASIC BLOCK if.then2670
%12428:	ptrtoint	 %12382
%12429:	ptrtoint	 %12395
%12430:	sub	 %12428 %12429
%12431:	getelementptr	 bufp XXX XXX
%12432:	load	 %12431
%12433:	getelementptr	 %12432 %12430
%12434:	ptrtoint	 %12379
%12435:	ptrtoint	 %12395
%12436:	sub	 %12434 %12435
%12437:	getelementptr	 bufp XXX XXX
%12438:	load	 %12437
%12439:	getelementptr	 %12438 %12436
%12440:	icmp	 %12378 XXX
%12441:	br	 %12440 if.end2688 if.then2682

BASIC BLOCK if.then2682
%12442:	ptrtoint	 %12378
%12443:	ptrtoint	 %12395
%12444:	sub	 %12442 %12443
%12445:	getelementptr	 bufp XXX XXX
%12446:	load	 %12445
%12447:	getelementptr	 %12446 %12444
%12448:	br	 if.end2688

BASIC BLOCK if.end2688
%12449:	phi	 %12447 %12378
%12450:	icmp	 %12380 XXX
%12451:	br	 %12450 if.end2696 if.then2690

BASIC BLOCK if.then2690
%12452:	ptrtoint	 %12380
%12453:	ptrtoint	 %12395
%12454:	sub	 %12452 %12453
%12455:	getelementptr	 bufp XXX XXX
%12456:	load	 %12455
%12457:	getelementptr	 %12456 %12454
%12458:	br	 if.end2696

BASIC BLOCK if.end2696
%12459:	phi	 %12457 %12380
%12460:	icmp	 %12381 XXX
%12461:	br	 %12460 if.end2704 if.then2698

BASIC BLOCK if.then2698
%12462:	ptrtoint	 %12381
%12463:	ptrtoint	 %12395
%12464:	sub	 %12462 %12463
%12465:	getelementptr	 bufp XXX XXX
%12466:	load	 %12465
%12467:	getelementptr	 %12466 %12464
%12468:	br	 if.end2704

BASIC BLOCK if.end2704
%12469:	phi	 %12467 %12381
%12470:	br	 if.end2705

BASIC BLOCK if.end2705
%12471:	phi	 %12449 %12378
%12472:	phi	 %12439 %12379
%12473:	phi	 %12459 %12380
%12474:	phi	 %12469 %12381
%12475:	phi	 %12433 %12382
%12476:	br	 do.end2706

BASIC BLOCK do.end2706
%12477:	br	 while.cond2632

BASIC BLOCK while.end2707
%12478:	getelementptr	 %12382 XXX
%12479:	store	 XXX %12382
%12480:	br	 do.end2709

BASIC BLOCK do.end2709
%12481:	br	 sw.epilog

BASIC BLOCK sw.bb2710
%12482:	load	 re_syntax_options
%12483:	and	 %12482 XXX
%12484:	icmp	 %12483 XXX
%12485:	br	 %12484 if.end2714 if.then2713

BASIC BLOCK if.then2713
%12486:	br	 normal_char

BASIC BLOCK if.end2714
%12487:	br	 do.body2715

BASIC BLOCK do.body2715
%12488:	br	 while.cond2716

BASIC BLOCK while.cond2716
%12489:	phi	 %8926 %12582
%12490:	phi	 %8927 %12583
%12491:	phi	 %8928 %12584
%12492:	phi	 %8929 %12585
%12493:	phi	 %8930 %12586
%12494:	getelementptr	 bufp XXX XXX
%12495:	load	 %12494
%12496:	ptrtoint	 %12493
%12497:	ptrtoint	 %12495
%12498:	sub	 %12496 %12497
%12499:	add	 %12498 XXX
%12500:	getelementptr	 bufp XXX XXX
%12501:	load	 %12500
%12502:	icmp	 %12499 %12501
%12503:	br	 %12502 while.end2791 while.body2725

BASIC BLOCK while.body2725
%12504:	br	 do.body2726

BASIC BLOCK do.body2726
%12505:	getelementptr	 bufp XXX XXX
%12506:	load	 %12505
%12507:	getelementptr	 bufp XXX XXX
%12508:	load	 %12507
%12509:	icmp	 %12508 XXX
%12510:	br	 %12509 if.end2733 if.then2732

BASIC BLOCK if.then2732
%12511:	br	 return

BASIC BLOCK if.end2733
%12512:	getelementptr	 bufp XXX XXX
%12513:	load	 %12512
%12514:	shl	 %12513 XXX
%12515:	store	 %12514 %12512
%12516:	getelementptr	 bufp XXX XXX
%12517:	load	 %12516
%12518:	icmp	 %12517 XXX
%12519:	br	 %12518 if.end2741 if.then2739

BASIC BLOCK if.then2739
%12520:	getelementptr	 bufp XXX XXX
%12521:	store	 XXX %12520
%12522:	br	 if.end2741

BASIC BLOCK if.end2741
%12523:	getelementptr	 bufp XXX XXX
%12524:	load	 %12523
%12525:	getelementptr	 bufp XXX XXX
%12526:	load	 %12525
%12527:	call	 %12524 %12526 realloc
%12528:	getelementptr	 bufp XXX XXX
%12529:	store	 %12527 %12528
%12530:	getelementptr	 bufp XXX XXX
%12531:	load	 %12530
%12532:	icmp	 %12531 XXX
%12533:	br	 %12532 if.end2750 if.then2749

BASIC BLOCK if.then2749
%12534:	br	 return

BASIC BLOCK if.end2750
%12535:	getelementptr	 bufp XXX XXX
%12536:	load	 %12535
%12537:	icmp	 %12506 %12536
%12538:	br	 %12537 if.end2789 if.then2754

BASIC BLOCK if.then2754
%12539:	ptrtoint	 %12493
%12540:	ptrtoint	 %12506
%12541:	sub	 %12539 %12540
%12542:	getelementptr	 bufp XXX XXX
%12543:	load	 %12542
%12544:	getelementptr	 %12543 %12541
%12545:	ptrtoint	 %12490
%12546:	ptrtoint	 %12506
%12547:	sub	 %12545 %12546
%12548:	getelementptr	 bufp XXX XXX
%12549:	load	 %12548
%12550:	getelementptr	 %12549 %12547
%12551:	icmp	 %12489 XXX
%12552:	br	 %12551 if.end2772 if.then2766

BASIC BLOCK if.then2766
%12553:	ptrtoint	 %12489
%12554:	ptrtoint	 %12506
%12555:	sub	 %12553 %12554
%12556:	getelementptr	 bufp XXX XXX
%12557:	load	 %12556
%12558:	getelementptr	 %12557 %12555
%12559:	br	 if.end2772

BASIC BLOCK if.end2772
%12560:	phi	 %12558 %12489
%12561:	icmp	 %12491 XXX
%12562:	br	 %12561 if.end2780 if.then2774

BASIC BLOCK if.then2774
%12563:	ptrtoint	 %12491
%12564:	ptrtoint	 %12506
%12565:	sub	 %12563 %12564
%12566:	getelementptr	 bufp XXX XXX
%12567:	load	 %12566
%12568:	getelementptr	 %12567 %12565
%12569:	br	 if.end2780

BASIC BLOCK if.end2780
%12570:	phi	 %12568 %12491
%12571:	icmp	 %12492 XXX
%12572:	br	 %12571 if.end2788 if.then2782

BASIC BLOCK if.then2782
%12573:	ptrtoint	 %12492
%12574:	ptrtoint	 %12506
%12575:	sub	 %12573 %12574
%12576:	getelementptr	 bufp XXX XXX
%12577:	load	 %12576
%12578:	getelementptr	 %12577 %12575
%12579:	br	 if.end2788

BASIC BLOCK if.end2788
%12580:	phi	 %12578 %12492
%12581:	br	 if.end2789

BASIC BLOCK if.end2789
%12582:	phi	 %12560 %12489
%12583:	phi	 %12550 %12490
%12584:	phi	 %12570 %12491
%12585:	phi	 %12580 %12492
%12586:	phi	 %12544 %12493
%12587:	br	 do.end2790

BASIC BLOCK do.end2790
%12588:	br	 while.cond2716

BASIC BLOCK while.end2791
%12589:	getelementptr	 %12493 XXX
%12590:	store	 XXX %12493
%12591:	br	 do.end2793

BASIC BLOCK do.end2793
%12592:	br	 sw.epilog

BASIC BLOCK sw.bb2794
%12593:	load	 re_syntax_options
%12594:	and	 %12593 XXX
%12595:	icmp	 %12594 XXX
%12596:	br	 %12595 if.end2798 if.then2797

BASIC BLOCK if.then2797
%12597:	br	 normal_char

BASIC BLOCK if.end2798
%12598:	br	 do.body2799

BASIC BLOCK do.body2799
%12599:	br	 while.cond2800

BASIC BLOCK while.cond2800
%12600:	phi	 %8926 %12693
%12601:	phi	 %8927 %12694
%12602:	phi	 %8928 %12695
%12603:	phi	 %8929 %12696
%12604:	phi	 %8930 %12697
%12605:	getelementptr	 bufp XXX XXX
%12606:	load	 %12605
%12607:	ptrtoint	 %12604
%12608:	ptrtoint	 %12606
%12609:	sub	 %12607 %12608
%12610:	add	 %12609 XXX
%12611:	getelementptr	 bufp XXX XXX
%12612:	load	 %12611
%12613:	icmp	 %12610 %12612
%12614:	br	 %12613 while.end2875 while.body2809

BASIC BLOCK while.body2809
%12615:	br	 do.body2810

BASIC BLOCK do.body2810
%12616:	getelementptr	 bufp XXX XXX
%12617:	load	 %12616
%12618:	getelementptr	 bufp XXX XXX
%12619:	load	 %12618
%12620:	icmp	 %12619 XXX
%12621:	br	 %12620 if.end2817 if.then2816

BASIC BLOCK if.then2816
%12622:	br	 return

BASIC BLOCK if.end2817
%12623:	getelementptr	 bufp XXX XXX
%12624:	load	 %12623
%12625:	shl	 %12624 XXX
%12626:	store	 %12625 %12623
%12627:	getelementptr	 bufp XXX XXX
%12628:	load	 %12627
%12629:	icmp	 %12628 XXX
%12630:	br	 %12629 if.end2825 if.then2823

BASIC BLOCK if.then2823
%12631:	getelementptr	 bufp XXX XXX
%12632:	store	 XXX %12631
%12633:	br	 if.end2825

BASIC BLOCK if.end2825
%12634:	getelementptr	 bufp XXX XXX
%12635:	load	 %12634
%12636:	getelementptr	 bufp XXX XXX
%12637:	load	 %12636
%12638:	call	 %12635 %12637 realloc
%12639:	getelementptr	 bufp XXX XXX
%12640:	store	 %12638 %12639
%12641:	getelementptr	 bufp XXX XXX
%12642:	load	 %12641
%12643:	icmp	 %12642 XXX
%12644:	br	 %12643 if.end2834 if.then2833

BASIC BLOCK if.then2833
%12645:	br	 return

BASIC BLOCK if.end2834
%12646:	getelementptr	 bufp XXX XXX
%12647:	load	 %12646
%12648:	icmp	 %12617 %12647
%12649:	br	 %12648 if.end2873 if.then2838

BASIC BLOCK if.then2838
%12650:	ptrtoint	 %12604
%12651:	ptrtoint	 %12617
%12652:	sub	 %12650 %12651
%12653:	getelementptr	 bufp XXX XXX
%12654:	load	 %12653
%12655:	getelementptr	 %12654 %12652
%12656:	ptrtoint	 %12601
%12657:	ptrtoint	 %12617
%12658:	sub	 %12656 %12657
%12659:	getelementptr	 bufp XXX XXX
%12660:	load	 %12659
%12661:	getelementptr	 %12660 %12658
%12662:	icmp	 %12600 XXX
%12663:	br	 %12662 if.end2856 if.then2850

BASIC BLOCK if.then2850
%12664:	ptrtoint	 %12600
%12665:	ptrtoint	 %12617
%12666:	sub	 %12664 %12665
%12667:	getelementptr	 bufp XXX XXX
%12668:	load	 %12667
%12669:	getelementptr	 %12668 %12666
%12670:	br	 if.end2856

BASIC BLOCK if.end2856
%12671:	phi	 %12669 %12600
%12672:	icmp	 %12602 XXX
%12673:	br	 %12672 if.end2864 if.then2858

BASIC BLOCK if.then2858
%12674:	ptrtoint	 %12602
%12675:	ptrtoint	 %12617
%12676:	sub	 %12674 %12675
%12677:	getelementptr	 bufp XXX XXX
%12678:	load	 %12677
%12679:	getelementptr	 %12678 %12676
%12680:	br	 if.end2864

BASIC BLOCK if.end2864
%12681:	phi	 %12679 %12602
%12682:	icmp	 %12603 XXX
%12683:	br	 %12682 if.end2872 if.then2866

BASIC BLOCK if.then2866
%12684:	ptrtoint	 %12603
%12685:	ptrtoint	 %12617
%12686:	sub	 %12684 %12685
%12687:	getelementptr	 bufp XXX XXX
%12688:	load	 %12687
%12689:	getelementptr	 %12688 %12686
%12690:	br	 if.end2872

BASIC BLOCK if.end2872
%12691:	phi	 %12689 %12603
%12692:	br	 if.end2873

BASIC BLOCK if.end2873
%12693:	phi	 %12671 %12600
%12694:	phi	 %12661 %12601
%12695:	phi	 %12681 %12602
%12696:	phi	 %12691 %12603
%12697:	phi	 %12655 %12604
%12698:	br	 do.end2874

BASIC BLOCK do.end2874
%12699:	br	 while.cond2800

BASIC BLOCK while.end2875
%12700:	getelementptr	 %12604 XXX
%12701:	store	 XXX %12604
%12702:	br	 do.end2877

BASIC BLOCK do.end2877
%12703:	br	 sw.epilog

BASIC BLOCK sw.bb2878
%12704:	load	 re_syntax_options
%12705:	and	 %12704 XXX
%12706:	icmp	 %12705 XXX
%12707:	br	 %12706 if.end2882 if.then2881

BASIC BLOCK if.then2881
%12708:	br	 normal_char

BASIC BLOCK if.end2882
%12709:	br	 do.body2883

BASIC BLOCK do.body2883
%12710:	br	 while.cond2884

BASIC BLOCK while.cond2884
%12711:	phi	 %8926 %12804
%12712:	phi	 %8927 %12805
%12713:	phi	 %8928 %12806
%12714:	phi	 %8929 %12807
%12715:	phi	 %8930 %12808
%12716:	getelementptr	 bufp XXX XXX
%12717:	load	 %12716
%12718:	ptrtoint	 %12715
%12719:	ptrtoint	 %12717
%12720:	sub	 %12718 %12719
%12721:	add	 %12720 XXX
%12722:	getelementptr	 bufp XXX XXX
%12723:	load	 %12722
%12724:	icmp	 %12721 %12723
%12725:	br	 %12724 while.end2959 while.body2893

BASIC BLOCK while.body2893
%12726:	br	 do.body2894

BASIC BLOCK do.body2894
%12727:	getelementptr	 bufp XXX XXX
%12728:	load	 %12727
%12729:	getelementptr	 bufp XXX XXX
%12730:	load	 %12729
%12731:	icmp	 %12730 XXX
%12732:	br	 %12731 if.end2901 if.then2900

BASIC BLOCK if.then2900
%12733:	br	 return

BASIC BLOCK if.end2901
%12734:	getelementptr	 bufp XXX XXX
%12735:	load	 %12734
%12736:	shl	 %12735 XXX
%12737:	store	 %12736 %12734
%12738:	getelementptr	 bufp XXX XXX
%12739:	load	 %12738
%12740:	icmp	 %12739 XXX
%12741:	br	 %12740 if.end2909 if.then2907

BASIC BLOCK if.then2907
%12742:	getelementptr	 bufp XXX XXX
%12743:	store	 XXX %12742
%12744:	br	 if.end2909

BASIC BLOCK if.end2909
%12745:	getelementptr	 bufp XXX XXX
%12746:	load	 %12745
%12747:	getelementptr	 bufp XXX XXX
%12748:	load	 %12747
%12749:	call	 %12746 %12748 realloc
%12750:	getelementptr	 bufp XXX XXX
%12751:	store	 %12749 %12750
%12752:	getelementptr	 bufp XXX XXX
%12753:	load	 %12752
%12754:	icmp	 %12753 XXX
%12755:	br	 %12754 if.end2918 if.then2917

BASIC BLOCK if.then2917
%12756:	br	 return

BASIC BLOCK if.end2918
%12757:	getelementptr	 bufp XXX XXX
%12758:	load	 %12757
%12759:	icmp	 %12728 %12758
%12760:	br	 %12759 if.end2957 if.then2922

BASIC BLOCK if.then2922
%12761:	ptrtoint	 %12715
%12762:	ptrtoint	 %12728
%12763:	sub	 %12761 %12762
%12764:	getelementptr	 bufp XXX XXX
%12765:	load	 %12764
%12766:	getelementptr	 %12765 %12763
%12767:	ptrtoint	 %12712
%12768:	ptrtoint	 %12728
%12769:	sub	 %12767 %12768
%12770:	getelementptr	 bufp XXX XXX
%12771:	load	 %12770
%12772:	getelementptr	 %12771 %12769
%12773:	icmp	 %12711 XXX
%12774:	br	 %12773 if.end2940 if.then2934

BASIC BLOCK if.then2934
%12775:	ptrtoint	 %12711
%12776:	ptrtoint	 %12728
%12777:	sub	 %12775 %12776
%12778:	getelementptr	 bufp XXX XXX
%12779:	load	 %12778
%12780:	getelementptr	 %12779 %12777
%12781:	br	 if.end2940

BASIC BLOCK if.end2940
%12782:	phi	 %12780 %12711
%12783:	icmp	 %12713 XXX
%12784:	br	 %12783 if.end2948 if.then2942

BASIC BLOCK if.then2942
%12785:	ptrtoint	 %12713
%12786:	ptrtoint	 %12728
%12787:	sub	 %12785 %12786
%12788:	getelementptr	 bufp XXX XXX
%12789:	load	 %12788
%12790:	getelementptr	 %12789 %12787
%12791:	br	 if.end2948

BASIC BLOCK if.end2948
%12792:	phi	 %12790 %12713
%12793:	icmp	 %12714 XXX
%12794:	br	 %12793 if.end2956 if.then2950

BASIC BLOCK if.then2950
%12795:	ptrtoint	 %12714
%12796:	ptrtoint	 %12728
%12797:	sub	 %12795 %12796
%12798:	getelementptr	 bufp XXX XXX
%12799:	load	 %12798
%12800:	getelementptr	 %12799 %12797
%12801:	br	 if.end2956

BASIC BLOCK if.end2956
%12802:	phi	 %12800 %12714
%12803:	br	 if.end2957

BASIC BLOCK if.end2957
%12804:	phi	 %12782 %12711
%12805:	phi	 %12772 %12712
%12806:	phi	 %12792 %12713
%12807:	phi	 %12802 %12714
%12808:	phi	 %12766 %12715
%12809:	br	 do.end2958

BASIC BLOCK do.end2958
%12810:	br	 while.cond2884

BASIC BLOCK while.end2959
%12811:	getelementptr	 %12715 XXX
%12812:	store	 XXX %12715
%12813:	br	 do.end2961

BASIC BLOCK do.end2961
%12814:	br	 sw.epilog

BASIC BLOCK sw.bb2962
%12815:	load	 re_syntax_options
%12816:	and	 %12815 XXX
%12817:	icmp	 %12816 XXX
%12818:	br	 %12817 if.end2966 if.then2965

BASIC BLOCK if.then2965
%12819:	br	 normal_char

BASIC BLOCK if.end2966
%12820:	br	 do.body2967

BASIC BLOCK do.body2967
%12821:	br	 while.cond2968

BASIC BLOCK while.cond2968
%12822:	phi	 %8926 %12915
%12823:	phi	 %8927 %12916
%12824:	phi	 %8928 %12917
%12825:	phi	 %8929 %12918
%12826:	phi	 %8930 %12919
%12827:	getelementptr	 bufp XXX XXX
%12828:	load	 %12827
%12829:	ptrtoint	 %12826
%12830:	ptrtoint	 %12828
%12831:	sub	 %12829 %12830
%12832:	add	 %12831 XXX
%12833:	getelementptr	 bufp XXX XXX
%12834:	load	 %12833
%12835:	icmp	 %12832 %12834
%12836:	br	 %12835 while.end3043 while.body2977

BASIC BLOCK while.body2977
%12837:	br	 do.body2978

BASIC BLOCK do.body2978
%12838:	getelementptr	 bufp XXX XXX
%12839:	load	 %12838
%12840:	getelementptr	 bufp XXX XXX
%12841:	load	 %12840
%12842:	icmp	 %12841 XXX
%12843:	br	 %12842 if.end2985 if.then2984

BASIC BLOCK if.then2984
%12844:	br	 return

BASIC BLOCK if.end2985
%12845:	getelementptr	 bufp XXX XXX
%12846:	load	 %12845
%12847:	shl	 %12846 XXX
%12848:	store	 %12847 %12845
%12849:	getelementptr	 bufp XXX XXX
%12850:	load	 %12849
%12851:	icmp	 %12850 XXX
%12852:	br	 %12851 if.end2993 if.then2991

BASIC BLOCK if.then2991
%12853:	getelementptr	 bufp XXX XXX
%12854:	store	 XXX %12853
%12855:	br	 if.end2993

BASIC BLOCK if.end2993
%12856:	getelementptr	 bufp XXX XXX
%12857:	load	 %12856
%12858:	getelementptr	 bufp XXX XXX
%12859:	load	 %12858
%12860:	call	 %12857 %12859 realloc
%12861:	getelementptr	 bufp XXX XXX
%12862:	store	 %12860 %12861
%12863:	getelementptr	 bufp XXX XXX
%12864:	load	 %12863
%12865:	icmp	 %12864 XXX
%12866:	br	 %12865 if.end3002 if.then3001

BASIC BLOCK if.then3001
%12867:	br	 return

BASIC BLOCK if.end3002
%12868:	getelementptr	 bufp XXX XXX
%12869:	load	 %12868
%12870:	icmp	 %12839 %12869
%12871:	br	 %12870 if.end3041 if.then3006

BASIC BLOCK if.then3006
%12872:	ptrtoint	 %12826
%12873:	ptrtoint	 %12839
%12874:	sub	 %12872 %12873
%12875:	getelementptr	 bufp XXX XXX
%12876:	load	 %12875
%12877:	getelementptr	 %12876 %12874
%12878:	ptrtoint	 %12823
%12879:	ptrtoint	 %12839
%12880:	sub	 %12878 %12879
%12881:	getelementptr	 bufp XXX XXX
%12882:	load	 %12881
%12883:	getelementptr	 %12882 %12880
%12884:	icmp	 %12822 XXX
%12885:	br	 %12884 if.end3024 if.then3018

BASIC BLOCK if.then3018
%12886:	ptrtoint	 %12822
%12887:	ptrtoint	 %12839
%12888:	sub	 %12886 %12887
%12889:	getelementptr	 bufp XXX XXX
%12890:	load	 %12889
%12891:	getelementptr	 %12890 %12888
%12892:	br	 if.end3024

BASIC BLOCK if.end3024
%12893:	phi	 %12891 %12822
%12894:	icmp	 %12824 XXX
%12895:	br	 %12894 if.end3032 if.then3026

BASIC BLOCK if.then3026
%12896:	ptrtoint	 %12824
%12897:	ptrtoint	 %12839
%12898:	sub	 %12896 %12897
%12899:	getelementptr	 bufp XXX XXX
%12900:	load	 %12899
%12901:	getelementptr	 %12900 %12898
%12902:	br	 if.end3032

BASIC BLOCK if.end3032
%12903:	phi	 %12901 %12824
%12904:	icmp	 %12825 XXX
%12905:	br	 %12904 if.end3040 if.then3034

BASIC BLOCK if.then3034
%12906:	ptrtoint	 %12825
%12907:	ptrtoint	 %12839
%12908:	sub	 %12906 %12907
%12909:	getelementptr	 bufp XXX XXX
%12910:	load	 %12909
%12911:	getelementptr	 %12910 %12908
%12912:	br	 if.end3040

BASIC BLOCK if.end3040
%12913:	phi	 %12911 %12825
%12914:	br	 if.end3041

BASIC BLOCK if.end3041
%12915:	phi	 %12893 %12822
%12916:	phi	 %12883 %12823
%12917:	phi	 %12903 %12824
%12918:	phi	 %12913 %12825
%12919:	phi	 %12877 %12826
%12920:	br	 do.end3042

BASIC BLOCK do.end3042
%12921:	br	 while.cond2968

BASIC BLOCK while.end3043
%12922:	getelementptr	 %12826 XXX
%12923:	store	 XXX %12826
%12924:	br	 do.end3045

BASIC BLOCK do.end3045
%12925:	br	 sw.epilog

BASIC BLOCK sw.bb3046
%12926:	and	 syntax XXX
%12927:	icmp	 %12926 XXX
%12928:	br	 %12927 if.end3050 if.then3049

BASIC BLOCK if.then3049
%12929:	br	 normal_char

BASIC BLOCK if.end3050
%12930:	zext	 %10685
%12931:	sub	 %12930 XXX
%12932:	trunc	 %12931
%12933:	zext	 %12932
%12934:	icmp	 %12933 %8925
%12935:	br	 %12934 if.end3059 if.then3057

BASIC BLOCK if.then3057
%12936:	getelementptr	 %8853 XXX XXX
%12937:	load	 %12936
%12938:	bitcast	 %12937
%12939:	call	 %12938 free
%12940:	br	 return

BASIC BLOCK if.end3059
%12941:	zext	 %12932
%12942:	bitcast	 %8853
%12943:	getelementptr	 %12942 XXX XXX
%12944:	load	 %12943
%12945:	getelementptr	 %12942 XXX XXX
%12946:	load	 %12945
%12947:	call	 %12944 %12946 %12941 group_in_compile_stack
%12948:	icmp	 %12947 XXX
%12949:	br	 %12948 if.end3064 if.then3063

BASIC BLOCK if.then3063
%12950:	br	 normal_char

BASIC BLOCK if.end3064
%12951:	br	 do.body3065

BASIC BLOCK do.body3065
%12952:	br	 while.cond3066

BASIC BLOCK while.cond3066
%12953:	phi	 %8926 %13046
%12954:	phi	 %8927 %13047
%12955:	phi	 %8930 %13048
%12956:	phi	 %8929 %13049
%12957:	phi	 %8930 %13050
%12958:	getelementptr	 bufp XXX XXX
%12959:	load	 %12958
%12960:	ptrtoint	 %12957
%12961:	ptrtoint	 %12959
%12962:	sub	 %12960 %12961
%12963:	add	 %12962 XXX
%12964:	getelementptr	 bufp XXX XXX
%12965:	load	 %12964
%12966:	icmp	 %12963 %12965
%12967:	br	 %12966 while.end3141 while.body3075

BASIC BLOCK while.body3075
%12968:	br	 do.body3076

BASIC BLOCK do.body3076
%12969:	getelementptr	 bufp XXX XXX
%12970:	load	 %12969
%12971:	getelementptr	 bufp XXX XXX
%12972:	load	 %12971
%12973:	icmp	 %12972 XXX
%12974:	br	 %12973 if.end3083 if.then3082

BASIC BLOCK if.then3082
%12975:	br	 return

BASIC BLOCK if.end3083
%12976:	getelementptr	 bufp XXX XXX
%12977:	load	 %12976
%12978:	shl	 %12977 XXX
%12979:	store	 %12978 %12976
%12980:	getelementptr	 bufp XXX XXX
%12981:	load	 %12980
%12982:	icmp	 %12981 XXX
%12983:	br	 %12982 if.end3091 if.then3089

BASIC BLOCK if.then3089
%12984:	getelementptr	 bufp XXX XXX
%12985:	store	 XXX %12984
%12986:	br	 if.end3091

BASIC BLOCK if.end3091
%12987:	getelementptr	 bufp XXX XXX
%12988:	load	 %12987
%12989:	getelementptr	 bufp XXX XXX
%12990:	load	 %12989
%12991:	call	 %12988 %12990 realloc
%12992:	getelementptr	 bufp XXX XXX
%12993:	store	 %12991 %12992
%12994:	getelementptr	 bufp XXX XXX
%12995:	load	 %12994
%12996:	icmp	 %12995 XXX
%12997:	br	 %12996 if.end3100 if.then3099

BASIC BLOCK if.then3099
%12998:	br	 return

BASIC BLOCK if.end3100
%12999:	getelementptr	 bufp XXX XXX
%13000:	load	 %12999
%13001:	icmp	 %12970 %13000
%13002:	br	 %13001 if.end3139 if.then3104

BASIC BLOCK if.then3104
%13003:	ptrtoint	 %12957
%13004:	ptrtoint	 %12970
%13005:	sub	 %13003 %13004
%13006:	getelementptr	 bufp XXX XXX
%13007:	load	 %13006
%13008:	getelementptr	 %13007 %13005
%13009:	ptrtoint	 %12954
%13010:	ptrtoint	 %12970
%13011:	sub	 %13009 %13010
%13012:	getelementptr	 bufp XXX XXX
%13013:	load	 %13012
%13014:	getelementptr	 %13013 %13011
%13015:	icmp	 %12953 XXX
%13016:	br	 %13015 if.end3122 if.then3116

BASIC BLOCK if.then3116
%13017:	ptrtoint	 %12953
%13018:	ptrtoint	 %12970
%13019:	sub	 %13017 %13018
%13020:	getelementptr	 bufp XXX XXX
%13021:	load	 %13020
%13022:	getelementptr	 %13021 %13019
%13023:	br	 if.end3122

BASIC BLOCK if.end3122
%13024:	phi	 %13022 %12953
%13025:	icmp	 %12955 XXX
%13026:	br	 %13025 if.end3130 if.then3124

BASIC BLOCK if.then3124
%13027:	ptrtoint	 %12955
%13028:	ptrtoint	 %12970
%13029:	sub	 %13027 %13028
%13030:	getelementptr	 bufp XXX XXX
%13031:	load	 %13030
%13032:	getelementptr	 %13031 %13029
%13033:	br	 if.end3130

BASIC BLOCK if.end3130
%13034:	phi	 %13032 %12955
%13035:	icmp	 %12956 XXX
%13036:	br	 %13035 if.end3138 if.then3132

BASIC BLOCK if.then3132
%13037:	ptrtoint	 %12956
%13038:	ptrtoint	 %12970
%13039:	sub	 %13037 %13038
%13040:	getelementptr	 bufp XXX XXX
%13041:	load	 %13040
%13042:	getelementptr	 %13041 %13039
%13043:	br	 if.end3138

BASIC BLOCK if.end3138
%13044:	phi	 %13042 %12956
%13045:	br	 if.end3139

BASIC BLOCK if.end3139
%13046:	phi	 %13024 %12953
%13047:	phi	 %13014 %12954
%13048:	phi	 %13034 %12955
%13049:	phi	 %13044 %12956
%13050:	phi	 %13008 %12957
%13051:	br	 do.end3140

BASIC BLOCK do.end3140
%13052:	br	 while.cond3066

BASIC BLOCK while.end3141
%13053:	getelementptr	 %12957 XXX
%13054:	store	 XXX %12957
%13055:	getelementptr	 %13053 XXX
%13056:	store	 %12932 %13053
%13057:	br	 do.end3144

BASIC BLOCK do.end3144
%13058:	br	 sw.epilog

BASIC BLOCK sw.bb3145
%13059:	and	 syntax XXX
%13060:	icmp	 %13059 XXX
%13061:	br	 %13060 if.else3149 if.then3148

BASIC BLOCK if.then3148
%13062:	br	 handle_plus

BASIC BLOCK if.else3149
%13063:	br	 normal_backslash

BASIC BLOCK sw.default
%13064:	br	 normal_backslash

BASIC BLOCK normal_backslash
%13065:	phi	 %10685 %10685 %10685 %12021 %10685 %10685 %10685 %10685
%13066:	icmp	 %8859 XXX
%13067:	br	 %13066 cond.false3155 cond.true3151

BASIC BLOCK cond.true3151
%13068:	zext	 %13065
%13069:	getelementptr	 %8859 %13068
%13070:	load	 %13069
%13071:	sext	 %13070
%13072:	br	 cond.end3157

BASIC BLOCK cond.false3155
%13073:	zext	 %13065
%13074:	br	 cond.end3157

BASIC BLOCK cond.end3157
%13075:	phi	 %13071 %13073
%13076:	trunc	 %13075
%13077:	br	 normal_char

BASIC BLOCK sw.epilog
%13078:	phi	 %8925 %8925 %8925 %8925 %8925 %8925 %8925 %8925 %8925 %8925 %8925 %8925 %10698
%13079:	phi	 %12953 %12822 %12711 %12600 %12489 %12378 %12267 %12156 %12045 %12000 %11391 %11253 XXX
%13080:	phi	 %12954 %12823 %12712 %12601 %12490 %12379 %12268 %12157 %12046 %12001 %11491 %11254 %10907
%13081:	phi	 %12955 %12824 %12713 %12602 %12491 %12380 %12269 %12158 %12047 %12002 XXX %11255 XXX
%13082:	phi	 %12956 %12825 %12714 %12603 %12492 %12381 %12270 %12159 %12048 XXX %11394 %11256 XXX
%13083:	phi	 %13055 %12922 %12811 %12700 %12589 %12478 %12367 %12256 %12145 %12003 %11491 %11257 %10907
%13084:	br	 sw.epilog3389

BASIC BLOCK sw.default3160
%13085:	br	 normal_char

BASIC BLOCK normal_char
%13086:	phi	 %8926 %8926 %8926 %8926 %8926 %8926 %8926 %8926 %8926 %8926 %8926 %8926 %8926 %8926 %8926 %11047 %8926 %8926 %8926 %8926 %8926 %8926 %8926 %8926
%13087:	phi	 %8927 %8927 %8927 %8927 %8927 %8927 %8927 %8927 %8927 %8927 %8927 %8927 %8927 %8927 %8927 %11048 %8927 %8927 %8927 %8927 %8927 %8927 %8927 %8927
%13088:	phi	 %8928 %8928 %8928 %8928 %8928 %8928 %8928 %8928 %8928 %8928 %8928 %8928 %8928 %8928 %8928 %11049 %8928 %8928 %8928 %8928 %8928 %8928 %8928 %8928
%13089:	phi	 %8929 %8929 %8929 %8929 %8929 %8929 %8929 %8929 %8929 %8929 %8929 %8929 %8929 %8929 %8929 %11050 %8929 %8929 %8929 %8929 %8929 %8929 %8929 %8929
%13090:	phi	 %8930 %8930 %8930 %8930 %8930 %8930 %8930 %8930 %8930 %8930 %8930 %8930 %8930 %8930 %8930 %11051 %8930 %8930 %8930 %8930 %8930 %8930 %8930 %8930
%13091:	phi	 %8949 %13076 %9202 %10685 %10685 %10685 %10685 %10685 %10685 %10685 %10685 %10685 %10685 %12021 %11267 %10931 %8949 %8949 %8949 %8949 %8949 %8949 %8949 %8949
%13092:	icmp	 %13089 XXX
%13093:	br	 %13092 if.then3226 lor.lhs.false3162

BASIC BLOCK lor.lhs.false3162
%13094:	load	 %13089
%13095:	zext	 %13094
%13096:	sext	 %13095
%13097:	getelementptr	 %13089 %13096
%13098:	getelementptr	 %13097 XXX
%13099:	icmp	 %13098 %13090
%13100:	br	 %13099 lor.lhs.false3169 if.then3226

BASIC BLOCK lor.lhs.false3169
%13101:	load	 %13089
%13102:	zext	 %13101
%13103:	icmp	 %13102 XXX
%13104:	br	 %13103 lor.lhs.false3173 if.then3226

BASIC BLOCK lor.lhs.false3173
%13105:	load	 %8854
%13106:	load	 %13105
%13107:	sext	 %13106
%13108:	icmp	 %13107 XXX
%13109:	br	 %13108 lor.lhs.false3177 if.then3226

BASIC BLOCK lor.lhs.false3177
%13110:	load	 %8854
%13111:	load	 %13110
%13112:	sext	 %13111
%13113:	icmp	 %13112 XXX
%13114:	br	 %13113 lor.lhs.false3181 if.then3226

BASIC BLOCK lor.lhs.false3181
%13115:	and	 syntax XXX
%13116:	icmp	 %13115 XXX
%13117:	br	 %13116 cond.false3198 cond.true3184

BASIC BLOCK cond.true3184
%13118:	load	 %8854
%13119:	load	 %13118
%13120:	sext	 %13119
%13121:	icmp	 %13120 XXX
%13122:	br	 %13121 lor.lhs.false3206 land.lhs.true3188

BASIC BLOCK land.lhs.true3188
%13123:	load	 %8854
%13124:	getelementptr	 %13123 XXX
%13125:	load	 %13124
%13126:	sext	 %13125
%13127:	icmp	 %13126 XXX
%13128:	br	 %13127 lor.lhs.false3193 if.then3226

BASIC BLOCK lor.lhs.false3193
%13129:	load	 %8854
%13130:	getelementptr	 %13129 XXX
%13131:	load	 %13130
%13132:	sext	 %13131
%13133:	icmp	 %13132 XXX
%13134:	br	 %13133 lor.lhs.false3206 if.then3226

BASIC BLOCK cond.false3198
%13135:	load	 %8854
%13136:	load	 %13135
%13137:	sext	 %13136
%13138:	icmp	 %13137 XXX
%13139:	br	 %13138 lor.lhs.false3202 if.then3226

BASIC BLOCK lor.lhs.false3202
%13140:	load	 %8854
%13141:	load	 %13140
%13142:	sext	 %13141
%13143:	icmp	 %13142 XXX
%13144:	br	 %13143 lor.lhs.false3206 if.then3226

BASIC BLOCK lor.lhs.false3206
%13145:	and	 syntax XXX
%13146:	icmp	 %13145 XXX
%13147:	br	 %13146 if.end3308 land.lhs.true3209

BASIC BLOCK land.lhs.true3209
%13148:	and	 syntax XXX
%13149:	icmp	 %13148 XXX
%13150:	br	 %13149 cond.false3216 cond.true3212

BASIC BLOCK cond.true3212
%13151:	load	 %8854
%13152:	load	 %13151
%13153:	sext	 %13152
%13154:	icmp	 %13153 XXX
%13155:	br	 %13154 if.end3308 if.then3226

BASIC BLOCK cond.false3216
%13156:	load	 %8854
%13157:	getelementptr	 %13156 XXX
%13158:	load	 %13157
%13159:	sext	 %13158
%13160:	icmp	 %13159 XXX
%13161:	br	 %13160 if.end3308 land.lhs.true3221

BASIC BLOCK land.lhs.true3221
%13162:	load	 %8854
%13163:	getelementptr	 %13162 XXX
%13164:	load	 %13163
%13165:	sext	 %13164
%13166:	icmp	 %13165 XXX
%13167:	br	 %13166 if.end3308 if.then3226

BASIC BLOCK if.then3226
%13168:	br	 do.body3227

BASIC BLOCK do.body3227
%13169:	br	 while.cond3228

BASIC BLOCK while.cond3228
%13170:	phi	 %13086 %13263
%13171:	phi	 %13087 %13264
%13172:	phi	 %13090 %13265
%13173:	phi	 %13089 %13266
%13174:	phi	 %13090 %13267
%13175:	getelementptr	 bufp XXX XXX
%13176:	load	 %13175
%13177:	ptrtoint	 %13174
%13178:	ptrtoint	 %13176
%13179:	sub	 %13177 %13178
%13180:	add	 %13179 XXX
%13181:	getelementptr	 bufp XXX XXX
%13182:	load	 %13181
%13183:	icmp	 %13180 %13182
%13184:	br	 %13183 while.end3303 while.body3237

BASIC BLOCK while.body3237
%13185:	br	 do.body3238

BASIC BLOCK do.body3238
%13186:	getelementptr	 bufp XXX XXX
%13187:	load	 %13186
%13188:	getelementptr	 bufp XXX XXX
%13189:	load	 %13188
%13190:	icmp	 %13189 XXX
%13191:	br	 %13190 if.end3245 if.then3244

BASIC BLOCK if.then3244
%13192:	br	 return

BASIC BLOCK if.end3245
%13193:	getelementptr	 bufp XXX XXX
%13194:	load	 %13193
%13195:	shl	 %13194 XXX
%13196:	store	 %13195 %13193
%13197:	getelementptr	 bufp XXX XXX
%13198:	load	 %13197
%13199:	icmp	 %13198 XXX
%13200:	br	 %13199 if.end3253 if.then3251

BASIC BLOCK if.then3251
%13201:	getelementptr	 bufp XXX XXX
%13202:	store	 XXX %13201
%13203:	br	 if.end3253

BASIC BLOCK if.end3253
%13204:	getelementptr	 bufp XXX XXX
%13205:	load	 %13204
%13206:	getelementptr	 bufp XXX XXX
%13207:	load	 %13206
%13208:	call	 %13205 %13207 realloc
%13209:	getelementptr	 bufp XXX XXX
%13210:	store	 %13208 %13209
%13211:	getelementptr	 bufp XXX XXX
%13212:	load	 %13211
%13213:	icmp	 %13212 XXX
%13214:	br	 %13213 if.end3262 if.then3261

BASIC BLOCK if.then3261
%13215:	br	 return

BASIC BLOCK if.end3262
%13216:	getelementptr	 bufp XXX XXX
%13217:	load	 %13216
%13218:	icmp	 %13187 %13217
%13219:	br	 %13218 if.end3301 if.then3266

BASIC BLOCK if.then3266
%13220:	ptrtoint	 %13174
%13221:	ptrtoint	 %13187
%13222:	sub	 %13220 %13221
%13223:	getelementptr	 bufp XXX XXX
%13224:	load	 %13223
%13225:	getelementptr	 %13224 %13222
%13226:	ptrtoint	 %13171
%13227:	ptrtoint	 %13187
%13228:	sub	 %13226 %13227
%13229:	getelementptr	 bufp XXX XXX
%13230:	load	 %13229
%13231:	getelementptr	 %13230 %13228
%13232:	icmp	 %13170 XXX
%13233:	br	 %13232 if.end3284 if.then3278

BASIC BLOCK if.then3278
%13234:	ptrtoint	 %13170
%13235:	ptrtoint	 %13187
%13236:	sub	 %13234 %13235
%13237:	getelementptr	 bufp XXX XXX
%13238:	load	 %13237
%13239:	getelementptr	 %13238 %13236
%13240:	br	 if.end3284

BASIC BLOCK if.end3284
%13241:	phi	 %13239 %13170
%13242:	icmp	 %13172 XXX
%13243:	br	 %13242 if.end3292 if.then3286

BASIC BLOCK if.then3286
%13244:	ptrtoint	 %13172
%13245:	ptrtoint	 %13187
%13246:	sub	 %13244 %13245
%13247:	getelementptr	 bufp XXX XXX
%13248:	load	 %13247
%13249:	getelementptr	 %13248 %13246
%13250:	br	 if.end3292

BASIC BLOCK if.end3292
%13251:	phi	 %13249 %13172
%13252:	icmp	 %13173 XXX
%13253:	br	 %13252 if.end3300 if.then3294

BASIC BLOCK if.then3294
%13254:	ptrtoint	 %13173
%13255:	ptrtoint	 %13187
%13256:	sub	 %13254 %13255
%13257:	getelementptr	 bufp XXX XXX
%13258:	load	 %13257
%13259:	getelementptr	 %13258 %13256
%13260:	br	 if.end3300

BASIC BLOCK if.end3300
%13261:	phi	 %13259 %13173
%13262:	br	 if.end3301

BASIC BLOCK if.end3301
%13263:	phi	 %13241 %13170
%13264:	phi	 %13231 %13171
%13265:	phi	 %13251 %13172
%13266:	phi	 %13261 %13173
%13267:	phi	 %13225 %13174
%13268:	br	 do.end3302

BASIC BLOCK do.end3302
%13269:	br	 while.cond3228

BASIC BLOCK while.end3303
%13270:	getelementptr	 %13174 XXX
%13271:	store	 XXX %13174
%13272:	getelementptr	 %13270 XXX
%13273:	store	 XXX %13270
%13274:	br	 do.end3306

BASIC BLOCK do.end3306
%13275:	getelementptr	 %13272 XXX
%13276:	br	 if.end3308

BASIC BLOCK if.end3308
%13277:	phi	 %13170 %13086 %13086 %13086 %13086
%13278:	phi	 %13171 %13087 %13087 %13087 %13087
%13279:	phi	 %13172 %13088 %13088 %13088 %13088
%13280:	phi	 %13275 %13089 %13089 %13089 %13089
%13281:	phi	 %13272 %13090 %13090 %13090 %13090
%13282:	br	 do.body3309

BASIC BLOCK do.body3309
%13283:	br	 while.cond3310

BASIC BLOCK while.cond3310
%13284:	phi	 %13277 %13377
%13285:	phi	 %13278 %13378
%13286:	phi	 %13279 %13379
%13287:	phi	 %13280 %13380
%13288:	phi	 %13281 %13381
%13289:	getelementptr	 bufp XXX XXX
%13290:	load	 %13289
%13291:	ptrtoint	 %13288
%13292:	ptrtoint	 %13290
%13293:	sub	 %13291 %13292
%13294:	add	 %13293 XXX
%13295:	getelementptr	 bufp XXX XXX
%13296:	load	 %13295
%13297:	icmp	 %13294 %13296
%13298:	br	 %13297 while.end3385 while.body3319

BASIC BLOCK while.body3319
%13299:	br	 do.body3320

BASIC BLOCK do.body3320
%13300:	getelementptr	 bufp XXX XXX
%13301:	load	 %13300
%13302:	getelementptr	 bufp XXX XXX
%13303:	load	 %13302
%13304:	icmp	 %13303 XXX
%13305:	br	 %13304 if.end3327 if.then3326

BASIC BLOCK if.then3326
%13306:	br	 return

BASIC BLOCK if.end3327
%13307:	getelementptr	 bufp XXX XXX
%13308:	load	 %13307
%13309:	shl	 %13308 XXX
%13310:	store	 %13309 %13307
%13311:	getelementptr	 bufp XXX XXX
%13312:	load	 %13311
%13313:	icmp	 %13312 XXX
%13314:	br	 %13313 if.end3335 if.then3333

BASIC BLOCK if.then3333
%13315:	getelementptr	 bufp XXX XXX
%13316:	store	 XXX %13315
%13317:	br	 if.end3335

BASIC BLOCK if.end3335
%13318:	getelementptr	 bufp XXX XXX
%13319:	load	 %13318
%13320:	getelementptr	 bufp XXX XXX
%13321:	load	 %13320
%13322:	call	 %13319 %13321 realloc
%13323:	getelementptr	 bufp XXX XXX
%13324:	store	 %13322 %13323
%13325:	getelementptr	 bufp XXX XXX
%13326:	load	 %13325
%13327:	icmp	 %13326 XXX
%13328:	br	 %13327 if.end3344 if.then3343

BASIC BLOCK if.then3343
%13329:	br	 return

BASIC BLOCK if.end3344
%13330:	getelementptr	 bufp XXX XXX
%13331:	load	 %13330
%13332:	icmp	 %13301 %13331
%13333:	br	 %13332 if.end3383 if.then3348

BASIC BLOCK if.then3348
%13334:	ptrtoint	 %13288
%13335:	ptrtoint	 %13301
%13336:	sub	 %13334 %13335
%13337:	getelementptr	 bufp XXX XXX
%13338:	load	 %13337
%13339:	getelementptr	 %13338 %13336
%13340:	ptrtoint	 %13285
%13341:	ptrtoint	 %13301
%13342:	sub	 %13340 %13341
%13343:	getelementptr	 bufp XXX XXX
%13344:	load	 %13343
%13345:	getelementptr	 %13344 %13342
%13346:	icmp	 %13284 XXX
%13347:	br	 %13346 if.end3366 if.then3360

BASIC BLOCK if.then3360
%13348:	ptrtoint	 %13284
%13349:	ptrtoint	 %13301
%13350:	sub	 %13348 %13349
%13351:	getelementptr	 bufp XXX XXX
%13352:	load	 %13351
%13353:	getelementptr	 %13352 %13350
%13354:	br	 if.end3366

BASIC BLOCK if.end3366
%13355:	phi	 %13353 %13284
%13356:	icmp	 %13286 XXX
%13357:	br	 %13356 if.end3374 if.then3368

BASIC BLOCK if.then3368
%13358:	ptrtoint	 %13286
%13359:	ptrtoint	 %13301
%13360:	sub	 %13358 %13359
%13361:	getelementptr	 bufp XXX XXX
%13362:	load	 %13361
%13363:	getelementptr	 %13362 %13360
%13364:	br	 if.end3374

BASIC BLOCK if.end3374
%13365:	phi	 %13363 %13286
%13366:	icmp	 %13287 XXX
%13367:	br	 %13366 if.end3382 if.then3376

BASIC BLOCK if.then3376
%13368:	ptrtoint	 %13287
%13369:	ptrtoint	 %13301
%13370:	sub	 %13368 %13369
%13371:	getelementptr	 bufp XXX XXX
%13372:	load	 %13371
%13373:	getelementptr	 %13372 %13370
%13374:	br	 if.end3382

BASIC BLOCK if.end3382
%13375:	phi	 %13373 %13287
%13376:	br	 if.end3383

BASIC BLOCK if.end3383
%13377:	phi	 %13355 %13284
%13378:	phi	 %13345 %13285
%13379:	phi	 %13365 %13286
%13380:	phi	 %13375 %13287
%13381:	phi	 %13339 %13288
%13382:	br	 do.end3384

BASIC BLOCK do.end3384
%13383:	br	 while.cond3310

BASIC BLOCK while.end3385
%13384:	getelementptr	 %13288 XXX
%13385:	store	 %13091 %13288
%13386:	br	 do.end3387

BASIC BLOCK do.end3387
%13387:	load	 %13287
%13388:	add	 %13387 XXX
%13389:	store	 %13388 %13287
%13390:	br	 sw.epilog3389

BASIC BLOCK sw.epilog3389
%13391:	phi	 %8925 %8925 %8925 %13078 %8925 %8925 %8925 %8925
%13392:	phi	 %13284 %9734 %8926 %13079 %10078 %9742 %9086 %8967
%13393:	phi	 %13285 %9735 %8927 %13080 %10079 %9743 %9087 %8968
%13394:	phi	 %13286 %9736 %8928 %13081 %10080 %9744 %9088 %8969
%13395:	phi	 %13287 %9737 %8929 %13082 %10081 %9745 %9089 %8970
%13396:	phi	 %13384 %9738 %8930 %13083 %10639 %9842 %9186 %9067
%13397:	br	 while.cond

BASIC BLOCK while.end3390
%13398:	icmp	 %8926 XXX
%13399:	br	 %13398 if.end3398 if.then3392

BASIC BLOCK if.then3392
%13400:	ptrtoint	 %8930
%13401:	ptrtoint	 %8926
%13402:	sub	 %13400 %13401
%13403:	sub	 %13402 XXX
%13404:	trunc	 %13403
%13405:	call	 XXX %8926 %13404 store_op1
%13406:	br	 if.end3398

BASIC BLOCK if.end3398
%13407:	getelementptr	 %8853 XXX XXX
%13408:	load	 %13407
%13409:	icmp	 %13408 XXX
%13410:	br	 %13409 if.then3402 if.end3404

BASIC BLOCK if.then3402
%13411:	getelementptr	 %8853 XXX XXX
%13412:	load	 %13411
%13413:	bitcast	 %13412
%13414:	call	 %13413 free
%13415:	br	 return

BASIC BLOCK if.end3404
%13416:	and	 syntax XXX
%13417:	icmp	 %13416 XXX
%13418:	br	 %13417 if.end3487 if.then3407

BASIC BLOCK if.then3407
%13419:	br	 do.body3408

BASIC BLOCK do.body3408
%13420:	br	 while.cond3409

BASIC BLOCK while.cond3409
%13421:	phi	 %8926 %13514
%13422:	phi	 %8927 %13515
%13423:	phi	 %8928 %13516
%13424:	phi	 %8929 %13517
%13425:	phi	 %8930 %13518
%13426:	getelementptr	 bufp XXX XXX
%13427:	load	 %13426
%13428:	ptrtoint	 %13425
%13429:	ptrtoint	 %13427
%13430:	sub	 %13428 %13429
%13431:	add	 %13430 XXX
%13432:	getelementptr	 bufp XXX XXX
%13433:	load	 %13432
%13434:	icmp	 %13431 %13433
%13435:	br	 %13434 while.end3484 while.body3418

BASIC BLOCK while.body3418
%13436:	br	 do.body3419

BASIC BLOCK do.body3419
%13437:	getelementptr	 bufp XXX XXX
%13438:	load	 %13437
%13439:	getelementptr	 bufp XXX XXX
%13440:	load	 %13439
%13441:	icmp	 %13440 XXX
%13442:	br	 %13441 if.end3426 if.then3425

BASIC BLOCK if.then3425
%13443:	br	 return

BASIC BLOCK if.end3426
%13444:	getelementptr	 bufp XXX XXX
%13445:	load	 %13444
%13446:	shl	 %13445 XXX
%13447:	store	 %13446 %13444
%13448:	getelementptr	 bufp XXX XXX
%13449:	load	 %13448
%13450:	icmp	 %13449 XXX
%13451:	br	 %13450 if.end3434 if.then3432

BASIC BLOCK if.then3432
%13452:	getelementptr	 bufp XXX XXX
%13453:	store	 XXX %13452
%13454:	br	 if.end3434

BASIC BLOCK if.end3434
%13455:	getelementptr	 bufp XXX XXX
%13456:	load	 %13455
%13457:	getelementptr	 bufp XXX XXX
%13458:	load	 %13457
%13459:	call	 %13456 %13458 realloc
%13460:	getelementptr	 bufp XXX XXX
%13461:	store	 %13459 %13460
%13462:	getelementptr	 bufp XXX XXX
%13463:	load	 %13462
%13464:	icmp	 %13463 XXX
%13465:	br	 %13464 if.end3443 if.then3442

BASIC BLOCK if.then3442
%13466:	br	 return

BASIC BLOCK if.end3443
%13467:	getelementptr	 bufp XXX XXX
%13468:	load	 %13467
%13469:	icmp	 %13438 %13468
%13470:	br	 %13469 if.end3482 if.then3447

BASIC BLOCK if.then3447
%13471:	ptrtoint	 %13425
%13472:	ptrtoint	 %13438
%13473:	sub	 %13471 %13472
%13474:	getelementptr	 bufp XXX XXX
%13475:	load	 %13474
%13476:	getelementptr	 %13475 %13473
%13477:	ptrtoint	 %13422
%13478:	ptrtoint	 %13438
%13479:	sub	 %13477 %13478
%13480:	getelementptr	 bufp XXX XXX
%13481:	load	 %13480
%13482:	getelementptr	 %13481 %13479
%13483:	icmp	 %13421 XXX
%13484:	br	 %13483 if.end3465 if.then3459

BASIC BLOCK if.then3459
%13485:	ptrtoint	 %13421
%13486:	ptrtoint	 %13438
%13487:	sub	 %13485 %13486
%13488:	getelementptr	 bufp XXX XXX
%13489:	load	 %13488
%13490:	getelementptr	 %13489 %13487
%13491:	br	 if.end3465

BASIC BLOCK if.end3465
%13492:	phi	 %13490 %13421
%13493:	icmp	 %13423 XXX
%13494:	br	 %13493 if.end3473 if.then3467

BASIC BLOCK if.then3467
%13495:	ptrtoint	 %13423
%13496:	ptrtoint	 %13438
%13497:	sub	 %13495 %13496
%13498:	getelementptr	 bufp XXX XXX
%13499:	load	 %13498
%13500:	getelementptr	 %13499 %13497
%13501:	br	 if.end3473

BASIC BLOCK if.end3473
%13502:	phi	 %13500 %13423
%13503:	icmp	 %13424 XXX
%13504:	br	 %13503 if.end3481 if.then3475

BASIC BLOCK if.then3475
%13505:	ptrtoint	 %13424
%13506:	ptrtoint	 %13438
%13507:	sub	 %13505 %13506
%13508:	getelementptr	 bufp XXX XXX
%13509:	load	 %13508
%13510:	getelementptr	 %13509 %13507
%13511:	br	 if.end3481

BASIC BLOCK if.end3481
%13512:	phi	 %13510 %13424
%13513:	br	 if.end3482

BASIC BLOCK if.end3482
%13514:	phi	 %13492 %13421
%13515:	phi	 %13482 %13422
%13516:	phi	 %13502 %13423
%13517:	phi	 %13512 %13424
%13518:	phi	 %13476 %13425
%13519:	br	 do.end3483

BASIC BLOCK do.end3483
%13520:	br	 while.cond3409

BASIC BLOCK while.end3484
%13521:	getelementptr	 %13425 XXX
%13522:	store	 XXX %13425
%13523:	br	 do.end3486

BASIC BLOCK do.end3486
%13524:	br	 if.end3487

BASIC BLOCK if.end3487
%13525:	phi	 %13521 %8930
%13526:	getelementptr	 %8853 XXX XXX
%13527:	load	 %13526
%13528:	bitcast	 %13527
%13529:	call	 %13528 free
%13530:	getelementptr	 bufp XXX XXX
%13531:	load	 %13530
%13532:	ptrtoint	 %13525
%13533:	ptrtoint	 %13531
%13534:	sub	 %13532 %13533
%13535:	getelementptr	 bufp XXX XXX
%13536:	store	 %13534 %13535
%13537:	br	 return

BASIC BLOCK return
%13538:	phi	 XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX %10363 XXX XXX XXX XXX XXX XXX %10326 XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX
%13539:	ret	 %13538

FUNCTION regcomp

BASIC BLOCK entry
%13540:	and	 cflags XXX
%13541:	icmp	 %13540 XXX
%13542:	select	 %13541 XXX XXX
%13543:	getelementptr	 preg XXX XXX
%13544:	store	 XXX %13543
%13545:	getelementptr	 preg XXX XXX
%13546:	store	 XXX %13545
%13547:	getelementptr	 preg XXX XXX
%13548:	store	 XXX %13547
%13549:	getelementptr	 preg XXX XXX
%13550:	store	 XXX %13549
%13551:	and	 cflags XXX
%13552:	icmp	 %13551 XXX
%13553:	br	 %13552 if.else if.then

BASIC BLOCK if.then
%13554:	call	 XXX xmalloc
%13555:	getelementptr	 preg XXX XXX
%13556:	store	 %13554 %13555
%13557:	getelementptr	 preg XXX XXX
%13558:	load	 %13557
%13559:	icmp	 %13558 XXX
%13560:	br	 %13559 if.end if.then4

BASIC BLOCK if.then4
%13561:	br	 return

BASIC BLOCK if.end
%13562:	br	 for.cond

BASIC BLOCK for.cond
%13563:	phi	 XXX %13586
%13564:	icmp	 %13563 XXX
%13565:	br	 %13564 for.end for.body

BASIC BLOCK for.body
%13566:	sext	 %13563
%13567:	call	 __ctype_b_loc
%13568:	load	 %13567
%13569:	getelementptr	 %13568 %13566
%13570:	load	 %13569
%13571:	zext	 %13570
%13572:	and	 %13571 XXX
%13573:	icmp	 %13572 XXX
%13574:	br	 %13573 cond.false cond.true

BASIC BLOCK cond.true
%13575:	call	 %13563 tolower
%13576:	br	 cond.end

BASIC BLOCK cond.false
%13577:	br	 cond.end

BASIC BLOCK cond.end
%13578:	phi	 %13575 %13563
%13579:	trunc	 %13578
%13580:	zext	 %13563
%13581:	getelementptr	 preg XXX XXX
%13582:	load	 %13581
%13583:	getelementptr	 %13582 %13580
%13584:	store	 %13579 %13583
%13585:	br	 for.inc

BASIC BLOCK for.inc
%13586:	add	 %13563 XXX
%13587:	br	 for.cond

BASIC BLOCK for.end
%13588:	br	 if.end16

BASIC BLOCK if.else
%13589:	getelementptr	 preg XXX XXX
%13590:	store	 XXX %13589
%13591:	br	 if.end16

BASIC BLOCK if.end16
%13592:	and	 cflags XXX
%13593:	icmp	 %13592 XXX
%13594:	br	 %13593 if.else21 if.then19

BASIC BLOCK if.then19
%13595:	and	 %13542 XXX
%13596:	or	 %13595 XXX
%13597:	getelementptr	 preg XXX XXX
%13598:	load	 %13597
%13599:	and	 %13598 XXX
%13600:	or	 %13599 XXX
%13601:	store	 %13600 %13597
%13602:	br	 if.end25

BASIC BLOCK if.else21
%13603:	getelementptr	 preg XXX XXX
%13604:	load	 %13603
%13605:	and	 %13604 XXX
%13606:	store	 %13605 %13603
%13607:	br	 if.end25

BASIC BLOCK if.end25
%13608:	phi	 %13596 %13542
%13609:	and	 cflags XXX
%13610:	icmp	 %13609 XXX
%13611:	xor	 %13610 XXX
%13612:	xor	 %13611 XXX
%13613:	zext	 %13612
%13614:	getelementptr	 preg XXX XXX
%13615:	trunc	 %13613
%13616:	load	 %13614
%13617:	and	 %13615 XXX
%13618:	shl	 %13617 XXX
%13619:	and	 %13616 XXX
%13620:	or	 %13619 %13618
%13621:	store	 %13620 %13614
%13622:	zext	 %13617
%13623:	call	 pattern strlen
%13624:	call	 pattern %13623 %13608 preg regex_compile
%13625:	icmp	 %13624 XXX
%13626:	br	 %13625 if.end37 if.then36

BASIC BLOCK if.then36
%13627:	br	 if.end37

BASIC BLOCK if.end37
%13628:	phi	 XXX %13624
%13629:	br	 return

BASIC BLOCK return
%13630:	phi	 XXX %13628
%13631:	ret	 %13630

FUNCTION regexec

BASIC BLOCK entry
%13632:	alloca	 XXX
%13633:	alloca	 XXX
%13634:	call	 string strlen
%13635:	trunc	 %13634
%13636:	getelementptr	 preg XXX XXX
%13637:	load	 %13636
%13638:	lshr	 %13637 XXX
%13639:	and	 %13638 XXX
%13640:	zext	 %13639
%13641:	icmp	 %13640 XXX
%13642:	br	 %13641 land.rhs land.end

BASIC BLOCK land.rhs
%13643:	icmp	 nmatch XXX
%13644:	br	 land.end

BASIC BLOCK land.end
%13645:	phi	 XXX %13643
%13646:	zext	 %13645
%13647:	trunc	 %13646
%13648:	bitcast	 %13633
%13649:	bitcast	 preg
%13650:	call	 %13648 %13649 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%13651:	and	 eflags XXX
%13652:	icmp	 %13651 XXX
%13653:	xor	 %13652 XXX
%13654:	xor	 %13653 XXX
%13655:	zext	 %13654
%13656:	getelementptr	 %13633 XXX XXX
%13657:	trunc	 %13655
%13658:	load	 %13656
%13659:	and	 %13657 XXX
%13660:	shl	 %13659 XXX
%13661:	and	 %13658 XXX
%13662:	or	 %13661 %13660
%13663:	store	 %13662 %13656
%13664:	zext	 %13659
%13665:	and	 eflags XXX
%13666:	icmp	 %13665 XXX
%13667:	xor	 %13666 XXX
%13668:	xor	 %13667 XXX
%13669:	zext	 %13668
%13670:	getelementptr	 %13633 XXX XXX
%13671:	trunc	 %13669
%13672:	load	 %13670
%13673:	and	 %13671 XXX
%13674:	shl	 %13673 XXX
%13675:	and	 %13672 XXX
%13676:	or	 %13675 %13674
%13677:	store	 %13676 %13670
%13678:	zext	 %13673
%13679:	getelementptr	 %13633 XXX XXX
%13680:	load	 %13679
%13681:	and	 %13680 XXX
%13682:	or	 %13681 XXX
%13683:	store	 %13682 %13679
%13684:	icmp	 %13647 XXX
%13685:	br	 %13684 if.end34 if.then

BASIC BLOCK if.then
%13686:	trunc	 nmatch
%13687:	getelementptr	 %13632 XXX XXX
%13688:	store	 %13686 %13687
%13689:	mul	 nmatch XXX
%13690:	call	 %13689 xmalloc
%13691:	bitcast	 %13690
%13692:	getelementptr	 %13632 XXX XXX
%13693:	store	 %13691 %13692
%13694:	mul	 nmatch XXX
%13695:	call	 %13694 xmalloc
%13696:	bitcast	 %13695
%13697:	getelementptr	 %13632 XXX XXX
%13698:	store	 %13696 %13697
%13699:	getelementptr	 %13632 XXX XXX
%13700:	load	 %13699
%13701:	icmp	 %13700 XXX
%13702:	br	 %13701 lor.lhs.false if.then33

BASIC BLOCK lor.lhs.false
%13703:	getelementptr	 %13632 XXX XXX
%13704:	load	 %13703
%13705:	icmp	 %13704 XXX
%13706:	br	 %13705 if.end if.then33

BASIC BLOCK if.then33
%13707:	br	 return

BASIC BLOCK if.end
%13708:	br	 if.end34

BASIC BLOCK if.end34
%13709:	sext	 %13647
%13710:	icmp	 %13709 XXX
%13711:	br	 %13710 cond.false cond.true

BASIC BLOCK cond.true
%13712:	br	 cond.end

BASIC BLOCK cond.false
%13713:	br	 cond.end

BASIC BLOCK cond.end
%13714:	phi	 %13632 XXX
%13715:	call	 %13633 string %13635 XXX %13635 %13714 re_search
%13716:	icmp	 %13647 XXX
%13717:	br	 %13716 if.end57 if.then39

BASIC BLOCK if.then39
%13718:	icmp	 %13715 XXX
%13719:	br	 %13718 if.end54 if.then42

BASIC BLOCK if.then42
%13720:	br	 for.cond

BASIC BLOCK for.cond
%13721:	phi	 XXX %13744
%13722:	zext	 %13721
%13723:	icmp	 %13722 nmatch
%13724:	br	 %13723 for.end for.body

BASIC BLOCK for.body
%13725:	zext	 %13721
%13726:	getelementptr	 %13632 XXX XXX
%13727:	load	 %13726
%13728:	getelementptr	 %13727 %13725
%13729:	load	 %13728
%13730:	zext	 %13721
%13731:	getelementptr	 pmatch %13730
%13732:	getelementptr	 %13731 XXX XXX
%13733:	store	 %13729 %13732
%13734:	zext	 %13721
%13735:	getelementptr	 %13632 XXX XXX
%13736:	load	 %13735
%13737:	getelementptr	 %13736 %13734
%13738:	load	 %13737
%13739:	zext	 %13721
%13740:	getelementptr	 pmatch %13739
%13741:	getelementptr	 %13740 XXX XXX
%13742:	store	 %13738 %13741
%13743:	br	 for.inc

BASIC BLOCK for.inc
%13744:	add	 %13721 XXX
%13745:	br	 for.cond

BASIC BLOCK for.end
%13746:	br	 if.end54

BASIC BLOCK if.end54
%13747:	getelementptr	 %13632 XXX XXX
%13748:	load	 %13747
%13749:	bitcast	 %13748
%13750:	call	 %13749 free
%13751:	getelementptr	 %13632 XXX XXX
%13752:	load	 %13751
%13753:	bitcast	 %13752
%13754:	call	 %13753 free
%13755:	br	 if.end57

BASIC BLOCK if.end57
%13756:	icmp	 %13715 XXX
%13757:	select	 %13756 XXX XXX
%13758:	br	 return

BASIC BLOCK return
%13759:	phi	 XXX %13757
%13760:	ret	 %13759

FUNCTION regerror

BASIC BLOCK entry
%13761:	icmp	 errcode XXX
%13762:	br	 %13761 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%13763:	icmp	 errcode XXX
%13764:	br	 %13763 if.end if.then

BASIC BLOCK if.then
%13765:	call	 abort
%13766:	unreachable	

BASIC BLOCK if.end
%13767:	sext	 errcode
%13768:	getelementptr	 re_error_msgid XXX %13767
%13769:	load	 %13768
%13770:	call	 %13769 gettext
%13771:	call	 %13770 strlen
%13772:	add	 %13771 XXX
%13773:	icmp	 errbuf_size XXX
%13774:	br	 %13773 if.end12 if.then4

BASIC BLOCK if.then4
%13775:	icmp	 %13772 errbuf_size
%13776:	br	 %13775 if.else if.then6

BASIC BLOCK if.then6
%13777:	sub	 errbuf_size XXX
%13778:	call	 errbuf %13770 %13777 strncpy
%13779:	sub	 errbuf_size XXX
%13780:	getelementptr	 errbuf %13779
%13781:	store	 XXX %13780
%13782:	br	 if.end11

BASIC BLOCK if.else
%13783:	call	 errbuf %13770 strcpy
%13784:	br	 if.end11

BASIC BLOCK if.end11
%13785:	br	 if.end12

BASIC BLOCK if.end12
%13786:	ret	 %13772

FUNCTION regfree

BASIC BLOCK entry
%13787:	getelementptr	 preg XXX XXX
%13788:	load	 %13787
%13789:	icmp	 %13788 XXX
%13790:	br	 %13789 if.end if.then

BASIC BLOCK if.then
%13791:	getelementptr	 preg XXX XXX
%13792:	load	 %13791
%13793:	call	 %13792 free
%13794:	br	 if.end

BASIC BLOCK if.end
%13795:	getelementptr	 preg XXX XXX
%13796:	store	 XXX %13795
%13797:	getelementptr	 preg XXX XXX
%13798:	store	 XXX %13797
%13799:	getelementptr	 preg XXX XXX
%13800:	store	 XXX %13799
%13801:	getelementptr	 preg XXX XXX
%13802:	load	 %13801
%13803:	icmp	 %13802 XXX
%13804:	br	 %13803 if.end6 if.then4

BASIC BLOCK if.then4
%13805:	getelementptr	 preg XXX XXX
%13806:	load	 %13805
%13807:	call	 %13806 free
%13808:	br	 if.end6

BASIC BLOCK if.end6
%13809:	getelementptr	 preg XXX XXX
%13810:	store	 XXX %13809
%13811:	getelementptr	 preg XXX XXX
%13812:	load	 %13811
%13813:	and	 %13812 XXX
%13814:	store	 %13813 %13811
%13815:	getelementptr	 preg XXX XXX
%13816:	load	 %13815
%13817:	icmp	 %13816 XXX
%13818:	br	 %13817 if.end11 if.then9

BASIC BLOCK if.then9
%13819:	getelementptr	 preg XXX XXX
%13820:	load	 %13819
%13821:	call	 %13820 free
%13822:	br	 if.end11

BASIC BLOCK if.end11
%13823:	getelementptr	 preg XXX XXX
%13824:	store	 XXX %13823
%13825:	ret	

FUNCTION at_begline_loc_p

BASIC BLOCK entry
%13826:	getelementptr	 p XXX
%13827:	icmp	 %13826 pattern
%13828:	br	 %13827 land.end land.rhs

BASIC BLOCK land.rhs
%13829:	getelementptr	 %13826 XXX
%13830:	load	 %13829
%13831:	sext	 %13830
%13832:	icmp	 %13831 XXX
%13833:	br	 land.end

BASIC BLOCK land.end
%13834:	phi	 XXX %13832
%13835:	zext	 %13834
%13836:	trunc	 %13835
%13837:	load	 %13826
%13838:	sext	 %13837
%13839:	icmp	 %13838 XXX
%13840:	br	 %13839 lor.rhs land.lhs.true

BASIC BLOCK land.lhs.true
%13841:	and	 syntax XXX
%13842:	icmp	 %13841 XXX
%13843:	br	 %13842 lor.lhs.false lor.end20

BASIC BLOCK lor.lhs.false
%13844:	sext	 %13836
%13845:	icmp	 %13844 XXX
%13846:	br	 %13845 lor.rhs lor.end20

BASIC BLOCK lor.rhs
%13847:	load	 %13826
%13848:	sext	 %13847
%13849:	icmp	 %13848 XXX
%13850:	br	 %13849 land.end18 land.rhs12

BASIC BLOCK land.rhs12
%13851:	and	 syntax XXX
%13852:	icmp	 %13851 XXX
%13853:	br	 %13852 lor.rhs15 lor.end

BASIC BLOCK lor.rhs15
%13854:	sext	 %13836
%13855:	icmp	 %13854 XXX
%13856:	br	 lor.end

BASIC BLOCK lor.end
%13857:	phi	 XXX %13855
%13858:	br	 land.end18

BASIC BLOCK land.end18
%13859:	phi	 XXX %13857
%13860:	br	 lor.end20

BASIC BLOCK lor.end20
%13861:	phi	 XXX XXX %13859
%13862:	zext	 %13861
%13863:	trunc	 %13862
%13864:	ret	 %13863

FUNCTION at_endline_loc_p

BASIC BLOCK entry
%13865:	load	 p
%13866:	sext	 %13865
%13867:	icmp	 %13866 XXX
%13868:	zext	 %13867
%13869:	trunc	 %13868
%13870:	getelementptr	 p XXX
%13871:	icmp	 %13870 pend
%13872:	br	 %13871 cond.false cond.true

BASIC BLOCK cond.true
%13873:	getelementptr	 p XXX
%13874:	br	 cond.end

BASIC BLOCK cond.false
%13875:	br	 cond.end

BASIC BLOCK cond.end
%13876:	phi	 %13873 XXX
%13877:	and	 syntax XXX
%13878:	icmp	 %13877 XXX
%13879:	br	 %13878 cond.false10 cond.true6

BASIC BLOCK cond.true6
%13880:	load	 p
%13881:	sext	 %13880
%13882:	icmp	 %13881 XXX
%13883:	br	 %13882 lor.rhs lor.end

BASIC BLOCK cond.false10
%13884:	sext	 %13869
%13885:	icmp	 %13884 XXX
%13886:	br	 %13885 lor.rhs land.lhs.true

BASIC BLOCK land.lhs.true
%13887:	icmp	 %13876 XXX
%13888:	br	 %13887 lor.rhs land.lhs.true14

BASIC BLOCK land.lhs.true14
%13889:	load	 %13876
%13890:	sext	 %13889
%13891:	icmp	 %13890 XXX
%13892:	br	 %13891 lor.rhs lor.end

BASIC BLOCK lor.rhs
%13893:	and	 syntax XXX
%13894:	icmp	 %13893 XXX
%13895:	br	 %13894 cond.false24 cond.true20

BASIC BLOCK cond.true20
%13896:	load	 p
%13897:	sext	 %13896
%13898:	icmp	 %13897 XXX
%13899:	zext	 %13898
%13900:	br	 cond.end32

BASIC BLOCK cond.false24
%13901:	sext	 %13869
%13902:	icmp	 %13901 XXX
%13903:	br	 %13902 land.end land.lhs.true27

BASIC BLOCK land.lhs.true27
%13904:	icmp	 %13876 XXX
%13905:	br	 %13904 land.end land.rhs

BASIC BLOCK land.rhs
%13906:	load	 %13876
%13907:	sext	 %13906
%13908:	icmp	 %13907 XXX
%13909:	br	 land.end

BASIC BLOCK land.end
%13910:	phi	 XXX XXX %13908
%13911:	zext	 %13910
%13912:	br	 cond.end32

BASIC BLOCK cond.end32
%13913:	phi	 %13899 %13911
%13914:	icmp	 %13913 XXX
%13915:	br	 lor.end

BASIC BLOCK lor.end
%13916:	phi	 XXX XXX %13914
%13917:	zext	 %13916
%13918:	trunc	 %13917
%13919:	ret	 %13918

FUNCTION store_op1

BASIC BLOCK entry
%13920:	trunc	 op
%13921:	store	 %13920 loc
%13922:	br	 do.body

BASIC BLOCK do.body
%13923:	and	 arg XXX
%13924:	trunc	 %13923
%13925:	getelementptr	 loc XXX
%13926:	getelementptr	 %13925 XXX
%13927:	store	 %13924 %13926
%13928:	ashr	 arg XXX
%13929:	trunc	 %13928
%13930:	getelementptr	 loc XXX
%13931:	getelementptr	 %13930 XXX
%13932:	store	 %13929 %13931
%13933:	br	 do.end

BASIC BLOCK do.end
%13934:	ret	

FUNCTION insert_op1

BASIC BLOCK entry
%13935:	getelementptr	 end XXX
%13936:	br	 while.cond

BASIC BLOCK while.cond
%13937:	phi	 end %13941
%13938:	phi	 %13935 %13943
%13939:	icmp	 %13937 loc
%13940:	br	 %13939 while.end while.body

BASIC BLOCK while.body
%13941:	getelementptr	 %13937 XXX
%13942:	load	 %13941
%13943:	getelementptr	 %13938 XXX
%13944:	store	 %13942 %13943
%13945:	br	 while.cond

BASIC BLOCK while.end
%13946:	call	 op loc arg store_op1
%13947:	ret	

FUNCTION compile_range

BASIC BLOCK entry
%13948:	load	 p_ptr
%13949:	icmp	 %13948 pend
%13950:	br	 %13949 if.end if.then

BASIC BLOCK if.then
%13951:	br	 return

BASIC BLOCK if.end
%13952:	getelementptr	 %13948 XXX
%13953:	load	 %13952
%13954:	zext	 %13953
%13955:	getelementptr	 %13948 XXX
%13956:	load	 %13955
%13957:	zext	 %13956
%13958:	load	 p_ptr
%13959:	getelementptr	 %13958 XXX
%13960:	store	 %13959 p_ptr
%13961:	icmp	 %13954 %13957
%13962:	br	 %13961 if.end6 if.then5

BASIC BLOCK if.then5
%13963:	and	 syntax XXX
%13964:	icmp	 %13963 XXX
%13965:	select	 %13964 XXX XXX
%13966:	br	 return

BASIC BLOCK if.end6
%13967:	br	 for.cond

BASIC BLOCK for.cond
%13968:	phi	 %13954 %14006
%13969:	icmp	 %13968 %13957
%13970:	br	 %13969 for.end for.body

BASIC BLOCK for.body
%13971:	icmp	 translate XXX
%13972:	br	 %13971 cond.false cond.true

BASIC BLOCK cond.true
%13973:	trunc	 %13968
%13974:	zext	 %13973
%13975:	getelementptr	 translate %13974
%13976:	load	 %13975
%13977:	sext	 %13976
%13978:	br	 cond.end

BASIC BLOCK cond.false
%13979:	br	 cond.end

BASIC BLOCK cond.end
%13980:	phi	 %13977 %13968
%13981:	trunc	 %13980
%13982:	zext	 %13981
%13983:	srem	 %13982 XXX
%13984:	shl	 XXX %13983
%13985:	icmp	 translate XXX
%13986:	br	 %13985 cond.false22 cond.true17

BASIC BLOCK cond.true17
%13987:	trunc	 %13968
%13988:	zext	 %13987
%13989:	getelementptr	 translate %13988
%13990:	load	 %13989
%13991:	sext	 %13990
%13992:	br	 cond.end23

BASIC BLOCK cond.false22
%13993:	br	 cond.end23

BASIC BLOCK cond.end23
%13994:	phi	 %13991 %13968
%13995:	trunc	 %13994
%13996:	zext	 %13995
%13997:	sdiv	 %13996 XXX
%13998:	sext	 %13997
%13999:	getelementptr	 b %13998
%14000:	load	 %13999
%14001:	zext	 %14000
%14002:	or	 %14001 %13984
%14003:	trunc	 %14002
%14004:	store	 %14003 %13999
%14005:	br	 for.inc

BASIC BLOCK for.inc
%14006:	add	 %13968 XXX
%14007:	br	 for.cond

BASIC BLOCK for.end
%14008:	br	 return

BASIC BLOCK return
%14009:	phi	 XXX %13965 XXX
%14010:	ret	 %14009

FUNCTION insert_op2

BASIC BLOCK entry
%14011:	getelementptr	 end XXX
%14012:	br	 while.cond

BASIC BLOCK while.cond
%14013:	phi	 end %14017
%14014:	phi	 %14011 %14019
%14015:	icmp	 %14013 loc
%14016:	br	 %14015 while.end while.body

BASIC BLOCK while.body
%14017:	getelementptr	 %14013 XXX
%14018:	load	 %14017
%14019:	getelementptr	 %14014 XXX
%14020:	store	 %14018 %14019
%14021:	br	 while.cond

BASIC BLOCK while.end
%14022:	call	 op loc arg1 arg2 store_op2
%14023:	ret	

FUNCTION store_op2

BASIC BLOCK entry
%14024:	trunc	 op
%14025:	store	 %14024 loc
%14026:	br	 do.body

BASIC BLOCK do.body
%14027:	and	 arg1 XXX
%14028:	trunc	 %14027
%14029:	getelementptr	 loc XXX
%14030:	getelementptr	 %14029 XXX
%14031:	store	 %14028 %14030
%14032:	ashr	 arg1 XXX
%14033:	trunc	 %14032
%14034:	getelementptr	 loc XXX
%14035:	getelementptr	 %14034 XXX
%14036:	store	 %14033 %14035
%14037:	br	 do.end

BASIC BLOCK do.end
%14038:	br	 do.body5

BASIC BLOCK do.body5
%14039:	and	 arg2 XXX
%14040:	trunc	 %14039
%14041:	getelementptr	 loc XXX
%14042:	getelementptr	 %14041 XXX
%14043:	store	 %14040 %14042
%14044:	ashr	 arg2 XXX
%14045:	trunc	 %14044
%14046:	getelementptr	 loc XXX
%14047:	getelementptr	 %14046 XXX
%14048:	store	 %14045 %14047
%14049:	br	 do.end14

BASIC BLOCK do.end14
%14050:	ret	

FUNCTION group_in_compile_stack

BASIC BLOCK entry
%14051:	alloca	 XXX
%14052:	bitcast	 %14051
%14053:	getelementptr	 %14052 XXX XXX
%14054:	store	 compile_stack.coerce0 %14053
%14055:	getelementptr	 %14052 XXX XXX
%14056:	store	 compile_stack.coerce1 %14055
%14057:	getelementptr	 %14051 XXX XXX
%14058:	load	 %14057
%14059:	sub	 %14058 XXX
%14060:	br	 for.cond

BASIC BLOCK for.cond
%14061:	phi	 %14059 %14074
%14062:	icmp	 %14061 XXX
%14063:	br	 %14062 for.end for.body

BASIC BLOCK for.body
%14064:	sext	 %14061
%14065:	getelementptr	 %14051 XXX XXX
%14066:	load	 %14065
%14067:	getelementptr	 %14066 %14064
%14068:	getelementptr	 %14067 XXX XXX
%14069:	load	 %14068
%14070:	icmp	 %14069 regnum
%14071:	br	 %14070 if.end if.then

BASIC BLOCK if.then
%14072:	br	 return

BASIC BLOCK if.end
%14073:	br	 for.inc

BASIC BLOCK for.inc
%14074:	add	 %14061 XXX
%14075:	br	 for.cond

BASIC BLOCK for.end
%14076:	br	 return

BASIC BLOCK return
%14077:	phi	 XXX XXX
%14078:	ret	 %14077

FUNCTION init_syntax_once

BASIC BLOCK entry
%14079:	load	 init_syntax_once.done
%14080:	icmp	 %14079 XXX
%14081:	br	 %14080 if.end if.then

BASIC BLOCK if.then
%14082:	br	 return

BASIC BLOCK if.end
%14083:	call	 XXX XXX XXX XXX XXX llvm.memset.p0i8.i64
%14084:	br	 for.cond

BASIC BLOCK for.cond
%14085:	phi	 XXX %14092
%14086:	icmp	 %14085 XXX
%14087:	br	 %14086 for.end for.body

BASIC BLOCK for.body
%14088:	sext	 %14085
%14089:	getelementptr	 re_syntax_table XXX %14088
%14090:	store	 XXX %14089
%14091:	br	 for.inc

BASIC BLOCK for.inc
%14092:	add	 %14085 XXX
%14093:	br	 for.cond

BASIC BLOCK for.end
%14094:	br	 for.cond1

BASIC BLOCK for.cond1
%14095:	phi	 XXX %14102
%14096:	icmp	 %14095 XXX
%14097:	br	 %14096 for.end8 for.body3

BASIC BLOCK for.body3
%14098:	sext	 %14095
%14099:	getelementptr	 re_syntax_table XXX %14098
%14100:	store	 XXX %14099
%14101:	br	 for.inc6

BASIC BLOCK for.inc6
%14102:	add	 %14095 XXX
%14103:	br	 for.cond1

BASIC BLOCK for.end8
%14104:	br	 for.cond9

BASIC BLOCK for.cond9
%14105:	phi	 XXX %14112
%14106:	icmp	 %14105 XXX
%14107:	br	 %14106 for.end16 for.body11

BASIC BLOCK for.body11
%14108:	sext	 %14105
%14109:	getelementptr	 re_syntax_table XXX %14108
%14110:	store	 XXX %14109
%14111:	br	 for.inc14

BASIC BLOCK for.inc14
%14112:	add	 %14105 XXX
%14113:	br	 for.cond9

BASIC BLOCK for.end16
%14114:	store	 XXX XXX
%14115:	store	 XXX init_syntax_once.done
%14116:	br	 return

BASIC BLOCK return
%14117:	ret	

FUNCTION re_match_2_internal

BASIC BLOCK entry
%14118:	alloca	 XXX
%14119:	alloca	 XXX
%14120:	getelementptr	 bufp XXX XXX
%14121:	load	 %14120
%14122:	getelementptr	 bufp XXX XXX
%14123:	load	 %14122
%14124:	getelementptr	 %14121 %14123
%14125:	getelementptr	 bufp XXX XXX
%14126:	load	 %14125
%14127:	getelementptr	 bufp XXX XXX
%14128:	load	 %14127
%14129:	add	 %14128 XXX
%14130:	br	 do.body

BASIC BLOCK do.body
%14131:	alloca	 XXX
%14132:	bitcast	 %14131
%14133:	getelementptr	 %14119 XXX XXX
%14134:	store	 %14132 %14133
%14135:	getelementptr	 %14119 XXX XXX
%14136:	load	 %14135
%14137:	icmp	 %14136 XXX
%14138:	br	 %14137 if.end if.then

BASIC BLOCK if.then
%14139:	br	 return

BASIC BLOCK if.end
%14140:	getelementptr	 %14119 XXX XXX
%14141:	store	 XXX %14140
%14142:	getelementptr	 %14119 XXX XXX
%14143:	store	 XXX %14142
%14144:	br	 do.end

BASIC BLOCK do.end
%14145:	getelementptr	 bufp XXX XXX
%14146:	load	 %14145
%14147:	icmp	 %14146 XXX
%14148:	br	 %14147 if.else if.then4

BASIC BLOCK if.then4
%14149:	mul	 %14129 XXX
%14150:	alloca	 %14149
%14151:	bitcast	 %14150
%14152:	mul	 %14129 XXX
%14153:	alloca	 %14152
%14154:	bitcast	 %14153
%14155:	mul	 %14129 XXX
%14156:	alloca	 %14155
%14157:	bitcast	 %14156
%14158:	mul	 %14129 XXX
%14159:	alloca	 %14158
%14160:	bitcast	 %14159
%14161:	mul	 %14129 XXX
%14162:	alloca	 %14161
%14163:	bitcast	 %14162
%14164:	mul	 %14129 XXX
%14165:	alloca	 %14164
%14166:	bitcast	 %14165
%14167:	mul	 %14129 XXX
%14168:	alloca	 %14167
%14169:	bitcast	 %14168
%14170:	mul	 %14129 XXX
%14171:	alloca	 %14170
%14172:	bitcast	 %14171
%14173:	mul	 %14129 XXX
%14174:	alloca	 %14173
%14175:	bitcast	 %14174
%14176:	icmp	 %14151 XXX
%14177:	br	 %14176 if.then29 land.lhs.true

BASIC BLOCK land.lhs.true
%14178:	icmp	 %14154 XXX
%14179:	br	 %14178 if.then29 land.lhs.true15

BASIC BLOCK land.lhs.true15
%14180:	icmp	 %14157 XXX
%14181:	br	 %14180 if.then29 land.lhs.true17

BASIC BLOCK land.lhs.true17
%14182:	icmp	 %14160 XXX
%14183:	br	 %14182 if.then29 land.lhs.true19

BASIC BLOCK land.lhs.true19
%14184:	icmp	 %14169 XXX
%14185:	br	 %14184 if.then29 land.lhs.true21

BASIC BLOCK land.lhs.true21
%14186:	icmp	 %14163 XXX
%14187:	br	 %14186 if.then29 land.lhs.true23

BASIC BLOCK land.lhs.true23
%14188:	icmp	 %14166 XXX
%14189:	br	 %14188 if.then29 land.lhs.true25

BASIC BLOCK land.lhs.true25
%14190:	icmp	 %14172 XXX
%14191:	br	 %14190 if.then29 land.lhs.true27

BASIC BLOCK land.lhs.true27
%14192:	icmp	 %14175 XXX
%14193:	br	 %14192 if.then29 if.end59

BASIC BLOCK if.then29
%14194:	br	 do.body30

BASIC BLOCK do.body30
%14195:	icmp	 %14151 XXX
%14196:	br	 %14195 if.end33 if.then32

BASIC BLOCK if.then32
%14197:	br	 if.end33

BASIC BLOCK if.end33
%14198:	icmp	 %14154 XXX
%14199:	br	 %14198 if.end36 if.then35

BASIC BLOCK if.then35
%14200:	br	 if.end36

BASIC BLOCK if.end36
%14201:	icmp	 %14157 XXX
%14202:	br	 %14201 if.end39 if.then38

BASIC BLOCK if.then38
%14203:	br	 if.end39

BASIC BLOCK if.end39
%14204:	icmp	 %14160 XXX
%14205:	br	 %14204 if.end42 if.then41

BASIC BLOCK if.then41
%14206:	br	 if.end42

BASIC BLOCK if.end42
%14207:	icmp	 %14163 XXX
%14208:	br	 %14207 if.end45 if.then44

BASIC BLOCK if.then44
%14209:	br	 if.end45

BASIC BLOCK if.end45
%14210:	icmp	 %14166 XXX
%14211:	br	 %14210 if.end48 if.then47

BASIC BLOCK if.then47
%14212:	br	 if.end48

BASIC BLOCK if.end48
%14213:	icmp	 %14169 XXX
%14214:	br	 %14213 if.end51 if.then50

BASIC BLOCK if.then50
%14215:	br	 if.end51

BASIC BLOCK if.end51
%14216:	icmp	 %14172 XXX
%14217:	br	 %14216 if.end54 if.then53

BASIC BLOCK if.then53
%14218:	br	 if.end54

BASIC BLOCK if.end54
%14219:	icmp	 %14175 XXX
%14220:	br	 %14219 if.end57 if.then56

BASIC BLOCK if.then56
%14221:	br	 if.end57

BASIC BLOCK if.end57
%14222:	br	 do.end58

BASIC BLOCK do.end58
%14223:	br	 return

BASIC BLOCK if.end59
%14224:	br	 if.end60

BASIC BLOCK if.else
%14225:	br	 if.end60

BASIC BLOCK if.end60
%14226:	phi	 %14175 XXX
%14227:	phi	 %14172 XXX
%14228:	phi	 %14166 XXX
%14229:	phi	 %14163 XXX
%14230:	phi	 %14169 XXX
%14231:	phi	 %14160 XXX
%14232:	phi	 %14157 XXX
%14233:	phi	 %14154 XXX
%14234:	phi	 %14151 XXX
%14235:	icmp	 pos XXX
%14236:	br	 %14235 lor.lhs.false if.then64

BASIC BLOCK lor.lhs.false
%14237:	add	 size1 size2
%14238:	icmp	 pos %14237
%14239:	br	 %14238 if.end94 if.then64

BASIC BLOCK if.then64
%14240:	br	 do.body65

BASIC BLOCK do.body65
%14241:	icmp	 %14234 XXX
%14242:	br	 %14241 if.end68 if.then67

BASIC BLOCK if.then67
%14243:	br	 if.end68

BASIC BLOCK if.end68
%14244:	icmp	 %14233 XXX
%14245:	br	 %14244 if.end71 if.then70

BASIC BLOCK if.then70
%14246:	br	 if.end71

BASIC BLOCK if.end71
%14247:	icmp	 %14232 XXX
%14248:	br	 %14247 if.end74 if.then73

BASIC BLOCK if.then73
%14249:	br	 if.end74

BASIC BLOCK if.end74
%14250:	icmp	 %14231 XXX
%14251:	br	 %14250 if.end77 if.then76

BASIC BLOCK if.then76
%14252:	br	 if.end77

BASIC BLOCK if.end77
%14253:	icmp	 %14229 XXX
%14254:	br	 %14253 if.end80 if.then79

BASIC BLOCK if.then79
%14255:	br	 if.end80

BASIC BLOCK if.end80
%14256:	icmp	 %14228 XXX
%14257:	br	 %14256 if.end83 if.then82

BASIC BLOCK if.then82
%14258:	br	 if.end83

BASIC BLOCK if.end83
%14259:	icmp	 %14230 XXX
%14260:	br	 %14259 if.end86 if.then85

BASIC BLOCK if.then85
%14261:	br	 if.end86

BASIC BLOCK if.end86
%14262:	icmp	 %14227 XXX
%14263:	br	 %14262 if.end89 if.then88

BASIC BLOCK if.then88
%14264:	br	 if.end89

BASIC BLOCK if.end89
%14265:	icmp	 %14226 XXX
%14266:	br	 %14265 if.end92 if.then91

BASIC BLOCK if.then91
%14267:	br	 if.end92

BASIC BLOCK if.end92
%14268:	br	 do.end93

BASIC BLOCK do.end93
%14269:	br	 return

BASIC BLOCK if.end94
%14270:	br	 for.cond

BASIC BLOCK for.cond
%14271:	phi	 XXX %14317
%14272:	zext	 %14271
%14273:	icmp	 %14272 %14129
%14274:	br	 %14273 for.end for.body

BASIC BLOCK for.body
%14275:	sext	 %14271
%14276:	getelementptr	 %14231 %14275
%14277:	store	 reg_unset_dummy %14276
%14278:	sext	 %14271
%14279:	getelementptr	 %14232 %14278
%14280:	store	 reg_unset_dummy %14279
%14281:	sext	 %14271
%14282:	getelementptr	 %14233 %14281
%14283:	store	 reg_unset_dummy %14282
%14284:	sext	 %14271
%14285:	getelementptr	 %14234 %14284
%14286:	store	 reg_unset_dummy %14285
%14287:	sext	 %14271
%14288:	getelementptr	 %14230 %14287
%14289:	bitcast	 %14288
%14290:	bitcast	 %14289
%14291:	load	 %14290
%14292:	and	 %14291 XXX
%14293:	or	 %14292 XXX
%14294:	store	 %14293 %14290
%14295:	sext	 %14271
%14296:	getelementptr	 %14230 %14295
%14297:	bitcast	 %14296
%14298:	bitcast	 %14297
%14299:	load	 %14298
%14300:	and	 %14299 XXX
%14301:	store	 %14300 %14298
%14302:	sext	 %14271
%14303:	getelementptr	 %14230 %14302
%14304:	bitcast	 %14303
%14305:	bitcast	 %14304
%14306:	load	 %14305
%14307:	and	 %14306 XXX
%14308:	store	 %14307 %14305
%14309:	sext	 %14271
%14310:	getelementptr	 %14230 %14309
%14311:	bitcast	 %14310
%14312:	bitcast	 %14311
%14313:	load	 %14312
%14314:	and	 %14313 XXX
%14315:	store	 %14314 %14312
%14316:	br	 for.inc

BASIC BLOCK for.inc
%14317:	add	 %14271 XXX
%14318:	br	 for.cond

BASIC BLOCK for.end
%14319:	icmp	 size2 XXX
%14320:	br	 %14319 if.end126 land.lhs.true122

BASIC BLOCK land.lhs.true122
%14321:	icmp	 string1 XXX
%14322:	br	 %14321 if.end126 if.then125

BASIC BLOCK if.then125
%14323:	br	 if.end126

BASIC BLOCK if.end126
%14324:	phi	 size1 size2 size2
%14325:	phi	 string1 string2 string2
%14326:	phi	 XXX size1 size1
%14327:	phi	 XXX string1 string1
%14328:	sext	 %14326
%14329:	getelementptr	 %14327 %14328
%14330:	sext	 %14324
%14331:	getelementptr	 %14325 %14330
%14332:	icmp	 stop %14326
%14333:	br	 %14332 if.else135 if.then132

BASIC BLOCK if.then132
%14334:	sext	 stop
%14335:	getelementptr	 %14327 %14334
%14336:	br	 if.end140

BASIC BLOCK if.else135
%14337:	sext	 stop
%14338:	getelementptr	 %14325 %14337
%14339:	sext	 %14326
%14340:	sub	 XXX %14339
%14341:	getelementptr	 %14338 %14340
%14342:	br	 if.end140

BASIC BLOCK if.end140
%14343:	phi	 %14325 %14341
%14344:	phi	 %14335 %14329
%14345:	icmp	 %14326 XXX
%14346:	br	 %14345 if.else149 land.lhs.true143

BASIC BLOCK land.lhs.true143
%14347:	icmp	 pos %14326
%14348:	br	 %14347 if.else149 if.then146

BASIC BLOCK if.then146
%14349:	sext	 pos
%14350:	getelementptr	 %14327 %14349
%14351:	br	 if.end155

BASIC BLOCK if.else149
%14352:	sext	 pos
%14353:	getelementptr	 %14325 %14352
%14354:	sext	 %14326
%14355:	sub	 XXX %14354
%14356:	getelementptr	 %14353 %14355
%14357:	br	 if.end155

BASIC BLOCK if.end155
%14358:	phi	 %14344 %14343
%14359:	phi	 %14350 %14356
%14360:	br	 for.cond156

BASIC BLOCK for.cond156
%14361:	phi	 XXX XXX %17401
%14362:	phi	 XXX %17409 %14362
%14363:	phi	 XXX %17410 %14363
%14364:	phi	 XXX %17451 %17402
%14365:	phi	 XXX %17462 %17403
%14366:	phi	 XXX %14366 %17404
%14367:	phi	 %14121 %17440 %17405
%14368:	phi	 %14358 %17564 %17406
%14369:	phi	 %14359 %17430 %17407
%14370:	icmp	 %14367 %14124
%14371:	br	 %14370 if.end572 if.then159

BASIC BLOCK if.then159
%14372:	icmp	 %14369 %14343
%14373:	br	 %14372 if.end240 if.then162

BASIC BLOCK if.then162
%14374:	icmp	 %14326 XXX
%14375:	br	 %14374 land.end land.lhs.true164

BASIC BLOCK land.lhs.true164
%14376:	icmp	 %14327 %14362
%14377:	br	 %14376 land.end land.rhs

BASIC BLOCK land.rhs
%14378:	sext	 %14326
%14379:	getelementptr	 %14327 %14378
%14380:	icmp	 %14362 %14379
%14381:	br	 land.end

BASIC BLOCK land.end
%14382:	phi	 XXX XXX %14380
%14383:	zext	 %14382
%14384:	icmp	 %14368 %14344
%14385:	zext	 %14384
%14386:	icmp	 %14383 %14385
%14387:	zext	 %14386
%14388:	trunc	 %14387
%14389:	icmp	 %14388 XXX
%14390:	br	 %14389 if.else181 if.then177

BASIC BLOCK if.then177
%14391:	icmp	 %14369 %14362
%14392:	zext	 %14391
%14393:	trunc	 %14392
%14394:	br	 if.end185

BASIC BLOCK if.else181
%14395:	icmp	 %14368 %14344
%14396:	xor	 %14395 XXX
%14397:	zext	 %14396
%14398:	trunc	 %14397
%14399:	br	 if.end185

BASIC BLOCK if.end185
%14400:	phi	 %14393 %14398
%14401:	getelementptr	 %14119 XXX XXX
%14402:	load	 %14401
%14403:	icmp	 %14402 XXX
%14404:	br	 %14403 if.then189 if.else212

BASIC BLOCK if.then189
%14405:	icmp	 %14363 XXX
%14406:	br	 %14405 if.then194 lor.lhs.false191

BASIC BLOCK lor.lhs.false191
%14407:	sext	 %14400
%14408:	icmp	 %14407 XXX
%14409:	br	 %14408 if.end211 if.then194

BASIC BLOCK if.then194
%14410:	br	 for.cond195

BASIC BLOCK for.cond195
%14411:	phi	 XXX %14428
%14412:	zext	 %14411
%14413:	icmp	 %14412 %14129
%14414:	br	 %14413 for.end210 for.body199

BASIC BLOCK for.body199
%14415:	sext	 %14411
%14416:	getelementptr	 %14234 %14415
%14417:	load	 %14416
%14418:	sext	 %14411
%14419:	getelementptr	 %14229 %14418
%14420:	store	 %14417 %14419
%14421:	sext	 %14411
%14422:	getelementptr	 %14233 %14421
%14423:	load	 %14422
%14424:	sext	 %14411
%14425:	getelementptr	 %14228 %14424
%14426:	store	 %14423 %14425
%14427:	br	 for.inc208

BASIC BLOCK for.inc208
%14428:	add	 %14411 XXX
%14429:	br	 for.cond195

BASIC BLOCK for.end210
%14430:	br	 if.end211

BASIC BLOCK if.end211
%14431:	phi	 %14369 %14362
%14432:	phi	 XXX %14363
%14433:	br	 fail

BASIC BLOCK if.else212
%14434:	icmp	 %14363 XXX
%14435:	br	 %14434 if.end238 land.lhs.true214

BASIC BLOCK land.lhs.true214
%14436:	icmp	 %14400 XXX
%14437:	br	 %14436 if.then216 if.end238

BASIC BLOCK if.then216
%14438:	br	 restore_best_regs

BASIC BLOCK restore_best_regs
%14439:	phi	 %14362 %17409
%14440:	icmp	 %14439 %14327
%14441:	br	 %14440 cond.false land.lhs.true219

BASIC BLOCK land.lhs.true219
%14442:	icmp	 %14439 %14329
%14443:	br	 %14442 cond.false cond.true

BASIC BLOCK cond.true
%14444:	br	 cond.end

BASIC BLOCK cond.false
%14445:	br	 cond.end

BASIC BLOCK cond.end
%14446:	phi	 %14344 %14343
%14447:	br	 for.cond222

BASIC BLOCK for.cond222
%14448:	phi	 XXX %14465
%14449:	zext	 %14448
%14450:	icmp	 %14449 %14129
%14451:	br	 %14450 for.end237 for.body226

BASIC BLOCK for.body226
%14452:	sext	 %14448
%14453:	getelementptr	 %14229 %14452
%14454:	load	 %14453
%14455:	sext	 %14448
%14456:	getelementptr	 %14234 %14455
%14457:	store	 %14454 %14456
%14458:	sext	 %14448
%14459:	getelementptr	 %14228 %14458
%14460:	load	 %14459
%14461:	sext	 %14448
%14462:	getelementptr	 %14233 %14461
%14463:	store	 %14460 %14462
%14464:	br	 for.inc235

BASIC BLOCK for.inc235
%14465:	add	 %14448 XXX
%14466:	br	 for.cond222

BASIC BLOCK for.end237
%14467:	br	 if.end238

BASIC BLOCK if.end238
%14468:	phi	 %14368 %14446 %14368
%14469:	phi	 %14369 %14439 %14369
%14470:	br	 if.end239

BASIC BLOCK if.end239
%14471:	br	 if.end240

BASIC BLOCK if.end240
%14472:	phi	 %14468 %14368
%14473:	phi	 %14469 %14369
%14474:	br	 succeed_label

BASIC BLOCK succeed_label
%14475:	phi	 %14472 %14368
%14476:	phi	 %14473 %14369
%14477:	icmp	 regs XXX
%14478:	br	 %14477 if.end526 land.lhs.true242

BASIC BLOCK land.lhs.true242
%14479:	getelementptr	 bufp XXX XXX
%14480:	load	 %14479
%14481:	lshr	 %14480 XXX
%14482:	and	 %14481 XXX
%14483:	zext	 %14482
%14484:	icmp	 %14483 XXX
%14485:	br	 %14484 if.then246 if.end526

BASIC BLOCK if.then246
%14486:	getelementptr	 bufp XXX XXX
%14487:	load	 %14486
%14488:	lshr	 %14487 XXX
%14489:	and	 %14488 XXX
%14490:	zext	 %14489
%14491:	icmp	 %14490 XXX
%14492:	br	 %14491 if.else313 if.then253

BASIC BLOCK if.then253
%14493:	add	 %14129 XXX
%14494:	icmp	 XXX %14493
%14495:	br	 %14494 cond.false258 cond.true257

BASIC BLOCK cond.true257
%14496:	br	 cond.end260

BASIC BLOCK cond.false258
%14497:	add	 %14129 XXX
%14498:	br	 cond.end260

BASIC BLOCK cond.end260
%14499:	phi	 XXX %14497
%14500:	trunc	 %14499
%14501:	getelementptr	 regs XXX XXX
%14502:	store	 %14500 %14501
%14503:	getelementptr	 regs XXX XXX
%14504:	load	 %14503
%14505:	zext	 %14504
%14506:	mul	 %14505 XXX
%14507:	call	 %14506 xmalloc
%14508:	bitcast	 %14507
%14509:	getelementptr	 regs XXX XXX
%14510:	store	 %14508 %14509
%14511:	getelementptr	 regs XXX XXX
%14512:	load	 %14511
%14513:	zext	 %14512
%14514:	mul	 %14513 XXX
%14515:	call	 %14514 xmalloc
%14516:	bitcast	 %14515
%14517:	getelementptr	 regs XXX XXX
%14518:	store	 %14516 %14517
%14519:	getelementptr	 regs XXX XXX
%14520:	load	 %14519
%14521:	icmp	 %14520 XXX
%14522:	br	 %14521 lor.lhs.false274 if.then278

BASIC BLOCK lor.lhs.false274
%14523:	getelementptr	 regs XXX XXX
%14524:	load	 %14523
%14525:	icmp	 %14524 XXX
%14526:	br	 %14525 if.end308 if.then278

BASIC BLOCK if.then278
%14527:	br	 do.body279

BASIC BLOCK do.body279
%14528:	icmp	 %14234 XXX
%14529:	br	 %14528 if.end282 if.then281

BASIC BLOCK if.then281
%14530:	br	 if.end282

BASIC BLOCK if.end282
%14531:	icmp	 %14233 XXX
%14532:	br	 %14531 if.end285 if.then284

BASIC BLOCK if.then284
%14533:	br	 if.end285

BASIC BLOCK if.end285
%14534:	icmp	 %14232 XXX
%14535:	br	 %14534 if.end288 if.then287

BASIC BLOCK if.then287
%14536:	br	 if.end288

BASIC BLOCK if.end288
%14537:	icmp	 %14231 XXX
%14538:	br	 %14537 if.end291 if.then290

BASIC BLOCK if.then290
%14539:	br	 if.end291

BASIC BLOCK if.end291
%14540:	icmp	 %14229 XXX
%14541:	br	 %14540 if.end294 if.then293

BASIC BLOCK if.then293
%14542:	br	 if.end294

BASIC BLOCK if.end294
%14543:	icmp	 %14228 XXX
%14544:	br	 %14543 if.end297 if.then296

BASIC BLOCK if.then296
%14545:	br	 if.end297

BASIC BLOCK if.end297
%14546:	icmp	 %14230 XXX
%14547:	br	 %14546 if.end300 if.then299

BASIC BLOCK if.then299
%14548:	br	 if.end300

BASIC BLOCK if.end300
%14549:	icmp	 %14227 XXX
%14550:	br	 %14549 if.end303 if.then302

BASIC BLOCK if.then302
%14551:	br	 if.end303

BASIC BLOCK if.end303
%14552:	icmp	 %14226 XXX
%14553:	br	 %14552 if.end306 if.then305

BASIC BLOCK if.then305
%14554:	br	 if.end306

BASIC BLOCK if.end306
%14555:	br	 do.end307

BASIC BLOCK do.end307
%14556:	br	 return

BASIC BLOCK if.end308
%14557:	getelementptr	 bufp XXX XXX
%14558:	load	 %14557
%14559:	and	 %14558 XXX
%14560:	or	 %14559 XXX
%14561:	store	 %14560 %14557
%14562:	br	 if.end384

BASIC BLOCK if.else313
%14563:	getelementptr	 bufp XXX XXX
%14564:	load	 %14563
%14565:	lshr	 %14564 XXX
%14566:	and	 %14565 XXX
%14567:	zext	 %14566
%14568:	icmp	 %14567 XXX
%14569:	br	 %14568 if.else382 if.then321

BASIC BLOCK if.then321
%14570:	getelementptr	 regs XXX XXX
%14571:	load	 %14570
%14572:	zext	 %14571
%14573:	add	 %14129 XXX
%14574:	icmp	 %14572 %14573
%14575:	br	 %14574 if.end381 if.then327

BASIC BLOCK if.then327
%14576:	add	 %14129 XXX
%14577:	trunc	 %14576
%14578:	getelementptr	 regs XXX XXX
%14579:	store	 %14577 %14578
%14580:	getelementptr	 regs XXX XXX
%14581:	load	 %14580
%14582:	bitcast	 %14581
%14583:	getelementptr	 regs XXX XXX
%14584:	load	 %14583
%14585:	zext	 %14584
%14586:	mul	 %14585 XXX
%14587:	call	 %14582 %14586 realloc
%14588:	bitcast	 %14587
%14589:	getelementptr	 regs XXX XXX
%14590:	store	 %14588 %14589
%14591:	getelementptr	 regs XXX XXX
%14592:	load	 %14591
%14593:	bitcast	 %14592
%14594:	getelementptr	 regs XXX XXX
%14595:	load	 %14594
%14596:	zext	 %14595
%14597:	mul	 %14596 XXX
%14598:	call	 %14593 %14597 realloc
%14599:	bitcast	 %14598
%14600:	getelementptr	 regs XXX XXX
%14601:	store	 %14599 %14600
%14602:	getelementptr	 regs XXX XXX
%14603:	load	 %14602
%14604:	icmp	 %14603 XXX
%14605:	br	 %14604 lor.lhs.false346 if.then350

BASIC BLOCK lor.lhs.false346
%14606:	getelementptr	 regs XXX XXX
%14607:	load	 %14606
%14608:	icmp	 %14607 XXX
%14609:	br	 %14608 if.end380 if.then350

BASIC BLOCK if.then350
%14610:	br	 do.body351

BASIC BLOCK do.body351
%14611:	icmp	 %14234 XXX
%14612:	br	 %14611 if.end354 if.then353

BASIC BLOCK if.then353
%14613:	br	 if.end354

BASIC BLOCK if.end354
%14614:	icmp	 %14233 XXX
%14615:	br	 %14614 if.end357 if.then356

BASIC BLOCK if.then356
%14616:	br	 if.end357

BASIC BLOCK if.end357
%14617:	icmp	 %14232 XXX
%14618:	br	 %14617 if.end360 if.then359

BASIC BLOCK if.then359
%14619:	br	 if.end360

BASIC BLOCK if.end360
%14620:	icmp	 %14231 XXX
%14621:	br	 %14620 if.end363 if.then362

BASIC BLOCK if.then362
%14622:	br	 if.end363

BASIC BLOCK if.end363
%14623:	icmp	 %14229 XXX
%14624:	br	 %14623 if.end366 if.then365

BASIC BLOCK if.then365
%14625:	br	 if.end366

BASIC BLOCK if.end366
%14626:	icmp	 %14228 XXX
%14627:	br	 %14626 if.end369 if.then368

BASIC BLOCK if.then368
%14628:	br	 if.end369

BASIC BLOCK if.end369
%14629:	icmp	 %14230 XXX
%14630:	br	 %14629 if.end372 if.then371

BASIC BLOCK if.then371
%14631:	br	 if.end372

BASIC BLOCK if.end372
%14632:	icmp	 %14227 XXX
%14633:	br	 %14632 if.end375 if.then374

BASIC BLOCK if.then374
%14634:	br	 if.end375

BASIC BLOCK if.end375
%14635:	icmp	 %14226 XXX
%14636:	br	 %14635 if.end378 if.then377

BASIC BLOCK if.then377
%14637:	br	 if.end378

BASIC BLOCK if.end378
%14638:	br	 do.end379

BASIC BLOCK do.end379
%14639:	br	 return

BASIC BLOCK if.end380
%14640:	br	 if.end381

BASIC BLOCK if.end381
%14641:	br	 if.end383

BASIC BLOCK if.else382
%14642:	br	 if.end383

BASIC BLOCK if.end383
%14643:	br	 if.end384

BASIC BLOCK if.end384
%14644:	getelementptr	 regs XXX XXX
%14645:	load	 %14644
%14646:	icmp	 %14645 XXX
%14647:	br	 %14646 if.end406 if.then388

BASIC BLOCK if.then388
%14648:	getelementptr	 regs XXX XXX
%14649:	load	 %14648
%14650:	getelementptr	 %14649 XXX
%14651:	store	 pos %14650
%14652:	icmp	 %14475 %14344
%14653:	br	 %14652 cond.false395 cond.true393

BASIC BLOCK cond.true393
%14654:	ptrtoint	 %14476
%14655:	ptrtoint	 %14327
%14656:	sub	 %14654 %14655
%14657:	trunc	 %14656
%14658:	br	 cond.end402

BASIC BLOCK cond.false395
%14659:	ptrtoint	 %14476
%14660:	ptrtoint	 %14325
%14661:	sub	 %14659 %14660
%14662:	sext	 %14326
%14663:	add	 %14661 %14662
%14664:	trunc	 %14663
%14665:	br	 cond.end402

BASIC BLOCK cond.end402
%14666:	phi	 %14657 %14664
%14667:	getelementptr	 regs XXX XXX
%14668:	load	 %14667
%14669:	getelementptr	 %14668 XXX
%14670:	store	 %14666 %14669
%14671:	br	 if.end406

BASIC BLOCK if.end406
%14672:	br	 for.cond407

BASIC BLOCK for.cond407
%14673:	phi	 XXX %14787
%14674:	zext	 %14673
%14675:	getelementptr	 regs XXX XXX
%14676:	load	 %14675
%14677:	zext	 %14676
%14678:	icmp	 %14129 %14677
%14679:	br	 %14678 cond.false414 cond.true413

BASIC BLOCK cond.true413
%14680:	br	 cond.end417

BASIC BLOCK cond.false414
%14681:	getelementptr	 regs XXX XXX
%14682:	load	 %14681
%14683:	zext	 %14682
%14684:	br	 cond.end417

BASIC BLOCK cond.end417
%14685:	phi	 %14129 %14683
%14686:	icmp	 %14674 %14685
%14687:	br	 %14686 for.end510 for.body421

BASIC BLOCK for.body421
%14688:	sext	 %14673
%14689:	getelementptr	 %14234 %14688
%14690:	load	 %14689
%14691:	icmp	 %14690 reg_unset_dummy
%14692:	br	 %14691 lor.lhs.false426 if.then431

BASIC BLOCK lor.lhs.false426
%14693:	sext	 %14673
%14694:	getelementptr	 %14233 %14693
%14695:	load	 %14694
%14696:	icmp	 %14695 reg_unset_dummy
%14697:	br	 %14696 if.else438 if.then431

BASIC BLOCK if.then431
%14698:	sext	 %14673
%14699:	getelementptr	 regs XXX XXX
%14700:	load	 %14699
%14701:	getelementptr	 %14700 %14698
%14702:	store	 XXX %14701
%14703:	sext	 %14673
%14704:	getelementptr	 regs XXX XXX
%14705:	load	 %14704
%14706:	getelementptr	 %14705 %14703
%14707:	store	 XXX %14706
%14708:	br	 if.end507

BASIC BLOCK if.else438
%14709:	icmp	 %14326 XXX
%14710:	br	 %14709 cond.false459 land.lhs.true440

BASIC BLOCK land.lhs.true440
%14711:	sext	 %14673
%14712:	getelementptr	 %14234 %14711
%14713:	load	 %14712
%14714:	icmp	 %14327 %14713
%14715:	br	 %14714 cond.false459 land.lhs.true445

BASIC BLOCK land.lhs.true445
%14716:	sext	 %14673
%14717:	getelementptr	 %14234 %14716
%14718:	load	 %14717
%14719:	sext	 %14326
%14720:	getelementptr	 %14327 %14719
%14721:	icmp	 %14718 %14720
%14722:	br	 %14721 cond.false459 cond.true452

BASIC BLOCK cond.true452
%14723:	sext	 %14673
%14724:	getelementptr	 %14234 %14723
%14725:	load	 %14724
%14726:	ptrtoint	 %14725
%14727:	ptrtoint	 %14327
%14728:	sub	 %14726 %14727
%14729:	trunc	 %14728
%14730:	br	 cond.end468

BASIC BLOCK cond.false459
%14731:	sext	 %14673
%14732:	getelementptr	 %14234 %14731
%14733:	load	 %14732
%14734:	ptrtoint	 %14733
%14735:	ptrtoint	 %14325
%14736:	sub	 %14734 %14735
%14737:	sext	 %14326
%14738:	add	 %14736 %14737
%14739:	trunc	 %14738
%14740:	br	 cond.end468

BASIC BLOCK cond.end468
%14741:	phi	 %14729 %14739
%14742:	sext	 %14673
%14743:	getelementptr	 regs XXX XXX
%14744:	load	 %14743
%14745:	getelementptr	 %14744 %14742
%14746:	store	 %14741 %14745
%14747:	icmp	 %14326 XXX
%14748:	br	 %14747 cond.false493 land.lhs.true474

BASIC BLOCK land.lhs.true474
%14749:	sext	 %14673
%14750:	getelementptr	 %14233 %14749
%14751:	load	 %14750
%14752:	icmp	 %14327 %14751
%14753:	br	 %14752 cond.false493 land.lhs.true479

BASIC BLOCK land.lhs.true479
%14754:	sext	 %14673
%14755:	getelementptr	 %14233 %14754
%14756:	load	 %14755
%14757:	sext	 %14326
%14758:	getelementptr	 %14327 %14757
%14759:	icmp	 %14756 %14758
%14760:	br	 %14759 cond.false493 cond.true486

BASIC BLOCK cond.true486
%14761:	sext	 %14673
%14762:	getelementptr	 %14233 %14761
%14763:	load	 %14762
%14764:	ptrtoint	 %14763
%14765:	ptrtoint	 %14327
%14766:	sub	 %14764 %14765
%14767:	trunc	 %14766
%14768:	br	 cond.end502

BASIC BLOCK cond.false493
%14769:	sext	 %14673
%14770:	getelementptr	 %14233 %14769
%14771:	load	 %14770
%14772:	ptrtoint	 %14771
%14773:	ptrtoint	 %14325
%14774:	sub	 %14772 %14773
%14775:	sext	 %14326
%14776:	add	 %14774 %14775
%14777:	trunc	 %14776
%14778:	br	 cond.end502

BASIC BLOCK cond.end502
%14779:	phi	 %14767 %14777
%14780:	sext	 %14673
%14781:	getelementptr	 regs XXX XXX
%14782:	load	 %14781
%14783:	getelementptr	 %14782 %14780
%14784:	store	 %14779 %14783
%14785:	br	 if.end507

BASIC BLOCK if.end507
%14786:	br	 for.inc508

BASIC BLOCK for.inc508
%14787:	add	 %14673 XXX
%14788:	br	 for.cond407

BASIC BLOCK for.end510
%14789:	trunc	 %14129
%14790:	br	 for.cond512

BASIC BLOCK for.cond512
%14791:	phi	 %14789 %14807
%14792:	getelementptr	 regs XXX XXX
%14793:	load	 %14792
%14794:	icmp	 %14791 %14793
%14795:	br	 %14794 for.end525 for.body516

BASIC BLOCK for.body516
%14796:	sext	 %14791
%14797:	getelementptr	 regs XXX XXX
%14798:	load	 %14797
%14799:	getelementptr	 %14798 %14796
%14800:	store	 XXX %14799
%14801:	sext	 %14791
%14802:	getelementptr	 regs XXX XXX
%14803:	load	 %14802
%14804:	getelementptr	 %14803 %14801
%14805:	store	 XXX %14804
%14806:	br	 for.inc523

BASIC BLOCK for.inc523
%14807:	add	 %14791 XXX
%14808:	br	 for.cond512

BASIC BLOCK for.end525
%14809:	br	 if.end526

BASIC BLOCK if.end526
%14810:	sext	 pos
%14811:	sub	 XXX %14810
%14812:	getelementptr	 %14476 %14811
%14813:	icmp	 %14475 %14344
%14814:	br	 %14813 cond.false533 cond.true532

BASIC BLOCK cond.true532
%14815:	br	 cond.end537

BASIC BLOCK cond.false533
%14816:	sext	 %14326
%14817:	sub	 XXX %14816
%14818:	getelementptr	 %14325 %14817
%14819:	br	 cond.end537

BASIC BLOCK cond.end537
%14820:	phi	 %14327 %14818
%14821:	ptrtoint	 %14812
%14822:	ptrtoint	 %14820
%14823:	sub	 %14821 %14822
%14824:	trunc	 %14823
%14825:	br	 do.body543

BASIC BLOCK do.body543
%14826:	icmp	 %14234 XXX
%14827:	br	 %14826 if.end546 if.then545

BASIC BLOCK if.then545
%14828:	br	 if.end546

BASIC BLOCK if.end546
%14829:	icmp	 %14233 XXX
%14830:	br	 %14829 if.end549 if.then548

BASIC BLOCK if.then548
%14831:	br	 if.end549

BASIC BLOCK if.end549
%14832:	icmp	 %14232 XXX
%14833:	br	 %14832 if.end552 if.then551

BASIC BLOCK if.then551
%14834:	br	 if.end552

BASIC BLOCK if.end552
%14835:	icmp	 %14231 XXX
%14836:	br	 %14835 if.end555 if.then554

BASIC BLOCK if.then554
%14837:	br	 if.end555

BASIC BLOCK if.end555
%14838:	icmp	 %14229 XXX
%14839:	br	 %14838 if.end558 if.then557

BASIC BLOCK if.then557
%14840:	br	 if.end558

BASIC BLOCK if.end558
%14841:	icmp	 %14228 XXX
%14842:	br	 %14841 if.end561 if.then560

BASIC BLOCK if.then560
%14843:	br	 if.end561

BASIC BLOCK if.end561
%14844:	icmp	 %14230 XXX
%14845:	br	 %14844 if.end564 if.then563

BASIC BLOCK if.then563
%14846:	br	 if.end564

BASIC BLOCK if.end564
%14847:	icmp	 %14227 XXX
%14848:	br	 %14847 if.end567 if.then566

BASIC BLOCK if.then566
%14849:	br	 if.end567

BASIC BLOCK if.end567
%14850:	icmp	 %14226 XXX
%14851:	br	 %14850 if.end570 if.then569

BASIC BLOCK if.then569
%14852:	br	 if.end570

BASIC BLOCK if.end570
%14853:	br	 do.end571

BASIC BLOCK do.end571
%14854:	br	 return

BASIC BLOCK if.end572
%14855:	getelementptr	 %14367 XXX
%14856:	load	 %14367
%14857:	zext	 %14856
%14858:	switch	 %14857 sw.default2660 XXX sw.bb XXX sw.bb574 XXX sw.bb575 XXX sw.bb646 XXX sw.bb712 XXX sw.bb712 XXX sw.bb789 XXX sw.bb853 XXX sw.bb1137 XXX sw.bb1277 XXX sw.bb1308 XXX sw.bb1339 XXX sw.bb1351 XXX sw.bb1356 XXX sw.bb1471 XXX sw.bb1618 XXX sw.bb1894 XXX sw.bb1954 XXX sw.bb1970 XXX sw.bb1971 XXX sw.bb2071 XXX sw.bb2171 XXX sw.bb2208 XXX sw.bb2237 XXX sw.bb2275 XXX sw.bb2345 XXX sw.bb2417 XXX sw.bb2478 XXX sw.bb2542 XXX sw.bb2601

BASIC BLOCK sw.bb
%14859:	br	 sw.epilog2661

BASIC BLOCK sw.bb574
%14860:	br	 succeed_label

BASIC BLOCK sw.bb575
%14861:	getelementptr	 %14855 XXX
%14862:	load	 %14855
%14863:	zext	 %14862
%14864:	icmp	 %14126 XXX
%14865:	br	 %14864 if.else599 if.then579

BASIC BLOCK if.then579
%14866:	br	 do.body580

BASIC BLOCK do.body580
%14867:	phi	 %14861 %14886
%14868:	phi	 %14368 %14872
%14869:	phi	 %14369 %14880
%14870:	phi	 %14863 %14893
%14871:	br	 while.cond

BASIC BLOCK while.cond
%14872:	phi	 %14868 %14343
%14873:	phi	 %14869 %14325
%14874:	icmp	 %14873 %14872
%14875:	br	 %14874 while.end while.body

BASIC BLOCK while.body
%14876:	icmp	 %14872 %14343
%14877:	br	 %14876 if.end586 if.then585

BASIC BLOCK if.then585
%14878:	br	 fail

BASIC BLOCK if.end586
%14879:	br	 while.cond

BASIC BLOCK while.end
%14880:	getelementptr	 %14873 XXX
%14881:	load	 %14873
%14882:	zext	 %14881
%14883:	getelementptr	 %14126 %14882
%14884:	load	 %14883
%14885:	zext	 %14884
%14886:	getelementptr	 %14867 XXX
%14887:	load	 %14867
%14888:	zext	 %14887
%14889:	icmp	 %14885 %14888
%14890:	br	 %14889 if.end596 if.then595

BASIC BLOCK if.then595
%14891:	br	 fail

BASIC BLOCK if.end596
%14892:	br	 do.cond

BASIC BLOCK do.cond
%14893:	add	 %14870 XXX
%14894:	icmp	 %14893 XXX
%14895:	br	 %14894 do.end598 do.body580

BASIC BLOCK do.end598
%14896:	br	 if.end622

BASIC BLOCK if.else599
%14897:	br	 do.body600

BASIC BLOCK do.body600
%14898:	phi	 %14861 %14914
%14899:	phi	 %14368 %14903
%14900:	phi	 %14369 %14911
%14901:	phi	 %14863 %14921
%14902:	br	 while.cond601

BASIC BLOCK while.cond601
%14903:	phi	 %14899 %14343
%14904:	phi	 %14900 %14325
%14905:	icmp	 %14904 %14903
%14906:	br	 %14905 while.end609 while.body604

BASIC BLOCK while.body604
%14907:	icmp	 %14903 %14343
%14908:	br	 %14907 if.end608 if.then607

BASIC BLOCK if.then607
%14909:	br	 fail

BASIC BLOCK if.end608
%14910:	br	 while.cond601

BASIC BLOCK while.end609
%14911:	getelementptr	 %14904 XXX
%14912:	load	 %14904
%14913:	sext	 %14912
%14914:	getelementptr	 %14898 XXX
%14915:	load	 %14898
%14916:	sext	 %14915
%14917:	icmp	 %14913 %14916
%14918:	br	 %14917 if.end617 if.then616

BASIC BLOCK if.then616
%14919:	br	 fail

BASIC BLOCK if.end617
%14920:	br	 do.cond618

BASIC BLOCK do.cond618
%14921:	add	 %14901 XXX
%14922:	icmp	 %14921 XXX
%14923:	br	 %14922 do.end621 do.body600

BASIC BLOCK do.end621
%14924:	br	 if.end622

BASIC BLOCK if.end622
%14925:	phi	 %14886 %14914
%14926:	phi	 %14872 %14903
%14927:	phi	 %14880 %14911
%14928:	br	 do.body623

BASIC BLOCK do.body623
%14929:	icmp	 %14361 XXX
%14930:	br	 %14929 if.then625 if.end643

BASIC BLOCK if.then625
%14931:	br	 for.cond626

BASIC BLOCK for.cond626
%14932:	phi	 %14365 %14950
%14933:	icmp	 %14932 %14364
%14934:	br	 %14933 for.end642 for.body629

BASIC BLOCK for.body629
%14935:	getelementptr	 %14230 %14932
%14936:	bitcast	 %14935
%14937:	bitcast	 %14936
%14938:	load	 %14937
%14939:	and	 %14938 XXX
%14940:	or	 %14939 XXX
%14941:	store	 %14940 %14937
%14942:	getelementptr	 %14230 %14932
%14943:	bitcast	 %14942
%14944:	bitcast	 %14943
%14945:	load	 %14944
%14946:	and	 %14945 XXX
%14947:	or	 %14946 XXX
%14948:	store	 %14947 %14944
%14949:	br	 for.inc640

BASIC BLOCK for.inc640
%14950:	add	 %14932 XXX
%14951:	br	 for.cond626

BASIC BLOCK for.end642
%14952:	br	 if.end643

BASIC BLOCK if.end643
%14953:	phi	 %14361 XXX
%14954:	br	 do.end645

BASIC BLOCK do.end645
%14955:	br	 sw.epilog2661

BASIC BLOCK sw.bb646
%14956:	br	 while.cond647

BASIC BLOCK while.cond647
%14957:	phi	 %14368 %14343
%14958:	phi	 %14369 %14325
%14959:	icmp	 %14958 %14957
%14960:	br	 %14959 while.end655 while.body650

BASIC BLOCK while.body650
%14961:	icmp	 %14957 %14343
%14962:	br	 %14961 if.end654 if.then653

BASIC BLOCK if.then653
%14963:	br	 fail

BASIC BLOCK if.end654
%14964:	br	 while.cond647

BASIC BLOCK while.end655
%14965:	getelementptr	 bufp XXX XXX
%14966:	load	 %14965
%14967:	and	 %14966 XXX
%14968:	icmp	 %14967 XXX
%14969:	br	 %14968 land.lhs.true657 lor.lhs.false669

BASIC BLOCK land.lhs.true657
%14970:	icmp	 %14126 XXX
%14971:	br	 %14970 cond.false663 cond.true659

BASIC BLOCK cond.true659
%14972:	load	 %14958
%14973:	zext	 %14972
%14974:	getelementptr	 %14126 %14973
%14975:	load	 %14974
%14976:	sext	 %14975
%14977:	br	 cond.end665

BASIC BLOCK cond.false663
%14978:	load	 %14958
%14979:	sext	 %14978
%14980:	br	 cond.end665

BASIC BLOCK cond.end665
%14981:	phi	 %14976 %14979
%14982:	icmp	 %14981 XXX
%14983:	br	 %14982 lor.lhs.false669 if.then685

BASIC BLOCK lor.lhs.false669
%14984:	getelementptr	 bufp XXX XXX
%14985:	load	 %14984
%14986:	and	 %14985 XXX
%14987:	icmp	 %14986 XXX
%14988:	br	 %14987 if.end686 land.lhs.true673

BASIC BLOCK land.lhs.true673
%14989:	icmp	 %14126 XXX
%14990:	br	 %14989 cond.false679 cond.true675

BASIC BLOCK cond.true675
%14991:	load	 %14958
%14992:	zext	 %14991
%14993:	getelementptr	 %14126 %14992
%14994:	load	 %14993
%14995:	sext	 %14994
%14996:	br	 cond.end681

BASIC BLOCK cond.false679
%14997:	load	 %14958
%14998:	sext	 %14997
%14999:	br	 cond.end681

BASIC BLOCK cond.end681
%15000:	phi	 %14995 %14998
%15001:	icmp	 %15000 XXX
%15002:	br	 %15001 if.end686 if.then685

BASIC BLOCK if.then685
%15003:	br	 fail

BASIC BLOCK if.end686
%15004:	br	 do.body687

BASIC BLOCK do.body687
%15005:	icmp	 %14361 XXX
%15006:	br	 %15005 if.then689 if.end708

BASIC BLOCK if.then689
%15007:	br	 for.cond691

BASIC BLOCK for.cond691
%15008:	phi	 %14365 %15026
%15009:	icmp	 %15008 %14364
%15010:	br	 %15009 for.end707 for.body694

BASIC BLOCK for.body694
%15011:	getelementptr	 %14230 %15008
%15012:	bitcast	 %15011
%15013:	bitcast	 %15012
%15014:	load	 %15013
%15015:	and	 %15014 XXX
%15016:	or	 %15015 XXX
%15017:	store	 %15016 %15013
%15018:	getelementptr	 %14230 %15008
%15019:	bitcast	 %15018
%15020:	bitcast	 %15019
%15021:	load	 %15020
%15022:	and	 %15021 XXX
%15023:	or	 %15022 XXX
%15024:	store	 %15023 %15020
%15025:	br	 for.inc705

BASIC BLOCK for.inc705
%15026:	add	 %15008 XXX
%15027:	br	 for.cond691

BASIC BLOCK for.end707
%15028:	br	 if.end708

BASIC BLOCK if.end708
%15029:	phi	 %14361 XXX
%15030:	br	 do.end710

BASIC BLOCK do.end710
%15031:	getelementptr	 %14958 XXX
%15032:	br	 sw.epilog2661

BASIC BLOCK sw.bb712
%15033:	getelementptr	 %14855 XXX
%15034:	load	 %15033
%15035:	zext	 %15034
%15036:	icmp	 %15035 XXX
%15037:	zext	 %15036
%15038:	trunc	 %15037
%15039:	br	 while.cond718

BASIC BLOCK while.cond718
%15040:	phi	 %14368 %14343
%15041:	phi	 %14369 %14325
%15042:	icmp	 %15041 %15040
%15043:	br	 %15042 while.end726 while.body721

BASIC BLOCK while.body721
%15044:	icmp	 %15040 %14343
%15045:	br	 %15044 if.end725 if.then724

BASIC BLOCK if.then724
%15046:	br	 fail

BASIC BLOCK if.end725
%15047:	br	 while.cond718

BASIC BLOCK while.end726
%15048:	icmp	 %14126 XXX
%15049:	br	 %15048 cond.false732 cond.true728

BASIC BLOCK cond.true728
%15050:	load	 %15041
%15051:	zext	 %15050
%15052:	getelementptr	 %14126 %15051
%15053:	load	 %15052
%15054:	sext	 %15053
%15055:	br	 cond.end734

BASIC BLOCK cond.false732
%15056:	load	 %15041
%15057:	sext	 %15056
%15058:	br	 cond.end734

BASIC BLOCK cond.end734
%15059:	phi	 %15054 %15057
%15060:	trunc	 %15059
%15061:	zext	 %15060
%15062:	load	 %14855
%15063:	zext	 %15062
%15064:	mul	 %15063 XXX
%15065:	icmp	 %15061 %15064
%15066:	br	 %15065 if.end756 land.lhs.true742

BASIC BLOCK land.lhs.true742
%15067:	zext	 %15060
%15068:	sdiv	 %15067 XXX
%15069:	add	 XXX %15068
%15070:	sext	 %15069
%15071:	getelementptr	 %14855 %15070
%15072:	load	 %15071
%15073:	zext	 %15072
%15074:	zext	 %15060
%15075:	srem	 %15074 XXX
%15076:	shl	 XXX %15075
%15077:	and	 %15073 %15076
%15078:	icmp	 %15077 XXX
%15079:	br	 %15078 if.end756 if.then751

BASIC BLOCK if.then751
%15080:	icmp	 %15038 XXX
%15081:	xor	 %15080 XXX
%15082:	zext	 %15081
%15083:	trunc	 %15082
%15084:	br	 if.end756

BASIC BLOCK if.end756
%15085:	phi	 %15083 %15038 %15038
%15086:	load	 %14855
%15087:	zext	 %15086
%15088:	add	 XXX %15087
%15089:	sext	 %15088
%15090:	getelementptr	 %14855 %15089
%15091:	icmp	 %15085 XXX
%15092:	br	 %15091 if.then762 if.end763

BASIC BLOCK if.then762
%15093:	br	 fail

BASIC BLOCK if.end763
%15094:	br	 do.body764

BASIC BLOCK do.body764
%15095:	icmp	 %14361 XXX
%15096:	br	 %15095 if.then766 if.end785

BASIC BLOCK if.then766
%15097:	br	 for.cond768

BASIC BLOCK for.cond768
%15098:	phi	 %14365 %15116
%15099:	icmp	 %15098 %14364
%15100:	br	 %15099 for.end784 for.body771

BASIC BLOCK for.body771
%15101:	getelementptr	 %14230 %15098
%15102:	bitcast	 %15101
%15103:	bitcast	 %15102
%15104:	load	 %15103
%15105:	and	 %15104 XXX
%15106:	or	 %15105 XXX
%15107:	store	 %15106 %15103
%15108:	getelementptr	 %14230 %15098
%15109:	bitcast	 %15108
%15110:	bitcast	 %15109
%15111:	load	 %15110
%15112:	and	 %15111 XXX
%15113:	or	 %15112 XXX
%15114:	store	 %15113 %15110
%15115:	br	 for.inc782

BASIC BLOCK for.inc782
%15116:	add	 %15098 XXX
%15117:	br	 for.cond768

BASIC BLOCK for.end784
%15118:	br	 if.end785

BASIC BLOCK if.end785
%15119:	phi	 %14361 XXX
%15120:	br	 do.end787

BASIC BLOCK do.end787
%15121:	getelementptr	 %15041 XXX
%15122:	br	 sw.epilog2661

BASIC BLOCK sw.bb789
%15123:	store	 %14855 %14118
%15124:	load	 %14855
%15125:	zext	 %15124
%15126:	getelementptr	 %14230 %15125
%15127:	bitcast	 %15126
%15128:	bitcast	 %15127
%15129:	load	 %15128
%15130:	and	 %15129 XXX
%15131:	zext	 %15130
%15132:	icmp	 %15131 XXX
%15133:	br	 %15132 if.end807 if.then798

BASIC BLOCK if.then798
%15134:	call	 %14118 %14124 %14230 group_match_null_string_p
%15135:	sext	 %15134
%15136:	load	 %14855
%15137:	zext	 %15136
%15138:	getelementptr	 %14230 %15137
%15139:	bitcast	 %15138
%15140:	bitcast	 %15139
%15141:	trunc	 %15135
%15142:	load	 %15140
%15143:	and	 %15141 XXX
%15144:	and	 %15142 XXX
%15145:	or	 %15144 %15143
%15146:	store	 %15145 %15140
%15147:	zext	 %15143
%15148:	br	 if.end807

BASIC BLOCK if.end807
%15149:	load	 %14855
%15150:	zext	 %15149
%15151:	getelementptr	 %14230 %15150
%15152:	bitcast	 %15151
%15153:	bitcast	 %15152
%15154:	load	 %15153
%15155:	and	 %15154 XXX
%15156:	zext	 %15155
%15157:	icmp	 %15156 XXX
%15158:	br	 %15157 cond.false826 cond.true815

BASIC BLOCK cond.true815
%15159:	load	 %14855
%15160:	zext	 %15159
%15161:	getelementptr	 %14234 %15160
%15162:	load	 %15161
%15163:	icmp	 %15162 reg_unset_dummy
%15164:	br	 %15163 cond.false821 cond.true820

BASIC BLOCK cond.true820
%15165:	br	 cond.end824

BASIC BLOCK cond.false821
%15166:	load	 %14855
%15167:	zext	 %15166
%15168:	getelementptr	 %14234 %15167
%15169:	load	 %15168
%15170:	br	 cond.end824

BASIC BLOCK cond.end824
%15171:	phi	 %14369 %15169
%15172:	br	 cond.end829

BASIC BLOCK cond.false826
%15173:	load	 %14855
%15174:	zext	 %15173
%15175:	getelementptr	 %14234 %15174
%15176:	load	 %15175
%15177:	br	 cond.end829

BASIC BLOCK cond.end829
%15178:	phi	 %15171 %15176
%15179:	load	 %14855
%15180:	zext	 %15179
%15181:	getelementptr	 %14232 %15180
%15182:	store	 %15178 %15181
%15183:	load	 %14855
%15184:	zext	 %15183
%15185:	getelementptr	 %14234 %15184
%15186:	store	 %14369 %15185
%15187:	load	 %14855
%15188:	zext	 %15187
%15189:	getelementptr	 %14230 %15188
%15190:	bitcast	 %15189
%15191:	bitcast	 %15190
%15192:	load	 %15191
%15193:	and	 %15192 XXX
%15194:	or	 %15193 XXX
%15195:	store	 %15194 %15191
%15196:	load	 %14855
%15197:	zext	 %15196
%15198:	getelementptr	 %14230 %15197
%15199:	bitcast	 %15198
%15200:	bitcast	 %15199
%15201:	load	 %15200
%15202:	and	 %15201 XXX
%15203:	store	 %15202 %15200
%15204:	load	 %14855
%15205:	zext	 %15204
%15206:	icmp	 %14365 XXX
%15207:	br	 %15206 if.end851 if.then849

BASIC BLOCK if.then849
%15208:	load	 %14855
%15209:	zext	 %15208
%15210:	br	 if.end851

BASIC BLOCK if.end851
%15211:	phi	 %15209 %14365
%15212:	getelementptr	 %14855 XXX
%15213:	br	 sw.epilog2661

BASIC BLOCK sw.bb853
%15214:	load	 %14855
%15215:	zext	 %15214
%15216:	getelementptr	 %14230 %15215
%15217:	bitcast	 %15216
%15218:	bitcast	 %15217
%15219:	load	 %15218
%15220:	and	 %15219 XXX
%15221:	zext	 %15220
%15222:	icmp	 %15221 XXX
%15223:	br	 %15222 cond.false872 cond.true861

BASIC BLOCK cond.true861
%15224:	load	 %14855
%15225:	zext	 %15224
%15226:	getelementptr	 %14233 %15225
%15227:	load	 %15226
%15228:	icmp	 %15227 reg_unset_dummy
%15229:	br	 %15228 cond.false867 cond.true866

BASIC BLOCK cond.true866
%15230:	br	 cond.end870

BASIC BLOCK cond.false867
%15231:	load	 %14855
%15232:	zext	 %15231
%15233:	getelementptr	 %14233 %15232
%15234:	load	 %15233
%15235:	br	 cond.end870

BASIC BLOCK cond.end870
%15236:	phi	 %14369 %15234
%15237:	br	 cond.end875

BASIC BLOCK cond.false872
%15238:	load	 %14855
%15239:	zext	 %15238
%15240:	getelementptr	 %14233 %15239
%15241:	load	 %15240
%15242:	br	 cond.end875

BASIC BLOCK cond.end875
%15243:	phi	 %15236 %15241
%15244:	load	 %14855
%15245:	zext	 %15244
%15246:	getelementptr	 %14231 %15245
%15247:	store	 %15243 %15246
%15248:	load	 %14855
%15249:	zext	 %15248
%15250:	getelementptr	 %14233 %15249
%15251:	store	 %14369 %15250
%15252:	load	 %14855
%15253:	zext	 %15252
%15254:	getelementptr	 %14230 %15253
%15255:	bitcast	 %15254
%15256:	bitcast	 %15255
%15257:	load	 %15256
%15258:	and	 %15257 XXX
%15259:	store	 %15258 %15256
%15260:	icmp	 %14365 %14364
%15261:	br	 %15260 if.else889 if.then888

BASIC BLOCK if.then888
%15262:	br	 if.end920

BASIC BLOCK if.else889
%15263:	load	 %14855
%15264:	zext	 %15263
%15265:	sub	 %15264 XXX
%15266:	trunc	 %15265
%15267:	br	 while.cond893

BASIC BLOCK while.cond893
%15268:	phi	 %15266 %15285
%15269:	zext	 %15268
%15270:	icmp	 %15269 XXX
%15271:	br	 %15270 land.end908 land.rhs897

BASIC BLOCK land.rhs897
%15272:	zext	 %15268
%15273:	getelementptr	 %14230 %15272
%15274:	bitcast	 %15273
%15275:	bitcast	 %15274
%15276:	load	 %15275
%15277:	lshr	 %15276 XXX
%15278:	and	 %15277 XXX
%15279:	zext	 %15278
%15280:	icmp	 %15279 XXX
%15281:	xor	 %15280 XXX
%15282:	br	 land.end908

BASIC BLOCK land.end908
%15283:	phi	 XXX %15281
%15284:	br	 %15283 while.end912 while.body910

BASIC BLOCK while.body910
%15285:	add	 %15268 XXX
%15286:	br	 while.cond893

BASIC BLOCK while.end912
%15287:	zext	 %15268
%15288:	icmp	 %15287 XXX
%15289:	br	 %15288 if.else917 if.then916

BASIC BLOCK if.then916
%15290:	br	 if.end919

BASIC BLOCK if.else917
%15291:	zext	 %15268
%15292:	br	 if.end919

BASIC BLOCK if.end919
%15293:	phi	 XXX %15291
%15294:	phi	 XXX %14365
%15295:	br	 if.end920

BASIC BLOCK if.end920
%15296:	phi	 XXX %15293
%15297:	phi	 XXX %15294
%15298:	load	 %14855
%15299:	zext	 %15298
%15300:	getelementptr	 %14230 %15299
%15301:	bitcast	 %15300
%15302:	bitcast	 %15301
%15303:	load	 %15302
%15304:	lshr	 %15303 XXX
%15305:	and	 %15304 XXX
%15306:	zext	 %15305
%15307:	icmp	 %15306 XXX
%15308:	br	 %15307 land.lhs.true933 lor.lhs.false929

BASIC BLOCK lor.lhs.false929
%15309:	getelementptr	 %14855 XXX
%15310:	icmp	 %14366 %15309
%15311:	br	 %15310 if.end1135 land.lhs.true933

BASIC BLOCK land.lhs.true933
%15312:	getelementptr	 %14855 XXX
%15313:	icmp	 %15312 %14124
%15314:	br	 %15313 if.end1135 if.then937

BASIC BLOCK if.then937
%15315:	getelementptr	 %14855 XXX
%15316:	store	 %15315 %14118
%15317:	load	 %14118
%15318:	getelementptr	 %15317 XXX
%15319:	store	 %15318 %14118
%15320:	load	 %15317
%15321:	zext	 %15320
%15322:	switch	 %15321 sw.default XXX sw.bb941 XXX sw.bb942 XXX sw.bb942 XXX sw.bb942 XXX sw.bb942

BASIC BLOCK sw.bb941
%15323:	br	 sw.bb942

BASIC BLOCK sw.bb942
%15324:	phi	 XXX XXX XXX XXX XXX
%15325:	br	 do.body943

BASIC BLOCK do.body943
%15326:	br	 do.body944

BASIC BLOCK do.body944
%15327:	load	 %14118
%15328:	load	 %15327
%15329:	zext	 %15328
%15330:	and	 %15329 XXX
%15331:	load	 %14118
%15332:	getelementptr	 %15331 XXX
%15333:	load	 %15332
%15334:	sext	 %15333
%15335:	shl	 %15334 XXX
%15336:	add	 %15330 %15335
%15337:	br	 do.end952

BASIC BLOCK do.end952
%15338:	load	 %14118
%15339:	getelementptr	 %15338 XXX
%15340:	store	 %15339 %14118
%15341:	br	 do.end955

BASIC BLOCK do.end955
%15342:	icmp	 %15324 XXX
%15343:	br	 %15342 if.end959 if.then957

BASIC BLOCK if.then957
%15344:	load	 %14118
%15345:	getelementptr	 %15344 XXX
%15346:	store	 %15345 %14118
%15347:	br	 if.end959

BASIC BLOCK if.end959
%15348:	br	 sw.epilog

BASIC BLOCK sw.default
%15349:	br	 sw.epilog

BASIC BLOCK sw.epilog
%15350:	phi	 XXX %15336
%15351:	load	 %14118
%15352:	sext	 %15350
%15353:	getelementptr	 %15351 %15352
%15354:	store	 %15353 %14118
%15355:	icmp	 %15350 XXX
%15356:	br	 %15355 if.end1134 land.lhs.true964

BASIC BLOCK land.lhs.true964
%15357:	load	 %14118
%15358:	load	 %15357
%15359:	zext	 %15358
%15360:	icmp	 %15359 XXX
%15361:	br	 %15360 if.end1134 land.lhs.true968

BASIC BLOCK land.lhs.true968
%15362:	load	 %14118
%15363:	getelementptr	 %15362 XXX
%15364:	load	 %15363
%15365:	zext	 %15364
%15366:	icmp	 %15365 XXX
%15367:	br	 %15366 if.end1134 land.lhs.true973

BASIC BLOCK land.lhs.true973
%15368:	load	 %14118
%15369:	getelementptr	 %15368 XXX
%15370:	load	 %15369
%15371:	zext	 %15370
%15372:	load	 %14855
%15373:	zext	 %15372
%15374:	icmp	 %15371 %15373
%15375:	br	 %15374 if.end1134 if.then979

BASIC BLOCK if.then979
%15376:	load	 %14855
%15377:	zext	 %15376
%15378:	getelementptr	 %14230 %15377
%15379:	bitcast	 %15378
%15380:	bitcast	 %15379
%15381:	load	 %15380
%15382:	lshr	 %15381 XXX
%15383:	and	 %15382 XXX
%15384:	zext	 %15383
%15385:	icmp	 %15384 XXX
%15386:	br	 %15385 if.end1023 if.then988

BASIC BLOCK if.then988
%15387:	load	 %14855
%15388:	zext	 %15387
%15389:	getelementptr	 %14230 %15388
%15390:	bitcast	 %15389
%15391:	bitcast	 %15390
%15392:	load	 %15391
%15393:	and	 %15392 XXX
%15394:	store	 %15393 %15391
%15395:	load	 %14855
%15396:	zext	 %15395
%15397:	br	 for.cond996

BASIC BLOCK for.cond996
%15398:	phi	 %15396 %15429
%15399:	load	 %14855
%15400:	zext	 %15399
%15401:	getelementptr	 %14855 XXX
%15402:	load	 %15401
%15403:	zext	 %15402
%15404:	add	 %15400 %15403
%15405:	icmp	 %15398 %15404
%15406:	br	 %15405 for.end1022 for.body1003

BASIC BLOCK for.body1003
%15407:	zext	 %15398
%15408:	getelementptr	 %14232 %15407
%15409:	load	 %15408
%15410:	zext	 %15398
%15411:	getelementptr	 %14234 %15410
%15412:	store	 %15409 %15411
%15413:	zext	 %15398
%15414:	getelementptr	 %14231 %15413
%15415:	load	 %15414
%15416:	zext	 %15398
%15417:	getelementptr	 %14234 %15416
%15418:	load	 %15417
%15419:	icmp	 %15415 %15418
%15420:	br	 %15419 if.end1019 if.then1014

BASIC BLOCK if.then1014
%15421:	zext	 %15398
%15422:	getelementptr	 %14231 %15421
%15423:	load	 %15422
%15424:	zext	 %15398
%15425:	getelementptr	 %14233 %15424
%15426:	store	 %15423 %15425
%15427:	br	 if.end1019

BASIC BLOCK if.end1019
%15428:	br	 for.inc1020

BASIC BLOCK for.inc1020
%15429:	add	 %15398 XXX
%15430:	br	 for.cond996

BASIC BLOCK for.end1022
%15431:	br	 if.end1023

BASIC BLOCK if.end1023
%15432:	load	 %14118
%15433:	getelementptr	 %15432 XXX
%15434:	store	 %15433 %14118
%15435:	br	 do.body1025

BASIC BLOCK do.body1025
%15436:	br	 do.body1026

BASIC BLOCK do.body1026
%15437:	load	 %14118
%15438:	load	 %15437
%15439:	zext	 %15438
%15440:	and	 %15439 XXX
%15441:	load	 %14118
%15442:	getelementptr	 %15441 XXX
%15443:	load	 %15442
%15444:	sext	 %15443
%15445:	shl	 %15444 XXX
%15446:	add	 %15440 %15445
%15447:	br	 do.end1034

BASIC BLOCK do.end1034
%15448:	load	 %14118
%15449:	getelementptr	 %15448 XXX
%15450:	store	 %15449 %14118
%15451:	br	 do.end1037

BASIC BLOCK do.end1037
%15452:	br	 do.body1038

BASIC BLOCK do.body1038
%15453:	br	 while.cond1039

BASIC BLOCK while.cond1039
%15454:	getelementptr	 %14119 XXX XXX
%15455:	load	 %15454
%15456:	getelementptr	 %14119 XXX XXX
%15457:	load	 %15456
%15458:	sub	 %15455 %15457
%15459:	zext	 %15458
%15460:	sub	 %15296 %15297
%15461:	add	 %15460 XXX
%15462:	mul	 %15461 XXX
%15463:	add	 %15462 XXX
%15464:	icmp	 %15459 %15463
%15465:	br	 %15464 while.end1078 while.body1050

BASIC BLOCK while.body1050
%15466:	getelementptr	 %14119 XXX XXX
%15467:	load	 %15466
%15468:	load	 re_max_failures
%15469:	mul	 %15468 XXX
%15470:	icmp	 %15467 %15469
%15471:	br	 %15470 cond.false1056 cond.true1055

BASIC BLOCK cond.true1055
%15472:	br	 XXX if.then1076 if.end1077

BASIC BLOCK cond.false1056
%15473:	getelementptr	 %14119 XXX XXX
%15474:	load	 %15473
%15475:	shl	 %15474 XXX
%15476:	zext	 %15475
%15477:	mul	 %15476 XXX
%15478:	alloca	 %15477
%15479:	getelementptr	 %14119 XXX XXX
%15480:	load	 %15479
%15481:	bitcast	 %15480
%15482:	getelementptr	 %14119 XXX XXX
%15483:	load	 %15482
%15484:	zext	 %15483
%15485:	mul	 %15484 XXX
%15486:	call	 %15478 %15481 %15485 XXX XXX llvm.memcpy.p0i8.p0i8.i64
%15487:	bitcast	 %15478
%15488:	getelementptr	 %14119 XXX XXX
%15489:	store	 %15487 %15488
%15490:	getelementptr	 %14119 XXX XXX
%15491:	load	 %15490
%15492:	icmp	 %15491 XXX
%15493:	br	 %15492 cond.false1070 cond.true1069

BASIC BLOCK cond.true1069
%15494:	br	 cond.end1073

BASIC BLOCK cond.false1070
%15495:	getelementptr	 %14119 XXX XXX
%15496:	load	 %15495
%15497:	shl	 %15496 XXX
%15498:	store	 %15497 %15495
%15499:	br	 cond.end1073

BASIC BLOCK cond.end1073
%15500:	phi	 XXX XXX
%15501:	icmp	 %15500 XXX
%15502:	br	 %15501 if.then1076 if.end1077

BASIC BLOCK if.then1076
%15503:	br	 return

BASIC BLOCK if.end1077
%15504:	br	 while.cond1039

BASIC BLOCK while.end1078
%15505:	br	 for.cond1079

BASIC BLOCK for.cond1079
%15506:	phi	 %15297 %15547
%15507:	icmp	 %15506 %15296
%15508:	br	 %15507 for.end1104 for.body1082

BASIC BLOCK for.body1082
%15509:	getelementptr	 %14234 %15506
%15510:	load	 %15509
%15511:	getelementptr	 %14119 XXX XXX
%15512:	load	 %15511
%15513:	add	 %15512 XXX
%15514:	store	 %15513 %15511
%15515:	zext	 %15512
%15516:	getelementptr	 %14119 XXX XXX
%15517:	load	 %15516
%15518:	getelementptr	 %15517 %15515
%15519:	bitcast	 %15518
%15520:	store	 %15510 %15519
%15521:	getelementptr	 %14233 %15506
%15522:	load	 %15521
%15523:	getelementptr	 %14119 XXX XXX
%15524:	load	 %15523
%15525:	add	 %15524 XXX
%15526:	store	 %15525 %15523
%15527:	zext	 %15524
%15528:	getelementptr	 %14119 XXX XXX
%15529:	load	 %15528
%15530:	getelementptr	 %15529 %15527
%15531:	bitcast	 %15530
%15532:	store	 %15522 %15531
%15533:	getelementptr	 %14119 XXX XXX
%15534:	load	 %15533
%15535:	add	 %15534 XXX
%15536:	store	 %15535 %15533
%15537:	zext	 %15534
%15538:	getelementptr	 %14119 XXX XXX
%15539:	load	 %15538
%15540:	getelementptr	 %15539 %15537
%15541:	getelementptr	 %14230 %15506
%15542:	bitcast	 %15541
%15543:	bitcast	 %15540
%15544:	bitcast	 %15542
%15545:	call	 %15543 %15544 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%15546:	br	 for.inc1102

BASIC BLOCK for.inc1102
%15547:	add	 %15506 XXX
%15548:	br	 for.cond1079

BASIC BLOCK for.end1104
%15549:	trunc	 %15297
%15550:	getelementptr	 %14119 XXX XXX
%15551:	load	 %15550
%15552:	add	 %15551 XXX
%15553:	store	 %15552 %15550
%15554:	zext	 %15551
%15555:	getelementptr	 %14119 XXX XXX
%15556:	load	 %15555
%15557:	getelementptr	 %15556 %15554
%15558:	bitcast	 %15557
%15559:	store	 %15549 %15558
%15560:	trunc	 %15296
%15561:	getelementptr	 %14119 XXX XXX
%15562:	load	 %15561
%15563:	add	 %15562 XXX
%15564:	store	 %15563 %15561
%15565:	zext	 %15562
%15566:	getelementptr	 %14119 XXX XXX
%15567:	load	 %15566
%15568:	getelementptr	 %15567 %15565
%15569:	bitcast	 %15568
%15570:	store	 %15560 %15569
%15571:	load	 %14118
%15572:	sext	 %15446
%15573:	getelementptr	 %15571 %15572
%15574:	getelementptr	 %14119 XXX XXX
%15575:	load	 %15574
%15576:	add	 %15575 XXX
%15577:	store	 %15576 %15574
%15578:	zext	 %15575
%15579:	getelementptr	 %14119 XXX XXX
%15580:	load	 %15579
%15581:	getelementptr	 %15580 %15578
%15582:	bitcast	 %15581
%15583:	store	 %15573 %15582
%15584:	getelementptr	 %14119 XXX XXX
%15585:	load	 %15584
%15586:	add	 %15585 XXX
%15587:	store	 %15586 %15584
%15588:	zext	 %15585
%15589:	getelementptr	 %14119 XXX XXX
%15590:	load	 %15589
%15591:	getelementptr	 %15590 %15588
%15592:	bitcast	 %15591
%15593:	store	 %14369 %15592
%15594:	br	 do.end1133

BASIC BLOCK do.end1133
%15595:	br	 fail

BASIC BLOCK if.end1134
%15596:	br	 if.end1135

BASIC BLOCK if.end1135
%15597:	getelementptr	 %14855 XXX
%15598:	br	 sw.epilog2661

BASIC BLOCK sw.bb1137
%15599:	getelementptr	 %14855 XXX
%15600:	load	 %14855
%15601:	zext	 %15600
%15602:	sext	 %15601
%15603:	getelementptr	 %14234 %15602
%15604:	load	 %15603
%15605:	icmp	 %15604 reg_unset_dummy
%15606:	br	 %15605 lor.lhs.false1144 if.then1149

BASIC BLOCK lor.lhs.false1144
%15607:	sext	 %15601
%15608:	getelementptr	 %14233 %15607
%15609:	load	 %15608
%15610:	icmp	 %15609 reg_unset_dummy
%15611:	br	 %15610 if.end1150 if.then1149

BASIC BLOCK if.then1149
%15612:	br	 fail

BASIC BLOCK if.end1150
%15613:	sext	 %15601
%15614:	getelementptr	 %14234 %15613
%15615:	load	 %15614
%15616:	icmp	 %14326 XXX
%15617:	br	 %15616 land.end1166 land.lhs.true1154

BASIC BLOCK land.lhs.true1154
%15618:	sext	 %15601
%15619:	getelementptr	 %14234 %15618
%15620:	load	 %15619
%15621:	icmp	 %14327 %15620
%15622:	br	 %15621 land.end1166 land.rhs1159

BASIC BLOCK land.rhs1159
%15623:	sext	 %15601
%15624:	getelementptr	 %14234 %15623
%15625:	load	 %15624
%15626:	sext	 %14326
%15627:	getelementptr	 %14327 %15626
%15628:	icmp	 %15625 %15627
%15629:	br	 land.end1166

BASIC BLOCK land.end1166
%15630:	phi	 XXX XXX %15628
%15631:	zext	 %15630
%15632:	icmp	 %14326 XXX
%15633:	br	 %15632 land.end1181 land.lhs.true1169

BASIC BLOCK land.lhs.true1169
%15634:	sext	 %15601
%15635:	getelementptr	 %14233 %15634
%15636:	load	 %15635
%15637:	icmp	 %14327 %15636
%15638:	br	 %15637 land.end1181 land.rhs1174

BASIC BLOCK land.rhs1174
%15639:	sext	 %15601
%15640:	getelementptr	 %14233 %15639
%15641:	load	 %15640
%15642:	sext	 %14326
%15643:	getelementptr	 %14327 %15642
%15644:	icmp	 %15641 %15643
%15645:	br	 land.end1181

BASIC BLOCK land.end1181
%15646:	phi	 XXX XXX %15644
%15647:	zext	 %15646
%15648:	icmp	 %15631 %15647
%15649:	br	 %15648 cond.false1188 cond.true1185

BASIC BLOCK cond.true1185
%15650:	sext	 %15601
%15651:	getelementptr	 %14233 %15650
%15652:	load	 %15651
%15653:	br	 cond.end1189

BASIC BLOCK cond.false1188
%15654:	br	 cond.end1189

BASIC BLOCK cond.end1189
%15655:	phi	 %15652 %14344
%15656:	br	 for.cond1191

BASIC BLOCK for.cond1191
%15657:	phi	 %15655 %15663
%15658:	phi	 %15615 %15721
%15659:	phi	 %14361 %15747
%15660:	phi	 %14368 %15684
%15661:	phi	 %14369 %15719
%15662:	br	 while.cond1192

BASIC BLOCK while.cond1192
%15663:	phi	 %15657 %15678
%15664:	phi	 %15658 %14325
%15665:	icmp	 %15664 %15663
%15666:	br	 %15665 while.end1208 while.body1195

BASIC BLOCK while.body1195
%15667:	icmp	 %15663 %14343
%15668:	br	 %15667 if.end1199 if.then1198

BASIC BLOCK if.then1198
%15669:	br	 while.end1208

BASIC BLOCK if.end1199
%15670:	sext	 %15601
%15671:	getelementptr	 %14233 %15670
%15672:	load	 %15671
%15673:	icmp	 %15663 %15672
%15674:	br	 %15673 if.end1205 if.then1204

BASIC BLOCK if.then1204
%15675:	br	 while.end1208

BASIC BLOCK if.end1205
%15676:	sext	 %15601
%15677:	getelementptr	 %14233 %15676
%15678:	load	 %15677
%15679:	br	 while.cond1192

BASIC BLOCK while.end1208
%15680:	icmp	 %15664 %15663
%15681:	br	 %15680 if.end1212 if.then1211

BASIC BLOCK if.then1211
%15682:	br	 for.end1276

BASIC BLOCK if.end1212
%15683:	br	 while.cond1213

BASIC BLOCK while.cond1213
%15684:	phi	 %15660 %14343
%15685:	phi	 %15661 %14325
%15686:	icmp	 %15685 %15684
%15687:	br	 %15686 while.end1221 while.body1216

BASIC BLOCK while.body1216
%15688:	icmp	 %15684 %14343
%15689:	br	 %15688 if.end1220 if.then1219

BASIC BLOCK if.then1219
%15690:	br	 fail

BASIC BLOCK if.end1220
%15691:	br	 while.cond1213

BASIC BLOCK while.end1221
%15692:	ptrtoint	 %15684
%15693:	ptrtoint	 %15685
%15694:	sub	 %15692 %15693
%15695:	trunc	 %15694
%15696:	sext	 %15695
%15697:	ptrtoint	 %15663
%15698:	ptrtoint	 %15664
%15699:	sub	 %15697 %15698
%15700:	icmp	 %15696 %15699
%15701:	br	 %15700 if.end1237 if.then1232

BASIC BLOCK if.then1232
%15702:	ptrtoint	 %15663
%15703:	ptrtoint	 %15664
%15704:	sub	 %15702 %15703
%15705:	trunc	 %15704
%15706:	br	 if.end1237

BASIC BLOCK if.end1237
%15707:	phi	 %15705 %15695
%15708:	icmp	 %14126 XXX
%15709:	br	 %15708 cond.false1242 cond.true1239

BASIC BLOCK cond.true1239
%15710:	call	 %15685 %15664 %15707 %14126 bcmp_translate
%15711:	icmp	 %15710 XXX
%15712:	br	 %15711 if.end1247 if.then1246

BASIC BLOCK cond.false1242
%15713:	sext	 %15707
%15714:	call	 %15685 %15664 %15713 memcmp
%15715:	icmp	 %15714 XXX
%15716:	br	 %15715 if.end1247 if.then1246

BASIC BLOCK if.then1246
%15717:	br	 fail

BASIC BLOCK if.end1247
%15718:	sext	 %15707
%15719:	getelementptr	 %15685 %15718
%15720:	sext	 %15707
%15721:	getelementptr	 %15664 %15720
%15722:	br	 do.body1252

BASIC BLOCK do.body1252
%15723:	icmp	 %15659 XXX
%15724:	br	 %15723 if.then1254 if.end1273

BASIC BLOCK if.then1254
%15725:	br	 for.cond1256

BASIC BLOCK for.cond1256
%15726:	phi	 %14365 %15744
%15727:	icmp	 %15726 %14364
%15728:	br	 %15727 for.end1272 for.body1259

BASIC BLOCK for.body1259
%15729:	getelementptr	 %14230 %15726
%15730:	bitcast	 %15729
%15731:	bitcast	 %15730
%15732:	load	 %15731
%15733:	and	 %15732 XXX
%15734:	or	 %15733 XXX
%15735:	store	 %15734 %15731
%15736:	getelementptr	 %14230 %15726
%15737:	bitcast	 %15736
%15738:	bitcast	 %15737
%15739:	load	 %15738
%15740:	and	 %15739 XXX
%15741:	or	 %15740 XXX
%15742:	store	 %15741 %15738
%15743:	br	 for.inc1270

BASIC BLOCK for.inc1270
%15744:	add	 %15726 XXX
%15745:	br	 for.cond1256

BASIC BLOCK for.end1272
%15746:	br	 if.end1273

BASIC BLOCK if.end1273
%15747:	phi	 %15659 XXX
%15748:	br	 do.end1275

BASIC BLOCK do.end1275
%15749:	br	 for.cond1191

BASIC BLOCK for.end1276
%15750:	br	 sw.epilog2661

BASIC BLOCK sw.bb1277
%15751:	icmp	 %14326 XXX
%15752:	br	 %15751 cond.false1280 cond.true1279

BASIC BLOCK cond.true1279
%15753:	br	 cond.end1281

BASIC BLOCK cond.false1280
%15754:	br	 cond.end1281

BASIC BLOCK cond.end1281
%15755:	phi	 %14327 %14325
%15756:	icmp	 %14369 %15755
%15757:	br	 %15756 lor.lhs.false1285 if.then1287

BASIC BLOCK lor.lhs.false1285
%15758:	icmp	 %14324 XXX
%15759:	br	 %15758 if.then1287 if.else1295

BASIC BLOCK if.then1287
%15760:	getelementptr	 bufp XXX XXX
%15761:	load	 %15760
%15762:	lshr	 %15761 XXX
%15763:	and	 %15762 XXX
%15764:	zext	 %15763
%15765:	icmp	 %15764 XXX
%15766:	br	 %15765 if.then1293 if.end1294

BASIC BLOCK if.then1293
%15767:	br	 sw.epilog2661

BASIC BLOCK if.end1294
%15768:	br	 if.end1307

BASIC BLOCK if.else1295
%15769:	getelementptr	 %14369 XXX
%15770:	load	 %15769
%15771:	sext	 %15770
%15772:	icmp	 %15771 XXX
%15773:	br	 %15772 if.end1306 land.lhs.true1300

BASIC BLOCK land.lhs.true1300
%15774:	getelementptr	 bufp XXX XXX
%15775:	load	 %15774
%15776:	lshr	 %15775 XXX
%15777:	zext	 %15776
%15778:	icmp	 %15777 XXX
%15779:	br	 %15778 if.end1306 if.then1305

BASIC BLOCK if.then1305
%15780:	br	 sw.epilog2661

BASIC BLOCK if.end1306
%15781:	br	 if.end1307

BASIC BLOCK if.end1307
%15782:	br	 fail

BASIC BLOCK sw.bb1308
%15783:	icmp	 %14369 %14331
%15784:	br	 %15783 if.else1319 if.then1311

BASIC BLOCK if.then1311
%15785:	getelementptr	 bufp XXX XXX
%15786:	load	 %15785
%15787:	lshr	 %15786 XXX
%15788:	and	 %15787 XXX
%15789:	zext	 %15788
%15790:	icmp	 %15789 XXX
%15791:	br	 %15790 if.then1317 if.end1318

BASIC BLOCK if.then1317
%15792:	br	 sw.epilog2661

BASIC BLOCK if.end1318
%15793:	br	 if.end1338

BASIC BLOCK if.else1319
%15794:	icmp	 %14369 %14329
%15795:	br	 %15794 cond.false1324 cond.true1322

BASIC BLOCK cond.true1322
%15796:	load	 %14325
%15797:	sext	 %15796
%15798:	br	 cond.end1326

BASIC BLOCK cond.false1324
%15799:	load	 %14369
%15800:	sext	 %15799
%15801:	br	 cond.end1326

BASIC BLOCK cond.end1326
%15802:	phi	 %15797 %15800
%15803:	icmp	 %15802 XXX
%15804:	br	 %15803 if.end1337 land.lhs.true1330

BASIC BLOCK land.lhs.true1330
%15805:	getelementptr	 bufp XXX XXX
%15806:	load	 %15805
%15807:	lshr	 %15806 XXX
%15808:	zext	 %15807
%15809:	icmp	 %15808 XXX
%15810:	br	 %15809 if.end1337 if.then1336

BASIC BLOCK if.then1336
%15811:	br	 sw.epilog2661

BASIC BLOCK if.end1337
%15812:	br	 if.end1338

BASIC BLOCK if.end1338
%15813:	br	 fail

BASIC BLOCK sw.bb1339
%15814:	icmp	 %14326 XXX
%15815:	br	 %15814 cond.false1342 cond.true1341

BASIC BLOCK cond.true1341
%15816:	br	 cond.end1343

BASIC BLOCK cond.false1342
%15817:	br	 cond.end1343

BASIC BLOCK cond.end1343
%15818:	phi	 %14327 %14325
%15819:	icmp	 %14369 %15818
%15820:	br	 %15819 lor.lhs.false1347 if.then1349

BASIC BLOCK lor.lhs.false1347
%15821:	icmp	 %14324 XXX
%15822:	br	 %15821 if.then1349 if.end1350

BASIC BLOCK if.then1349
%15823:	br	 sw.epilog2661

BASIC BLOCK if.end1350
%15824:	br	 fail

BASIC BLOCK sw.bb1351
%15825:	icmp	 %14369 %14331
%15826:	br	 %15825 if.end1355 if.then1354

BASIC BLOCK if.then1354
%15827:	br	 sw.epilog2661

BASIC BLOCK if.end1355
%15828:	br	 fail

BASIC BLOCK sw.bb1356
%15829:	br	 do.body1357

BASIC BLOCK do.body1357
%15830:	br	 do.body1358

BASIC BLOCK do.body1358
%15831:	load	 %14855
%15832:	zext	 %15831
%15833:	and	 %15832 XXX
%15834:	getelementptr	 %14855 XXX
%15835:	load	 %15834
%15836:	sext	 %15835
%15837:	shl	 %15836 XXX
%15838:	add	 %15833 %15837
%15839:	br	 do.end1366

BASIC BLOCK do.end1366
%15840:	getelementptr	 %14855 XXX
%15841:	br	 do.end1369

BASIC BLOCK do.end1369
%15842:	br	 do.body1370

BASIC BLOCK do.body1370
%15843:	br	 while.cond1373

BASIC BLOCK while.cond1373
%15844:	getelementptr	 %14119 XXX XXX
%15845:	load	 %15844
%15846:	getelementptr	 %14119 XXX XXX
%15847:	load	 %15846
%15848:	sub	 %15845 %15847
%15849:	zext	 %15848
%15850:	sub	 %14364 %14365
%15851:	add	 %15850 XXX
%15852:	mul	 %15851 XXX
%15853:	add	 %15852 XXX
%15854:	icmp	 %15849 %15853
%15855:	br	 %15854 while.end1412 while.body1384

BASIC BLOCK while.body1384
%15856:	getelementptr	 %14119 XXX XXX
%15857:	load	 %15856
%15858:	load	 re_max_failures
%15859:	mul	 %15858 XXX
%15860:	icmp	 %15857 %15859
%15861:	br	 %15860 cond.false1390 cond.true1389

BASIC BLOCK cond.true1389
%15862:	br	 XXX if.then1410 if.end1411

BASIC BLOCK cond.false1390
%15863:	getelementptr	 %14119 XXX XXX
%15864:	load	 %15863
%15865:	shl	 %15864 XXX
%15866:	zext	 %15865
%15867:	mul	 %15866 XXX
%15868:	alloca	 %15867
%15869:	getelementptr	 %14119 XXX XXX
%15870:	load	 %15869
%15871:	bitcast	 %15870
%15872:	getelementptr	 %14119 XXX XXX
%15873:	load	 %15872
%15874:	zext	 %15873
%15875:	mul	 %15874 XXX
%15876:	call	 %15868 %15871 %15875 XXX XXX llvm.memcpy.p0i8.p0i8.i64
%15877:	bitcast	 %15868
%15878:	getelementptr	 %14119 XXX XXX
%15879:	store	 %15877 %15878
%15880:	getelementptr	 %14119 XXX XXX
%15881:	load	 %15880
%15882:	icmp	 %15881 XXX
%15883:	br	 %15882 cond.false1404 cond.true1403

BASIC BLOCK cond.true1403
%15884:	br	 cond.end1407

BASIC BLOCK cond.false1404
%15885:	getelementptr	 %14119 XXX XXX
%15886:	load	 %15885
%15887:	shl	 %15886 XXX
%15888:	store	 %15887 %15885
%15889:	br	 cond.end1407

BASIC BLOCK cond.end1407
%15890:	phi	 XXX XXX
%15891:	icmp	 %15890 XXX
%15892:	br	 %15891 if.then1410 if.end1411

BASIC BLOCK if.then1410
%15893:	br	 return

BASIC BLOCK if.end1411
%15894:	br	 while.cond1373

BASIC BLOCK while.end1412
%15895:	br	 for.cond1413

BASIC BLOCK for.cond1413
%15896:	phi	 %14365 %15937
%15897:	icmp	 %15896 %14364
%15898:	br	 %15897 for.end1440 for.body1416

BASIC BLOCK for.body1416
%15899:	getelementptr	 %14234 %15896
%15900:	load	 %15899
%15901:	getelementptr	 %14119 XXX XXX
%15902:	load	 %15901
%15903:	add	 %15902 XXX
%15904:	store	 %15903 %15901
%15905:	zext	 %15902
%15906:	getelementptr	 %14119 XXX XXX
%15907:	load	 %15906
%15908:	getelementptr	 %15907 %15905
%15909:	bitcast	 %15908
%15910:	store	 %15900 %15909
%15911:	getelementptr	 %14233 %15896
%15912:	load	 %15911
%15913:	getelementptr	 %14119 XXX XXX
%15914:	load	 %15913
%15915:	add	 %15914 XXX
%15916:	store	 %15915 %15913
%15917:	zext	 %15914
%15918:	getelementptr	 %14119 XXX XXX
%15919:	load	 %15918
%15920:	getelementptr	 %15919 %15917
%15921:	bitcast	 %15920
%15922:	store	 %15912 %15921
%15923:	getelementptr	 %14119 XXX XXX
%15924:	load	 %15923
%15925:	add	 %15924 XXX
%15926:	store	 %15925 %15923
%15927:	zext	 %15924
%15928:	getelementptr	 %14119 XXX XXX
%15929:	load	 %15928
%15930:	getelementptr	 %15929 %15927
%15931:	getelementptr	 %14230 %15896
%15932:	bitcast	 %15931
%15933:	bitcast	 %15930
%15934:	bitcast	 %15932
%15935:	call	 %15933 %15934 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%15936:	br	 for.inc1438

BASIC BLOCK for.inc1438
%15937:	add	 %15896 XXX
%15938:	br	 for.cond1413

BASIC BLOCK for.end1440
%15939:	trunc	 %14365
%15940:	getelementptr	 %14119 XXX XXX
%15941:	load	 %15940
%15942:	add	 %15941 XXX
%15943:	store	 %15942 %15940
%15944:	zext	 %15941
%15945:	getelementptr	 %14119 XXX XXX
%15946:	load	 %15945
%15947:	getelementptr	 %15946 %15944
%15948:	bitcast	 %15947
%15949:	store	 %15939 %15948
%15950:	trunc	 %14364
%15951:	getelementptr	 %14119 XXX XXX
%15952:	load	 %15951
%15953:	add	 %15952 XXX
%15954:	store	 %15953 %15951
%15955:	zext	 %15952
%15956:	getelementptr	 %14119 XXX XXX
%15957:	load	 %15956
%15958:	getelementptr	 %15957 %15955
%15959:	bitcast	 %15958
%15960:	store	 %15950 %15959
%15961:	sext	 %15838
%15962:	getelementptr	 %15840 %15961
%15963:	getelementptr	 %14119 XXX XXX
%15964:	load	 %15963
%15965:	add	 %15964 XXX
%15966:	store	 %15965 %15963
%15967:	zext	 %15964
%15968:	getelementptr	 %14119 XXX XXX
%15969:	load	 %15968
%15970:	getelementptr	 %15969 %15967
%15971:	bitcast	 %15970
%15972:	store	 %15962 %15971
%15973:	getelementptr	 %14119 XXX XXX
%15974:	load	 %15973
%15975:	add	 %15974 XXX
%15976:	store	 %15975 %15973
%15977:	zext	 %15974
%15978:	getelementptr	 %14119 XXX XXX
%15979:	load	 %15978
%15980:	getelementptr	 %15979 %15977
%15981:	bitcast	 %15980
%15982:	store	 XXX %15981
%15983:	br	 do.end1470

BASIC BLOCK do.end1470
%15984:	br	 sw.epilog2661

BASIC BLOCK sw.bb1471
%15985:	br	 on_failure

BASIC BLOCK on_failure
%15986:	br	 do.body1472

BASIC BLOCK do.body1472
%15987:	br	 do.body1473

BASIC BLOCK do.body1473
%15988:	load	 %14855
%15989:	zext	 %15988
%15990:	and	 %15989 XXX
%15991:	getelementptr	 %14855 XXX
%15992:	load	 %15991
%15993:	sext	 %15992
%15994:	shl	 %15993 XXX
%15995:	add	 %15990 %15994
%15996:	br	 do.end1481

BASIC BLOCK do.end1481
%15997:	getelementptr	 %14855 XXX
%15998:	br	 do.end1484

BASIC BLOCK do.end1484
%15999:	store	 %15997 %14118
%16000:	br	 while.cond1485

BASIC BLOCK while.cond1485
%16001:	load	 %14118
%16002:	icmp	 %16001 %14124
%16003:	br	 %16002 land.end1492 land.rhs1488

BASIC BLOCK land.rhs1488
%16004:	load	 %14118
%16005:	load	 %16004
%16006:	zext	 %16005
%16007:	icmp	 %16006 XXX
%16008:	br	 land.end1492

BASIC BLOCK land.end1492
%16009:	phi	 XXX %16007
%16010:	br	 %16009 while.end1496 while.body1494

BASIC BLOCK while.body1494
%16011:	load	 %14118
%16012:	getelementptr	 %16011 XXX
%16013:	store	 %16012 %14118
%16014:	br	 while.cond1485

BASIC BLOCK while.end1496
%16015:	load	 %14118
%16016:	icmp	 %16015 %14124
%16017:	br	 %16016 if.end1516 land.lhs.true1499

BASIC BLOCK land.lhs.true1499
%16018:	load	 %14118
%16019:	load	 %16018
%16020:	zext	 %16019
%16021:	icmp	 %16020 XXX
%16022:	br	 %16021 if.end1516 if.then1503

BASIC BLOCK if.then1503
%16023:	load	 %14118
%16024:	getelementptr	 %16023 XXX
%16025:	load	 %16024
%16026:	zext	 %16025
%16027:	load	 %14118
%16028:	getelementptr	 %16027 XXX
%16029:	load	 %16028
%16030:	zext	 %16029
%16031:	add	 %16026 %16030
%16032:	sext	 %16031
%16033:	icmp	 %14365 XXX
%16034:	br	 %16033 if.end1515 if.then1512

BASIC BLOCK if.then1512
%16035:	load	 %14118
%16036:	getelementptr	 %16035 XXX
%16037:	load	 %16036
%16038:	zext	 %16037
%16039:	br	 if.end1515

BASIC BLOCK if.end1515
%16040:	phi	 %16038 %14365
%16041:	br	 if.end1516

BASIC BLOCK if.end1516
%16042:	phi	 %16032 %14364 %14364
%16043:	phi	 %16040 %14365 %14365
%16044:	br	 do.body1517

BASIC BLOCK do.body1517
%16045:	br	 while.cond1520

BASIC BLOCK while.cond1520
%16046:	getelementptr	 %14119 XXX XXX
%16047:	load	 %16046
%16048:	getelementptr	 %14119 XXX XXX
%16049:	load	 %16048
%16050:	sub	 %16047 %16049
%16051:	zext	 %16050
%16052:	sub	 %16042 %16043
%16053:	add	 %16052 XXX
%16054:	mul	 %16053 XXX
%16055:	add	 %16054 XXX
%16056:	icmp	 %16051 %16055
%16057:	br	 %16056 while.end1559 while.body1531

BASIC BLOCK while.body1531
%16058:	getelementptr	 %14119 XXX XXX
%16059:	load	 %16058
%16060:	load	 re_max_failures
%16061:	mul	 %16060 XXX
%16062:	icmp	 %16059 %16061
%16063:	br	 %16062 cond.false1537 cond.true1536

BASIC BLOCK cond.true1536
%16064:	br	 XXX if.then1557 if.end1558

BASIC BLOCK cond.false1537
%16065:	getelementptr	 %14119 XXX XXX
%16066:	load	 %16065
%16067:	shl	 %16066 XXX
%16068:	zext	 %16067
%16069:	mul	 %16068 XXX
%16070:	alloca	 %16069
%16071:	getelementptr	 %14119 XXX XXX
%16072:	load	 %16071
%16073:	bitcast	 %16072
%16074:	getelementptr	 %14119 XXX XXX
%16075:	load	 %16074
%16076:	zext	 %16075
%16077:	mul	 %16076 XXX
%16078:	call	 %16070 %16073 %16077 XXX XXX llvm.memcpy.p0i8.p0i8.i64
%16079:	bitcast	 %16070
%16080:	getelementptr	 %14119 XXX XXX
%16081:	store	 %16079 %16080
%16082:	getelementptr	 %14119 XXX XXX
%16083:	load	 %16082
%16084:	icmp	 %16083 XXX
%16085:	br	 %16084 cond.false1551 cond.true1550

BASIC BLOCK cond.true1550
%16086:	br	 cond.end1554

BASIC BLOCK cond.false1551
%16087:	getelementptr	 %14119 XXX XXX
%16088:	load	 %16087
%16089:	shl	 %16088 XXX
%16090:	store	 %16089 %16087
%16091:	br	 cond.end1554

BASIC BLOCK cond.end1554
%16092:	phi	 XXX XXX
%16093:	icmp	 %16092 XXX
%16094:	br	 %16093 if.then1557 if.end1558

BASIC BLOCK if.then1557
%16095:	br	 return

BASIC BLOCK if.end1558
%16096:	br	 while.cond1520

BASIC BLOCK while.end1559
%16097:	br	 for.cond1560

BASIC BLOCK for.cond1560
%16098:	phi	 %16043 %16139
%16099:	icmp	 %16098 %16042
%16100:	br	 %16099 for.end1587 for.body1563

BASIC BLOCK for.body1563
%16101:	getelementptr	 %14234 %16098
%16102:	load	 %16101
%16103:	getelementptr	 %14119 XXX XXX
%16104:	load	 %16103
%16105:	add	 %16104 XXX
%16106:	store	 %16105 %16103
%16107:	zext	 %16104
%16108:	getelementptr	 %14119 XXX XXX
%16109:	load	 %16108
%16110:	getelementptr	 %16109 %16107
%16111:	bitcast	 %16110
%16112:	store	 %16102 %16111
%16113:	getelementptr	 %14233 %16098
%16114:	load	 %16113
%16115:	getelementptr	 %14119 XXX XXX
%16116:	load	 %16115
%16117:	add	 %16116 XXX
%16118:	store	 %16117 %16115
%16119:	zext	 %16116
%16120:	getelementptr	 %14119 XXX XXX
%16121:	load	 %16120
%16122:	getelementptr	 %16121 %16119
%16123:	bitcast	 %16122
%16124:	store	 %16114 %16123
%16125:	getelementptr	 %14119 XXX XXX
%16126:	load	 %16125
%16127:	add	 %16126 XXX
%16128:	store	 %16127 %16125
%16129:	zext	 %16126
%16130:	getelementptr	 %14119 XXX XXX
%16131:	load	 %16130
%16132:	getelementptr	 %16131 %16129
%16133:	getelementptr	 %14230 %16098
%16134:	bitcast	 %16133
%16135:	bitcast	 %16132
%16136:	bitcast	 %16134
%16137:	call	 %16135 %16136 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%16138:	br	 for.inc1585

BASIC BLOCK for.inc1585
%16139:	add	 %16098 XXX
%16140:	br	 for.cond1560

BASIC BLOCK for.end1587
%16141:	trunc	 %16043
%16142:	getelementptr	 %14119 XXX XXX
%16143:	load	 %16142
%16144:	add	 %16143 XXX
%16145:	store	 %16144 %16142
%16146:	zext	 %16143
%16147:	getelementptr	 %14119 XXX XXX
%16148:	load	 %16147
%16149:	getelementptr	 %16148 %16146
%16150:	bitcast	 %16149
%16151:	store	 %16141 %16150
%16152:	trunc	 %16042
%16153:	getelementptr	 %14119 XXX XXX
%16154:	load	 %16153
%16155:	add	 %16154 XXX
%16156:	store	 %16155 %16153
%16157:	zext	 %16154
%16158:	getelementptr	 %14119 XXX XXX
%16159:	load	 %16158
%16160:	getelementptr	 %16159 %16157
%16161:	bitcast	 %16160
%16162:	store	 %16152 %16161
%16163:	sext	 %15995
%16164:	getelementptr	 %15997 %16163
%16165:	getelementptr	 %14119 XXX XXX
%16166:	load	 %16165
%16167:	add	 %16166 XXX
%16168:	store	 %16167 %16165
%16169:	zext	 %16166
%16170:	getelementptr	 %14119 XXX XXX
%16171:	load	 %16170
%16172:	getelementptr	 %16171 %16169
%16173:	bitcast	 %16172
%16174:	store	 %16164 %16173
%16175:	getelementptr	 %14119 XXX XXX
%16176:	load	 %16175
%16177:	add	 %16176 XXX
%16178:	store	 %16177 %16175
%16179:	zext	 %16176
%16180:	getelementptr	 %14119 XXX XXX
%16181:	load	 %16180
%16182:	getelementptr	 %16181 %16179
%16183:	bitcast	 %16182
%16184:	store	 %14369 %16183
%16185:	br	 do.end1617

BASIC BLOCK do.end1617
%16186:	br	 sw.epilog2661

BASIC BLOCK sw.bb1618
%16187:	br	 do.body1619

BASIC BLOCK do.body1619
%16188:	br	 do.body1620

BASIC BLOCK do.body1620
%16189:	load	 %14855
%16190:	zext	 %16189
%16191:	and	 %16190 XXX
%16192:	getelementptr	 %14855 XXX
%16193:	load	 %16192
%16194:	sext	 %16193
%16195:	shl	 %16194 XXX
%16196:	add	 %16191 %16195
%16197:	br	 do.end1628

BASIC BLOCK do.end1628
%16198:	getelementptr	 %14855 XXX
%16199:	br	 do.end1631

BASIC BLOCK do.end1631
%16200:	br	 while.body1633

BASIC BLOCK while.body1633
%16201:	phi	 %16198 %16226
%16202:	getelementptr	 %16201 XXX
%16203:	icmp	 %16202 %14124
%16204:	br	 %16203 if.else1647 land.lhs.true1637

BASIC BLOCK land.lhs.true1637
%16205:	load	 %16201
%16206:	zext	 %16205
%16207:	icmp	 %16206 XXX
%16208:	br	 %16207 lor.lhs.false1641 if.then1645

BASIC BLOCK lor.lhs.false1641
%16209:	load	 %16201
%16210:	zext	 %16209
%16211:	icmp	 %16210 XXX
%16212:	br	 %16211 if.else1647 if.then1645

BASIC BLOCK if.then1645
%16213:	getelementptr	 %16201 XXX
%16214:	br	 if.end1659

BASIC BLOCK if.else1647
%16215:	getelementptr	 %16201 XXX
%16216:	icmp	 %16215 %14124
%16217:	br	 %16216 if.else1657 land.lhs.true1651

BASIC BLOCK land.lhs.true1651
%16218:	load	 %16201
%16219:	zext	 %16218
%16220:	icmp	 %16219 XXX
%16221:	br	 %16220 if.else1657 if.then1655

BASIC BLOCK if.then1655
%16222:	getelementptr	 %16201 XXX
%16223:	br	 if.end1658

BASIC BLOCK if.else1657
%16224:	br	 while.end1660

BASIC BLOCK if.end1658
%16225:	br	 if.end1659

BASIC BLOCK if.end1659
%16226:	phi	 %16213 %16222
%16227:	br	 while.body1633

BASIC BLOCK while.end1660
%16228:	sext	 %16196
%16229:	getelementptr	 %16198 %16228
%16230:	store	 %16229 %14118
%16231:	icmp	 %16201 %14124
%16232:	br	 %16231 if.else1667 if.then1665

BASIC BLOCK if.then1665
%16233:	getelementptr	 %16198 XXX
%16234:	store	 XXX %16233
%16235:	br	 if.end1885

BASIC BLOCK if.else1667
%16236:	load	 %16201
%16237:	zext	 %16236
%16238:	icmp	 %16237 XXX
%16239:	br	 %16238 lor.lhs.false1671 if.then1681

BASIC BLOCK lor.lhs.false1671
%16240:	getelementptr	 bufp XXX XXX
%16241:	load	 %16240
%16242:	lshr	 %16241 XXX
%16243:	zext	 %16242
%16244:	icmp	 %16243 XXX
%16245:	br	 %16244 if.else1752 land.lhs.true1677

BASIC BLOCK land.lhs.true1677
%16246:	load	 %16201
%16247:	zext	 %16246
%16248:	icmp	 %16247 XXX
%16249:	br	 %16248 if.else1752 if.then1681

BASIC BLOCK if.then1681
%16250:	load	 %16201
%16251:	zext	 %16250
%16252:	icmp	 %16251 XXX
%16253:	br	 %16252 cond.false1687 cond.true1686

BASIC BLOCK cond.true1686
%16254:	br	 cond.end1690

BASIC BLOCK cond.false1687
%16255:	getelementptr	 %16201 XXX
%16256:	load	 %16255
%16257:	zext	 %16256
%16258:	br	 cond.end1690

BASIC BLOCK cond.end1690
%16259:	phi	 XXX %16257
%16260:	trunc	 %16259
%16261:	load	 %14118
%16262:	getelementptr	 %16261 XXX
%16263:	load	 %16262
%16264:	zext	 %16263
%16265:	icmp	 %16264 XXX
%16266:	br	 %16265 if.else1705 land.lhs.true1697

BASIC BLOCK land.lhs.true1697
%16267:	load	 %14118
%16268:	getelementptr	 %16267 XXX
%16269:	load	 %16268
%16270:	zext	 %16269
%16271:	zext	 %16260
%16272:	icmp	 %16270 %16271
%16273:	br	 %16272 if.else1705 if.then1703

BASIC BLOCK if.then1703
%16274:	getelementptr	 %16198 XXX
%16275:	store	 XXX %16274
%16276:	br	 if.end1751

BASIC BLOCK if.else1705
%16277:	load	 %14118
%16278:	getelementptr	 %16277 XXX
%16279:	load	 %16278
%16280:	zext	 %16279
%16281:	icmp	 %16280 XXX
%16282:	br	 %16281 lor.lhs.false1710 if.then1715

BASIC BLOCK lor.lhs.false1710
%16283:	load	 %14118
%16284:	getelementptr	 %16283 XXX
%16285:	load	 %16284
%16286:	zext	 %16285
%16287:	icmp	 %16286 XXX
%16288:	br	 %16287 if.end1750 if.then1715

BASIC BLOCK if.then1715
%16289:	load	 %14118
%16290:	getelementptr	 %16289 XXX
%16291:	load	 %16290
%16292:	zext	 %16291
%16293:	icmp	 %16292 XXX
%16294:	zext	 %16293
%16295:	zext	 %16260
%16296:	load	 %14118
%16297:	getelementptr	 %16296 XXX
%16298:	load	 %16297
%16299:	zext	 %16298
%16300:	mul	 %16299 XXX
%16301:	trunc	 %16300
%16302:	zext	 %16301
%16303:	icmp	 %16295 %16302
%16304:	br	 %16303 if.end1745 land.lhs.true1729

BASIC BLOCK land.lhs.true1729
%16305:	zext	 %16260
%16306:	sdiv	 %16305 XXX
%16307:	add	 XXX %16306
%16308:	sext	 %16307
%16309:	load	 %14118
%16310:	getelementptr	 %16309 %16308
%16311:	load	 %16310
%16312:	zext	 %16311
%16313:	zext	 %16260
%16314:	srem	 %16313 XXX
%16315:	shl	 XXX %16314
%16316:	and	 %16312 %16315
%16317:	icmp	 %16316 XXX
%16318:	br	 %16317 if.end1745 if.then1741

BASIC BLOCK if.then1741
%16319:	icmp	 %16294 XXX
%16320:	xor	 %16319 XXX
%16321:	zext	 %16320
%16322:	br	 if.end1745

BASIC BLOCK if.end1745
%16323:	phi	 %16321 %16294 %16294
%16324:	icmp	 %16323 XXX
%16325:	br	 %16324 if.then1747 if.end1749

BASIC BLOCK if.then1747
%16326:	getelementptr	 %16198 XXX
%16327:	store	 XXX %16326
%16328:	br	 if.end1749

BASIC BLOCK if.end1749
%16329:	br	 if.end1750

BASIC BLOCK if.end1750
%16330:	br	 if.end1751

BASIC BLOCK if.end1751
%16331:	br	 if.end1884

BASIC BLOCK if.else1752
%16332:	load	 %16201
%16333:	zext	 %16332
%16334:	icmp	 %16333 XXX
%16335:	br	 %16334 if.end1883 if.then1756

BASIC BLOCK if.then1756
%16336:	load	 %14118
%16337:	getelementptr	 %16336 XXX
%16338:	load	 %16337
%16339:	zext	 %16338
%16340:	icmp	 %16339 XXX
%16341:	br	 %16340 if.else1785 land.lhs.true1761

BASIC BLOCK land.lhs.true1761
%16342:	getelementptr	 %16201 XXX
%16343:	load	 %16342
%16344:	zext	 %16343
%16345:	mul	 %16344 XXX
%16346:	load	 %14118
%16347:	getelementptr	 %16346 XXX
%16348:	load	 %16347
%16349:	zext	 %16348
%16350:	icmp	 %16345 %16349
%16351:	br	 %16350 if.then1783 land.lhs.true1769

BASIC BLOCK land.lhs.true1769
%16352:	load	 %14118
%16353:	getelementptr	 %16352 XXX
%16354:	load	 %16353
%16355:	zext	 %16354
%16356:	sdiv	 %16355 XXX
%16357:	add	 XXX %16356
%16358:	sext	 %16357
%16359:	getelementptr	 %16201 %16358
%16360:	load	 %16359
%16361:	zext	 %16360
%16362:	load	 %14118
%16363:	getelementptr	 %16362 XXX
%16364:	load	 %16363
%16365:	zext	 %16364
%16366:	srem	 %16365 XXX
%16367:	shl	 XXX %16366
%16368:	and	 %16361 %16367
%16369:	icmp	 %16368 XXX
%16370:	br	 %16369 if.then1783 if.else1785

BASIC BLOCK if.then1783
%16371:	getelementptr	 %16198 XXX
%16372:	store	 XXX %16371
%16373:	br	 if.end1882

BASIC BLOCK if.else1785
%16374:	load	 %14118
%16375:	getelementptr	 %16374 XXX
%16376:	load	 %16375
%16377:	zext	 %16376
%16378:	icmp	 %16377 XXX
%16379:	br	 %16378 if.else1832 if.then1790

BASIC BLOCK if.then1790
%16380:	br	 for.cond1791

BASIC BLOCK for.cond1791
%16381:	phi	 XXX %16417
%16382:	getelementptr	 %16201 XXX
%16383:	load	 %16382
%16384:	zext	 %16383
%16385:	icmp	 %16381 %16384
%16386:	br	 %16385 for.end1824 for.body1796

BASIC BLOCK for.body1796
%16387:	add	 XXX %16381
%16388:	sext	 %16387
%16389:	getelementptr	 %16201 %16388
%16390:	load	 %16389
%16391:	zext	 %16390
%16392:	icmp	 %16391 XXX
%16393:	br	 %16392 lor.lhs.false1803 if.end1821

BASIC BLOCK lor.lhs.false1803
%16394:	load	 %14118
%16395:	getelementptr	 %16394 XXX
%16396:	load	 %16395
%16397:	zext	 %16396
%16398:	icmp	 %16381 %16397
%16399:	br	 %16398 if.then1820 land.lhs.true1808

BASIC BLOCK land.lhs.true1808
%16400:	add	 XXX %16381
%16401:	sext	 %16400
%16402:	getelementptr	 %16201 %16401
%16403:	load	 %16402
%16404:	zext	 %16403
%16405:	add	 XXX %16381
%16406:	sext	 %16405
%16407:	load	 %14118
%16408:	getelementptr	 %16407 %16406
%16409:	load	 %16408
%16410:	zext	 %16409
%16411:	xor	 %16410 XXX
%16412:	and	 %16404 %16411
%16413:	icmp	 %16412 XXX
%16414:	br	 %16413 if.then1820 if.end1821

BASIC BLOCK if.then1820
%16415:	br	 for.end1824

BASIC BLOCK if.end1821
%16416:	br	 for.inc1822

BASIC BLOCK for.inc1822
%16417:	add	 %16381 XXX
%16418:	br	 for.cond1791

BASIC BLOCK for.end1824
%16419:	getelementptr	 %16201 XXX
%16420:	load	 %16419
%16421:	zext	 %16420
%16422:	icmp	 %16381 %16421
%16423:	br	 %16422 if.end1831 if.then1829

BASIC BLOCK if.then1829
%16424:	getelementptr	 %16198 XXX
%16425:	store	 XXX %16424
%16426:	br	 if.end1831

BASIC BLOCK if.end1831
%16427:	br	 if.end1881

BASIC BLOCK if.else1832
%16428:	load	 %14118
%16429:	getelementptr	 %16428 XXX
%16430:	load	 %16429
%16431:	zext	 %16430
%16432:	icmp	 %16431 XXX
%16433:	br	 %16432 if.end1880 if.then1837

BASIC BLOCK if.then1837
%16434:	br	 for.cond1839

BASIC BLOCK for.cond1839
%16435:	phi	 XXX %16465
%16436:	getelementptr	 %16201 XXX
%16437:	load	 %16436
%16438:	zext	 %16437
%16439:	icmp	 %16435 %16438
%16440:	br	 %16439 land.end1849 land.rhs1844

BASIC BLOCK land.rhs1844
%16441:	load	 %14118
%16442:	getelementptr	 %16441 XXX
%16443:	load	 %16442
%16444:	zext	 %16443
%16445:	icmp	 %16435 %16444
%16446:	br	 land.end1849

BASIC BLOCK land.end1849
%16447:	phi	 XXX %16445
%16448:	br	 %16447 for.end1867 for.body1851

BASIC BLOCK for.body1851
%16449:	add	 XXX %16435
%16450:	sext	 %16449
%16451:	getelementptr	 %16201 %16450
%16452:	load	 %16451
%16453:	zext	 %16452
%16454:	add	 XXX %16435
%16455:	sext	 %16454
%16456:	load	 %14118
%16457:	getelementptr	 %16456 %16455
%16458:	load	 %16457
%16459:	zext	 %16458
%16460:	and	 %16453 %16459
%16461:	icmp	 %16460 XXX
%16462:	br	 %16461 if.end1864 if.then1863

BASIC BLOCK if.then1863
%16463:	br	 for.end1867

BASIC BLOCK if.end1864
%16464:	br	 for.inc1865

BASIC BLOCK for.inc1865
%16465:	add	 %16435 XXX
%16466:	br	 for.cond1839

BASIC BLOCK for.end1867
%16467:	getelementptr	 %16201 XXX
%16468:	load	 %16467
%16469:	zext	 %16468
%16470:	icmp	 %16435 %16469
%16471:	br	 %16470 lor.lhs.false1872 if.then1877

BASIC BLOCK lor.lhs.false1872
%16472:	load	 %14118
%16473:	getelementptr	 %16472 XXX
%16474:	load	 %16473
%16475:	zext	 %16474
%16476:	icmp	 %16435 %16475
%16477:	br	 %16476 if.end1879 if.then1877

BASIC BLOCK if.then1877
%16478:	getelementptr	 %16198 XXX
%16479:	store	 XXX %16478
%16480:	br	 if.end1879

BASIC BLOCK if.end1879
%16481:	br	 if.end1880

BASIC BLOCK if.end1880
%16482:	br	 if.end1881

BASIC BLOCK if.end1881
%16483:	br	 if.end1882

BASIC BLOCK if.end1882
%16484:	br	 if.end1883

BASIC BLOCK if.end1883
%16485:	br	 if.end1884

BASIC BLOCK if.end1884
%16486:	br	 if.end1885

BASIC BLOCK if.end1885
%16487:	getelementptr	 %16198 XXX
%16488:	getelementptr	 %16487 XXX
%16489:	load	 %16488
%16490:	zext	 %16489
%16491:	icmp	 %16490 XXX
%16492:	br	 %16491 if.end1893 if.then1891

BASIC BLOCK if.then1891
%16493:	getelementptr	 %16487 XXX
%16494:	store	 XXX %16493
%16495:	br	 unconditional_jump

BASIC BLOCK if.end1893
%16496:	br	 sw.bb1894

BASIC BLOCK sw.bb1894
%16497:	phi	 %14855 %16487
%16498:	getelementptr	 %14119 XXX XXX
%16499:	load	 %16498
%16500:	add	 %16499 XXX
%16501:	store	 %16500 %16498
%16502:	zext	 %16500
%16503:	getelementptr	 %14119 XXX XXX
%16504:	load	 %16503
%16505:	getelementptr	 %16504 %16502
%16506:	bitcast	 %16505
%16507:	load	 %16506
%16508:	icmp	 %16507 XXX
%16509:	br	 %16508 if.end1905 if.then1904

BASIC BLOCK if.then1904
%16510:	br	 if.end1905

BASIC BLOCK if.end1905
%16511:	getelementptr	 %14119 XXX XXX
%16512:	load	 %16511
%16513:	add	 %16512 XXX
%16514:	store	 %16513 %16511
%16515:	zext	 %16513
%16516:	getelementptr	 %14119 XXX XXX
%16517:	load	 %16516
%16518:	getelementptr	 %16517 %16515
%16519:	bitcast	 %16518
%16520:	load	 %16519
%16521:	getelementptr	 %14119 XXX XXX
%16522:	load	 %16521
%16523:	add	 %16522 XXX
%16524:	store	 %16523 %16521
%16525:	zext	 %16523
%16526:	getelementptr	 %14119 XXX XXX
%16527:	load	 %16526
%16528:	getelementptr	 %16527 %16525
%16529:	bitcast	 %16528
%16530:	load	 %16529
%16531:	sext	 %16530
%16532:	getelementptr	 %14119 XXX XXX
%16533:	load	 %16532
%16534:	add	 %16533 XXX
%16535:	store	 %16534 %16532
%16536:	zext	 %16534
%16537:	getelementptr	 %14119 XXX XXX
%16538:	load	 %16537
%16539:	getelementptr	 %16538 %16536
%16540:	bitcast	 %16539
%16541:	load	 %16540
%16542:	sext	 %16541
%16543:	br	 for.cond1926

BASIC BLOCK for.cond1926
%16544:	phi	 %16531 %16585
%16545:	icmp	 %16544 %16542
%16546:	br	 %16545 for.end1953 for.body1929

BASIC BLOCK for.body1929
%16547:	getelementptr	 %14226 %16544
%16548:	bitcast	 %16547
%16549:	getelementptr	 %14119 XXX XXX
%16550:	load	 %16549
%16551:	add	 %16550 XXX
%16552:	store	 %16551 %16549
%16553:	zext	 %16551
%16554:	getelementptr	 %14119 XXX XXX
%16555:	load	 %16554
%16556:	getelementptr	 %16555 %16553
%16557:	bitcast	 %16548
%16558:	bitcast	 %16556
%16559:	call	 %16557 %16558 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%16560:	getelementptr	 %14119 XXX XXX
%16561:	load	 %16560
%16562:	add	 %16561 XXX
%16563:	store	 %16562 %16560
%16564:	zext	 %16562
%16565:	getelementptr	 %14119 XXX XXX
%16566:	load	 %16565
%16567:	getelementptr	 %16566 %16564
%16568:	bitcast	 %16567
%16569:	load	 %16568
%16570:	getelementptr	 %14227 %16544
%16571:	store	 %16569 %16570
%16572:	getelementptr	 %14119 XXX XXX
%16573:	load	 %16572
%16574:	add	 %16573 XXX
%16575:	store	 %16574 %16572
%16576:	zext	 %16574
%16577:	getelementptr	 %14119 XXX XXX
%16578:	load	 %16577
%16579:	getelementptr	 %16578 %16576
%16580:	bitcast	 %16579
%16581:	load	 %16580
%16582:	getelementptr	 %14227 %16544
%16583:	store	 %16581 %16582
%16584:	br	 for.inc1951

BASIC BLOCK for.inc1951
%16585:	add	 %16544 XXX
%16586:	br	 for.cond1926

BASIC BLOCK for.end1953
%16587:	br	 unconditional_jump

BASIC BLOCK unconditional_jump
%16588:	phi	 %14361 %14361 %14361 XXX %14361
%16589:	phi	 %14855 %14855 %14855 %16497 %16487
%16590:	br	 sw.bb1954

BASIC BLOCK sw.bb1954
%16591:	phi	 %16588 %14361
%16592:	phi	 %16589 %14855
%16593:	br	 do.body1955

BASIC BLOCK do.body1955
%16594:	br	 do.body1956

BASIC BLOCK do.body1956
%16595:	load	 %16592
%16596:	zext	 %16595
%16597:	and	 %16596 XXX
%16598:	getelementptr	 %16592 XXX
%16599:	load	 %16598
%16600:	sext	 %16599
%16601:	shl	 %16600 XXX
%16602:	add	 %16597 %16601
%16603:	br	 do.end1964

BASIC BLOCK do.end1964
%16604:	getelementptr	 %16592 XXX
%16605:	br	 do.end1967

BASIC BLOCK do.end1967
%16606:	sext	 %16602
%16607:	getelementptr	 %16604 %16606
%16608:	br	 sw.epilog2661

BASIC BLOCK sw.bb1970
%16609:	br	 unconditional_jump

BASIC BLOCK sw.bb1971
%16610:	br	 do.body1972

BASIC BLOCK do.body1972
%16611:	br	 while.cond1975

BASIC BLOCK while.cond1975
%16612:	getelementptr	 %14119 XXX XXX
%16613:	load	 %16612
%16614:	getelementptr	 %14119 XXX XXX
%16615:	load	 %16614
%16616:	sub	 %16613 %16615
%16617:	zext	 %16616
%16618:	sub	 %14364 %14365
%16619:	add	 %16618 XXX
%16620:	mul	 %16619 XXX
%16621:	add	 %16620 XXX
%16622:	icmp	 %16617 %16621
%16623:	br	 %16622 while.end2014 while.body1986

BASIC BLOCK while.body1986
%16624:	getelementptr	 %14119 XXX XXX
%16625:	load	 %16624
%16626:	load	 re_max_failures
%16627:	mul	 %16626 XXX
%16628:	icmp	 %16625 %16627
%16629:	br	 %16628 cond.false1992 cond.true1991

BASIC BLOCK cond.true1991
%16630:	br	 XXX if.then2012 if.end2013

BASIC BLOCK cond.false1992
%16631:	getelementptr	 %14119 XXX XXX
%16632:	load	 %16631
%16633:	shl	 %16632 XXX
%16634:	zext	 %16633
%16635:	mul	 %16634 XXX
%16636:	alloca	 %16635
%16637:	getelementptr	 %14119 XXX XXX
%16638:	load	 %16637
%16639:	bitcast	 %16638
%16640:	getelementptr	 %14119 XXX XXX
%16641:	load	 %16640
%16642:	zext	 %16641
%16643:	mul	 %16642 XXX
%16644:	call	 %16636 %16639 %16643 XXX XXX llvm.memcpy.p0i8.p0i8.i64
%16645:	bitcast	 %16636
%16646:	getelementptr	 %14119 XXX XXX
%16647:	store	 %16645 %16646
%16648:	getelementptr	 %14119 XXX XXX
%16649:	load	 %16648
%16650:	icmp	 %16649 XXX
%16651:	br	 %16650 cond.false2006 cond.true2005

BASIC BLOCK cond.true2005
%16652:	br	 cond.end2009

BASIC BLOCK cond.false2006
%16653:	getelementptr	 %14119 XXX XXX
%16654:	load	 %16653
%16655:	shl	 %16654 XXX
%16656:	store	 %16655 %16653
%16657:	br	 cond.end2009

BASIC BLOCK cond.end2009
%16658:	phi	 XXX XXX
%16659:	icmp	 %16658 XXX
%16660:	br	 %16659 if.then2012 if.end2013

BASIC BLOCK if.then2012
%16661:	br	 return

BASIC BLOCK if.end2013
%16662:	br	 while.cond1975

BASIC BLOCK while.end2014
%16663:	br	 for.cond2015

BASIC BLOCK for.cond2015
%16664:	phi	 %14365 %16705
%16665:	icmp	 %16664 %14364
%16666:	br	 %16665 for.end2042 for.body2018

BASIC BLOCK for.body2018
%16667:	getelementptr	 %14234 %16664
%16668:	load	 %16667
%16669:	getelementptr	 %14119 XXX XXX
%16670:	load	 %16669
%16671:	add	 %16670 XXX
%16672:	store	 %16671 %16669
%16673:	zext	 %16670
%16674:	getelementptr	 %14119 XXX XXX
%16675:	load	 %16674
%16676:	getelementptr	 %16675 %16673
%16677:	bitcast	 %16676
%16678:	store	 %16668 %16677
%16679:	getelementptr	 %14233 %16664
%16680:	load	 %16679
%16681:	getelementptr	 %14119 XXX XXX
%16682:	load	 %16681
%16683:	add	 %16682 XXX
%16684:	store	 %16683 %16681
%16685:	zext	 %16682
%16686:	getelementptr	 %14119 XXX XXX
%16687:	load	 %16686
%16688:	getelementptr	 %16687 %16685
%16689:	bitcast	 %16688
%16690:	store	 %16680 %16689
%16691:	getelementptr	 %14119 XXX XXX
%16692:	load	 %16691
%16693:	add	 %16692 XXX
%16694:	store	 %16693 %16691
%16695:	zext	 %16692
%16696:	getelementptr	 %14119 XXX XXX
%16697:	load	 %16696
%16698:	getelementptr	 %16697 %16695
%16699:	getelementptr	 %14230 %16664
%16700:	bitcast	 %16699
%16701:	bitcast	 %16698
%16702:	bitcast	 %16700
%16703:	call	 %16701 %16702 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%16704:	br	 for.inc2040

BASIC BLOCK for.inc2040
%16705:	add	 %16664 XXX
%16706:	br	 for.cond2015

BASIC BLOCK for.end2042
%16707:	trunc	 %14365
%16708:	getelementptr	 %14119 XXX XXX
%16709:	load	 %16708
%16710:	add	 %16709 XXX
%16711:	store	 %16710 %16708
%16712:	zext	 %16709
%16713:	getelementptr	 %14119 XXX XXX
%16714:	load	 %16713
%16715:	getelementptr	 %16714 %16712
%16716:	bitcast	 %16715
%16717:	store	 %16707 %16716
%16718:	trunc	 %14364
%16719:	getelementptr	 %14119 XXX XXX
%16720:	load	 %16719
%16721:	add	 %16720 XXX
%16722:	store	 %16721 %16719
%16723:	zext	 %16720
%16724:	getelementptr	 %14119 XXX XXX
%16725:	load	 %16724
%16726:	getelementptr	 %16725 %16723
%16727:	bitcast	 %16726
%16728:	store	 %16718 %16727
%16729:	getelementptr	 %14119 XXX XXX
%16730:	load	 %16729
%16731:	add	 %16730 XXX
%16732:	store	 %16731 %16729
%16733:	zext	 %16730
%16734:	getelementptr	 %14119 XXX XXX
%16735:	load	 %16734
%16736:	getelementptr	 %16735 %16733
%16737:	bitcast	 %16736
%16738:	store	 XXX %16737
%16739:	getelementptr	 %14119 XXX XXX
%16740:	load	 %16739
%16741:	add	 %16740 XXX
%16742:	store	 %16741 %16739
%16743:	zext	 %16740
%16744:	getelementptr	 %14119 XXX XXX
%16745:	load	 %16744
%16746:	getelementptr	 %16745 %16743
%16747:	bitcast	 %16746
%16748:	store	 XXX %16747
%16749:	br	 do.end2070

BASIC BLOCK do.end2070
%16750:	br	 unconditional_jump

BASIC BLOCK sw.bb2071
%16751:	br	 do.body2072

BASIC BLOCK do.body2072
%16752:	br	 while.cond2075

BASIC BLOCK while.cond2075
%16753:	getelementptr	 %14119 XXX XXX
%16754:	load	 %16753
%16755:	getelementptr	 %14119 XXX XXX
%16756:	load	 %16755
%16757:	sub	 %16754 %16756
%16758:	zext	 %16757
%16759:	sub	 %14364 %14365
%16760:	add	 %16759 XXX
%16761:	mul	 %16760 XXX
%16762:	add	 %16761 XXX
%16763:	icmp	 %16758 %16762
%16764:	br	 %16763 while.end2114 while.body2086

BASIC BLOCK while.body2086
%16765:	getelementptr	 %14119 XXX XXX
%16766:	load	 %16765
%16767:	load	 re_max_failures
%16768:	mul	 %16767 XXX
%16769:	icmp	 %16766 %16768
%16770:	br	 %16769 cond.false2092 cond.true2091

BASIC BLOCK cond.true2091
%16771:	br	 XXX if.then2112 if.end2113

BASIC BLOCK cond.false2092
%16772:	getelementptr	 %14119 XXX XXX
%16773:	load	 %16772
%16774:	shl	 %16773 XXX
%16775:	zext	 %16774
%16776:	mul	 %16775 XXX
%16777:	alloca	 %16776
%16778:	getelementptr	 %14119 XXX XXX
%16779:	load	 %16778
%16780:	bitcast	 %16779
%16781:	getelementptr	 %14119 XXX XXX
%16782:	load	 %16781
%16783:	zext	 %16782
%16784:	mul	 %16783 XXX
%16785:	call	 %16777 %16780 %16784 XXX XXX llvm.memcpy.p0i8.p0i8.i64
%16786:	bitcast	 %16777
%16787:	getelementptr	 %14119 XXX XXX
%16788:	store	 %16786 %16787
%16789:	getelementptr	 %14119 XXX XXX
%16790:	load	 %16789
%16791:	icmp	 %16790 XXX
%16792:	br	 %16791 cond.false2106 cond.true2105

BASIC BLOCK cond.true2105
%16793:	br	 cond.end2109

BASIC BLOCK cond.false2106
%16794:	getelementptr	 %14119 XXX XXX
%16795:	load	 %16794
%16796:	shl	 %16795 XXX
%16797:	store	 %16796 %16794
%16798:	br	 cond.end2109

BASIC BLOCK cond.end2109
%16799:	phi	 XXX XXX
%16800:	icmp	 %16799 XXX
%16801:	br	 %16800 if.then2112 if.end2113

BASIC BLOCK if.then2112
%16802:	br	 return

BASIC BLOCK if.end2113
%16803:	br	 while.cond2075

BASIC BLOCK while.end2114
%16804:	br	 for.cond2115

BASIC BLOCK for.cond2115
%16805:	phi	 %14365 %16846
%16806:	icmp	 %16805 %14364
%16807:	br	 %16806 for.end2142 for.body2118

BASIC BLOCK for.body2118
%16808:	getelementptr	 %14234 %16805
%16809:	load	 %16808
%16810:	getelementptr	 %14119 XXX XXX
%16811:	load	 %16810
%16812:	add	 %16811 XXX
%16813:	store	 %16812 %16810
%16814:	zext	 %16811
%16815:	getelementptr	 %14119 XXX XXX
%16816:	load	 %16815
%16817:	getelementptr	 %16816 %16814
%16818:	bitcast	 %16817
%16819:	store	 %16809 %16818
%16820:	getelementptr	 %14233 %16805
%16821:	load	 %16820
%16822:	getelementptr	 %14119 XXX XXX
%16823:	load	 %16822
%16824:	add	 %16823 XXX
%16825:	store	 %16824 %16822
%16826:	zext	 %16823
%16827:	getelementptr	 %14119 XXX XXX
%16828:	load	 %16827
%16829:	getelementptr	 %16828 %16826
%16830:	bitcast	 %16829
%16831:	store	 %16821 %16830
%16832:	getelementptr	 %14119 XXX XXX
%16833:	load	 %16832
%16834:	add	 %16833 XXX
%16835:	store	 %16834 %16832
%16836:	zext	 %16833
%16837:	getelementptr	 %14119 XXX XXX
%16838:	load	 %16837
%16839:	getelementptr	 %16838 %16836
%16840:	getelementptr	 %14230 %16805
%16841:	bitcast	 %16840
%16842:	bitcast	 %16839
%16843:	bitcast	 %16841
%16844:	call	 %16842 %16843 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%16845:	br	 for.inc2140

BASIC BLOCK for.inc2140
%16846:	add	 %16805 XXX
%16847:	br	 for.cond2115

BASIC BLOCK for.end2142
%16848:	trunc	 %14365
%16849:	getelementptr	 %14119 XXX XXX
%16850:	load	 %16849
%16851:	add	 %16850 XXX
%16852:	store	 %16851 %16849
%16853:	zext	 %16850
%16854:	getelementptr	 %14119 XXX XXX
%16855:	load	 %16854
%16856:	getelementptr	 %16855 %16853
%16857:	bitcast	 %16856
%16858:	store	 %16848 %16857
%16859:	trunc	 %14364
%16860:	getelementptr	 %14119 XXX XXX
%16861:	load	 %16860
%16862:	add	 %16861 XXX
%16863:	store	 %16862 %16860
%16864:	zext	 %16861
%16865:	getelementptr	 %14119 XXX XXX
%16866:	load	 %16865
%16867:	getelementptr	 %16866 %16864
%16868:	bitcast	 %16867
%16869:	store	 %16859 %16868
%16870:	getelementptr	 %14119 XXX XXX
%16871:	load	 %16870
%16872:	add	 %16871 XXX
%16873:	store	 %16872 %16870
%16874:	zext	 %16871
%16875:	getelementptr	 %14119 XXX XXX
%16876:	load	 %16875
%16877:	getelementptr	 %16876 %16874
%16878:	bitcast	 %16877
%16879:	store	 XXX %16878
%16880:	getelementptr	 %14119 XXX XXX
%16881:	load	 %16880
%16882:	add	 %16881 XXX
%16883:	store	 %16882 %16880
%16884:	zext	 %16881
%16885:	getelementptr	 %14119 XXX XXX
%16886:	load	 %16885
%16887:	getelementptr	 %16886 %16884
%16888:	bitcast	 %16887
%16889:	store	 XXX %16888
%16890:	br	 do.end2170

BASIC BLOCK do.end2170
%16891:	br	 sw.epilog2661

BASIC BLOCK sw.bb2171
%16892:	br	 do.body2172

BASIC BLOCK do.body2172
%16893:	getelementptr	 %14855 XXX
%16894:	load	 %16893
%16895:	zext	 %16894
%16896:	and	 %16895 XXX
%16897:	getelementptr	 %14855 XXX
%16898:	getelementptr	 %16897 XXX
%16899:	load	 %16898
%16900:	sext	 %16899
%16901:	shl	 %16900 XXX
%16902:	add	 %16896 %16901
%16903:	br	 do.end2182

BASIC BLOCK do.end2182
%16904:	icmp	 %16902 XXX
%16905:	br	 %16904 if.else2200 if.then2185

BASIC BLOCK if.then2185
%16906:	add	 %16902 XXX
%16907:	getelementptr	 %14855 XXX
%16908:	br	 do.body2188

BASIC BLOCK do.body2188
%16909:	br	 do.body2189

BASIC BLOCK do.body2189
%16910:	and	 %16906 XXX
%16911:	trunc	 %16910
%16912:	getelementptr	 %16907 XXX
%16913:	store	 %16911 %16912
%16914:	ashr	 %16906 XXX
%16915:	trunc	 %16914
%16916:	getelementptr	 %16907 XXX
%16917:	store	 %16915 %16916
%16918:	br	 do.end2196

BASIC BLOCK do.end2196
%16919:	getelementptr	 %16907 XXX
%16920:	br	 do.end2199

BASIC BLOCK do.end2199
%16921:	br	 if.end2207

BASIC BLOCK if.else2200
%16922:	icmp	 %16902 XXX
%16923:	br	 %16922 if.end2206 if.then2203

BASIC BLOCK if.then2203
%16924:	getelementptr	 %14855 XXX
%16925:	store	 XXX %16924
%16926:	getelementptr	 %14855 XXX
%16927:	store	 XXX %16926
%16928:	br	 on_failure

BASIC BLOCK if.end2206
%16929:	br	 if.end2207

BASIC BLOCK if.end2207
%16930:	phi	 %16919 %14855
%16931:	br	 sw.epilog2661

BASIC BLOCK sw.bb2208
%16932:	br	 do.body2209

BASIC BLOCK do.body2209
%16933:	getelementptr	 %14855 XXX
%16934:	load	 %16933
%16935:	zext	 %16934
%16936:	and	 %16935 XXX
%16937:	getelementptr	 %14855 XXX
%16938:	getelementptr	 %16937 XXX
%16939:	load	 %16938
%16940:	sext	 %16939
%16941:	shl	 %16940 XXX
%16942:	add	 %16936 %16941
%16943:	br	 do.end2219

BASIC BLOCK do.end2219
%16944:	icmp	 %16942 XXX
%16945:	br	 %16944 if.else2234 if.then2221

BASIC BLOCK if.then2221
%16946:	add	 %16942 XXX
%16947:	br	 do.body2223

BASIC BLOCK do.body2223
%16948:	and	 %16946 XXX
%16949:	trunc	 %16948
%16950:	getelementptr	 %14855 XXX
%16951:	getelementptr	 %16950 XXX
%16952:	store	 %16949 %16951
%16953:	ashr	 %16946 XXX
%16954:	trunc	 %16953
%16955:	getelementptr	 %14855 XXX
%16956:	getelementptr	 %16955 XXX
%16957:	store	 %16954 %16956
%16958:	br	 do.end2233

BASIC BLOCK do.end2233
%16959:	br	 unconditional_jump

BASIC BLOCK if.else2234
%16960:	getelementptr	 %14855 XXX
%16961:	br	 if.end2236

BASIC BLOCK if.end2236
%16962:	br	 sw.epilog2661

BASIC BLOCK sw.bb2237
%16963:	br	 do.body2238

BASIC BLOCK do.body2238
%16964:	br	 do.body2239

BASIC BLOCK do.body2239
%16965:	load	 %14855
%16966:	zext	 %16965
%16967:	and	 %16966 XXX
%16968:	getelementptr	 %14855 XXX
%16969:	load	 %16968
%16970:	sext	 %16969
%16971:	shl	 %16970 XXX
%16972:	add	 %16967 %16971
%16973:	br	 do.end2247

BASIC BLOCK do.end2247
%16974:	getelementptr	 %14855 XXX
%16975:	br	 do.end2250

BASIC BLOCK do.end2250
%16976:	sext	 %16972
%16977:	getelementptr	 %16974 %16976
%16978:	store	 %16977 %14118
%16979:	br	 do.body2253

BASIC BLOCK do.body2253
%16980:	br	 do.body2254

BASIC BLOCK do.body2254
%16981:	load	 %16974
%16982:	zext	 %16981
%16983:	and	 %16982 XXX
%16984:	getelementptr	 %16974 XXX
%16985:	load	 %16984
%16986:	sext	 %16985
%16987:	shl	 %16986 XXX
%16988:	add	 %16983 %16987
%16989:	br	 do.end2262

BASIC BLOCK do.end2262
%16990:	getelementptr	 %16974 XXX
%16991:	br	 do.end2265

BASIC BLOCK do.end2265
%16992:	br	 do.body2266

BASIC BLOCK do.body2266
%16993:	and	 %16988 XXX
%16994:	trunc	 %16993
%16995:	load	 %14118
%16996:	getelementptr	 %16995 XXX
%16997:	store	 %16994 %16996
%16998:	ashr	 %16988 XXX
%16999:	trunc	 %16998
%17000:	load	 %14118
%17001:	getelementptr	 %17000 XXX
%17002:	store	 %16999 %17001
%17003:	br	 do.end2274

BASIC BLOCK do.end2274
%17004:	br	 sw.epilog2661

BASIC BLOCK sw.bb2275
%17005:	icmp	 %14326 XXX
%17006:	br	 %17005 cond.false2278 cond.true2277

BASIC BLOCK cond.true2277
%17007:	br	 cond.end2279

BASIC BLOCK cond.false2278
%17008:	br	 cond.end2279

BASIC BLOCK cond.end2279
%17009:	phi	 %14327 %14325
%17010:	icmp	 %14369 %17009
%17011:	br	 %17010 lor.lhs.false2283 if.then2288

BASIC BLOCK lor.lhs.false2283
%17012:	icmp	 %14324 XXX
%17013:	br	 %17012 if.then2288 lor.lhs.false2285

BASIC BLOCK lor.lhs.false2285
%17014:	icmp	 %14369 %14331
%17015:	br	 %17014 if.end2289 if.then2288

BASIC BLOCK if.then2288
%17016:	br	 sw.epilog2661

BASIC BLOCK if.end2289
%17017:	getelementptr	 %14369 XXX
%17018:	icmp	 %17017 %14329
%17019:	br	 %17018 cond.false2295 cond.true2293

BASIC BLOCK cond.true2293
%17020:	load	 %14325
%17021:	sext	 %17020
%17022:	br	 cond.end2308

BASIC BLOCK cond.false2295
%17023:	getelementptr	 %14369 XXX
%17024:	getelementptr	 %14325 XXX
%17025:	icmp	 %17023 %17024
%17026:	br	 %17025 cond.false2303 cond.true2300

BASIC BLOCK cond.true2300
%17027:	getelementptr	 %14329 XXX
%17028:	load	 %17027
%17029:	sext	 %17028
%17030:	br	 cond.end2306

BASIC BLOCK cond.false2303
%17031:	getelementptr	 %14369 XXX
%17032:	load	 %17031
%17033:	sext	 %17032
%17034:	br	 cond.end2306

BASIC BLOCK cond.end2306
%17035:	phi	 %17029 %17033
%17036:	br	 cond.end2308

BASIC BLOCK cond.end2308
%17037:	phi	 %17021 %17035
%17038:	sext	 %17037
%17039:	getelementptr	 re_syntax_table XXX %17038
%17040:	load	 %17039
%17041:	sext	 %17040
%17042:	icmp	 %17041 XXX
%17043:	zext	 %17042
%17044:	trunc	 %17043
%17045:	icmp	 %14369 %14329
%17046:	br	 %17045 cond.false2320 cond.true2318

BASIC BLOCK cond.true2318
%17047:	load	 %14325
%17048:	sext	 %17047
%17049:	br	 cond.end2331

BASIC BLOCK cond.false2320
%17050:	getelementptr	 %14325 XXX
%17051:	icmp	 %14369 %17050
%17052:	br	 %17051 cond.false2327 cond.true2324

BASIC BLOCK cond.true2324
%17053:	getelementptr	 %14329 XXX
%17054:	load	 %17053
%17055:	sext	 %17054
%17056:	br	 cond.end2329

BASIC BLOCK cond.false2327
%17057:	load	 %14369
%17058:	sext	 %17057
%17059:	br	 cond.end2329

BASIC BLOCK cond.end2329
%17060:	phi	 %17055 %17058
%17061:	br	 cond.end2331

BASIC BLOCK cond.end2331
%17062:	phi	 %17048 %17060
%17063:	sext	 %17062
%17064:	getelementptr	 re_syntax_table XXX %17063
%17065:	load	 %17064
%17066:	sext	 %17065
%17067:	icmp	 %17066 XXX
%17068:	zext	 %17067
%17069:	trunc	 %17068
%17070:	sext	 %17044
%17071:	sext	 %17069
%17072:	icmp	 %17070 %17071
%17073:	br	 %17072 if.end2344 if.then2343

BASIC BLOCK if.then2343
%17074:	br	 sw.epilog2661

BASIC BLOCK if.end2344
%17075:	br	 fail

BASIC BLOCK sw.bb2345
%17076:	icmp	 %14326 XXX
%17077:	br	 %17076 cond.false2350 cond.true2349

BASIC BLOCK cond.true2349
%17078:	br	 cond.end2351

BASIC BLOCK cond.false2350
%17079:	br	 cond.end2351

BASIC BLOCK cond.end2351
%17080:	phi	 %14327 %14325
%17081:	icmp	 %14369 %17080
%17082:	br	 %17081 lor.lhs.false2355 if.then2360

BASIC BLOCK lor.lhs.false2355
%17083:	icmp	 %14324 XXX
%17084:	br	 %17083 if.then2360 lor.lhs.false2357

BASIC BLOCK lor.lhs.false2357
%17085:	icmp	 %14369 %14331
%17086:	br	 %17085 if.end2361 if.then2360

BASIC BLOCK if.then2360
%17087:	br	 fail

BASIC BLOCK if.end2361
%17088:	getelementptr	 %14369 XXX
%17089:	icmp	 %17088 %14329
%17090:	br	 %17089 cond.false2367 cond.true2365

BASIC BLOCK cond.true2365
%17091:	load	 %14325
%17092:	sext	 %17091
%17093:	br	 cond.end2380

BASIC BLOCK cond.false2367
%17094:	getelementptr	 %14369 XXX
%17095:	getelementptr	 %14325 XXX
%17096:	icmp	 %17094 %17095
%17097:	br	 %17096 cond.false2375 cond.true2372

BASIC BLOCK cond.true2372
%17098:	getelementptr	 %14329 XXX
%17099:	load	 %17098
%17100:	sext	 %17099
%17101:	br	 cond.end2378

BASIC BLOCK cond.false2375
%17102:	getelementptr	 %14369 XXX
%17103:	load	 %17102
%17104:	sext	 %17103
%17105:	br	 cond.end2378

BASIC BLOCK cond.end2378
%17106:	phi	 %17100 %17104
%17107:	br	 cond.end2380

BASIC BLOCK cond.end2380
%17108:	phi	 %17092 %17106
%17109:	sext	 %17108
%17110:	getelementptr	 re_syntax_table XXX %17109
%17111:	load	 %17110
%17112:	sext	 %17111
%17113:	icmp	 %17112 XXX
%17114:	zext	 %17113
%17115:	trunc	 %17114
%17116:	icmp	 %14369 %14329
%17117:	br	 %17116 cond.false2392 cond.true2390

BASIC BLOCK cond.true2390
%17118:	load	 %14325
%17119:	sext	 %17118
%17120:	br	 cond.end2403

BASIC BLOCK cond.false2392
%17121:	getelementptr	 %14325 XXX
%17122:	icmp	 %14369 %17121
%17123:	br	 %17122 cond.false2399 cond.true2396

BASIC BLOCK cond.true2396
%17124:	getelementptr	 %14329 XXX
%17125:	load	 %17124
%17126:	sext	 %17125
%17127:	br	 cond.end2401

BASIC BLOCK cond.false2399
%17128:	load	 %14369
%17129:	sext	 %17128
%17130:	br	 cond.end2401

BASIC BLOCK cond.end2401
%17131:	phi	 %17126 %17129
%17132:	br	 cond.end2403

BASIC BLOCK cond.end2403
%17133:	phi	 %17119 %17131
%17134:	sext	 %17133
%17135:	getelementptr	 re_syntax_table XXX %17134
%17136:	load	 %17135
%17137:	sext	 %17136
%17138:	icmp	 %17137 XXX
%17139:	zext	 %17138
%17140:	trunc	 %17139
%17141:	sext	 %17115
%17142:	sext	 %17140
%17143:	icmp	 %17141 %17142
%17144:	br	 %17143 if.end2416 if.then2415

BASIC BLOCK if.then2415
%17145:	br	 fail

BASIC BLOCK if.end2416
%17146:	br	 sw.epilog2661

BASIC BLOCK sw.bb2417
%17147:	icmp	 %14369 %14329
%17148:	br	 %17147 cond.false2422 cond.true2420

BASIC BLOCK cond.true2420
%17149:	load	 %14325
%17150:	sext	 %17149
%17151:	br	 cond.end2433

BASIC BLOCK cond.false2422
%17152:	getelementptr	 %14325 XXX
%17153:	icmp	 %14369 %17152
%17154:	br	 %17153 cond.false2429 cond.true2426

BASIC BLOCK cond.true2426
%17155:	getelementptr	 %14329 XXX
%17156:	load	 %17155
%17157:	sext	 %17156
%17158:	br	 cond.end2431

BASIC BLOCK cond.false2429
%17159:	load	 %14369
%17160:	sext	 %17159
%17161:	br	 cond.end2431

BASIC BLOCK cond.end2431
%17162:	phi	 %17157 %17160
%17163:	br	 cond.end2433

BASIC BLOCK cond.end2433
%17164:	phi	 %17150 %17162
%17165:	sext	 %17164
%17166:	getelementptr	 re_syntax_table XXX %17165
%17167:	load	 %17166
%17168:	sext	 %17167
%17169:	icmp	 %17168 XXX
%17170:	br	 %17169 if.end2477 land.lhs.true2440

BASIC BLOCK land.lhs.true2440
%17171:	icmp	 %14326 XXX
%17172:	br	 %17171 cond.false2443 cond.true2442

BASIC BLOCK cond.true2442
%17173:	br	 cond.end2444

BASIC BLOCK cond.false2443
%17174:	br	 cond.end2444

BASIC BLOCK cond.end2444
%17175:	phi	 %14327 %14325
%17176:	icmp	 %14369 %17175
%17177:	br	 %17176 lor.lhs.false2448 if.then2476

BASIC BLOCK lor.lhs.false2448
%17178:	icmp	 %14324 XXX
%17179:	br	 %17178 if.then2476 lor.lhs.false2450

BASIC BLOCK lor.lhs.false2450
%17180:	getelementptr	 %14369 XXX
%17181:	icmp	 %17180 %14329
%17182:	br	 %17181 cond.false2456 cond.true2454

BASIC BLOCK cond.true2454
%17183:	load	 %14325
%17184:	sext	 %17183
%17185:	br	 cond.end2469

BASIC BLOCK cond.false2456
%17186:	getelementptr	 %14369 XXX
%17187:	getelementptr	 %14325 XXX
%17188:	icmp	 %17186 %17187
%17189:	br	 %17188 cond.false2464 cond.true2461

BASIC BLOCK cond.true2461
%17190:	getelementptr	 %14329 XXX
%17191:	load	 %17190
%17192:	sext	 %17191
%17193:	br	 cond.end2467

BASIC BLOCK cond.false2464
%17194:	getelementptr	 %14369 XXX
%17195:	load	 %17194
%17196:	sext	 %17195
%17197:	br	 cond.end2467

BASIC BLOCK cond.end2467
%17198:	phi	 %17192 %17196
%17199:	br	 cond.end2469

BASIC BLOCK cond.end2469
%17200:	phi	 %17184 %17198
%17201:	sext	 %17200
%17202:	getelementptr	 re_syntax_table XXX %17201
%17203:	load	 %17202
%17204:	sext	 %17203
%17205:	icmp	 %17204 XXX
%17206:	br	 %17205 if.then2476 if.end2477

BASIC BLOCK if.then2476
%17207:	br	 sw.epilog2661

BASIC BLOCK if.end2477
%17208:	br	 fail

BASIC BLOCK sw.bb2478
%17209:	icmp	 %14326 XXX
%17210:	br	 %17209 cond.false2481 cond.true2480

BASIC BLOCK cond.true2480
%17211:	br	 cond.end2482

BASIC BLOCK cond.false2481
%17212:	br	 cond.end2482

BASIC BLOCK cond.end2482
%17213:	phi	 %14327 %14325
%17214:	icmp	 %14369 %17213
%17215:	br	 %17214 lor.lhs.false2486 if.end2541

BASIC BLOCK lor.lhs.false2486
%17216:	icmp	 %14324 XXX
%17217:	br	 %17216 if.end2541 land.lhs.true2488

BASIC BLOCK land.lhs.true2488
%17218:	getelementptr	 %14369 XXX
%17219:	icmp	 %17218 %14329
%17220:	br	 %17219 cond.false2494 cond.true2492

BASIC BLOCK cond.true2492
%17221:	load	 %14325
%17222:	sext	 %17221
%17223:	br	 cond.end2507

BASIC BLOCK cond.false2494
%17224:	getelementptr	 %14369 XXX
%17225:	getelementptr	 %14325 XXX
%17226:	icmp	 %17224 %17225
%17227:	br	 %17226 cond.false2502 cond.true2499

BASIC BLOCK cond.true2499
%17228:	getelementptr	 %14329 XXX
%17229:	load	 %17228
%17230:	sext	 %17229
%17231:	br	 cond.end2505

BASIC BLOCK cond.false2502
%17232:	getelementptr	 %14369 XXX
%17233:	load	 %17232
%17234:	sext	 %17233
%17235:	br	 cond.end2505

BASIC BLOCK cond.end2505
%17236:	phi	 %17230 %17234
%17237:	br	 cond.end2507

BASIC BLOCK cond.end2507
%17238:	phi	 %17222 %17236
%17239:	sext	 %17238
%17240:	getelementptr	 re_syntax_table XXX %17239
%17241:	load	 %17240
%17242:	sext	 %17241
%17243:	icmp	 %17242 XXX
%17244:	br	 %17243 if.end2541 land.lhs.true2514

BASIC BLOCK land.lhs.true2514
%17245:	icmp	 %14369 %14329
%17246:	br	 %17245 cond.false2519 cond.true2517

BASIC BLOCK cond.true2517
%17247:	load	 %14325
%17248:	sext	 %17247
%17249:	br	 cond.end2530

BASIC BLOCK cond.false2519
%17250:	getelementptr	 %14325 XXX
%17251:	icmp	 %14369 %17250
%17252:	br	 %17251 cond.false2526 cond.true2523

BASIC BLOCK cond.true2523
%17253:	getelementptr	 %14329 XXX
%17254:	load	 %17253
%17255:	sext	 %17254
%17256:	br	 cond.end2528

BASIC BLOCK cond.false2526
%17257:	load	 %14369
%17258:	sext	 %17257
%17259:	br	 cond.end2528

BASIC BLOCK cond.end2528
%17260:	phi	 %17255 %17258
%17261:	br	 cond.end2530

BASIC BLOCK cond.end2530
%17262:	phi	 %17248 %17260
%17263:	sext	 %17262
%17264:	getelementptr	 re_syntax_table XXX %17263
%17265:	load	 %17264
%17266:	sext	 %17265
%17267:	icmp	 %17266 XXX
%17268:	br	 %17267 if.then2540 lor.lhs.false2537

BASIC BLOCK lor.lhs.false2537
%17269:	icmp	 %14369 %14331
%17270:	br	 %17269 if.end2541 if.then2540

BASIC BLOCK if.then2540
%17271:	br	 sw.epilog2661

BASIC BLOCK if.end2541
%17272:	br	 fail

BASIC BLOCK sw.bb2542
%17273:	br	 while.cond2543

BASIC BLOCK while.cond2543
%17274:	phi	 %14368 %14343
%17275:	phi	 %14369 %14325
%17276:	icmp	 %17275 %17274
%17277:	br	 %17276 while.end2551 while.body2546

BASIC BLOCK while.body2546
%17278:	icmp	 %17274 %14343
%17279:	br	 %17278 if.end2550 if.then2549

BASIC BLOCK if.then2549
%17280:	br	 fail

BASIC BLOCK if.end2550
%17281:	br	 while.cond2543

BASIC BLOCK while.end2551
%17282:	icmp	 %17275 %14329
%17283:	br	 %17282 cond.false2556 cond.true2554

BASIC BLOCK cond.true2554
%17284:	load	 %14325
%17285:	sext	 %17284
%17286:	br	 cond.end2567

BASIC BLOCK cond.false2556
%17287:	getelementptr	 %14325 XXX
%17288:	icmp	 %17275 %17287
%17289:	br	 %17288 cond.false2563 cond.true2560

BASIC BLOCK cond.true2560
%17290:	getelementptr	 %14329 XXX
%17291:	load	 %17290
%17292:	sext	 %17291
%17293:	br	 cond.end2565

BASIC BLOCK cond.false2563
%17294:	load	 %17275
%17295:	sext	 %17294
%17296:	br	 cond.end2565

BASIC BLOCK cond.end2565
%17297:	phi	 %17292 %17295
%17298:	br	 cond.end2567

BASIC BLOCK cond.end2567
%17299:	phi	 %17285 %17297
%17300:	sext	 %17299
%17301:	getelementptr	 re_syntax_table XXX %17300
%17302:	load	 %17301
%17303:	sext	 %17302
%17304:	icmp	 %17303 XXX
%17305:	br	 %17304 if.then2574 if.end2575

BASIC BLOCK if.then2574
%17306:	br	 fail

BASIC BLOCK if.end2575
%17307:	br	 do.body2576

BASIC BLOCK do.body2576
%17308:	icmp	 %14361 XXX
%17309:	br	 %17308 if.then2578 if.end2597

BASIC BLOCK if.then2578
%17310:	br	 for.cond2580

BASIC BLOCK for.cond2580
%17311:	phi	 %14365 %17329
%17312:	icmp	 %17311 %14364
%17313:	br	 %17312 for.end2596 for.body2583

BASIC BLOCK for.body2583
%17314:	getelementptr	 %14230 %17311
%17315:	bitcast	 %17314
%17316:	bitcast	 %17315
%17317:	load	 %17316
%17318:	and	 %17317 XXX
%17319:	or	 %17318 XXX
%17320:	store	 %17319 %17316
%17321:	getelementptr	 %14230 %17311
%17322:	bitcast	 %17321
%17323:	bitcast	 %17322
%17324:	load	 %17323
%17325:	and	 %17324 XXX
%17326:	or	 %17325 XXX
%17327:	store	 %17326 %17323
%17328:	br	 for.inc2594

BASIC BLOCK for.inc2594
%17329:	add	 %17311 XXX
%17330:	br	 for.cond2580

BASIC BLOCK for.end2596
%17331:	br	 if.end2597

BASIC BLOCK if.end2597
%17332:	phi	 %14361 XXX
%17333:	br	 do.end2599

BASIC BLOCK do.end2599
%17334:	getelementptr	 %17275 XXX
%17335:	br	 sw.epilog2661

BASIC BLOCK sw.bb2601
%17336:	br	 while.cond2602

BASIC BLOCK while.cond2602
%17337:	phi	 %14368 %14343
%17338:	phi	 %14369 %14325
%17339:	icmp	 %17338 %17337
%17340:	br	 %17339 while.end2610 while.body2605

BASIC BLOCK while.body2605
%17341:	icmp	 %17337 %14343
%17342:	br	 %17341 if.end2609 if.then2608

BASIC BLOCK if.then2608
%17343:	br	 fail

BASIC BLOCK if.end2609
%17344:	br	 while.cond2602

BASIC BLOCK while.end2610
%17345:	icmp	 %17338 %14329
%17346:	br	 %17345 cond.false2615 cond.true2613

BASIC BLOCK cond.true2613
%17347:	load	 %14325
%17348:	sext	 %17347
%17349:	br	 cond.end2626

BASIC BLOCK cond.false2615
%17350:	getelementptr	 %14325 XXX
%17351:	icmp	 %17338 %17350
%17352:	br	 %17351 cond.false2622 cond.true2619

BASIC BLOCK cond.true2619
%17353:	getelementptr	 %14329 XXX
%17354:	load	 %17353
%17355:	sext	 %17354
%17356:	br	 cond.end2624

BASIC BLOCK cond.false2622
%17357:	load	 %17338
%17358:	sext	 %17357
%17359:	br	 cond.end2624

BASIC BLOCK cond.end2624
%17360:	phi	 %17355 %17358
%17361:	br	 cond.end2626

BASIC BLOCK cond.end2626
%17362:	phi	 %17348 %17360
%17363:	sext	 %17362
%17364:	getelementptr	 re_syntax_table XXX %17363
%17365:	load	 %17364
%17366:	sext	 %17365
%17367:	icmp	 %17366 XXX
%17368:	br	 %17367 if.end2634 if.then2633

BASIC BLOCK if.then2633
%17369:	br	 fail

BASIC BLOCK if.end2634
%17370:	br	 do.body2635

BASIC BLOCK do.body2635
%17371:	icmp	 %14361 XXX
%17372:	br	 %17371 if.then2637 if.end2656

BASIC BLOCK if.then2637
%17373:	br	 for.cond2639

BASIC BLOCK for.cond2639
%17374:	phi	 %14365 %17392
%17375:	icmp	 %17374 %14364
%17376:	br	 %17375 for.end2655 for.body2642

BASIC BLOCK for.body2642
%17377:	getelementptr	 %14230 %17374
%17378:	bitcast	 %17377
%17379:	bitcast	 %17378
%17380:	load	 %17379
%17381:	and	 %17380 XXX
%17382:	or	 %17381 XXX
%17383:	store	 %17382 %17379
%17384:	getelementptr	 %14230 %17374
%17385:	bitcast	 %17384
%17386:	bitcast	 %17385
%17387:	load	 %17386
%17388:	and	 %17387 XXX
%17389:	or	 %17388 XXX
%17390:	store	 %17389 %17386
%17391:	br	 for.inc2653

BASIC BLOCK for.inc2653
%17392:	add	 %17374 XXX
%17393:	br	 for.cond2639

BASIC BLOCK for.end2655
%17394:	br	 if.end2656

BASIC BLOCK if.end2656
%17395:	phi	 %14361 XXX
%17396:	br	 do.end2658

BASIC BLOCK do.end2658
%17397:	getelementptr	 %17338 XXX
%17398:	br	 sw.epilog2661

BASIC BLOCK sw.default2660
%17399:	call	 abort
%17400:	unreachable	

BASIC BLOCK sw.epilog2661
%17401:	phi	 %17395 %17332 %14361 %14361 %14361 %14361 %14361 %14361 %16591 %14361 %14361 %14361 %14361 %14361 %14361 %14361 %14361 %14361 %14361 %14361 %15659 XXX XXX %15119 %15029 %14953 %14361
%17402:	phi	 %14364 %14364 %14364 %14364 %14364 %14364 %14364 %14364 %14364 %14364 %14364 %16042 %14364 %14364 %14364 %14364 %14364 %14364 %14364 %14364 %14364 %15296 %15205 %14364 %14364 %14364 %14364
%17403:	phi	 %14365 %14365 %14365 %14365 %14365 %14365 %14365 %14365 %14365 %14365 %14365 %16043 %14365 %14365 %14365 %14365 %14365 %14365 %14365 %14365 %14365 %15297 %15211 %14365 %14365 %14365 %14365
%17404:	phi	 %14366 %14366 %14366 %14366 %14366 %14366 %14366 %14366 %14366 %14366 %14366 %14366 %14366 %14366 %14366 %14366 %14366 %14366 %14366 %14366 %14366 %14366 %15212 %14366 %14366 %14366 %14366
%17405:	phi	 %14855 %14855 %14855 %14855 %14855 %14855 %14855 %16990 %16607 %16960 %16930 %15997 %14855 %15840 %14855 %14855 %14855 %14855 %14855 %14855 %15599 %15597 %15212 %15090 %14855 %14925 %14855
%17406:	phi	 %17337 %17274 %14368 %14368 %14368 %14368 %14368 %14368 %14368 %14368 %14368 %14368 %14368 %14368 %14368 %14368 %14368 %14368 %14368 %14368 %15660 %14368 %14368 %15040 %14957 %14926 %14368
%17407:	phi	 %17397 %17334 %14369 %14369 %14369 %14369 %14369 %14369 %14369 %14369 %14369 %14369 %14369 %14369 %14369 %14369 %14369 %14369 %14369 %14369 %15661 %14369 %14369 %15121 %15031 %14927 %14369
%17408:	br	 for.cond156

BASIC BLOCK fail
%17409:	phi	 %14431 %17409 %17409 %14362 %14362 %14362 %14362 %14362 %14362 %14362 %14362 %14362 %14362 %14362 %14362 %14362 %14362 %14362 %14362 %14362 %14362 %14362 %14362 %14362 %14362 %14362 %14362 %14362
%17410:	phi	 %14432 %17410 %17410 %14363 %14363 %14363 %14363 %14363 %14363 %14363 %14363 %14363 %14363 %14363 %14363 %14363 %14363 %14363 %14363 %14363 %14363 %14363 %14363 %14363 %14363 %14363 %14363 %14363
%17411:	phi	 %14368 %17411 %17411 %17337 %17337 %17274 %17274 %14368 %14368 %14368 %14368 %14368 %14368 %14368 %14368 %14368 %14368 %15684 %15684 %14368 %15040 %15040 %14957 %14957 %14872 %14872 %14903 %14903
%17412:	phi	 %14369 %17430 %17430 %17338 %17338 %17275 %17275 %14369 %14369 %14369 %14369 %14369 %14369 %14369 %14369 %14369 %14369 %15685 %15685 %14369 %15041 %15041 %14958 %14958 %14873 %14880 %14904 %14911
%17413:	getelementptr	 %14119 XXX XXX
%17414:	load	 %17413
%17415:	icmp	 %17414 XXX
%17416:	br	 %17415 if.then2665 if.else2776

BASIC BLOCK if.then2665
%17417:	getelementptr	 %14119 XXX XXX
%17418:	load	 %17417
%17419:	add	 %17418 XXX
%17420:	store	 %17419 %17417
%17421:	zext	 %17419
%17422:	getelementptr	 %14119 XXX XXX
%17423:	load	 %17422
%17424:	getelementptr	 %17423 %17421
%17425:	bitcast	 %17424
%17426:	load	 %17425
%17427:	icmp	 %17426 XXX
%17428:	br	 %17427 if.end2677 if.then2676

BASIC BLOCK if.then2676
%17429:	br	 if.end2677

BASIC BLOCK if.end2677
%17430:	phi	 %17426 %17412
%17431:	getelementptr	 %14119 XXX XXX
%17432:	load	 %17431
%17433:	add	 %17432 XXX
%17434:	store	 %17433 %17431
%17435:	zext	 %17433
%17436:	getelementptr	 %14119 XXX XXX
%17437:	load	 %17436
%17438:	getelementptr	 %17437 %17435
%17439:	bitcast	 %17438
%17440:	load	 %17439
%17441:	getelementptr	 %14119 XXX XXX
%17442:	load	 %17441
%17443:	add	 %17442 XXX
%17444:	store	 %17443 %17441
%17445:	zext	 %17443
%17446:	getelementptr	 %14119 XXX XXX
%17447:	load	 %17446
%17448:	getelementptr	 %17447 %17445
%17449:	bitcast	 %17448
%17450:	load	 %17449
%17451:	sext	 %17450
%17452:	getelementptr	 %14119 XXX XXX
%17453:	load	 %17452
%17454:	add	 %17453 XXX
%17455:	store	 %17454 %17452
%17456:	zext	 %17454
%17457:	getelementptr	 %14119 XXX XXX
%17458:	load	 %17457
%17459:	getelementptr	 %17458 %17456
%17460:	bitcast	 %17459
%17461:	load	 %17460
%17462:	sext	 %17461
%17463:	br	 for.cond2698

BASIC BLOCK for.cond2698
%17464:	phi	 %17451 %17505
%17465:	icmp	 %17464 %17462
%17466:	br	 %17465 for.end2725 for.body2701

BASIC BLOCK for.body2701
%17467:	getelementptr	 %14230 %17464
%17468:	bitcast	 %17467
%17469:	getelementptr	 %14119 XXX XXX
%17470:	load	 %17469
%17471:	add	 %17470 XXX
%17472:	store	 %17471 %17469
%17473:	zext	 %17471
%17474:	getelementptr	 %14119 XXX XXX
%17475:	load	 %17474
%17476:	getelementptr	 %17475 %17473
%17477:	bitcast	 %17468
%17478:	bitcast	 %17476
%17479:	call	 %17477 %17478 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%17480:	getelementptr	 %14119 XXX XXX
%17481:	load	 %17480
%17482:	add	 %17481 XXX
%17483:	store	 %17482 %17480
%17484:	zext	 %17482
%17485:	getelementptr	 %14119 XXX XXX
%17486:	load	 %17485
%17487:	getelementptr	 %17486 %17484
%17488:	bitcast	 %17487
%17489:	load	 %17488
%17490:	getelementptr	 %14233 %17464
%17491:	store	 %17489 %17490
%17492:	getelementptr	 %14119 XXX XXX
%17493:	load	 %17492
%17494:	add	 %17493 XXX
%17495:	store	 %17494 %17492
%17496:	zext	 %17494
%17497:	getelementptr	 %14119 XXX XXX
%17498:	load	 %17497
%17499:	getelementptr	 %17498 %17496
%17500:	bitcast	 %17499
%17501:	load	 %17500
%17502:	getelementptr	 %14234 %17464
%17503:	store	 %17501 %17502
%17504:	br	 for.inc2723

BASIC BLOCK for.inc2723
%17505:	add	 %17464 XXX
%17506:	br	 for.cond2698

BASIC BLOCK for.end2725
%17507:	icmp	 %17440 XXX
%17508:	br	 %17507 if.then2727 if.end2728

BASIC BLOCK if.then2727
%17509:	br	 fail

BASIC BLOCK if.end2728
%17510:	icmp	 %17440 %14124
%17511:	br	 %17510 if.end2768 if.then2731

BASIC BLOCK if.then2731
%17512:	load	 %17440
%17513:	zext	 %17512
%17514:	switch	 %17513 sw.default2766 XXX sw.bb2734 XXX sw.bb2735 XXX sw.bb2735 XXX sw.bb2735

BASIC BLOCK sw.bb2734
%17515:	br	 sw.bb2735

BASIC BLOCK sw.bb2735
%17516:	phi	 XXX XXX XXX XXX
%17517:	getelementptr	 %17440 XXX
%17518:	store	 %17517 %14118
%17519:	br	 do.body2737

BASIC BLOCK do.body2737
%17520:	br	 do.body2738

BASIC BLOCK do.body2738
%17521:	load	 %14118
%17522:	load	 %17521
%17523:	zext	 %17522
%17524:	and	 %17523 XXX
%17525:	load	 %14118
%17526:	getelementptr	 %17525 XXX
%17527:	load	 %17526
%17528:	sext	 %17527
%17529:	shl	 %17528 XXX
%17530:	add	 %17524 %17529
%17531:	br	 do.end2746

BASIC BLOCK do.end2746
%17532:	load	 %14118
%17533:	getelementptr	 %17532 XXX
%17534:	store	 %17533 %14118
%17535:	br	 do.end2749

BASIC BLOCK do.end2749
%17536:	load	 %14118
%17537:	sext	 %17530
%17538:	getelementptr	 %17536 %17537
%17539:	store	 %17538 %14118
%17540:	sext	 %17516
%17541:	icmp	 %17540 XXX
%17542:	br	 %17541 lor.lhs.false2758 land.lhs.true2754

BASIC BLOCK land.lhs.true2754
%17543:	load	 %14118
%17544:	load	 %17543
%17545:	zext	 %17544
%17546:	icmp	 %17545 XXX
%17547:	br	 %17546 lor.lhs.false2758 if.then2764

BASIC BLOCK lor.lhs.false2758
%17548:	icmp	 %17516 XXX
%17549:	br	 %17548 land.lhs.true2760 if.end2765

BASIC BLOCK land.lhs.true2760
%17550:	load	 %14118
%17551:	load	 %17550
%17552:	zext	 %17551
%17553:	icmp	 %17552 XXX
%17554:	br	 %17553 if.end2765 if.then2764

BASIC BLOCK if.then2764
%17555:	br	 fail

BASIC BLOCK if.end2765
%17556:	br	 sw.epilog2767

BASIC BLOCK sw.default2766
%17557:	br	 sw.epilog2767

BASIC BLOCK sw.epilog2767
%17558:	br	 if.end2768

BASIC BLOCK if.end2768
%17559:	icmp	 %17430 %14327
%17560:	br	 %17559 if.end2775 land.lhs.true2771

BASIC BLOCK land.lhs.true2771
%17561:	icmp	 %17430 %14329
%17562:	br	 %17561 if.end2775 if.then2774

BASIC BLOCK if.then2774
%17563:	br	 if.end2775

BASIC BLOCK if.end2775
%17564:	phi	 %14344 %17411 %17411
%17565:	br	 if.end2777

BASIC BLOCK if.else2776
%17566:	br	 for.end2778

BASIC BLOCK if.end2777
%17567:	br	 for.cond156

BASIC BLOCK for.end2778
%17568:	icmp	 %17410 XXX
%17569:	br	 %17568 if.end2781 if.then2780

BASIC BLOCK if.then2780
%17570:	br	 restore_best_regs

BASIC BLOCK if.end2781
%17571:	br	 do.body2782

BASIC BLOCK do.body2782
%17572:	icmp	 %14234 XXX
%17573:	br	 %17572 if.end2785 if.then2784

BASIC BLOCK if.then2784
%17574:	br	 if.end2785

BASIC BLOCK if.end2785
%17575:	icmp	 %14233 XXX
%17576:	br	 %17575 if.end2788 if.then2787

BASIC BLOCK if.then2787
%17577:	br	 if.end2788

BASIC BLOCK if.end2788
%17578:	icmp	 %14232 XXX
%17579:	br	 %17578 if.end2791 if.then2790

BASIC BLOCK if.then2790
%17580:	br	 if.end2791

BASIC BLOCK if.end2791
%17581:	icmp	 %14231 XXX
%17582:	br	 %17581 if.end2794 if.then2793

BASIC BLOCK if.then2793
%17583:	br	 if.end2794

BASIC BLOCK if.end2794
%17584:	icmp	 %14229 XXX
%17585:	br	 %17584 if.end2797 if.then2796

BASIC BLOCK if.then2796
%17586:	br	 if.end2797

BASIC BLOCK if.end2797
%17587:	icmp	 %14228 XXX
%17588:	br	 %17587 if.end2800 if.then2799

BASIC BLOCK if.then2799
%17589:	br	 if.end2800

BASIC BLOCK if.end2800
%17590:	icmp	 %14230 XXX
%17591:	br	 %17590 if.end2803 if.then2802

BASIC BLOCK if.then2802
%17592:	br	 if.end2803

BASIC BLOCK if.end2803
%17593:	icmp	 %14227 XXX
%17594:	br	 %17593 if.end2806 if.then2805

BASIC BLOCK if.then2805
%17595:	br	 if.end2806

BASIC BLOCK if.end2806
%17596:	icmp	 %14226 XXX
%17597:	br	 %17596 if.end2809 if.then2808

BASIC BLOCK if.then2808
%17598:	br	 if.end2809

BASIC BLOCK if.end2809
%17599:	br	 do.end2811

BASIC BLOCK do.end2811
%17600:	br	 return

BASIC BLOCK return
%17601:	phi	 XXX XXX %14824 XXX XXX XXX XXX XXX XXX XXX XXX XXX
%17602:	ret	 %17601

FUNCTION group_match_null_string_p

BASIC BLOCK entry
%17603:	alloca	 XXX
%17604:	load	 p
%17605:	getelementptr	 %17604 XXX
%17606:	store	 %17605 %17603
%17607:	br	 while.cond

BASIC BLOCK while.cond
%17608:	load	 %17603
%17609:	icmp	 %17608 end
%17610:	br	 %17609 while.end70 while.body

BASIC BLOCK while.body
%17611:	load	 %17603
%17612:	load	 %17611
%17613:	zext	 %17612
%17614:	switch	 %17613 sw.default XXX sw.bb XXX sw.bb64

BASIC BLOCK sw.bb
%17615:	load	 %17603
%17616:	getelementptr	 %17615 XXX
%17617:	store	 %17616 %17603
%17618:	br	 do.body

BASIC BLOCK do.body
%17619:	br	 do.body1

BASIC BLOCK do.body1
%17620:	load	 %17603
%17621:	load	 %17620
%17622:	zext	 %17621
%17623:	and	 %17622 XXX
%17624:	load	 %17603
%17625:	getelementptr	 %17624 XXX
%17626:	load	 %17625
%17627:	sext	 %17626
%17628:	shl	 %17627 XXX
%17629:	add	 %17623 %17628
%17630:	br	 do.end

BASIC BLOCK do.end
%17631:	load	 %17603
%17632:	getelementptr	 %17631 XXX
%17633:	store	 %17632 %17603
%17634:	br	 do.end6

BASIC BLOCK do.end6
%17635:	icmp	 %17629 XXX
%17636:	br	 %17635 if.end63 if.then

BASIC BLOCK if.then
%17637:	br	 while.cond9

BASIC BLOCK while.cond9
%17638:	phi	 %17629 %17680
%17639:	sub	 %17638 XXX
%17640:	sext	 %17639
%17641:	load	 %17603
%17642:	getelementptr	 %17641 %17640
%17643:	load	 %17642
%17644:	zext	 %17643
%17645:	icmp	 %17644 XXX
%17646:	br	 %17645 while.end while.body13

BASIC BLOCK while.body13
%17647:	load	 %17603
%17648:	load	 %17603
%17649:	sext	 %17638
%17650:	getelementptr	 %17648 %17649
%17651:	getelementptr	 %17650 XXX
%17652:	call	 %17647 %17651 reg_info alt_match_null_string_p
%17653:	icmp	 %17652 XXX
%17654:	br	 %17653 if.then16 if.end

BASIC BLOCK if.then16
%17655:	br	 return

BASIC BLOCK if.end
%17656:	load	 %17603
%17657:	sext	 %17638
%17658:	getelementptr	 %17656 %17657
%17659:	store	 %17658 %17603
%17660:	load	 %17603
%17661:	load	 %17660
%17662:	zext	 %17661
%17663:	icmp	 %17662 XXX
%17664:	br	 %17663 if.end23 if.then22

BASIC BLOCK if.then22
%17665:	br	 while.end

BASIC BLOCK if.end23
%17666:	load	 %17603
%17667:	getelementptr	 %17666 XXX
%17668:	store	 %17667 %17603
%17669:	br	 do.body25

BASIC BLOCK do.body25
%17670:	br	 do.body26

BASIC BLOCK do.body26
%17671:	load	 %17603
%17672:	load	 %17671
%17673:	zext	 %17672
%17674:	and	 %17673 XXX
%17675:	load	 %17603
%17676:	getelementptr	 %17675 XXX
%17677:	load	 %17676
%17678:	sext	 %17677
%17679:	shl	 %17678 XXX
%17680:	add	 %17674 %17679
%17681:	br	 do.end33

BASIC BLOCK do.end33
%17682:	load	 %17603
%17683:	getelementptr	 %17682 XXX
%17684:	store	 %17683 %17603
%17685:	br	 do.end35

BASIC BLOCK do.end35
%17686:	sub	 %17680 XXX
%17687:	sext	 %17686
%17688:	load	 %17603
%17689:	getelementptr	 %17688 %17687
%17690:	load	 %17689
%17691:	zext	 %17690
%17692:	icmp	 %17691 XXX
%17693:	br	 %17692 if.end44 if.then42

BASIC BLOCK if.then42
%17694:	load	 %17603
%17695:	getelementptr	 %17694 XXX
%17696:	store	 %17695 %17603
%17697:	br	 while.end

BASIC BLOCK if.end44
%17698:	br	 while.cond9

BASIC BLOCK while.end
%17699:	br	 do.body45

BASIC BLOCK do.body45
%17700:	load	 %17603
%17701:	getelementptr	 %17700 XXX
%17702:	load	 %17701
%17703:	zext	 %17702
%17704:	and	 %17703 XXX
%17705:	load	 %17603
%17706:	getelementptr	 %17705 XXX
%17707:	getelementptr	 %17706 XXX
%17708:	load	 %17707
%17709:	sext	 %17708
%17710:	shl	 %17709 XXX
%17711:	add	 %17704 %17710
%17712:	br	 do.end54

BASIC BLOCK do.end54
%17713:	load	 %17603
%17714:	load	 %17603
%17715:	sext	 %17711
%17716:	getelementptr	 %17714 %17715
%17717:	call	 %17713 %17716 reg_info alt_match_null_string_p
%17718:	icmp	 %17717 XXX
%17719:	br	 %17718 if.then59 if.end60

BASIC BLOCK if.then59
%17720:	br	 return

BASIC BLOCK if.end60
%17721:	load	 %17603
%17722:	sext	 %17711
%17723:	getelementptr	 %17721 %17722
%17724:	store	 %17723 %17603
%17725:	br	 if.end63

BASIC BLOCK if.end63
%17726:	br	 sw.epilog

BASIC BLOCK sw.bb64
%17727:	load	 %17603
%17728:	getelementptr	 %17727 XXX
%17729:	store	 %17728 p
%17730:	br	 return

BASIC BLOCK sw.default
%17731:	call	 %17603 end reg_info common_op_match_null_string_p
%17732:	icmp	 %17731 XXX
%17733:	br	 %17732 if.then68 if.end69

BASIC BLOCK if.then68
%17734:	br	 return

BASIC BLOCK if.end69
%17735:	br	 sw.epilog

BASIC BLOCK sw.epilog
%17736:	br	 while.cond

BASIC BLOCK while.end70
%17737:	br	 return

BASIC BLOCK return
%17738:	phi	 XXX XXX XXX XXX XXX
%17739:	ret	 %17738

FUNCTION bcmp_translate

BASIC BLOCK entry
%17740:	br	 while.cond

BASIC BLOCK while.cond
%17741:	phi	 len %17761
%17742:	phi	 s1 %17746
%17743:	phi	 s2 %17752
%17744:	icmp	 %17741 XXX
%17745:	br	 %17744 while.end while.body

BASIC BLOCK while.body
%17746:	getelementptr	 %17742 XXX
%17747:	load	 %17742
%17748:	zext	 %17747
%17749:	getelementptr	 translate %17748
%17750:	load	 %17749
%17751:	sext	 %17750
%17752:	getelementptr	 %17743 XXX
%17753:	load	 %17743
%17754:	zext	 %17753
%17755:	getelementptr	 translate %17754
%17756:	load	 %17755
%17757:	sext	 %17756
%17758:	icmp	 %17751 %17757
%17759:	br	 %17758 if.end if.then

BASIC BLOCK if.then
%17760:	br	 return

BASIC BLOCK if.end
%17761:	add	 %17741 XXX
%17762:	br	 while.cond

BASIC BLOCK while.end
%17763:	br	 return

BASIC BLOCK return
%17764:	phi	 XXX XXX
%17765:	ret	 %17764

FUNCTION alt_match_null_string_p

BASIC BLOCK entry
%17766:	alloca	 XXX
%17767:	store	 p %17766
%17768:	br	 while.cond

BASIC BLOCK while.cond
%17769:	load	 %17766
%17770:	icmp	 %17769 end
%17771:	br	 %17770 while.end while.body

BASIC BLOCK while.body
%17772:	load	 %17766
%17773:	load	 %17772
%17774:	zext	 %17773
%17775:	switch	 %17774 sw.default XXX sw.bb

BASIC BLOCK sw.bb
%17776:	load	 %17766
%17777:	getelementptr	 %17776 XXX
%17778:	store	 %17777 %17766
%17779:	br	 do.body

BASIC BLOCK do.body
%17780:	br	 do.body1

BASIC BLOCK do.body1
%17781:	load	 %17766
%17782:	load	 %17781
%17783:	zext	 %17782
%17784:	and	 %17783 XXX
%17785:	load	 %17766
%17786:	getelementptr	 %17785 XXX
%17787:	load	 %17786
%17788:	sext	 %17787
%17789:	shl	 %17788 XXX
%17790:	add	 %17784 %17789
%17791:	br	 do.end

BASIC BLOCK do.end
%17792:	load	 %17766
%17793:	getelementptr	 %17792 XXX
%17794:	store	 %17793 %17766
%17795:	br	 do.end5

BASIC BLOCK do.end5
%17796:	load	 %17766
%17797:	sext	 %17790
%17798:	getelementptr	 %17796 %17797
%17799:	store	 %17798 %17766
%17800:	br	 sw.epilog

BASIC BLOCK sw.default
%17801:	call	 %17766 end reg_info common_op_match_null_string_p
%17802:	icmp	 %17801 XXX
%17803:	br	 %17802 if.then if.end

BASIC BLOCK if.then
%17804:	br	 return

BASIC BLOCK if.end
%17805:	br	 sw.epilog

BASIC BLOCK sw.epilog
%17806:	br	 while.cond

BASIC BLOCK while.end
%17807:	br	 return

BASIC BLOCK return
%17808:	phi	 XXX XXX
%17809:	ret	 %17808

FUNCTION common_op_match_null_string_p

BASIC BLOCK entry
%17810:	alloca	 XXX
%17811:	load	 p
%17812:	store	 %17811 %17810
%17813:	load	 %17810
%17814:	getelementptr	 %17813 XXX
%17815:	store	 %17814 %17810
%17816:	load	 %17813
%17817:	zext	 %17816
%17818:	switch	 %17817 sw.default XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb1 XXX sw.bb12 XXX sw.bb23 XXX sw.bb55 XXX sw.bb65

BASIC BLOCK sw.bb
%17819:	br	 sw.epilog

BASIC BLOCK sw.bb1
%17820:	load	 %17810
%17821:	load	 %17820
%17822:	zext	 %17821
%17823:	call	 %17810 end reg_info group_match_null_string_p
%17824:	sext	 %17822
%17825:	getelementptr	 reg_info %17824
%17826:	bitcast	 %17825
%17827:	bitcast	 %17826
%17828:	load	 %17827
%17829:	and	 %17828 XXX
%17830:	zext	 %17829
%17831:	icmp	 %17830 XXX
%17832:	br	 %17831 if.end if.then

BASIC BLOCK if.then
%17833:	sext	 %17823
%17834:	sext	 %17822
%17835:	getelementptr	 reg_info %17834
%17836:	bitcast	 %17835
%17837:	bitcast	 %17836
%17838:	trunc	 %17833
%17839:	load	 %17837
%17840:	and	 %17838 XXX
%17841:	and	 %17839 XXX
%17842:	or	 %17841 %17840
%17843:	store	 %17842 %17837
%17844:	zext	 %17840
%17845:	br	 if.end

BASIC BLOCK if.end
%17846:	icmp	 %17823 XXX
%17847:	br	 %17846 if.then10 if.end11

BASIC BLOCK if.then10
%17848:	br	 return

BASIC BLOCK if.end11
%17849:	br	 sw.epilog

BASIC BLOCK sw.bb12
%17850:	br	 do.body

BASIC BLOCK do.body
%17851:	br	 do.body13

BASIC BLOCK do.body13
%17852:	load	 %17810
%17853:	load	 %17852
%17854:	zext	 %17853
%17855:	and	 %17854 XXX
%17856:	load	 %17810
%17857:	getelementptr	 %17856 XXX
%17858:	load	 %17857
%17859:	sext	 %17858
%17860:	shl	 %17859 XXX
%17861:	add	 %17855 %17860
%17862:	br	 do.end

BASIC BLOCK do.end
%17863:	load	 %17810
%17864:	getelementptr	 %17863 XXX
%17865:	store	 %17864 %17810
%17866:	br	 do.end17

BASIC BLOCK do.end17
%17867:	icmp	 %17861 XXX
%17868:	br	 %17867 if.else if.then20

BASIC BLOCK if.then20
%17869:	load	 %17810
%17870:	sext	 %17861
%17871:	getelementptr	 %17869 %17870
%17872:	store	 %17871 %17810
%17873:	br	 if.end22

BASIC BLOCK if.else
%17874:	br	 return

BASIC BLOCK if.end22
%17875:	br	 sw.epilog

BASIC BLOCK sw.bb23
%17876:	load	 %17810
%17877:	getelementptr	 %17876 XXX
%17878:	store	 %17877 %17810
%17879:	br	 do.body25

BASIC BLOCK do.body25
%17880:	br	 do.body26

BASIC BLOCK do.body26
%17881:	load	 %17810
%17882:	load	 %17881
%17883:	zext	 %17882
%17884:	and	 %17883 XXX
%17885:	load	 %17810
%17886:	getelementptr	 %17885 XXX
%17887:	load	 %17886
%17888:	sext	 %17887
%17889:	shl	 %17888 XXX
%17890:	add	 %17884 %17889
%17891:	br	 do.end33

BASIC BLOCK do.end33
%17892:	load	 %17810
%17893:	getelementptr	 %17892 XXX
%17894:	store	 %17893 %17810
%17895:	br	 do.end35

BASIC BLOCK do.end35
%17896:	icmp	 %17890 XXX
%17897:	br	 %17896 if.else53 if.then38

BASIC BLOCK if.then38
%17898:	load	 %17810
%17899:	getelementptr	 %17898 XXX
%17900:	store	 %17899 %17810
%17901:	br	 do.body40

BASIC BLOCK do.body40
%17902:	br	 do.body41

BASIC BLOCK do.body41
%17903:	load	 %17810
%17904:	load	 %17903
%17905:	zext	 %17904
%17906:	and	 %17905 XXX
%17907:	load	 %17810
%17908:	getelementptr	 %17907 XXX
%17909:	load	 %17908
%17910:	sext	 %17909
%17911:	shl	 %17910 XXX
%17912:	add	 %17906 %17911
%17913:	br	 do.end48

BASIC BLOCK do.end48
%17914:	load	 %17810
%17915:	getelementptr	 %17914 XXX
%17916:	store	 %17915 %17810
%17917:	br	 do.end50

BASIC BLOCK do.end50
%17918:	load	 %17810
%17919:	sext	 %17912
%17920:	getelementptr	 %17918 %17919
%17921:	store	 %17920 %17810
%17922:	br	 if.end54

BASIC BLOCK if.else53
%17923:	br	 return

BASIC BLOCK if.end54
%17924:	br	 sw.epilog

BASIC BLOCK sw.bb55
%17925:	load	 %17810
%17926:	load	 %17925
%17927:	zext	 %17926
%17928:	getelementptr	 reg_info %17927
%17929:	bitcast	 %17928
%17930:	bitcast	 %17929
%17931:	load	 %17930
%17932:	and	 %17931 XXX
%17933:	zext	 %17932
%17934:	icmp	 %17933 XXX
%17935:	br	 %17934 if.then63 if.end64

BASIC BLOCK if.then63
%17936:	br	 return

BASIC BLOCK if.end64
%17937:	br	 sw.epilog

BASIC BLOCK sw.bb65
%17938:	load	 %17810
%17939:	getelementptr	 %17938 XXX
%17940:	store	 %17939 %17810
%17941:	br	 sw.default

BASIC BLOCK sw.default
%17942:	br	 return

BASIC BLOCK sw.epilog
%17943:	load	 %17810
%17944:	store	 %17943 p
%17945:	br	 return

BASIC BLOCK return
%17946:	phi	 XXX XXX XXX XXX XXX XXX
%17947:	ret	 %17946

FUNCTION kwsinit

BASIC BLOCK entry
%17948:	load	 match_icase
%17949:	icmp	 %17948 XXX
%17950:	br	 %17949 if.end if.then

BASIC BLOCK if.then
%17951:	br	 for.cond

BASIC BLOCK for.cond
%17952:	phi	 XXX %17973
%17953:	icmp	 %17952 XXX
%17954:	br	 %17953 for.end for.body

BASIC BLOCK for.body
%17955:	sext	 %17952
%17956:	call	 __ctype_b_loc
%17957:	load	 %17956
%17958:	getelementptr	 %17957 %17955
%17959:	load	 %17958
%17960:	zext	 %17959
%17961:	and	 %17960 XXX
%17962:	icmp	 %17961 XXX
%17963:	br	 %17962 cond.false cond.true

BASIC BLOCK cond.true
%17964:	call	 %17952 tolower
%17965:	br	 cond.end

BASIC BLOCK cond.false
%17966:	br	 cond.end

BASIC BLOCK cond.end
%17967:	phi	 %17964 %17952
%17968:	trunc	 %17967
%17969:	sext	 %17952
%17970:	getelementptr	 kwsinit.trans XXX %17969
%17971:	store	 %17968 %17970
%17972:	br	 for.inc

BASIC BLOCK for.inc
%17973:	add	 %17952 XXX
%17974:	br	 for.cond

BASIC BLOCK for.end
%17975:	br	 if.end

BASIC BLOCK if.end
%17976:	load	 match_icase
%17977:	icmp	 %17976 XXX
%17978:	select	 %17977 XXX XXX
%17979:	call	 %17978 kwsalloc
%17980:	store	 %17979 kwset
%17981:	icmp	 %17979 XXX
%17982:	br	 %17981 if.then10 if.end11

BASIC BLOCK if.then10
%17983:	call	 XXX XXX fatal
%17984:	br	 if.end11

BASIC BLOCK if.end11
%17985:	ret	

FUNCTION kwsmusts

BASIC BLOCK entry
%17986:	load	 XXX
%17987:	icmp	 %17986 XXX
%17988:	br	 %17987 if.end29 if.then

BASIC BLOCK if.then
%17989:	call	 kwsinit
%17990:	load	 XXX
%17991:	br	 for.cond

BASIC BLOCK for.cond
%17992:	phi	 %17990 %18016
%17993:	icmp	 %17992 XXX
%17994:	br	 %17993 for.end for.body

BASIC BLOCK for.body
%17995:	getelementptr	 %17992 XXX XXX
%17996:	load	 %17995
%17997:	icmp	 %17996 XXX
%17998:	br	 %17997 if.then3 if.end

BASIC BLOCK if.then3
%17999:	br	 for.inc

BASIC BLOCK if.end
%18000:	load	 lastexact
%18001:	add	 %18000 XXX
%18002:	store	 %18001 lastexact
%18003:	load	 kwset
%18004:	getelementptr	 %17992 XXX XXX
%18005:	load	 %18004
%18006:	getelementptr	 %17992 XXX XXX
%18007:	load	 %18006
%18008:	call	 %18007 strlen
%18009:	call	 %18003 %18005 %18008 kwsincr
%18010:	icmp	 %18009 XXX
%18011:	br	 %18010 if.end7 if.then6

BASIC BLOCK if.then6
%18012:	call	 %18009 XXX fatal
%18013:	br	 if.end7

BASIC BLOCK if.end7
%18014:	br	 for.inc

BASIC BLOCK for.inc
%18015:	getelementptr	 %17992 XXX XXX
%18016:	load	 %18015
%18017:	br	 for.cond

BASIC BLOCK for.end
%18018:	load	 XXX
%18019:	br	 for.cond8

BASIC BLOCK for.cond8
%18020:	phi	 %18018 %18041
%18021:	icmp	 %18020 XXX
%18022:	br	 %18021 for.end24 for.body10

BASIC BLOCK for.body10
%18023:	getelementptr	 %18020 XXX XXX
%18024:	load	 %18023
%18025:	icmp	 %18024 XXX
%18026:	br	 %18025 if.end14 if.then13

BASIC BLOCK if.then13
%18027:	br	 for.inc22

BASIC BLOCK if.end14
%18028:	load	 kwset
%18029:	getelementptr	 %18020 XXX XXX
%18030:	load	 %18029
%18031:	getelementptr	 %18020 XXX XXX
%18032:	load	 %18031
%18033:	call	 %18032 strlen
%18034:	call	 %18028 %18030 %18033 kwsincr
%18035:	icmp	 %18034 XXX
%18036:	br	 %18035 if.end21 if.then20

BASIC BLOCK if.then20
%18037:	call	 %18034 XXX fatal
%18038:	br	 if.end21

BASIC BLOCK if.end21
%18039:	br	 for.inc22

BASIC BLOCK for.inc22
%18040:	getelementptr	 %18020 XXX XXX
%18041:	load	 %18040
%18042:	br	 for.cond8

BASIC BLOCK for.end24
%18043:	load	 kwset
%18044:	call	 %18043 kwsprep
%18045:	icmp	 %18044 XXX
%18046:	br	 %18045 if.end28 if.then27

BASIC BLOCK if.then27
%18047:	call	 %18044 XXX fatal
%18048:	br	 if.end28

BASIC BLOCK if.end28
%18049:	br	 if.end29

BASIC BLOCK if.end29
%18050:	ret	

FUNCTION resetmust

BASIC BLOCK entry
%18051:	getelementptr	 mp XXX XXX
%18052:	load	 %18051
%18053:	getelementptr	 %18052 XXX
%18054:	store	 XXX %18053
%18055:	getelementptr	 mp XXX XXX
%18056:	load	 %18055
%18057:	getelementptr	 %18056 XXX
%18058:	store	 XXX %18057
%18059:	getelementptr	 mp XXX XXX
%18060:	load	 %18059
%18061:	getelementptr	 %18060 XXX
%18062:	store	 XXX %18061
%18063:	getelementptr	 mp XXX XXX
%18064:	load	 %18063
%18065:	call	 %18064 freelist
%18066:	ret	

FUNCTION inboth

BASIC BLOCK entry
%18067:	icmp	 left XXX
%18068:	br	 %18067 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%18069:	icmp	 right XXX
%18070:	br	 %18069 if.end if.then

BASIC BLOCK if.then
%18071:	br	 return

BASIC BLOCK if.end
%18072:	call	 XXX malloc
%18073:	bitcast	 %18072
%18074:	icmp	 %18073 XXX
%18075:	br	 %18074 if.end4 if.then3

BASIC BLOCK if.then3
%18076:	br	 return

BASIC BLOCK if.end4
%18077:	getelementptr	 %18073 XXX
%18078:	store	 XXX %18077
%18079:	br	 for.cond

BASIC BLOCK for.cond
%18080:	phi	 %18073 %18088
%18081:	phi	 XXX %18117
%18082:	sext	 %18081
%18083:	getelementptr	 left %18082
%18084:	load	 %18083
%18085:	icmp	 %18084 XXX
%18086:	br	 %18085 for.end26 for.body

BASIC BLOCK for.body
%18087:	br	 for.cond7

BASIC BLOCK for.cond7
%18088:	phi	 %18080 %18106
%18089:	phi	 XXX %18114
%18090:	sext	 %18089
%18091:	getelementptr	 right %18090
%18092:	load	 %18091
%18093:	icmp	 %18092 XXX
%18094:	br	 %18093 for.end for.body11

BASIC BLOCK for.body11
%18095:	sext	 %18081
%18096:	getelementptr	 left %18095
%18097:	load	 %18096
%18098:	sext	 %18089
%18099:	getelementptr	 right %18098
%18100:	load	 %18099
%18101:	call	 %18097 %18100 comsubs
%18102:	icmp	 %18101 XXX
%18103:	br	 %18102 if.end19 if.then18

BASIC BLOCK if.then18
%18104:	call	 %18088 freelist
%18105:	br	 return

BASIC BLOCK if.end19
%18106:	call	 %18088 %18101 addlists
%18107:	call	 %18101 freelist
%18108:	bitcast	 %18101
%18109:	call	 %18108 free
%18110:	icmp	 %18106 XXX
%18111:	br	 %18110 if.end23 if.then22

BASIC BLOCK if.then22
%18112:	br	 return

BASIC BLOCK if.end23
%18113:	br	 for.inc

BASIC BLOCK for.inc
%18114:	add	 %18089 XXX
%18115:	br	 for.cond7

BASIC BLOCK for.end
%18116:	br	 for.inc24

BASIC BLOCK for.inc24
%18117:	add	 %18081 XXX
%18118:	br	 for.cond

BASIC BLOCK for.end26
%18119:	br	 return

BASIC BLOCK return
%18120:	phi	 XXX XXX XXX XXX %18080
%18121:	ret	 %18120

FUNCTION freelist

BASIC BLOCK entry
%18122:	icmp	 cpp XXX
%18123:	br	 %18122 if.end if.then

BASIC BLOCK if.then
%18124:	br	 for.end

BASIC BLOCK if.end
%18125:	br	 for.cond

BASIC BLOCK for.cond
%18126:	phi	 XXX %18140
%18127:	sext	 %18126
%18128:	getelementptr	 cpp %18127
%18129:	load	 %18128
%18130:	icmp	 %18129 XXX
%18131:	br	 %18130 for.end for.body

BASIC BLOCK for.body
%18132:	sext	 %18126
%18133:	getelementptr	 cpp %18132
%18134:	load	 %18133
%18135:	call	 %18134 free
%18136:	sext	 %18126
%18137:	getelementptr	 cpp %18136
%18138:	store	 XXX %18137
%18139:	br	 for.inc

BASIC BLOCK for.inc
%18140:	add	 %18126 XXX
%18141:	br	 for.cond

BASIC BLOCK for.end
%18142:	ret	

FUNCTION addlists

BASIC BLOCK entry
%18143:	icmp	 old XXX
%18144:	br	 %18143 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%18145:	icmp	 new XXX
%18146:	br	 %18145 if.end if.then

BASIC BLOCK if.then
%18147:	br	 return

BASIC BLOCK if.end
%18148:	br	 for.cond

BASIC BLOCK for.cond
%18149:	phi	 XXX %18168
%18150:	phi	 old %18163
%18151:	sext	 %18149
%18152:	getelementptr	 new %18151
%18153:	load	 %18152
%18154:	icmp	 %18153 XXX
%18155:	br	 %18154 for.end for.body

BASIC BLOCK for.body
%18156:	sext	 %18149
%18157:	getelementptr	 new %18156
%18158:	load	 %18157
%18159:	sext	 %18149
%18160:	getelementptr	 new %18159
%18161:	load	 %18160
%18162:	call	 %18161 strlen
%18163:	call	 %18150 %18158 %18162 enlist
%18164:	icmp	 %18163 XXX
%18165:	br	 %18164 if.end10 if.then9

BASIC BLOCK if.then9
%18166:	br	 for.end

BASIC BLOCK if.end10
%18167:	br	 for.inc

BASIC BLOCK for.inc
%18168:	add	 %18149 XXX
%18169:	br	 for.cond

BASIC BLOCK for.end
%18170:	phi	 %18163 %18150
%18171:	br	 return

BASIC BLOCK return
%18172:	phi	 XXX %18170
%18173:	ret	 %18172

FUNCTION icpyalloc

BASIC BLOCK entry
%18174:	call	 XXX string icatalloc
%18175:	ret	 %18174

FUNCTION icatalloc

BASIC BLOCK entry
%18176:	icmp	 new XXX
%18177:	br	 %18176 cond.false cond.true

BASIC BLOCK cond.true
%18178:	br	 cond.end

BASIC BLOCK cond.false
%18179:	call	 new strlen
%18180:	br	 cond.end

BASIC BLOCK cond.end
%18181:	phi	 XXX %18179
%18182:	icmp	 old XXX
%18183:	br	 %18182 if.else if.then

BASIC BLOCK if.then
%18184:	br	 if.end6

BASIC BLOCK if.else
%18185:	icmp	 %18181 XXX
%18186:	br	 %18185 if.else4 if.then3

BASIC BLOCK if.then3
%18187:	br	 return

BASIC BLOCK if.else4
%18188:	call	 old strlen
%18189:	br	 if.end

BASIC BLOCK if.end
%18190:	br	 if.end6

BASIC BLOCK if.end6
%18191:	phi	 XXX %18188
%18192:	icmp	 old XXX
%18193:	br	 %18192 if.else10 if.then8

BASIC BLOCK if.then8
%18194:	add	 %18181 XXX
%18195:	call	 %18194 malloc
%18196:	br	 if.end14

BASIC BLOCK if.else10
%18197:	add	 %18191 %18181
%18198:	add	 %18197 XXX
%18199:	call	 old %18198 realloc
%18200:	br	 if.end14

BASIC BLOCK if.end14
%18201:	phi	 %18195 %18199
%18202:	icmp	 %18201 XXX
%18203:	br	 %18202 if.end19 land.lhs.true

BASIC BLOCK land.lhs.true
%18204:	icmp	 new XXX
%18205:	br	 %18204 if.end19 if.then17

BASIC BLOCK if.then17
%18206:	getelementptr	 %18201 %18191
%18207:	call	 %18206 new strcpy
%18208:	br	 if.end19

BASIC BLOCK if.end19
%18209:	br	 return

BASIC BLOCK return
%18210:	phi	 %18201 old
%18211:	ret	 %18210

FUNCTION enlist

BASIC BLOCK entry
%18212:	icmp	 cpp XXX
%18213:	br	 %18212 if.end if.then

BASIC BLOCK if.then
%18214:	br	 return

BASIC BLOCK if.end
%18215:	call	 new icpyalloc
%18216:	icmp	 %18215 XXX
%18217:	br	 %18216 if.end3 if.then2

BASIC BLOCK if.then2
%18218:	call	 cpp freelist
%18219:	br	 return

BASIC BLOCK if.end3
%18220:	getelementptr	 %18215 len
%18221:	store	 XXX %18220
%18222:	br	 for.cond

BASIC BLOCK for.cond
%18223:	phi	 XXX %18238
%18224:	sext	 %18223
%18225:	getelementptr	 cpp %18224
%18226:	load	 %18225
%18227:	icmp	 %18226 XXX
%18228:	br	 %18227 for.end for.body

BASIC BLOCK for.body
%18229:	sext	 %18223
%18230:	getelementptr	 cpp %18229
%18231:	load	 %18230
%18232:	call	 %18231 %18215 istrstr
%18233:	icmp	 %18232 XXX
%18234:	br	 %18233 if.end11 if.then10

BASIC BLOCK if.then10
%18235:	call	 %18215 free
%18236:	br	 return

BASIC BLOCK if.end11
%18237:	br	 for.inc

BASIC BLOCK for.inc
%18238:	add	 %18223 XXX
%18239:	br	 for.cond

BASIC BLOCK for.end
%18240:	br	 while.cond

BASIC BLOCK while.cond
%18241:	phi	 %18223 %18274
%18242:	phi	 XXX %18275
%18243:	sext	 %18242
%18244:	getelementptr	 cpp %18243
%18245:	load	 %18244
%18246:	icmp	 %18245 XXX
%18247:	br	 %18246 while.end while.body

BASIC BLOCK while.body
%18248:	sext	 %18242
%18249:	getelementptr	 cpp %18248
%18250:	load	 %18249
%18251:	call	 %18215 %18250 istrstr
%18252:	icmp	 %18251 XXX
%18253:	br	 %18252 if.else if.then19

BASIC BLOCK if.then19
%18254:	add	 %18242 XXX
%18255:	br	 if.end32

BASIC BLOCK if.else
%18256:	sext	 %18242
%18257:	getelementptr	 cpp %18256
%18258:	load	 %18257
%18259:	call	 %18258 free
%18260:	add	 %18241 XXX
%18261:	icmp	 %18260 %18242
%18262:	br	 %18261 if.end25 if.then24

BASIC BLOCK if.then24
%18263:	br	 while.end

BASIC BLOCK if.end25
%18264:	sext	 %18260
%18265:	getelementptr	 cpp %18264
%18266:	load	 %18265
%18267:	sext	 %18242
%18268:	getelementptr	 cpp %18267
%18269:	store	 %18266 %18268
%18270:	sext	 %18260
%18271:	getelementptr	 cpp %18270
%18272:	store	 XXX %18271
%18273:	br	 if.end32

BASIC BLOCK if.end32
%18274:	phi	 %18241 %18260
%18275:	phi	 %18254 %18242
%18276:	br	 while.cond

BASIC BLOCK while.end
%18277:	phi	 %18260 %18241
%18278:	bitcast	 cpp
%18279:	add	 %18277 XXX
%18280:	sext	 %18279
%18281:	mul	 %18280 XXX
%18282:	call	 %18278 %18281 realloc
%18283:	bitcast	 %18282
%18284:	icmp	 %18283 XXX
%18285:	br	 %18284 if.end37 if.then36

BASIC BLOCK if.then36
%18286:	br	 return

BASIC BLOCK if.end37
%18287:	sext	 %18277
%18288:	getelementptr	 %18283 %18287
%18289:	store	 %18215 %18288
%18290:	add	 %18277 XXX
%18291:	sext	 %18290
%18292:	getelementptr	 %18283 %18291
%18293:	store	 XXX %18292
%18294:	br	 return

BASIC BLOCK return
%18295:	phi	 XXX XXX cpp XXX %18283
%18296:	ret	 %18295

FUNCTION ifree

BASIC BLOCK entry
%18297:	icmp	 cp XXX
%18298:	br	 %18297 if.end if.then

BASIC BLOCK if.then
%18299:	call	 cp free
%18300:	br	 if.end

BASIC BLOCK if.end
%18301:	ret	

FUNCTION istrstr

BASIC BLOCK entry
%18302:	call	 lookfor strlen
%18303:	br	 for.cond

BASIC BLOCK for.cond
%18304:	phi	 lookin %18314
%18305:	load	 %18304
%18306:	sext	 %18305
%18307:	icmp	 %18306 XXX
%18308:	br	 %18307 for.end for.body

BASIC BLOCK for.body
%18309:	call	 %18304 lookfor %18302 strncmp
%18310:	icmp	 %18309 XXX
%18311:	br	 %18310 if.end if.then

BASIC BLOCK if.then
%18312:	br	 return

BASIC BLOCK if.end
%18313:	br	 for.inc

BASIC BLOCK for.inc
%18314:	getelementptr	 %18304 XXX
%18315:	br	 for.cond

BASIC BLOCK for.end
%18316:	br	 return

BASIC BLOCK return
%18317:	phi	 %18304 XXX
%18318:	ret	 %18317

FUNCTION comsubs

BASIC BLOCK entry
%18319:	icmp	 left XXX
%18320:	br	 %18319 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%18321:	icmp	 right XXX
%18322:	br	 %18321 if.end if.then

BASIC BLOCK if.then
%18323:	br	 return

BASIC BLOCK if.end
%18324:	call	 XXX malloc
%18325:	bitcast	 %18324
%18326:	icmp	 %18325 XXX
%18327:	br	 %18326 if.end4 if.then3

BASIC BLOCK if.then3
%18328:	br	 return

BASIC BLOCK if.end4
%18329:	getelementptr	 %18325 XXX
%18330:	store	 XXX %18329
%18331:	br	 for.cond

BASIC BLOCK for.cond
%18332:	phi	 left %18384
%18333:	phi	 %18325 %18383
%18334:	load	 %18332
%18335:	sext	 %18334
%18336:	icmp	 %18335 XXX
%18337:	br	 %18336 for.end39 for.body

BASIC BLOCK for.body
%18338:	load	 %18332
%18339:	sext	 %18338
%18340:	call	 right %18339 strchr
%18341:	br	 while.cond

BASIC BLOCK while.cond
%18342:	phi	 %18340 %18373
%18343:	phi	 XXX %18369
%18344:	icmp	 %18342 XXX
%18345:	br	 %18344 while.end while.body

BASIC BLOCK while.body
%18346:	br	 for.cond11

BASIC BLOCK for.cond11
%18347:	phi	 XXX %18364
%18348:	getelementptr	 %18332 %18347
%18349:	load	 %18348
%18350:	sext	 %18349
%18351:	icmp	 %18350 XXX
%18352:	br	 %18351 land.end land.rhs

BASIC BLOCK land.rhs
%18353:	getelementptr	 %18332 %18347
%18354:	load	 %18353
%18355:	sext	 %18354
%18356:	getelementptr	 %18342 %18347
%18357:	load	 %18356
%18358:	sext	 %18357
%18359:	icmp	 %18355 %18358
%18360:	br	 land.end

BASIC BLOCK land.end
%18361:	phi	 XXX %18359
%18362:	br	 %18361 for.end for.body22

BASIC BLOCK for.body22
%18363:	br	 for.inc

BASIC BLOCK for.inc
%18364:	add	 %18347 XXX
%18365:	br	 for.cond11

BASIC BLOCK for.end
%18366:	icmp	 %18347 %18343
%18367:	br	 %18366 if.end26 if.then25

BASIC BLOCK if.then25
%18368:	br	 if.end26

BASIC BLOCK if.end26
%18369:	phi	 %18347 %18343
%18370:	getelementptr	 %18342 XXX
%18371:	load	 %18332
%18372:	sext	 %18371
%18373:	call	 %18370 %18372 strchr
%18374:	br	 while.cond

BASIC BLOCK while.end
%18375:	icmp	 %18343 XXX
%18376:	br	 %18375 if.end32 if.then31

BASIC BLOCK if.then31
%18377:	br	 for.inc38

BASIC BLOCK if.end32
%18378:	call	 %18333 %18332 %18343 enlist
%18379:	icmp	 %18378 XXX
%18380:	br	 %18379 if.end37 if.then36

BASIC BLOCK if.then36
%18381:	br	 for.end39

BASIC BLOCK if.end37
%18382:	br	 for.inc38

BASIC BLOCK for.inc38
%18383:	phi	 %18333 %18378
%18384:	getelementptr	 %18332 XXX
%18385:	br	 for.cond

BASIC BLOCK for.end39
%18386:	phi	 %18378 %18333
%18387:	br	 return

BASIC BLOCK return
%18388:	phi	 XXX XXX %18386
%18389:	ret	 %18388

FUNCTION delete

BASIC BLOCK entry
%18390:	alloca	 XXX
%18391:	bitcast	 %18390
%18392:	store	 p.coerce %18391
%18393:	br	 for.cond

BASIC BLOCK for.cond
%18394:	phi	 XXX %18411
%18395:	getelementptr	 s XXX XXX
%18396:	load	 %18395
%18397:	icmp	 %18394 %18396
%18398:	br	 %18397 for.end for.body

BASIC BLOCK for.body
%18399:	getelementptr	 %18390 XXX XXX
%18400:	load	 %18399
%18401:	sext	 %18394
%18402:	getelementptr	 s XXX XXX
%18403:	load	 %18402
%18404:	getelementptr	 %18403 %18401
%18405:	getelementptr	 %18404 XXX XXX
%18406:	load	 %18405
%18407:	icmp	 %18400 %18406
%18408:	br	 %18407 if.end if.then

BASIC BLOCK if.then
%18409:	br	 for.end

BASIC BLOCK if.end
%18410:	br	 for.inc

BASIC BLOCK for.inc
%18411:	add	 %18394 XXX
%18412:	br	 for.cond

BASIC BLOCK for.end
%18413:	getelementptr	 s XXX XXX
%18414:	load	 %18413
%18415:	icmp	 %18394 %18414
%18416:	br	 %18415 if.end20 if.then5

BASIC BLOCK if.then5
%18417:	getelementptr	 s XXX XXX
%18418:	load	 %18417
%18419:	add	 %18418 XXX
%18420:	store	 %18419 %18417
%18421:	br	 for.cond7

BASIC BLOCK for.cond7
%18422:	phi	 %18394 %18440
%18423:	getelementptr	 s XXX XXX
%18424:	load	 %18423
%18425:	icmp	 %18422 %18424
%18426:	br	 %18425 for.end19 for.body10

BASIC BLOCK for.body10
%18427:	sext	 %18422
%18428:	getelementptr	 s XXX XXX
%18429:	load	 %18428
%18430:	getelementptr	 %18429 %18427
%18431:	add	 %18422 XXX
%18432:	sext	 %18431
%18433:	getelementptr	 s XXX XXX
%18434:	load	 %18433
%18435:	getelementptr	 %18434 %18432
%18436:	bitcast	 %18430
%18437:	bitcast	 %18435
%18438:	call	 %18436 %18437 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%18439:	br	 for.inc17

BASIC BLOCK for.inc17
%18440:	add	 %18422 XXX
%18441:	br	 for.cond7

BASIC BLOCK for.end19
%18442:	br	 if.end20

BASIC BLOCK if.end20
%18443:	ret	

FUNCTION branch

BASIC BLOCK entry
%18444:	call	 closure
%18445:	br	 while.cond

BASIC BLOCK while.cond
%18446:	load	 tok
%18447:	icmp	 %18446 XXX
%18448:	br	 %18447 land.end land.lhs.true

BASIC BLOCK land.lhs.true
%18449:	load	 tok
%18450:	icmp	 %18449 XXX
%18451:	br	 %18450 land.end land.rhs

BASIC BLOCK land.rhs
%18452:	load	 tok
%18453:	icmp	 %18452 XXX
%18454:	br	 land.end

BASIC BLOCK land.end
%18455:	phi	 XXX XXX %18453
%18456:	br	 %18455 while.end while.body

BASIC BLOCK while.body
%18457:	call	 closure
%18458:	call	 XXX addtok
%18459:	br	 while.cond

BASIC BLOCK while.end
%18460:	ret	

FUNCTION closure

BASIC BLOCK entry
%18461:	call	 atom
%18462:	br	 while.cond

BASIC BLOCK while.cond
%18463:	load	 tok
%18464:	icmp	 %18463 XXX
%18465:	br	 %18464 lor.lhs.false lor.end

BASIC BLOCK lor.lhs.false
%18466:	load	 tok
%18467:	icmp	 %18466 XXX
%18468:	br	 %18467 lor.lhs.false2 lor.end

BASIC BLOCK lor.lhs.false2
%18469:	load	 tok
%18470:	icmp	 %18469 XXX
%18471:	br	 %18470 lor.rhs lor.end

BASIC BLOCK lor.rhs
%18472:	load	 tok
%18473:	icmp	 %18472 XXX
%18474:	br	 lor.end

BASIC BLOCK lor.end
%18475:	phi	 XXX XXX XXX %18473
%18476:	br	 %18475 while.end while.body

BASIC BLOCK while.body
%18477:	load	 tok
%18478:	icmp	 %18477 XXX
%18479:	br	 %18478 if.else if.then

BASIC BLOCK if.then
%18480:	load	 dfa
%18481:	getelementptr	 %18480 XXX XXX
%18482:	load	 %18481
%18483:	call	 %18482 nsubtoks
%18484:	load	 dfa
%18485:	getelementptr	 %18484 XXX XXX
%18486:	load	 %18485
%18487:	sub	 %18486 %18483
%18488:	load	 maxrep
%18489:	icmp	 %18488 XXX
%18490:	br	 %18489 if.end if.then9

BASIC BLOCK if.then9
%18491:	call	 XXX addtok
%18492:	br	 if.end

BASIC BLOCK if.end
%18493:	load	 minrep
%18494:	icmp	 %18493 XXX
%18495:	br	 %18494 if.end12 if.then11

BASIC BLOCK if.then11
%18496:	call	 XXX addtok
%18497:	br	 if.end12

BASIC BLOCK if.end12
%18498:	br	 for.cond

BASIC BLOCK for.cond
%18499:	phi	 XXX %18506
%18500:	load	 minrep
%18501:	icmp	 %18499 %18500
%18502:	br	 %18501 for.end for.body

BASIC BLOCK for.body
%18503:	call	 %18487 %18483 copytoks
%18504:	call	 XXX addtok
%18505:	br	 for.inc

BASIC BLOCK for.inc
%18506:	add	 %18499 XXX
%18507:	br	 for.cond

BASIC BLOCK for.end
%18508:	br	 for.cond14

BASIC BLOCK for.cond14
%18509:	phi	 %18499 %18517
%18510:	load	 maxrep
%18511:	icmp	 %18509 %18510
%18512:	br	 %18511 for.end19 for.body16

BASIC BLOCK for.body16
%18513:	call	 %18487 %18483 copytoks
%18514:	call	 XXX addtok
%18515:	call	 XXX addtok
%18516:	br	 for.inc17

BASIC BLOCK for.inc17
%18517:	add	 %18509 XXX
%18518:	br	 for.cond14

BASIC BLOCK for.end19
%18519:	call	 lex
%18520:	store	 %18519 tok
%18521:	br	 if.end22

BASIC BLOCK if.else
%18522:	load	 tok
%18523:	call	 %18522 addtok
%18524:	call	 lex
%18525:	store	 %18524 tok
%18526:	br	 if.end22

BASIC BLOCK if.end22
%18527:	br	 while.cond

BASIC BLOCK while.end
%18528:	ret	

FUNCTION atom

BASIC BLOCK entry
%18529:	load	 tok
%18530:	icmp	 %18529 XXX
%18531:	br	 %18530 lor.lhs.false land.lhs.true

BASIC BLOCK land.lhs.true
%18532:	load	 tok
%18533:	icmp	 %18532 XXX
%18534:	br	 %18533 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%18535:	load	 tok
%18536:	icmp	 %18535 XXX
%18537:	br	 %18536 lor.lhs.false3 if.then

BASIC BLOCK lor.lhs.false3
%18538:	load	 tok
%18539:	icmp	 %18538 XXX
%18540:	br	 %18539 lor.lhs.false5 if.then

BASIC BLOCK lor.lhs.false5
%18541:	load	 tok
%18542:	icmp	 %18541 XXX
%18543:	br	 %18542 lor.lhs.false7 if.then

BASIC BLOCK lor.lhs.false7
%18544:	load	 tok
%18545:	icmp	 %18544 XXX
%18546:	br	 %18545 lor.lhs.false9 if.then

BASIC BLOCK lor.lhs.false9
%18547:	load	 tok
%18548:	icmp	 %18547 XXX
%18549:	br	 %18548 lor.lhs.false11 if.then

BASIC BLOCK lor.lhs.false11
%18550:	load	 tok
%18551:	icmp	 %18550 XXX
%18552:	br	 %18551 lor.lhs.false13 if.then

BASIC BLOCK lor.lhs.false13
%18553:	load	 tok
%18554:	icmp	 %18553 XXX
%18555:	br	 %18554 lor.lhs.false15 if.then

BASIC BLOCK lor.lhs.false15
%18556:	load	 tok
%18557:	icmp	 %18556 XXX
%18558:	br	 %18557 if.else if.then

BASIC BLOCK if.then
%18559:	load	 tok
%18560:	call	 %18559 addtok
%18561:	call	 lex
%18562:	store	 %18561 tok
%18563:	br	 if.end26

BASIC BLOCK if.else
%18564:	load	 tok
%18565:	icmp	 %18564 XXX
%18566:	br	 %18565 if.else24 if.then18

BASIC BLOCK if.then18
%18567:	call	 lex
%18568:	store	 %18567 tok
%18569:	call	 XXX regexp
%18570:	load	 tok
%18571:	icmp	 %18570 XXX
%18572:	br	 %18571 if.end if.then21

BASIC BLOCK if.then21
%18573:	call	 XXX gettext
%18574:	call	 %18573 dfaerror
%18575:	br	 if.end

BASIC BLOCK if.end
%18576:	call	 lex
%18577:	store	 %18576 tok
%18578:	br	 if.end25

BASIC BLOCK if.else24
%18579:	call	 XXX addtok
%18580:	br	 if.end25

BASIC BLOCK if.end25
%18581:	br	 if.end26

BASIC BLOCK if.end26
%18582:	ret	

FUNCTION nsubtoks

BASIC BLOCK entry
%18583:	sub	 tindex XXX
%18584:	sext	 %18583
%18585:	load	 dfa
%18586:	getelementptr	 %18585 XXX XXX
%18587:	load	 %18586
%18588:	getelementptr	 %18587 %18584
%18589:	load	 %18588
%18590:	switch	 %18589 sw.default XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb2 XXX sw.bb2 XXX sw.bb2

BASIC BLOCK sw.default
%18591:	br	 return

BASIC BLOCK sw.bb
%18592:	sub	 tindex XXX
%18593:	call	 %18592 nsubtoks
%18594:	add	 XXX %18593
%18595:	br	 return

BASIC BLOCK sw.bb2
%18596:	sub	 tindex XXX
%18597:	call	 %18596 nsubtoks
%18598:	add	 XXX %18597
%18599:	sub	 tindex XXX
%18600:	sub	 %18599 %18597
%18601:	call	 %18600 nsubtoks
%18602:	add	 %18598 %18601
%18603:	br	 return

BASIC BLOCK return
%18604:	phi	 XXX %18602 %18594
%18605:	ret	 %18604

FUNCTION copytoks

BASIC BLOCK entry
%18606:	br	 for.cond

BASIC BLOCK for.cond
%18607:	phi	 XXX %18619
%18608:	icmp	 %18607 ntokens
%18609:	br	 %18608 for.end for.body

BASIC BLOCK for.body
%18610:	add	 tindex %18607
%18611:	sext	 %18610
%18612:	load	 dfa
%18613:	getelementptr	 %18612 XXX XXX
%18614:	load	 %18613
%18615:	getelementptr	 %18614 %18611
%18616:	load	 %18615
%18617:	call	 %18616 addtok
%18618:	br	 for.inc

BASIC BLOCK for.inc
%18619:	add	 %18607 XXX
%18620:	br	 for.cond

BASIC BLOCK for.end
%18621:	ret	

FUNCTION notset

BASIC BLOCK entry
%18622:	br	 for.cond

BASIC BLOCK for.cond
%18623:	phi	 XXX %18635
%18624:	sext	 %18623
%18625:	icmp	 %18624 XXX
%18626:	br	 %18625 for.end for.body

BASIC BLOCK for.body
%18627:	sext	 %18623
%18628:	getelementptr	 s %18627
%18629:	load	 %18628
%18630:	xor	 %18629 XXX
%18631:	sext	 %18623
%18632:	getelementptr	 s %18631
%18633:	store	 %18630 %18632
%18634:	br	 for.inc

BASIC BLOCK for.inc
%18635:	add	 %18623 XXX
%18636:	br	 for.cond

BASIC BLOCK for.end
%18637:	ret	

FUNCTION charclass_index

BASIC BLOCK entry
%18638:	br	 for.cond

BASIC BLOCK for.cond
%18639:	phi	 XXX %18656
%18640:	load	 dfa
%18641:	getelementptr	 %18640 XXX XXX
%18642:	load	 %18641
%18643:	icmp	 %18639 %18642
%18644:	br	 %18643 for.end for.body

BASIC BLOCK for.body
%18645:	sext	 %18639
%18646:	load	 dfa
%18647:	getelementptr	 %18646 XXX XXX
%18648:	load	 %18647
%18649:	getelementptr	 %18648 %18645
%18650:	getelementptr	 %18649 XXX XXX
%18651:	call	 s %18650 equal
%18652:	icmp	 %18651 XXX
%18653:	br	 %18652 if.end if.then

BASIC BLOCK if.then
%18654:	br	 return

BASIC BLOCK if.end
%18655:	br	 for.inc

BASIC BLOCK for.inc
%18656:	add	 %18639 XXX
%18657:	br	 for.cond

BASIC BLOCK for.end
%18658:	load	 dfa
%18659:	getelementptr	 %18658 XXX XXX
%18660:	load	 %18659
%18661:	load	 dfa
%18662:	getelementptr	 %18661 XXX XXX
%18663:	load	 %18662
%18664:	icmp	 %18660 %18663
%18665:	br	 %18664 if.end13 if.then3

BASIC BLOCK if.then3
%18666:	br	 while.cond

BASIC BLOCK while.cond
%18667:	load	 dfa
%18668:	getelementptr	 %18667 XXX XXX
%18669:	load	 %18668
%18670:	load	 dfa
%18671:	getelementptr	 %18670 XXX XXX
%18672:	load	 %18671
%18673:	icmp	 %18669 %18672
%18674:	br	 %18673 while.end while.body

BASIC BLOCK while.body
%18675:	load	 dfa
%18676:	getelementptr	 %18675 XXX XXX
%18677:	load	 %18676
%18678:	mul	 %18677 XXX
%18679:	store	 %18678 %18676
%18680:	br	 while.cond

BASIC BLOCK while.end
%18681:	load	 dfa
%18682:	getelementptr	 %18681 XXX XXX
%18683:	load	 %18682
%18684:	bitcast	 %18683
%18685:	load	 dfa
%18686:	getelementptr	 %18685 XXX XXX
%18687:	load	 %18686
%18688:	sext	 %18687
%18689:	mul	 %18688 XXX
%18690:	call	 %18684 %18689 xrealloc_1
%18691:	bitcast	 %18690
%18692:	load	 dfa
%18693:	getelementptr	 %18692 XXX XXX
%18694:	store	 %18691 %18693
%18695:	br	 if.end13

BASIC BLOCK if.end13
%18696:	load	 dfa
%18697:	getelementptr	 %18696 XXX XXX
%18698:	load	 %18697
%18699:	add	 %18698 XXX
%18700:	store	 %18699 %18697
%18701:	sext	 %18639
%18702:	load	 dfa
%18703:	getelementptr	 %18702 XXX XXX
%18704:	load	 %18703
%18705:	getelementptr	 %18704 %18701
%18706:	getelementptr	 %18705 XXX XXX
%18707:	call	 s %18706 copyset
%18708:	br	 return

BASIC BLOCK return
%18709:	ret	 %18639

FUNCTION looking_at

BASIC BLOCK entry
%18710:	call	 s strlen
%18711:	load	 lexleft
%18712:	sext	 %18711
%18713:	icmp	 %18712 %18710
%18714:	br	 %18713 if.end if.then

BASIC BLOCK if.then
%18715:	br	 return

BASIC BLOCK if.end
%18716:	load	 lexptr
%18717:	call	 s %18716 %18710 strncmp
%18718:	icmp	 %18717 XXX
%18719:	zext	 %18718
%18720:	br	 return

BASIC BLOCK return
%18721:	phi	 XXX %18719
%18722:	ret	 %18721

FUNCTION is_upper

BASIC BLOCK entry
%18723:	sext	 c
%18724:	call	 __ctype_b_loc
%18725:	load	 %18724
%18726:	getelementptr	 %18725 %18723
%18727:	load	 %18726
%18728:	zext	 %18727
%18729:	and	 %18728 XXX
%18730:	ret	 %18729

FUNCTION is_lower

BASIC BLOCK entry
%18731:	sext	 c
%18732:	call	 __ctype_b_loc
%18733:	load	 %18732
%18734:	getelementptr	 %18733 %18731
%18735:	load	 %18734
%18736:	zext	 %18735
%18737:	and	 %18736 XXX
%18738:	ret	 %18737

FUNCTION is_alpha

BASIC BLOCK entry
%18739:	sext	 c
%18740:	call	 __ctype_b_loc
%18741:	load	 %18740
%18742:	getelementptr	 %18741 %18739
%18743:	load	 %18742
%18744:	zext	 %18743
%18745:	and	 %18744 XXX
%18746:	ret	 %18745

FUNCTION is_digit

BASIC BLOCK entry
%18747:	sext	 c
%18748:	call	 __ctype_b_loc
%18749:	load	 %18748
%18750:	getelementptr	 %18749 %18747
%18751:	load	 %18750
%18752:	zext	 %18751
%18753:	and	 %18752 XXX
%18754:	ret	 %18753

FUNCTION is_xdigit

BASIC BLOCK entry
%18755:	sext	 c
%18756:	call	 __ctype_b_loc
%18757:	load	 %18756
%18758:	getelementptr	 %18757 %18755
%18759:	load	 %18758
%18760:	zext	 %18759
%18761:	and	 %18760 XXX
%18762:	ret	 %18761

FUNCTION is_space

BASIC BLOCK entry
%18763:	sext	 c
%18764:	call	 __ctype_b_loc
%18765:	load	 %18764
%18766:	getelementptr	 %18765 %18763
%18767:	load	 %18766
%18768:	zext	 %18767
%18769:	and	 %18768 XXX
%18770:	ret	 %18769

FUNCTION is_punct

BASIC BLOCK entry
%18771:	sext	 c
%18772:	call	 __ctype_b_loc
%18773:	load	 %18772
%18774:	getelementptr	 %18773 %18771
%18775:	load	 %18774
%18776:	zext	 %18775
%18777:	and	 %18776 XXX
%18778:	ret	 %18777

FUNCTION is_alnum

BASIC BLOCK entry
%18779:	sext	 c
%18780:	call	 __ctype_b_loc
%18781:	load	 %18780
%18782:	getelementptr	 %18781 %18779
%18783:	load	 %18782
%18784:	zext	 %18783
%18785:	and	 %18784 XXX
%18786:	ret	 %18785

FUNCTION is_print

BASIC BLOCK entry
%18787:	sext	 c
%18788:	call	 __ctype_b_loc
%18789:	load	 %18788
%18790:	getelementptr	 %18789 %18787
%18791:	load	 %18790
%18792:	zext	 %18791
%18793:	and	 %18792 XXX
%18794:	ret	 %18793

FUNCTION is_graph

BASIC BLOCK entry
%18795:	sext	 c
%18796:	call	 __ctype_b_loc
%18797:	load	 %18796
%18798:	getelementptr	 %18797 %18795
%18799:	load	 %18798
%18800:	zext	 %18799
%18801:	and	 %18800 XXX
%18802:	ret	 %18801

FUNCTION is_cntrl

BASIC BLOCK entry
%18803:	sext	 c
%18804:	call	 __ctype_b_loc
%18805:	load	 %18804
%18806:	getelementptr	 %18805 %18803
%18807:	load	 %18806
%18808:	zext	 %18807
%18809:	and	 %18808 XXX
%18810:	ret	 %18809

FUNCTION is_blank

BASIC BLOCK entry
%18811:	icmp	 c XXX
%18812:	br	 %18811 lor.rhs lor.end

BASIC BLOCK lor.rhs
%18813:	icmp	 c XXX
%18814:	br	 lor.end

BASIC BLOCK lor.end
%18815:	phi	 XXX %18813
%18816:	zext	 %18815
%18817:	ret	 %18816

FUNCTION equal

BASIC BLOCK entry
%18818:	br	 for.cond

BASIC BLOCK for.cond
%18819:	phi	 XXX %18833
%18820:	sext	 %18819
%18821:	icmp	 %18820 XXX
%18822:	br	 %18821 for.end for.body

BASIC BLOCK for.body
%18823:	sext	 %18819
%18824:	getelementptr	 s1 %18823
%18825:	load	 %18824
%18826:	sext	 %18819
%18827:	getelementptr	 s2 %18826
%18828:	load	 %18827
%18829:	icmp	 %18825 %18828
%18830:	br	 %18829 if.end if.then

BASIC BLOCK if.then
%18831:	br	 return

BASIC BLOCK if.end
%18832:	br	 for.inc

BASIC BLOCK for.inc
%18833:	add	 %18819 XXX
%18834:	br	 for.cond

BASIC BLOCK for.end
%18835:	br	 return

BASIC BLOCK return
%18836:	phi	 XXX XXX
%18837:	ret	 %18836

FUNCTION reset

BASIC BLOCK entry
%18838:	load	 reset.initialized
%18839:	icmp	 %18838 XXX
%18840:	br	 %18839 if.then if.end6

BASIC BLOCK if.then
%18841:	store	 XXX reset.initialized
%18842:	call	 getpagesize
%18843:	icmp	 XXX %18842
%18844:	br	 %18843 cond.false cond.true

BASIC BLOCK cond.true
%18845:	br	 cond.end

BASIC BLOCK cond.false
%18846:	call	 getpagesize
%18847:	br	 cond.end

BASIC BLOCK cond.end
%18848:	phi	 XXX %18846
%18849:	sext	 %18848
%18850:	store	 %18849 bufsalloc
%18851:	load	 bufsalloc
%18852:	mul	 XXX %18851
%18853:	store	 %18852 bufalloc
%18854:	load	 bufalloc
%18855:	add	 %18854 XXX
%18856:	call	 %18855 XXX
%18857:	store	 %18856 buffer
%18858:	load	 buffer
%18859:	icmp	 %18858 XXX
%18860:	br	 %18859 if.then4 if.end

BASIC BLOCK if.then4
%18861:	call	 XXX gettext
%18862:	call	 %18861 XXX fatal
%18863:	br	 if.end

BASIC BLOCK if.end
%18864:	load	 buffer
%18865:	store	 %18864 bufbeg
%18866:	load	 buffer
%18867:	store	 %18866 buflim
%18868:	br	 if.end6

BASIC BLOCK if.end6
%18869:	store	 fd bufdesc
%18870:	call	 fd bufstat fstat
%18871:	icmp	 %18870 XXX
%18872:	br	 %18871 lor.lhs.false if.then12

BASIC BLOCK lor.lhs.false
%18873:	load	 XXX
%18874:	and	 %18873 XXX
%18875:	icmp	 %18874 XXX
%18876:	br	 %18875 if.then12 if.else

BASIC BLOCK if.then12
%18877:	store	 XXX bufmapped
%18878:	br	 if.end14

BASIC BLOCK if.else
%18879:	store	 XXX bufmapped
%18880:	call	 fd XXX XXX lseek
%18881:	store	 %18880 bufoffset
%18882:	br	 if.end14

BASIC BLOCK if.end14
%18883:	ret	

FUNCTION fillbuf

BASIC BLOCK entry
%18884:	load	 fillbuf.pagesize
%18885:	icmp	 %18884 XXX
%18886:	br	 %18885 if.end land.lhs.true

BASIC BLOCK land.lhs.true
%18887:	call	 getpagesize
%18888:	store	 %18887 fillbuf.pagesize
%18889:	icmp	 %18887 XXX
%18890:	br	 %18889 if.end if.then

BASIC BLOCK if.then
%18891:	call	 abort
%18892:	unreachable	

BASIC BLOCK if.end
%18893:	load	 bufsalloc
%18894:	icmp	 save %18893
%18895:	br	 %18894 if.else if.then3

BASIC BLOCK if.then3
%18896:	br	 while.cond

BASIC BLOCK while.cond
%18897:	load	 bufsalloc
%18898:	icmp	 save %18897
%18899:	br	 %18898 while.end while.body

BASIC BLOCK while.body
%18900:	load	 bufsalloc
%18901:	mul	 %18900 XXX
%18902:	store	 %18901 bufsalloc
%18903:	br	 while.cond

BASIC BLOCK while.end
%18904:	load	 bufsalloc
%18905:	mul	 XXX %18904
%18906:	store	 %18905 bufalloc
%18907:	load	 bufalloc
%18908:	add	 %18907 XXX
%18909:	call	 %18908 XXX
%18910:	icmp	 %18909 XXX
%18911:	br	 %18910 if.then7 if.end9

BASIC BLOCK if.then7
%18912:	call	 XXX gettext
%18913:	call	 %18912 XXX fatal
%18914:	br	 if.end9

BASIC BLOCK if.end9
%18915:	br	 if.end10

BASIC BLOCK if.else
%18916:	load	 buffer
%18917:	br	 if.end10

BASIC BLOCK if.end10
%18918:	phi	 %18909 %18916
%18919:	load	 buflim
%18920:	sub	 XXX save
%18921:	getelementptr	 %18919 %18920
%18922:	load	 bufsalloc
%18923:	getelementptr	 %18918 %18922
%18924:	sub	 XXX save
%18925:	getelementptr	 %18923 %18924
%18926:	store	 %18925 bufbeg
%18927:	br	 while.cond14

BASIC BLOCK while.cond14
%18928:	phi	 %18921 %18934
%18929:	phi	 %18925 %18936
%18930:	phi	 save %18931
%18931:	add	 %18930 XXX
%18932:	icmp	 %18930 XXX
%18933:	br	 %18932 while.end18 while.body16

BASIC BLOCK while.body16
%18934:	getelementptr	 %18928 XXX
%18935:	load	 %18928
%18936:	getelementptr	 %18929 XXX
%18937:	store	 %18935 %18929
%18938:	br	 while.cond14

BASIC BLOCK while.end18
%18939:	store	 %18918 buffer
%18940:	load	 bufmapped
%18941:	icmp	 %18940 XXX
%18942:	br	 %18941 if.else39 land.lhs.true20

BASIC BLOCK land.lhs.true20
%18943:	load	 bufoffset
%18944:	load	 fillbuf.pagesize
%18945:	sext	 %18944
%18946:	srem	 %18943 %18945
%18947:	icmp	 %18946 XXX
%18948:	br	 %18947 if.else39 land.lhs.true23

BASIC BLOCK land.lhs.true23
%18949:	load	 XXX
%18950:	load	 bufoffset
%18951:	sub	 %18949 %18950
%18952:	load	 bufalloc
%18953:	load	 bufsalloc
%18954:	sub	 %18952 %18953
%18955:	icmp	 %18951 %18954
%18956:	br	 %18955 if.else39 if.then27

BASIC BLOCK if.then27
%18957:	load	 buffer
%18958:	load	 bufsalloc
%18959:	getelementptr	 %18957 %18958
%18960:	load	 bufalloc
%18961:	load	 bufsalloc
%18962:	sub	 %18960 %18961
%18963:	load	 bufdesc
%18964:	load	 bufoffset
%18965:	call	 %18959 %18962 XXX XXX %18963 %18964 mmap
%18966:	icmp	 %18965 XXX
%18967:	br	 %18966 if.end34 if.then33

BASIC BLOCK if.then33
%18968:	br	 tryread

BASIC BLOCK if.end34
%18969:	load	 bufalloc
%18970:	load	 bufsalloc
%18971:	sub	 %18969 %18970
%18972:	trunc	 %18971
%18973:	sext	 %18972
%18974:	load	 bufoffset
%18975:	add	 %18974 %18973
%18976:	store	 %18975 bufoffset
%18977:	br	 if.end48

BASIC BLOCK if.else39
%18978:	br	 tryread

BASIC BLOCK tryread
%18979:	load	 bufmapped
%18980:	icmp	 %18979 XXX
%18981:	br	 %18980 if.end43 if.then41

BASIC BLOCK if.then41
%18982:	store	 XXX bufmapped
%18983:	load	 bufdesc
%18984:	load	 bufoffset
%18985:	call	 %18983 %18984 XXX lseek
%18986:	br	 if.end43

BASIC BLOCK if.end43
%18987:	load	 bufdesc
%18988:	load	 buffer
%18989:	load	 bufsalloc
%18990:	getelementptr	 %18988 %18989
%18991:	load	 bufalloc
%18992:	load	 bufsalloc
%18993:	sub	 %18991 %18992
%18994:	call	 %18987 %18990 %18993 read
%18995:	trunc	 %18994
%18996:	br	 if.end48

BASIC BLOCK if.end48
%18997:	phi	 %18995 %18972
%18998:	icmp	 %18997 XXX
%18999:	br	 %18998 if.else54 if.then51

BASIC BLOCK if.then51
%19000:	load	 buffer
%19001:	load	 bufsalloc
%19002:	getelementptr	 %19000 %19001
%19003:	sext	 %18997
%19004:	getelementptr	 %19002 %19003
%19005:	store	 %19004 buflim
%19006:	br	 if.end56

BASIC BLOCK if.else54
%19007:	load	 buffer
%19008:	load	 bufsalloc
%19009:	getelementptr	 %19007 %19008
%19010:	store	 %19009 buflim
%19011:	br	 if.end56

BASIC BLOCK if.end56
%19012:	ret	 %18997

FUNCTION grepbuf

BASIC BLOCK entry
%19013:	alloca	 XXX
%19014:	alloca	 XXX
%19015:	br	 while.cond

BASIC BLOCK while.cond
%19016:	phi	 XXX %19056
%19017:	phi	 beg %19057
%19018:	load	 execute
%19019:	ptrtoint	 lim
%19020:	ptrtoint	 %19017
%19021:	sub	 %19019 %19020
%19022:	call	 %19017 %19021 %19014 %19018
%19023:	icmp	 %19022 XXX
%19024:	br	 %19023 while.end while.body

BASIC BLOCK while.body
%19025:	icmp	 %19022 lim
%19026:	br	 %19025 if.end land.lhs.true

BASIC BLOCK land.lhs.true
%19027:	icmp	 %19022 beg
%19028:	br	 %19027 lor.lhs.false land.lhs.true3

BASIC BLOCK land.lhs.true3
%19029:	getelementptr	 %19022 XXX
%19030:	load	 %19029
%19031:	sext	 %19030
%19032:	icmp	 %19031 XXX
%19033:	br	 %19032 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%19034:	icmp	 %19022 beg
%19035:	br	 %19034 if.end if.then

BASIC BLOCK if.then
%19036:	br	 while.end

BASIC BLOCK if.end
%19037:	load	 out_invert
%19038:	icmp	 %19037 XXX
%19039:	br	 %19038 if.then8 if.else

BASIC BLOCK if.then8
%19040:	load	 %19014
%19041:	call	 %19022 %19040 XXX prtext
%19042:	add	 %19016 XXX
%19043:	load	 done_on_match
%19044:	icmp	 %19043 XXX
%19045:	br	 %19044 if.end11 if.then10

BASIC BLOCK if.then10
%19046:	br	 return

BASIC BLOCK if.end11
%19047:	br	 if.end17

BASIC BLOCK if.else
%19048:	icmp	 %19017 %19022
%19049:	br	 %19048 if.end16 if.then14

BASIC BLOCK if.then14
%19050:	call	 %19017 %19022 %19013 prtext
%19051:	load	 %19013
%19052:	add	 %19016 %19051
%19053:	br	 if.end16

BASIC BLOCK if.end16
%19054:	phi	 %19052 %19016
%19055:	br	 if.end17

BASIC BLOCK if.end17
%19056:	phi	 %19054 %19042
%19057:	load	 %19014
%19058:	br	 while.cond

BASIC BLOCK while.end
%19059:	load	 out_invert
%19060:	icmp	 %19059 XXX
%19061:	br	 %19060 if.end24 land.lhs.true19

BASIC BLOCK land.lhs.true19
%19062:	icmp	 %19017 lim
%19063:	br	 %19062 if.end24 if.then22

BASIC BLOCK if.then22
%19064:	call	 %19017 lim %19013 prtext
%19065:	load	 %19013
%19066:	add	 %19016 %19065
%19067:	br	 if.end24

BASIC BLOCK if.end24
%19068:	phi	 %19066 %19016 %19016
%19069:	br	 return

BASIC BLOCK return
%19070:	phi	 %19068 %19042
%19071:	ret	 %19070

FUNCTION prpending

BASIC BLOCK entry
%19072:	load	 lastout
%19073:	icmp	 %19072 XXX
%19074:	br	 %19073 if.then if.end

BASIC BLOCK if.then
%19075:	load	 bufbeg
%19076:	store	 %19075 lastout
%19077:	br	 if.end

BASIC BLOCK if.end
%19078:	br	 while.cond

BASIC BLOCK while.cond
%19079:	load	 pending
%19080:	icmp	 %19079 XXX
%19081:	br	 %19080 land.end land.rhs

BASIC BLOCK land.rhs
%19082:	load	 lastout
%19083:	icmp	 %19082 lim
%19084:	br	 land.end

BASIC BLOCK land.end
%19085:	phi	 XXX %19083
%19086:	br	 %19085 while.end while.body

BASIC BLOCK while.body
%19087:	load	 pending
%19088:	add	 %19087 XXX
%19089:	store	 %19088 pending
%19090:	load	 lastout
%19091:	load	 lastout
%19092:	ptrtoint	 lim
%19093:	ptrtoint	 %19091
%19094:	sub	 %19092 %19093
%19095:	call	 %19090 XXX %19094 memchr
%19096:	icmp	 %19095 XXX
%19097:	br	 %19096 if.else if.then3

BASIC BLOCK if.then3
%19098:	getelementptr	 %19095 XXX
%19099:	br	 if.end4

BASIC BLOCK if.else
%19100:	br	 if.end4

BASIC BLOCK if.end4
%19101:	phi	 %19098 lim
%19102:	load	 lastout
%19103:	call	 %19102 %19101 XXX prline
%19104:	br	 while.cond

BASIC BLOCK while.end
%19105:	ret	

FUNCTION nlscan

BASIC BLOCK entry
%19106:	load	 lastnl
%19107:	br	 for.cond

BASIC BLOCK for.cond
%19108:	phi	 %19106 %19120
%19109:	icmp	 %19108 lim
%19110:	br	 %19109 for.end for.body

BASIC BLOCK for.body
%19111:	load	 %19108
%19112:	sext	 %19111
%19113:	icmp	 %19112 XXX
%19114:	br	 %19113 if.end if.then

BASIC BLOCK if.then
%19115:	load	 totalnl
%19116:	add	 %19115 XXX
%19117:	store	 %19116 totalnl
%19118:	br	 if.end

BASIC BLOCK if.end
%19119:	br	 for.inc

BASIC BLOCK for.inc
%19120:	getelementptr	 %19108 XXX
%19121:	br	 for.cond

BASIC BLOCK for.end
%19122:	store	 %19108 lastnl
%19123:	ret	

FUNCTION prline

BASIC BLOCK entry
%19124:	load	 out_file
%19125:	icmp	 %19124 XXX
%19126:	br	 %19125 if.end if.then

BASIC BLOCK if.then
%19127:	load	 filename
%19128:	call	 XXX %19127 sep printf
%19129:	br	 if.end

BASIC BLOCK if.end
%19130:	load	 out_line
%19131:	icmp	 %19130 XXX
%19132:	br	 %19131 if.end4 if.then2

BASIC BLOCK if.then2
%19133:	call	 beg nlscan
%19134:	load	 totalnl
%19135:	add	 %19134 XXX
%19136:	store	 %19135 totalnl
%19137:	trunc	 %19135
%19138:	call	 XXX %19137 sep printf
%19139:	store	 lim lastnl
%19140:	br	 if.end4

BASIC BLOCK if.end4
%19141:	load	 out_byte
%19142:	icmp	 %19141 XXX
%19143:	br	 %19142 if.end8 if.then6

BASIC BLOCK if.then6
%19144:	load	 totalcc
%19145:	load	 bufbeg
%19146:	ptrtoint	 beg
%19147:	ptrtoint	 %19145
%19148:	sub	 %19146 %19147
%19149:	add	 %19144 %19148
%19150:	call	 XXX %19149 sep printf
%19151:	br	 if.end8

BASIC BLOCK if.end8
%19152:	ptrtoint	 lim
%19153:	ptrtoint	 beg
%19154:	sub	 %19152 %19153
%19155:	load	 stdout
%19156:	call	 beg XXX %19154 %19155 fwrite
%19157:	load	 stdout
%19158:	call	 %19157 ferror
%19159:	icmp	 %19158 XXX
%19160:	br	 %19159 if.end18 if.then15

BASIC BLOCK if.then15
%19161:	call	 XXX gettext
%19162:	call	 __errno_location
%19163:	load	 %19162
%19164:	call	 %19161 %19163 error
%19165:	br	 if.end18

BASIC BLOCK if.end18
%19166:	store	 lim lastout
%19167:	ret	

FUNCTION prtext

BASIC BLOCK entry
%19168:	load	 out_quiet
%19169:	icmp	 %19168 XXX
%19170:	br	 %19169 land.lhs.true if.end

BASIC BLOCK land.lhs.true
%19171:	load	 pending
%19172:	icmp	 %19171 XXX
%19173:	br	 %19172 if.end if.then

BASIC BLOCK if.then
%19174:	call	 beg prpending
%19175:	br	 if.end

BASIC BLOCK if.end
%19176:	load	 out_quiet
%19177:	icmp	 %19176 XXX
%19178:	br	 %19177 if.then2 if.end24

BASIC BLOCK if.then2
%19179:	load	 lastout
%19180:	icmp	 %19179 XXX
%19181:	br	 %19180 cond.false cond.true

BASIC BLOCK cond.true
%19182:	load	 lastout
%19183:	br	 cond.end

BASIC BLOCK cond.false
%19184:	load	 bufbeg
%19185:	br	 cond.end

BASIC BLOCK cond.end
%19186:	phi	 %19182 %19184
%19187:	br	 for.cond

BASIC BLOCK for.cond
%19188:	phi	 beg %19209
%19189:	phi	 XXX %19211
%19190:	load	 out_before
%19191:	icmp	 %19189 %19190
%19192:	br	 %19191 for.end for.body

BASIC BLOCK for.body
%19193:	icmp	 %19188 %19186
%19194:	br	 %19193 if.end10 if.then6

BASIC BLOCK if.then6
%19195:	br	 do.body

BASIC BLOCK do.body
%19196:	phi	 %19188 %19197
%19197:	getelementptr	 %19196 XXX
%19198:	br	 do.cond

BASIC BLOCK do.cond
%19199:	icmp	 %19197 %19186
%19200:	br	 %19199 land.end land.rhs

BASIC BLOCK land.rhs
%19201:	getelementptr	 %19197 XXX
%19202:	load	 %19201
%19203:	sext	 %19202
%19204:	icmp	 %19203 XXX
%19205:	br	 land.end

BASIC BLOCK land.end
%19206:	phi	 XXX %19204
%19207:	br	 %19206 do.end do.body

BASIC BLOCK do.end
%19208:	br	 if.end10

BASIC BLOCK if.end10
%19209:	phi	 %19197 %19188
%19210:	br	 for.inc

BASIC BLOCK for.inc
%19211:	add	 %19189 XXX
%19212:	br	 for.cond

BASIC BLOCK for.end
%19213:	load	 out_before
%19214:	icmp	 %19213 XXX
%19215:	br	 %19214 lor.lhs.false land.lhs.true13

BASIC BLOCK lor.lhs.false
%19216:	load	 out_after
%19217:	icmp	 %19216 XXX
%19218:	br	 %19217 if.end19 land.lhs.true13

BASIC BLOCK land.lhs.true13
%19219:	load	 prtext.used
%19220:	icmp	 %19219 XXX
%19221:	br	 %19220 if.end19 land.lhs.true15

BASIC BLOCK land.lhs.true15
%19222:	load	 lastout
%19223:	icmp	 %19188 %19222
%19224:	br	 %19223 if.end19 if.then18

BASIC BLOCK if.then18
%19225:	call	 XXX puts
%19226:	br	 if.end19

BASIC BLOCK if.end19
%19227:	br	 while.cond

BASIC BLOCK while.cond
%19228:	phi	 %19188 %19237
%19229:	icmp	 %19228 beg
%19230:	br	 %19229 while.end while.body

BASIC BLOCK while.body
%19231:	ptrtoint	 beg
%19232:	ptrtoint	 %19228
%19233:	sub	 %19231 %19232
%19234:	call	 %19228 XXX %19233 memchr
%19235:	getelementptr	 %19234 XXX
%19236:	call	 %19228 %19235 XXX prline
%19237:	getelementptr	 %19234 XXX
%19238:	br	 while.cond

BASIC BLOCK while.end
%19239:	br	 if.end24

BASIC BLOCK if.end24
%19240:	phi	 beg %19228
%19241:	icmp	 nlinesp XXX
%19242:	br	 %19241 if.else46 if.then26

BASIC BLOCK if.then26
%19243:	br	 for.cond27

BASIC BLOCK for.cond27
%19244:	phi	 %19240 %19257
%19245:	phi	 XXX %19264
%19246:	icmp	 %19244 lim
%19247:	br	 %19246 for.end45 for.body30

BASIC BLOCK for.body30
%19248:	ptrtoint	 lim
%19249:	ptrtoint	 %19244
%19250:	sub	 %19248 %19249
%19251:	call	 %19244 XXX %19250 memchr
%19252:	icmp	 %19251 XXX
%19253:	br	 %19252 if.else if.then37

BASIC BLOCK if.then37
%19254:	getelementptr	 %19251 XXX
%19255:	br	 if.end39

BASIC BLOCK if.else
%19256:	br	 if.end39

BASIC BLOCK if.end39
%19257:	phi	 %19254 lim
%19258:	load	 out_quiet
%19259:	icmp	 %19258 XXX
%19260:	br	 %19259 if.then41 if.end42

BASIC BLOCK if.then41
%19261:	call	 %19244 %19257 XXX prline
%19262:	br	 if.end42

BASIC BLOCK if.end42
%19263:	br	 for.inc43

BASIC BLOCK for.inc43
%19264:	add	 %19245 XXX
%19265:	br	 for.cond27

BASIC BLOCK for.end45
%19266:	store	 %19245 nlinesp
%19267:	br	 if.end50

BASIC BLOCK if.else46
%19268:	load	 out_quiet
%19269:	icmp	 %19268 XXX
%19270:	br	 %19269 if.then48 if.end49

BASIC BLOCK if.then48
%19271:	call	 beg lim XXX prline
%19272:	br	 if.end49

BASIC BLOCK if.end49
%19273:	br	 if.end50

BASIC BLOCK if.end50
%19274:	load	 out_after
%19275:	store	 %19274 pending
%19276:	store	 XXX prtext.used
%19277:	ret	
