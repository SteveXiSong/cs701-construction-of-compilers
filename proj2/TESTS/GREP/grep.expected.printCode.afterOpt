
FUNCTION gnu_dev_major

BASIC BLOCK entry
%1:	lshr	 __dev XXX
%2:	and	 %1 XXX
%3:	lshr	 __dev XXX
%4:	trunc	 %3
%5:	and	 %4 XXX
%6:	zext	 %5
%7:	or	 %2 %6
%8:	trunc	 %7
%9:	ret	 %8

FUNCTION gnu_dev_minor

BASIC BLOCK entry
%10:	and	 __dev XXX
%11:	lshr	 __dev XXX
%12:	trunc	 %11
%13:	and	 %12 XXX
%14:	zext	 %13
%15:	or	 %10 %14
%16:	trunc	 %15
%17:	ret	 %16

FUNCTION gnu_dev_makedev

BASIC BLOCK entry
%18:	and	 __minor XXX
%19:	and	 __major XXX
%20:	shl	 %19 XXX
%21:	or	 %18 %20
%22:	zext	 %21
%23:	and	 __minor XXX
%24:	zext	 %23
%25:	shl	 %24 XXX
%26:	or	 %22 %25
%27:	and	 __major XXX
%28:	zext	 %27
%29:	shl	 %28 XXX
%30:	or	 %26 %29
%31:	ret	 %30

FUNCTION stat

BASIC BLOCK entry
%32:	call	 XXX __path __statbuf __xstat
%33:	ret	 %32

FUNCTION lstat

BASIC BLOCK entry
%34:	call	 XXX __path __statbuf __lxstat
%35:	ret	 %34

FUNCTION fstat

BASIC BLOCK entry
%36:	call	 XXX __fd __statbuf __fxstat
%37:	ret	 %36

FUNCTION mknod

BASIC BLOCK entry
%38:	alloca	 XXX
%39:	store	 __dev %38
%40:	call	 XXX __path __mode %38 __xmknod
%41:	ret	 %40

FUNCTION fatal

BASIC BLOCK entry
%42:	call	 mesg errnum error
%43:	call	 XXX exit
%44:	unreachable	

BASIC BLOCK return
%45:	ret	

FUNCTION error

BASIC BLOCK entry
%46:	icmp	 errnum XXX
%47:	br	 %46 if.else if.then

BASIC BLOCK if.then
%48:	load	 stdout
%49:	load	 prog
%50:	call	 errnum strerror
%51:	call	 %48 XXX %49 mesg %50 fprintf
%52:	br	 if.end

BASIC BLOCK if.else
%53:	load	 stdout
%54:	load	 prog
%55:	call	 %53 XXX %54 mesg fprintf
%56:	br	 if.end

BASIC BLOCK if.end
%57:	store	 XXX errseen
%58:	ret	

FUNCTION xmalloc

BASIC BLOCK entry
%59:	call	 size malloc
%60:	icmp	 size XXX
%61:	br	 %60 if.end land.lhs.true

BASIC BLOCK land.lhs.true
%62:	icmp	 %59 XXX
%63:	br	 %62 if.then if.end

BASIC BLOCK if.then
%64:	call	 XXX gettext
%65:	call	 %64 XXX fatal
%66:	br	 if.end

BASIC BLOCK if.end
%67:	ret	 %59

FUNCTION xrealloc

BASIC BLOCK entry
%68:	icmp	 ptr XXX
%69:	br	 %68 if.else if.then

BASIC BLOCK if.then
%70:	call	 ptr size realloc
%71:	br	 if.end

BASIC BLOCK if.else
%72:	call	 size malloc
%73:	br	 if.end

BASIC BLOCK if.end
%74:	phi	 %70 %72
%75:	icmp	 size XXX
%76:	br	 %75 if.end6 land.lhs.true

BASIC BLOCK land.lhs.true
%77:	icmp	 %74 XXX
%78:	br	 %77 if.then4 if.end6

BASIC BLOCK if.then4
%79:	call	 XXX gettext
%80:	call	 %79 XXX fatal
%81:	br	 if.end6

BASIC BLOCK if.end6
%82:	ret	 %74

FUNCTION main

BASIC BLOCK entry
%83:	getelementptr	 argv XXX
%84:	store	 XXX %83
%85:	getelementptr	 argv XXX
%86:	load	 %85
%87:	store	 %86 prog
%88:	load	 prog
%89:	icmp	 %88 XXX
%90:	br	 %89 if.end land.lhs.true

BASIC BLOCK land.lhs.true
%91:	load	 prog
%92:	call	 %91 XXX strrchr
%93:	icmp	 %92 XXX
%94:	br	 %93 if.end if.then

BASIC BLOCK if.then
%95:	load	 prog
%96:	call	 %95 XXX strrchr
%97:	getelementptr	 %96 XXX
%98:	store	 %97 prog
%99:	br	 if.end

BASIC BLOCK if.end
%100:	store	 XXX matcher
%101:	call	 XXX XXX setlocale
%102:	call	 XXX XXX bindtextdomain
%103:	call	 XXX textdomain
%104:	br	 while.cond

BASIC BLOCK while.cond
%105:	phi	 XXX %321
%106:	phi	 XXX %322
%107:	phi	 XXX %323
%108:	phi	 XXX %324
%109:	phi	 XXX %325
%110:	phi	 XXX %326
%111:	phi	 XXX %327
%112:	phi	 XXX %328
%113:	call	 argc argv XXX XXX XXX getopt_long
%114:	icmp	 %113 XXX
%115:	br	 %114 while.end136 while.body

BASIC BLOCK while.body
%116:	switch	 %113 sw.default XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb11 XXX sw.bb20 XXX sw.bb29 XXX sw.bb30 XXX sw.bb38 XXX sw.bb46 XXX sw.bb54 XXX sw.bb55 XXX sw.bb56 XXX sw.bb61 XXX sw.bb62 XXX sw.bb63 XXX sw.bb74 XXX sw.bb125 XXX sw.bb126 XXX sw.bb126 XXX sw.bb127 XXX sw.bb128 XXX sw.bb129 XXX sw.bb130 XXX sw.bb131 XXX sw.bb132 XXX sw.bb133 XXX sw.bb134 XXX sw.bb135

BASIC BLOCK sw.bb
%117:	load	 out_before
%118:	mul	 XXX %117
%119:	add	 %118 %113
%120:	sub	 %119 XXX
%121:	store	 %120 out_before
%122:	load	 out_after
%123:	mul	 XXX %122
%124:	add	 %123 %113
%125:	sub	 %124 XXX
%126:	store	 %125 out_after
%127:	br	 sw.epilog

BASIC BLOCK sw.bb11
%128:	load	 optarg
%129:	icmp	 %128 XXX
%130:	br	 %129 if.end19 if.then13

BASIC BLOCK if.then13
%131:	load	 optarg
%132:	call	 %131 out_after ck_atoi
%133:	icmp	 %132 XXX
%134:	br	 %133 if.end18 if.then16

BASIC BLOCK if.then16
%135:	call	 XXX gettext
%136:	call	 %135 XXX fatal
%137:	br	 if.end18

BASIC BLOCK if.end18
%138:	br	 if.end19

BASIC BLOCK if.end19
%139:	br	 sw.epilog

BASIC BLOCK sw.bb20
%140:	load	 optarg
%141:	icmp	 %140 XXX
%142:	br	 %141 if.end28 if.then22

BASIC BLOCK if.then22
%143:	load	 optarg
%144:	call	 %143 out_before ck_atoi
%145:	icmp	 %144 XXX
%146:	br	 %145 if.end27 if.then25

BASIC BLOCK if.then25
%147:	call	 XXX gettext
%148:	call	 %147 XXX fatal
%149:	br	 if.end27

BASIC BLOCK if.end27
%150:	br	 if.end28

BASIC BLOCK if.end28
%151:	br	 sw.epilog

BASIC BLOCK sw.bb29
%152:	store	 XXX out_after
%153:	store	 XXX out_before
%154:	br	 sw.epilog

BASIC BLOCK sw.bb30
%155:	load	 matcher
%156:	icmp	 %155 XXX
%157:	br	 %156 if.end37 land.lhs.true32

BASIC BLOCK land.lhs.true32
%158:	load	 matcher
%159:	call	 %158 XXX strcmp
%160:	icmp	 %159 XXX
%161:	br	 %160 if.end37 if.then35

BASIC BLOCK if.then35
%162:	call	 XXX gettext
%163:	call	 %162 XXX fatal
%164:	br	 if.end37

BASIC BLOCK if.end37
%165:	store	 XXX matcher
%166:	br	 sw.epilog

BASIC BLOCK sw.bb38
%167:	load	 matcher
%168:	icmp	 %167 XXX
%169:	br	 %168 if.end45 land.lhs.true40

BASIC BLOCK land.lhs.true40
%170:	load	 matcher
%171:	call	 %170 XXX strcmp
%172:	icmp	 %171 XXX
%173:	br	 %172 if.end45 if.then43

BASIC BLOCK if.then43
%174:	call	 XXX gettext
%175:	call	 %174 XXX fatal
%176:	br	 if.end45

BASIC BLOCK if.end45
%177:	store	 XXX matcher
%178:	br	 sw.epilog

BASIC BLOCK sw.bb46
%179:	load	 matcher
%180:	icmp	 %179 XXX
%181:	br	 %180 if.end53 land.lhs.true48

BASIC BLOCK land.lhs.true48
%182:	load	 matcher
%183:	call	 %182 XXX strcmp
%184:	icmp	 %183 XXX
%185:	br	 %184 if.end53 if.then51

BASIC BLOCK if.then51
%186:	call	 XXX gettext
%187:	call	 %186 XXX fatal
%188:	br	 if.end53

BASIC BLOCK if.end53
%189:	store	 XXX matcher
%190:	br	 sw.epilog

BASIC BLOCK sw.bb54
%191:	br	 sw.epilog

BASIC BLOCK sw.bb55
%192:	store	 XXX show_version
%193:	br	 sw.epilog

BASIC BLOCK sw.bb56
%194:	load	 matcher
%195:	icmp	 %194 XXX
%196:	br	 %195 if.end60 if.then58

BASIC BLOCK if.then58
%197:	call	 XXX gettext
%198:	call	 %197 XXX fatal
%199:	br	 if.end60

BASIC BLOCK if.end60
%200:	load	 optarg
%201:	store	 %200 matcher
%202:	br	 sw.epilog

BASIC BLOCK sw.bb61
%203:	store	 XXX out_byte
%204:	br	 sw.epilog

BASIC BLOCK sw.bb62
%205:	store	 XXX out_quiet
%206:	br	 sw.epilog

BASIC BLOCK sw.bb63
%207:	load	 optarg
%208:	call	 %207 strlen
%209:	trunc	 %208
%210:	sext	 %209
%211:	add	 %111 %210
%212:	add	 %211 XXX
%213:	call	 %112 %212 xrealloc
%214:	getelementptr	 %213 %111
%215:	load	 optarg
%216:	call	 %214 %215 strcpy
%217:	sext	 %209
%218:	add	 %111 %217
%219:	add	 %218 XXX
%220:	getelementptr	 %213 %218
%221:	store	 XXX %220
%222:	br	 sw.epilog

BASIC BLOCK sw.bb74
%223:	load	 optarg
%224:	call	 %223 XXX strcmp
%225:	icmp	 %224 XXX
%226:	br	 %225 cond.false cond.true

BASIC BLOCK cond.true
%227:	load	 optarg
%228:	call	 %227 XXX fopen
%229:	br	 cond.end

BASIC BLOCK cond.false
%230:	load	 stdin
%231:	br	 cond.end

BASIC BLOCK cond.end
%232:	phi	 %228 %230
%233:	icmp	 %232 XXX
%234:	br	 %233 if.then80 if.end82

BASIC BLOCK if.then80
%235:	load	 optarg
%236:	call	 __errno_location
%237:	load	 %236
%238:	call	 %235 %237 fatal
%239:	br	 if.end82

BASIC BLOCK if.end82
%240:	br	 for.cond

BASIC BLOCK for.cond
%241:	phi	 XXX %246
%242:	add	 %111 XXX
%243:	icmp	 %241 %242
%244:	br	 %243 for.end for.body

BASIC BLOCK for.body
%245:	br	 for.inc

BASIC BLOCK for.inc
%246:	mul	 %241 XXX
%247:	br	 for.cond

BASIC BLOCK for.end
%248:	call	 %112 %241 xrealloc
%249:	br	 while.cond88

BASIC BLOCK while.cond88
%250:	phi	 %241 %275
%251:	phi	 %110 %264
%252:	phi	 %111 %268
%253:	phi	 %248 %276
%254:	call	 %232 feof
%255:	icmp	 %254 XXX
%256:	br	 %255 land.rhs land.end

BASIC BLOCK land.rhs
%257:	getelementptr	 %253 %252
%258:	sub	 %250 XXX
%259:	sub	 %258 %252
%260:	call	 %257 XXX %259 %232 fread
%261:	trunc	 %260
%262:	icmp	 %261 XXX
%263:	br	 land.end

BASIC BLOCK land.end
%264:	phi	 %251 %261
%265:	phi	 XXX %262
%266:	br	 %265 while.end while.body98

BASIC BLOCK while.body98
%267:	sext	 %264
%268:	add	 %252 %267
%269:	sub	 %250 XXX
%270:	icmp	 %268 %269
%271:	br	 %270 if.end107 if.then104

BASIC BLOCK if.then104
%272:	mul	 %250 XXX
%273:	call	 %253 %272 xrealloc
%274:	br	 if.end107

BASIC BLOCK if.end107
%275:	phi	 %272 %250
%276:	phi	 %273 %253
%277:	br	 while.cond88

BASIC BLOCK while.end
%278:	load	 stdin
%279:	icmp	 %232 %278
%280:	br	 %279 if.end112 if.then110

BASIC BLOCK if.then110
%281:	call	 %232 fclose
%282:	br	 if.end112

BASIC BLOCK if.end112
%283:	icmp	 %111 %252
%284:	br	 %283 if.end124 land.lhs.true115

BASIC BLOCK land.lhs.true115
%285:	sub	 %252 XXX
%286:	getelementptr	 %253 %285
%287:	load	 %286
%288:	sext	 %287
%289:	icmp	 %288 XXX
%290:	br	 %289 if.end124 if.then121

BASIC BLOCK if.then121
%291:	add	 %252 XXX
%292:	getelementptr	 %253 %252
%293:	store	 XXX %292
%294:	br	 if.end124

BASIC BLOCK if.end124
%295:	phi	 %291 %252 %252
%296:	br	 sw.epilog

BASIC BLOCK sw.bb125
%297:	br	 sw.epilog

BASIC BLOCK sw.bb126
%298:	store	 XXX match_icase
%299:	br	 sw.epilog

BASIC BLOCK sw.bb127
%300:	store	 XXX out_quiet
%301:	store	 XXX done_on_match
%302:	br	 sw.epilog

BASIC BLOCK sw.bb128
%303:	store	 XXX out_quiet
%304:	store	 XXX done_on_match
%305:	br	 sw.epilog

BASIC BLOCK sw.bb129
%306:	store	 XXX out_line
%307:	br	 sw.epilog

BASIC BLOCK sw.bb130
%308:	store	 XXX done_on_match
%309:	store	 XXX out_quiet
%310:	br	 sw.epilog

BASIC BLOCK sw.bb131
%311:	br	 sw.epilog

BASIC BLOCK sw.bb132
%312:	store	 XXX out_invert
%313:	br	 sw.epilog

BASIC BLOCK sw.bb133
%314:	store	 XXX match_words
%315:	br	 sw.epilog

BASIC BLOCK sw.bb134
%316:	store	 XXX match_lines
%317:	br	 sw.epilog

BASIC BLOCK sw.bb135
%318:	br	 sw.epilog

BASIC BLOCK sw.default
%319:	call	 XXX usage
%320:	br	 sw.epilog

BASIC BLOCK sw.epilog
%321:	phi	 %105 %105 %105 %105 %105 %105 %105 %105 %105 %105 %105 %105 %105 %105 %105 %105 %105 %105 XXX %105 %105 %105 %105 %105 %105 %105
%322:	phi	 %106 %106 %106 %106 %106 XXX %106 %106 %106 %106 %106 %106 %106 %106 %106 %106 %106 %106 %106 %106 %106 %106 %106 %106 %106 %106
%323:	phi	 %107 %107 %107 %107 %107 %107 %107 %107 XXX XXX %107 %107 %107 %107 %107 %107 %107 %107 %107 %107 %107 %107 %107 %107 %107 %107
%324:	phi	 %108 %108 %108 %108 %108 %108 %108 %108 %108 %108 %108 XXX %108 %108 %108 %108 %108 %108 %108 %108 %108 %108 %108 %108 %108 %108
%325:	phi	 %109 %109 %109 %109 %109 %109 %109 %109 %109 %109 %109 %109 %109 %109 XXX %109 %109 %109 %109 %109 %109 %109 %109 %109 %109 %109
%326:	phi	 %110 %110 %110 %110 %110 %110 %110 %110 %110 %110 %110 %110 %264 %209 %110 %110 %110 %110 %110 %110 %110 %110 %110 %110 %110 %110
%327:	phi	 %111 %111 %111 %111 %111 %111 %111 %111 %111 %111 %111 %111 %295 %219 %111 %111 %111 %111 %111 %111 %111 %111 %111 %111 %111 %111
%328:	phi	 %112 %112 %112 %112 %112 %112 %112 %112 %112 %112 %112 %112 %253 %213 %112 %112 %112 %112 %112 %112 %112 %112 %112 %112 %112 %112
%329:	br	 while.cond

BASIC BLOCK while.end136
%330:	load	 show_version
%331:	icmp	 %330 XXX
%332:	br	 %331 if.end147 if.then138

BASIC BLOCK if.then138
%333:	call	 XXX gettext
%334:	call	 %333 XXX printf
%335:	call	 XXX printf
%336:	call	 XXX gettext
%337:	call	 %336 printf
%338:	call	 XXX gettext
%339:	call	 %338 printf
%340:	call	 XXX printf
%341:	call	 XXX exit
%342:	unreachable	

BASIC BLOCK if.end147
%343:	load	 show_help
%344:	icmp	 %343 XXX
%345:	br	 %344 if.end150 if.then149

BASIC BLOCK if.then149
%346:	call	 XXX usage
%347:	br	 if.end150

BASIC BLOCK if.end150
%348:	icmp	 %112 XXX
%349:	br	 %348 if.else157 if.then152

BASIC BLOCK if.then152
%350:	icmp	 %111 XXX
%351:	br	 %350 if.else if.then155

BASIC BLOCK if.then155
%352:	load	 out_invert
%353:	xor	 %352 XXX
%354:	store	 %353 out_invert
%355:	br	 if.end156

BASIC BLOCK if.else
%356:	add	 %111 XXX
%357:	br	 if.end156

BASIC BLOCK if.end156
%358:	phi	 %111 %356
%359:	br	 if.end166

BASIC BLOCK if.else157
%360:	load	 optind
%361:	icmp	 %360 argc
%362:	br	 %361 if.else164 if.then160

BASIC BLOCK if.then160
%363:	load	 optind
%364:	add	 %363 XXX
%365:	store	 %364 optind
%366:	sext	 %363
%367:	getelementptr	 argv %366
%368:	load	 %367
%369:	call	 %368 strlen
%370:	br	 if.end165

BASIC BLOCK if.else164
%371:	call	 XXX usage
%372:	br	 if.end165

BASIC BLOCK if.end165
%373:	phi	 %369 %111
%374:	phi	 %368 %112
%375:	br	 if.end166

BASIC BLOCK if.end166
%376:	phi	 %358 %373
%377:	phi	 %112 %374
%378:	load	 matcher
%379:	icmp	 %378 XXX
%380:	br	 %379 if.then168 if.end169

BASIC BLOCK if.then168
%381:	load	 prog
%382:	store	 %381 matcher
%383:	br	 if.end169

BASIC BLOCK if.end169
%384:	load	 matcher
%385:	call	 %384 setmatcher
%386:	icmp	 %385 XXX
%387:	br	 %386 land.lhs.true172 if.end176

BASIC BLOCK land.lhs.true172
%388:	call	 XXX setmatcher
%389:	icmp	 %388 XXX
%390:	br	 %389 if.then175 if.end176

BASIC BLOCK if.then175
%391:	call	 abort
%392:	unreachable	

BASIC BLOCK if.end176
%393:	load	 compile
%394:	call	 %377 %376 %393
%395:	load	 optind
%396:	sub	 argc %395
%397:	icmp	 %396 XXX
%398:	br	 %397 lor.lhs.false land.lhs.true180

BASIC BLOCK land.lhs.true180
%399:	icmp	 %108 XXX
%400:	br	 %399 if.then183 lor.lhs.false

BASIC BLOCK lor.lhs.false
%401:	icmp	 %105 XXX
%402:	br	 %401 if.end184 if.then183

BASIC BLOCK if.then183
%403:	store	 XXX out_file
%404:	br	 if.end184

BASIC BLOCK if.end184
%405:	load	 optind
%406:	icmp	 %405 argc
%407:	br	 %406 if.else247 if.then187

BASIC BLOCK if.then187
%408:	br	 while.cond188

BASIC BLOCK while.cond188
%409:	phi	 XXX %479
%410:	load	 optind
%411:	icmp	 %410 argc
%412:	br	 %411 while.end246 while.body191

BASIC BLOCK while.body191
%413:	load	 optind
%414:	sext	 %413
%415:	getelementptr	 argv %414
%416:	load	 %415
%417:	call	 %416 XXX strcmp
%418:	icmp	 %417 XXX
%419:	br	 %418 if.else199 if.then197

BASIC BLOCK if.then197
%420:	call	 XXX gettext
%421:	store	 %420 filename
%422:	br	 if.end205

BASIC BLOCK if.else199
%423:	load	 optind
%424:	sext	 %423
%425:	getelementptr	 argv %424
%426:	load	 %425
%427:	store	 %426 filename
%428:	load	 optind
%429:	sext	 %428
%430:	getelementptr	 argv %429
%431:	load	 %430
%432:	call	 %431 XXX open
%433:	br	 if.end205

BASIC BLOCK if.end205
%434:	phi	 XXX %432
%435:	icmp	 %434 XXX
%436:	br	 %435 if.else215 if.then208

BASIC BLOCK if.then208
%437:	icmp	 %106 XXX
%438:	br	 %437 if.then210 if.end214

BASIC BLOCK if.then210
%439:	load	 optind
%440:	sext	 %439
%441:	getelementptr	 argv %440
%442:	load	 %441
%443:	call	 __errno_location
%444:	load	 %443
%445:	call	 %442 %444 error
%446:	br	 if.end214

BASIC BLOCK if.end214
%447:	br	 if.end244

BASIC BLOCK if.else215
%448:	call	 %434 grep
%449:	icmp	 %109 XXX
%450:	br	 %449 if.end224 if.then218

BASIC BLOCK if.then218
%451:	load	 out_file
%452:	icmp	 %451 XXX
%453:	br	 %452 if.end222 if.then220

BASIC BLOCK if.then220
%454:	load	 filename
%455:	call	 XXX %454 printf
%456:	br	 if.end222

BASIC BLOCK if.end222
%457:	call	 XXX %448 printf
%458:	br	 if.end224

BASIC BLOCK if.end224
%459:	icmp	 %448 XXX
%460:	br	 %459 if.else232 if.then226

BASIC BLOCK if.then226
%461:	icmp	 %107 XXX
%462:	br	 %461 if.end231 if.then229

BASIC BLOCK if.then229
%463:	load	 filename
%464:	call	 XXX %463 printf
%465:	br	 if.end231

BASIC BLOCK if.end231
%466:	br	 if.end238

BASIC BLOCK if.else232
%467:	icmp	 %107 XXX
%468:	br	 %467 if.end237 if.then235

BASIC BLOCK if.then235
%469:	load	 filename
%470:	call	 XXX %469 printf
%471:	br	 if.end237

BASIC BLOCK if.end237
%472:	br	 if.end238

BASIC BLOCK if.end238
%473:	phi	 XXX %409
%474:	icmp	 %434 XXX
%475:	br	 %474 if.end243 if.then241

BASIC BLOCK if.then241
%476:	call	 %434 close
%477:	br	 if.end243

BASIC BLOCK if.end243
%478:	br	 if.end244

BASIC BLOCK if.end244
%479:	phi	 %409 %473
%480:	load	 optind
%481:	add	 %480 XXX
%482:	store	 %481 optind
%483:	br	 while.cond188

BASIC BLOCK while.end246
%484:	br	 if.end270

BASIC BLOCK if.else247
%485:	call	 XXX gettext
%486:	store	 %485 filename
%487:	call	 XXX grep
%488:	icmp	 %109 XXX
%489:	br	 %488 if.end253 if.then251

BASIC BLOCK if.then251
%490:	call	 XXX %487 printf
%491:	br	 if.end253

BASIC BLOCK if.end253
%492:	icmp	 %487 XXX
%493:	br	 %492 if.else262 if.then255

BASIC BLOCK if.then255
%494:	icmp	 %107 XXX
%495:	br	 %494 if.end261 if.then258

BASIC BLOCK if.then258
%496:	call	 XXX gettext
%497:	call	 %496 printf
%498:	br	 if.end261

BASIC BLOCK if.end261
%499:	br	 if.end269

BASIC BLOCK if.else262
%500:	icmp	 %107 XXX
%501:	br	 %500 if.end268 if.then265

BASIC BLOCK if.then265
%502:	call	 XXX gettext
%503:	call	 %502 printf
%504:	br	 if.end268

BASIC BLOCK if.end268
%505:	br	 if.end269

BASIC BLOCK if.end269
%506:	phi	 XXX XXX
%507:	br	 if.end270

BASIC BLOCK if.end270
%508:	phi	 %409 %506
%509:	load	 stdout
%510:	call	 %509 fclose
%511:	icmp	 %510 XXX
%512:	br	 %511 if.end277 if.then274

BASIC BLOCK if.then274
%513:	call	 XXX gettext
%514:	call	 __errno_location
%515:	load	 %514
%516:	call	 %513 %515 error
%517:	br	 if.end277

BASIC BLOCK if.end277
%518:	load	 errseen
%519:	icmp	 %518 XXX
%520:	br	 %519 cond.false280 cond.true279

BASIC BLOCK cond.true279
%521:	br	 cond.end281

BASIC BLOCK cond.false280
%522:	br	 cond.end281

BASIC BLOCK cond.end281
%523:	phi	 XXX %508
%524:	call	 %523 exit
%525:	unreachable	

BASIC BLOCK return
%526:	ret	 XXX

FUNCTION ck_atoi

BASIC BLOCK entry
%527:	br	 for.cond

BASIC BLOCK for.cond
%528:	phi	 str %542
%529:	load	 %528
%530:	icmp	 %529 XXX
%531:	br	 %530 for.end for.body

BASIC BLOCK for.body
%532:	load	 %528
%533:	sext	 %532
%534:	icmp	 %533 XXX
%535:	br	 %534 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%536:	load	 %528
%537:	sext	 %536
%538:	icmp	 %537 XXX
%539:	br	 %538 if.end if.then

BASIC BLOCK if.then
%540:	br	 return

BASIC BLOCK if.end
%541:	br	 for.inc

BASIC BLOCK for.inc
%542:	getelementptr	 %528 XXX
%543:	br	 for.cond

BASIC BLOCK for.end
%544:	load	 optarg
%545:	call	 %544 atoi
%546:	store	 %545 out
%547:	br	 return

BASIC BLOCK return
%548:	phi	 XXX XXX
%549:	ret	 %548

FUNCTION usage

BASIC BLOCK entry
%550:	icmp	 status XXX
%551:	br	 %550 if.else if.then

BASIC BLOCK if.then
%552:	load	 stdout
%553:	call	 XXX gettext
%554:	load	 prog
%555:	call	 %552 %553 %554 fprintf
%556:	load	 stdout
%557:	call	 XXX gettext
%558:	load	 prog
%559:	call	 %556 %557 %558 fprintf
%560:	br	 if.end

BASIC BLOCK if.else
%561:	call	 XXX gettext
%562:	load	 prog
%563:	call	 %561 %562 printf
%564:	call	 XXX gettext
%565:	call	 %564 printf
%566:	call	 XXX gettext
%567:	call	 %566 printf
%568:	call	 XXX gettext
%569:	call	 %568 printf
%570:	call	 XXX gettext
%571:	call	 %570 printf
%572:	call	 XXX gettext
%573:	call	 %572 printf
%574:	br	 if.end

BASIC BLOCK if.end
%575:	call	 status exit
%576:	unreachable	

BASIC BLOCK return
%577:	ret	

FUNCTION setmatcher

BASIC BLOCK entry
%578:	br	 for.cond

BASIC BLOCK for.cond
%579:	phi	 XXX %605
%580:	sext	 %579
%581:	getelementptr	 XXX XXX %580
%582:	getelementptr	 %581 XXX XXX
%583:	load	 %582
%584:	icmp	 %583 XXX
%585:	br	 %584 for.end for.body

BASIC BLOCK for.body
%586:	sext	 %579
%587:	getelementptr	 XXX XXX %586
%588:	getelementptr	 %587 XXX XXX
%589:	load	 %588
%590:	call	 name %589 strcmp
%591:	icmp	 %590 XXX
%592:	br	 %591 if.end if.then

BASIC BLOCK if.then
%593:	sext	 %579
%594:	getelementptr	 XXX XXX %593
%595:	getelementptr	 %594 XXX XXX
%596:	load	 %595
%597:	store	 %596 compile
%598:	sext	 %579
%599:	getelementptr	 XXX XXX %598
%600:	getelementptr	 %599 XXX XXX
%601:	load	 %600
%602:	store	 %601 execute
%603:	br	 return

BASIC BLOCK if.end
%604:	br	 for.inc

BASIC BLOCK for.inc
%605:	add	 %579 XXX
%606:	br	 for.cond

BASIC BLOCK for.end
%607:	br	 return

BASIC BLOCK return
%608:	phi	 XXX XXX
%609:	ret	 %608

FUNCTION grep

BASIC BLOCK entry
%610:	call	 fd reset
%611:	store	 XXX totalcc
%612:	store	 XXX lastout
%613:	store	 XXX totalnl
%614:	store	 XXX pending
%615:	br	 for.cond

BASIC BLOCK for.cond
%616:	phi	 XXX %724
%617:	phi	 XXX %665
%618:	phi	 XXX %685
%619:	call	 %616 fillbuf
%620:	icmp	 %619 XXX
%621:	br	 %620 if.end if.then

BASIC BLOCK if.then
%622:	load	 filename
%623:	call	 __errno_location
%624:	load	 %623
%625:	call	 %622 %624 error
%626:	br	 return

BASIC BLOCK if.end
%627:	load	 bufbeg
%628:	store	 %627 lastnl
%629:	load	 lastout
%630:	icmp	 %629 XXX
%631:	br	 %630 if.end3 if.then2

BASIC BLOCK if.then2
%632:	load	 bufbeg
%633:	store	 %632 lastout
%634:	br	 if.end3

BASIC BLOCK if.end3
%635:	load	 buflim
%636:	load	 bufbeg
%637:	ptrtoint	 %635
%638:	ptrtoint	 %636
%639:	sub	 %637 %638
%640:	icmp	 %639 %616
%641:	br	 %640 if.end6 if.then5

BASIC BLOCK if.then5
%642:	br	 for.end62

BASIC BLOCK if.end6
%643:	load	 bufbeg
%644:	getelementptr	 %643 %616
%645:	sub	 XXX %617
%646:	getelementptr	 %644 %645
%647:	load	 buflim
%648:	br	 for.cond8

BASIC BLOCK for.cond8
%649:	phi	 %647 %660
%650:	icmp	 %649 %646
%651:	br	 %650 land.end land.rhs

BASIC BLOCK land.rhs
%652:	getelementptr	 %649 XXX
%653:	load	 %652
%654:	sext	 %653
%655:	icmp	 %654 XXX
%656:	br	 land.end

BASIC BLOCK land.end
%657:	phi	 XXX %655
%658:	br	 %657 for.end for.body

BASIC BLOCK for.body
%659:	br	 for.inc

BASIC BLOCK for.inc
%660:	getelementptr	 %649 XXX
%661:	br	 for.cond8

BASIC BLOCK for.end
%662:	load	 buflim
%663:	ptrtoint	 %662
%664:	ptrtoint	 %649
%665:	sub	 %663 %664
%666:	icmp	 %646 %649
%667:	br	 %666 if.end28 if.then17

BASIC BLOCK if.then17
%668:	call	 %646 %649 grepbuf
%669:	add	 %618 %668
%670:	load	 pending
%671:	icmp	 %670 XXX
%672:	br	 %671 if.end21 if.then20

BASIC BLOCK if.then20
%673:	call	 %649 prpending
%674:	br	 if.end21

BASIC BLOCK if.end21
%675:	icmp	 %669 XXX
%676:	br	 %675 if.end27 land.lhs.true

BASIC BLOCK land.lhs.true
%677:	load	 done_on_match
%678:	icmp	 %677 XXX
%679:	br	 %678 if.end27 land.lhs.true24

BASIC BLOCK land.lhs.true24
%680:	load	 out_invert
%681:	icmp	 %680 XXX
%682:	br	 %681 if.then26 if.end27

BASIC BLOCK if.then26
%683:	br	 return

BASIC BLOCK if.end27
%684:	br	 if.end28

BASIC BLOCK if.end28
%685:	phi	 %669 %618
%686:	br	 while.cond

BASIC BLOCK while.cond
%687:	phi	 %649 %703
%688:	phi	 XXX %700
%689:	load	 out_before
%690:	icmp	 %688 %689
%691:	br	 %690 land.end37 land.lhs.true31

BASIC BLOCK land.lhs.true31
%692:	load	 bufbeg
%693:	icmp	 %687 %692
%694:	br	 %693 land.end37 land.rhs34

BASIC BLOCK land.rhs34
%695:	load	 lastout
%696:	icmp	 %687 %695
%697:	br	 land.end37

BASIC BLOCK land.end37
%698:	phi	 XXX XXX %696
%699:	br	 %698 while.end while.body

BASIC BLOCK while.body
%700:	add	 %688 XXX
%701:	br	 do.body

BASIC BLOCK do.body
%702:	phi	 %687 %703
%703:	getelementptr	 %702 XXX
%704:	br	 do.cond

BASIC BLOCK do.cond
%705:	load	 bufbeg
%706:	icmp	 %703 %705
%707:	br	 %706 land.end46 land.rhs41

BASIC BLOCK land.rhs41
%708:	getelementptr	 %703 XXX
%709:	load	 %708
%710:	sext	 %709
%711:	icmp	 %710 XXX
%712:	br	 land.end46

BASIC BLOCK land.end46
%713:	phi	 XXX %711
%714:	br	 %713 do.end do.body

BASIC BLOCK do.end
%715:	br	 while.cond

BASIC BLOCK while.end
%716:	load	 lastout
%717:	icmp	 %687 %716
%718:	br	 %717 if.end50 if.then49

BASIC BLOCK if.then49
%719:	store	 XXX lastout
%720:	br	 if.end50

BASIC BLOCK if.end50
%721:	getelementptr	 %649 %665
%722:	ptrtoint	 %721
%723:	ptrtoint	 %687
%724:	sub	 %722 %723
%725:	load	 buflim
%726:	load	 bufbeg
%727:	ptrtoint	 %725
%728:	ptrtoint	 %726
%729:	sub	 %727 %728
%730:	sub	 %729 %724
%731:	load	 totalcc
%732:	add	 %731 %730
%733:	store	 %732 totalcc
%734:	load	 out_line
%735:	icmp	 %734 XXX
%736:	br	 %735 if.end61 if.then60

BASIC BLOCK if.then60
%737:	call	 %687 nlscan
%738:	br	 if.end61

BASIC BLOCK if.end61
%739:	br	 for.cond

BASIC BLOCK for.end62
%740:	icmp	 %617 XXX
%741:	br	 %740 if.end73 if.then64

BASIC BLOCK if.then64
%742:	load	 bufbeg
%743:	getelementptr	 %742 %616
%744:	sub	 XXX %617
%745:	getelementptr	 %743 %744
%746:	load	 buflim
%747:	call	 %745 %746 grepbuf
%748:	add	 %618 %747
%749:	load	 pending
%750:	icmp	 %749 XXX
%751:	br	 %750 if.end72 if.then71

BASIC BLOCK if.then71
%752:	load	 buflim
%753:	call	 %752 prpending
%754:	br	 if.end72

BASIC BLOCK if.end72
%755:	br	 if.end73

BASIC BLOCK if.end73
%756:	phi	 %748 %618
%757:	br	 return

BASIC BLOCK return
%758:	phi	 %618 %756 %669
%759:	ret	 %758

FUNCTION dfasyntax

BASIC BLOCK entry
%760:	store	 XXX syntax_bits_set
%761:	store	 bits syntax_bits
%762:	store	 fold case_fold
%763:	ret	

FUNCTION dfaparse

BASIC BLOCK entry
%764:	store	 d dfa
%765:	store	 s lexptr
%766:	store	 s lexstart
%767:	trunc	 len
%768:	store	 %767 lexleft
%769:	store	 XXX lasttok
%770:	store	 XXX laststart
%771:	store	 XXX parens
%772:	load	 syntax_bits_set
%773:	icmp	 %772 XXX
%774:	br	 %773 if.then if.end

BASIC BLOCK if.then
%775:	call	 XXX gettext
%776:	call	 %775 dfaerror
%777:	br	 if.end

BASIC BLOCK if.end
%778:	call	 lex
%779:	store	 %778 tok
%780:	getelementptr	 d XXX XXX
%781:	load	 %780
%782:	store	 %781 depth
%783:	call	 XXX regexp
%784:	load	 tok
%785:	icmp	 %784 XXX
%786:	br	 %785 if.end5 if.then3

BASIC BLOCK if.then3
%787:	call	 XXX gettext
%788:	call	 %787 dfaerror
%789:	br	 if.end5

BASIC BLOCK if.end5
%790:	getelementptr	 d XXX XXX
%791:	load	 %790
%792:	sub	 XXX %791
%793:	call	 %792 addtok
%794:	call	 XXX addtok
%795:	getelementptr	 d XXX XXX
%796:	load	 %795
%797:	icmp	 %796 XXX
%798:	br	 %797 if.end9 if.then8

BASIC BLOCK if.then8
%799:	call	 XXX addtok
%800:	br	 if.end9

BASIC BLOCK if.end9
%801:	getelementptr	 d XXX XXX
%802:	load	 %801
%803:	add	 %802 XXX
%804:	store	 %803 %801
%805:	ret	

FUNCTION dfaerror

BASIC BLOCK entry
%806:	call	 mesg XXX fatal
%807:	ret	

FUNCTION lex

BASIC BLOCK entry
%808:	alloca	 XXX
%809:	br	 for.cond

BASIC BLOCK for.cond
%810:	phi	 XXX %1744
%811:	phi	 XXX XXX
%812:	icmp	 %810 XXX
%813:	br	 %812 for.end666 for.body

BASIC BLOCK for.body
%814:	load	 lexleft
%815:	icmp	 %814 XXX
%816:	br	 %815 if.then if.end

BASIC BLOCK if.then
%817:	store	 XXX lasttok
%818:	br	 return

BASIC BLOCK if.end
%819:	load	 lexptr
%820:	getelementptr	 %819 XXX
%821:	store	 %820 lexptr
%822:	load	 %819
%823:	zext	 %822
%824:	load	 lexleft
%825:	add	 %824 XXX
%826:	store	 %825 lexleft
%827:	switch	 %823 sw.default XXX sw.bb XXX sw.bb8 XXX sw.bb23 XXX sw.bb86 XXX sw.bb86 XXX sw.bb86 XXX sw.bb86 XXX sw.bb86 XXX sw.bb86 XXX sw.bb86 XXX sw.bb86 XXX sw.bb86 XXX sw.bb93 XXX sw.bb100 XXX sw.bb107 XXX sw.bb114 XXX sw.bb121 XXX sw.bb128 XXX sw.bb135 XXX sw.bb153 XXX sw.bb163 XXX sw.bb181 XXX sw.bb299 XXX sw.bb311 XXX sw.bb321 XXX sw.bb329 XXX sw.bb345 XXX sw.bb363 XXX sw.bb363 XXX sw.bb397

BASIC BLOCK sw.bb
%828:	icmp	 %811 XXX
%829:	br	 %828 if.end3 if.then2

BASIC BLOCK if.then2
%830:	br	 normal_char

BASIC BLOCK if.end3
%831:	load	 lexleft
%832:	icmp	 %831 XXX
%833:	br	 %832 if.end7 if.then6

BASIC BLOCK if.then6
%834:	call	 XXX gettext
%835:	call	 %834 dfaerror
%836:	br	 if.end7

BASIC BLOCK if.end7
%837:	br	 sw.epilog

BASIC BLOCK sw.bb8
%838:	icmp	 %811 XXX
%839:	br	 %838 if.end11 if.then10

BASIC BLOCK if.then10
%840:	br	 normal_char

BASIC BLOCK if.end11
%841:	load	 syntax_bits
%842:	and	 %841 XXX
%843:	icmp	 %842 XXX
%844:	br	 %843 lor.lhs.false if.then21

BASIC BLOCK lor.lhs.false
%845:	load	 lasttok
%846:	icmp	 %845 XXX
%847:	br	 %846 lor.lhs.false15 if.then21

BASIC BLOCK lor.lhs.false15
%848:	load	 lasttok
%849:	icmp	 %848 XXX
%850:	br	 %849 lor.lhs.false18 if.then21

BASIC BLOCK lor.lhs.false18
%851:	load	 lasttok
%852:	icmp	 %851 XXX
%853:	br	 %852 if.end22 if.then21

BASIC BLOCK if.then21
%854:	store	 XXX lasttok
%855:	br	 return

BASIC BLOCK if.end22
%856:	br	 normal_char

BASIC BLOCK sw.bb23
%857:	icmp	 %811 XXX
%858:	br	 %857 if.end26 if.then25

BASIC BLOCK if.then25
%859:	br	 normal_char

BASIC BLOCK if.end26
%860:	load	 syntax_bits
%861:	and	 %860 XXX
%862:	icmp	 %861 XXX
%863:	br	 %862 lor.lhs.false29 if.then84

BASIC BLOCK lor.lhs.false29
%864:	load	 lexleft
%865:	icmp	 %864 XXX
%866:	br	 %865 lor.lhs.false32 if.then84

BASIC BLOCK lor.lhs.false32
%867:	load	 syntax_bits
%868:	and	 %867 XXX
%869:	icmp	 %868 XXX
%870:	br	 %869 cond.false cond.true

BASIC BLOCK cond.true
%871:	load	 lexleft
%872:	icmp	 %871 XXX
%873:	br	 %872 lor.lhs.false51 land.lhs.true

BASIC BLOCK land.lhs.true
%874:	load	 lexptr
%875:	load	 %874
%876:	sext	 %875
%877:	icmp	 %876 XXX
%878:	br	 %877 lor.lhs.false51 if.then84

BASIC BLOCK cond.false
%879:	load	 lexleft
%880:	icmp	 %879 XXX
%881:	br	 %880 lor.lhs.false51 land.lhs.true42

BASIC BLOCK land.lhs.true42
%882:	load	 lexptr
%883:	getelementptr	 %882 XXX
%884:	load	 %883
%885:	sext	 %884
%886:	icmp	 %885 XXX
%887:	br	 %886 lor.lhs.false51 land.lhs.true46

BASIC BLOCK land.lhs.true46
%888:	load	 lexptr
%889:	getelementptr	 %888 XXX
%890:	load	 %889
%891:	sext	 %890
%892:	icmp	 %891 XXX
%893:	br	 %892 lor.lhs.false51 if.then84

BASIC BLOCK lor.lhs.false51
%894:	load	 syntax_bits
%895:	and	 %894 XXX
%896:	icmp	 %895 XXX
%897:	br	 %896 cond.false61 cond.true54

BASIC BLOCK cond.true54
%898:	load	 lexleft
%899:	icmp	 %898 XXX
%900:	br	 %899 lor.lhs.false74 land.lhs.true57

BASIC BLOCK land.lhs.true57
%901:	load	 lexptr
%902:	load	 %901
%903:	sext	 %902
%904:	icmp	 %903 XXX
%905:	br	 %904 lor.lhs.false74 if.then84

BASIC BLOCK cond.false61
%906:	load	 lexleft
%907:	icmp	 %906 XXX
%908:	br	 %907 lor.lhs.false74 land.lhs.true64

BASIC BLOCK land.lhs.true64
%909:	load	 lexptr
%910:	getelementptr	 %909 XXX
%911:	load	 %910
%912:	sext	 %911
%913:	icmp	 %912 XXX
%914:	br	 %913 lor.lhs.false74 land.lhs.true69

BASIC BLOCK land.lhs.true69
%915:	load	 lexptr
%916:	getelementptr	 %915 XXX
%917:	load	 %916
%918:	sext	 %917
%919:	icmp	 %918 XXX
%920:	br	 %919 lor.lhs.false74 if.then84

BASIC BLOCK lor.lhs.false74
%921:	load	 syntax_bits
%922:	and	 %921 XXX
%923:	icmp	 %922 XXX
%924:	br	 %923 if.end85 land.lhs.true77

BASIC BLOCK land.lhs.true77
%925:	load	 lexleft
%926:	icmp	 %925 XXX
%927:	br	 %926 if.end85 land.lhs.true80

BASIC BLOCK land.lhs.true80
%928:	load	 lexptr
%929:	load	 %928
%930:	sext	 %929
%931:	icmp	 %930 XXX
%932:	br	 %931 if.end85 if.then84

BASIC BLOCK if.then84
%933:	store	 XXX lasttok
%934:	br	 return

BASIC BLOCK if.end85
%935:	br	 normal_char

BASIC BLOCK sw.bb86
%936:	icmp	 %811 XXX
%937:	br	 %936 if.end92 land.lhs.true88

BASIC BLOCK land.lhs.true88
%938:	load	 syntax_bits
%939:	and	 %938 XXX
%940:	icmp	 %939 XXX
%941:	br	 %940 if.then91 if.end92

BASIC BLOCK if.then91
%942:	store	 XXX laststart
%943:	store	 XXX lasttok
%944:	br	 return

BASIC BLOCK if.end92
%945:	br	 normal_char

BASIC BLOCK sw.bb93
%946:	icmp	 %811 XXX
%947:	br	 %946 if.end99 land.lhs.true95

BASIC BLOCK land.lhs.true95
%948:	load	 syntax_bits
%949:	and	 %948 XXX
%950:	icmp	 %949 XXX
%951:	br	 %950 if.then98 if.end99

BASIC BLOCK if.then98
%952:	store	 XXX lasttok
%953:	br	 return

BASIC BLOCK if.end99
%954:	br	 normal_char

BASIC BLOCK sw.bb100
%955:	icmp	 %811 XXX
%956:	br	 %955 if.end106 land.lhs.true102

BASIC BLOCK land.lhs.true102
%957:	load	 syntax_bits
%958:	and	 %957 XXX
%959:	icmp	 %958 XXX
%960:	br	 %959 if.then105 if.end106

BASIC BLOCK if.then105
%961:	store	 XXX lasttok
%962:	br	 return

BASIC BLOCK if.end106
%963:	br	 normal_char

BASIC BLOCK sw.bb107
%964:	icmp	 %811 XXX
%965:	br	 %964 if.end113 land.lhs.true109

BASIC BLOCK land.lhs.true109
%966:	load	 syntax_bits
%967:	and	 %966 XXX
%968:	icmp	 %967 XXX
%969:	br	 %968 if.then112 if.end113

BASIC BLOCK if.then112
%970:	store	 XXX lasttok
%971:	br	 return

BASIC BLOCK if.end113
%972:	br	 normal_char

BASIC BLOCK sw.bb114
%973:	icmp	 %811 XXX
%974:	br	 %973 if.end120 land.lhs.true116

BASIC BLOCK land.lhs.true116
%975:	load	 syntax_bits
%976:	and	 %975 XXX
%977:	icmp	 %976 XXX
%978:	br	 %977 if.then119 if.end120

BASIC BLOCK if.then119
%979:	store	 XXX lasttok
%980:	br	 return

BASIC BLOCK if.end120
%981:	br	 normal_char

BASIC BLOCK sw.bb121
%982:	icmp	 %811 XXX
%983:	br	 %982 if.end127 land.lhs.true123

BASIC BLOCK land.lhs.true123
%984:	load	 syntax_bits
%985:	and	 %984 XXX
%986:	icmp	 %985 XXX
%987:	br	 %986 if.then126 if.end127

BASIC BLOCK if.then126
%988:	store	 XXX lasttok
%989:	br	 return

BASIC BLOCK if.end127
%990:	br	 normal_char

BASIC BLOCK sw.bb128
%991:	icmp	 %811 XXX
%992:	br	 %991 if.end134 land.lhs.true130

BASIC BLOCK land.lhs.true130
%993:	load	 syntax_bits
%994:	and	 %993 XXX
%995:	icmp	 %994 XXX
%996:	br	 %995 if.then133 if.end134

BASIC BLOCK if.then133
%997:	store	 XXX lasttok
%998:	br	 return

BASIC BLOCK if.end134
%999:	br	 normal_char

BASIC BLOCK sw.bb135
%1000:	load	 syntax_bits
%1001:	and	 %1000 XXX
%1002:	icmp	 %1001 XXX
%1003:	br	 %1002 if.end139 if.then138

BASIC BLOCK if.then138
%1004:	br	 normal_char

BASIC BLOCK if.end139
%1005:	load	 syntax_bits
%1006:	and	 %1005 XXX
%1007:	icmp	 %1006 XXX
%1008:	zext	 %1007
%1009:	icmp	 %811 %1008
%1010:	br	 %1009 if.end146 if.then145

BASIC BLOCK if.then145
%1011:	br	 normal_char

BASIC BLOCK if.end146
%1012:	load	 syntax_bits
%1013:	and	 %1012 XXX
%1014:	icmp	 %1013 XXX
%1015:	br	 %1014 land.lhs.true149 if.end152

BASIC BLOCK land.lhs.true149
%1016:	load	 laststart
%1017:	icmp	 %1016 XXX
%1018:	br	 %1017 if.end152 if.then151

BASIC BLOCK if.then151
%1019:	br	 normal_char

BASIC BLOCK if.end152
%1020:	store	 XXX lasttok
%1021:	br	 return

BASIC BLOCK sw.bb153
%1022:	icmp	 %811 XXX
%1023:	br	 %1022 if.end156 if.then155

BASIC BLOCK if.then155
%1024:	br	 normal_char

BASIC BLOCK if.end156
%1025:	load	 syntax_bits
%1026:	and	 %1025 XXX
%1027:	icmp	 %1026 XXX
%1028:	br	 %1027 land.lhs.true159 if.end162

BASIC BLOCK land.lhs.true159
%1029:	load	 laststart
%1030:	icmp	 %1029 XXX
%1031:	br	 %1030 if.end162 if.then161

BASIC BLOCK if.then161
%1032:	br	 normal_char

BASIC BLOCK if.end162
%1033:	store	 XXX lasttok
%1034:	br	 return

BASIC BLOCK sw.bb163
%1035:	load	 syntax_bits
%1036:	and	 %1035 XXX
%1037:	icmp	 %1036 XXX
%1038:	br	 %1037 if.end167 if.then166

BASIC BLOCK if.then166
%1039:	br	 normal_char

BASIC BLOCK if.end167
%1040:	load	 syntax_bits
%1041:	and	 %1040 XXX
%1042:	icmp	 %1041 XXX
%1043:	zext	 %1042
%1044:	icmp	 %811 %1043
%1045:	br	 %1044 if.end174 if.then173

BASIC BLOCK if.then173
%1046:	br	 normal_char

BASIC BLOCK if.end174
%1047:	load	 syntax_bits
%1048:	and	 %1047 XXX
%1049:	icmp	 %1048 XXX
%1050:	br	 %1049 land.lhs.true177 if.end180

BASIC BLOCK land.lhs.true177
%1051:	load	 laststart
%1052:	icmp	 %1051 XXX
%1053:	br	 %1052 if.end180 if.then179

BASIC BLOCK if.then179
%1054:	br	 normal_char

BASIC BLOCK if.end180
%1055:	store	 XXX lasttok
%1056:	br	 return

BASIC BLOCK sw.bb181
%1057:	load	 syntax_bits
%1058:	and	 %1057 XXX
%1059:	icmp	 %1058 XXX
%1060:	br	 %1059 if.then184 if.end185

BASIC BLOCK if.then184
%1061:	br	 normal_char

BASIC BLOCK if.end185
%1062:	load	 syntax_bits
%1063:	and	 %1062 XXX
%1064:	icmp	 %1063 XXX
%1065:	zext	 %1064
%1066:	icmp	 %811 %1065
%1067:	br	 %1066 if.end192 if.then191

BASIC BLOCK if.then191
%1068:	br	 normal_char

BASIC BLOCK if.end192
%1069:	store	 XXX maxrep
%1070:	store	 XXX minrep
%1071:	load	 lexleft
%1072:	icmp	 %1071 XXX
%1073:	br	 %1072 if.then194 if.end201

BASIC BLOCK if.then194
%1074:	call	 XXX gettext
%1075:	icmp	 %1074 XXX
%1076:	br	 %1075 if.else if.then198

BASIC BLOCK if.then198
%1077:	call	 XXX gettext
%1078:	call	 %1077 dfaerror
%1079:	br	 if.end200

BASIC BLOCK if.else
%1080:	store	 XXX lasttok
%1081:	br	 return

BASIC BLOCK if.end200
%1082:	br	 if.end201

BASIC BLOCK if.end201
%1083:	load	 lexptr
%1084:	getelementptr	 %1083 XXX
%1085:	store	 %1084 lexptr
%1086:	load	 %1083
%1087:	zext	 %1086
%1088:	load	 lexleft
%1089:	add	 %1088 XXX
%1090:	store	 %1089 lexleft
%1091:	sext	 %1087
%1092:	call	 __ctype_b_loc
%1093:	load	 %1092
%1094:	getelementptr	 %1093 %1091
%1095:	load	 %1094
%1096:	zext	 %1095
%1097:	and	 %1096 XXX
%1098:	icmp	 %1097 XXX
%1099:	br	 %1098 if.else234 if.then210

BASIC BLOCK if.then210
%1100:	sub	 %1087 XXX
%1101:	store	 %1100 minrep
%1102:	br	 for.cond211

BASIC BLOCK for.cond211
%1103:	load	 lexleft
%1104:	icmp	 %1103 XXX
%1105:	br	 %1104 if.then213 if.end221

BASIC BLOCK if.then213
%1106:	call	 XXX gettext
%1107:	icmp	 %1106 XXX
%1108:	br	 %1107 if.else219 if.then217

BASIC BLOCK if.then217
%1109:	call	 XXX gettext
%1110:	call	 %1109 dfaerror
%1111:	br	 if.end220

BASIC BLOCK if.else219
%1112:	store	 XXX lasttok
%1113:	br	 return

BASIC BLOCK if.end220
%1114:	br	 if.end221

BASIC BLOCK if.end221
%1115:	load	 lexptr
%1116:	getelementptr	 %1115 XXX
%1117:	store	 %1116 lexptr
%1118:	load	 %1115
%1119:	zext	 %1118
%1120:	load	 lexleft
%1121:	add	 %1120 XXX
%1122:	store	 %1121 lexleft
%1123:	sext	 %1119
%1124:	call	 __ctype_b_loc
%1125:	load	 %1124
%1126:	getelementptr	 %1125 %1123
%1127:	load	 %1126
%1128:	zext	 %1127
%1129:	and	 %1128 XXX
%1130:	icmp	 %1129 XXX
%1131:	br	 %1130 if.then231 if.end232

BASIC BLOCK if.then231
%1132:	br	 for.end

BASIC BLOCK if.end232
%1133:	load	 minrep
%1134:	mul	 XXX %1133
%1135:	add	 %1134 %1119
%1136:	sub	 %1135 XXX
%1137:	store	 %1136 minrep
%1138:	br	 for.cond211

BASIC BLOCK for.end
%1139:	br	 if.end240

BASIC BLOCK if.else234
%1140:	icmp	 %1087 XXX
%1141:	br	 %1140 if.end239 if.then237

BASIC BLOCK if.then237
%1142:	call	 XXX gettext
%1143:	call	 %1142 dfaerror
%1144:	br	 if.end239

BASIC BLOCK if.end239
%1145:	br	 if.end240

BASIC BLOCK if.end240
%1146:	phi	 %1119 %1087
%1147:	icmp	 %1146 XXX
%1148:	br	 %1147 if.else270 if.then243

BASIC BLOCK if.then243
%1149:	br	 for.cond244

BASIC BLOCK for.cond244
%1150:	load	 lexleft
%1151:	icmp	 %1150 XXX
%1152:	br	 %1151 if.then246 if.end254

BASIC BLOCK if.then246
%1153:	call	 XXX gettext
%1154:	icmp	 %1153 XXX
%1155:	br	 %1154 if.else252 if.then250

BASIC BLOCK if.then250
%1156:	call	 XXX gettext
%1157:	call	 %1156 dfaerror
%1158:	br	 if.end253

BASIC BLOCK if.else252
%1159:	store	 XXX lasttok
%1160:	br	 return

BASIC BLOCK if.end253
%1161:	br	 if.end254

BASIC BLOCK if.end254
%1162:	load	 lexptr
%1163:	getelementptr	 %1162 XXX
%1164:	store	 %1163 lexptr
%1165:	load	 %1162
%1166:	zext	 %1165
%1167:	load	 lexleft
%1168:	add	 %1167 XXX
%1169:	store	 %1168 lexleft
%1170:	sext	 %1166
%1171:	call	 __ctype_b_loc
%1172:	load	 %1171
%1173:	getelementptr	 %1172 %1170
%1174:	load	 %1173
%1175:	zext	 %1174
%1176:	and	 %1175 XXX
%1177:	icmp	 %1176 XXX
%1178:	br	 %1177 if.then264 if.end265

BASIC BLOCK if.then264
%1179:	br	 for.end269

BASIC BLOCK if.end265
%1180:	load	 maxrep
%1181:	mul	 XXX %1180
%1182:	add	 %1181 %1166
%1183:	sub	 %1182 XXX
%1184:	store	 %1183 maxrep
%1185:	br	 for.cond244

BASIC BLOCK for.end269
%1186:	br	 if.end271

BASIC BLOCK if.else270
%1187:	load	 minrep
%1188:	store	 %1187 maxrep
%1189:	br	 if.end271

BASIC BLOCK if.end271
%1190:	phi	 %1166 %1146
%1191:	load	 syntax_bits
%1192:	and	 %1191 XXX
%1193:	icmp	 %1192 XXX
%1194:	br	 %1193 if.then274 if.end293

BASIC BLOCK if.then274
%1195:	icmp	 %1190 XXX
%1196:	br	 %1195 if.end279 if.then277

BASIC BLOCK if.then277
%1197:	call	 XXX gettext
%1198:	call	 %1197 dfaerror
%1199:	br	 if.end279

BASIC BLOCK if.end279
%1200:	load	 lexleft
%1201:	icmp	 %1200 XXX
%1202:	br	 %1201 if.then281 if.end289

BASIC BLOCK if.then281
%1203:	call	 XXX gettext
%1204:	icmp	 %1203 XXX
%1205:	br	 %1204 if.else287 if.then285

BASIC BLOCK if.then285
%1206:	call	 XXX gettext
%1207:	call	 %1206 dfaerror
%1208:	br	 if.end288

BASIC BLOCK if.else287
%1209:	store	 XXX lasttok
%1210:	br	 return

BASIC BLOCK if.end288
%1211:	br	 if.end289

BASIC BLOCK if.end289
%1212:	load	 lexptr
%1213:	getelementptr	 %1212 XXX
%1214:	store	 %1213 lexptr
%1215:	load	 %1212
%1216:	zext	 %1215
%1217:	load	 lexleft
%1218:	add	 %1217 XXX
%1219:	store	 %1218 lexleft
%1220:	br	 if.end293

BASIC BLOCK if.end293
%1221:	phi	 %1190 %1216
%1222:	icmp	 %1221 XXX
%1223:	br	 %1222 if.end298 if.then296

BASIC BLOCK if.then296
%1224:	call	 XXX gettext
%1225:	call	 %1224 dfaerror
%1226:	br	 if.end298

BASIC BLOCK if.end298
%1227:	store	 XXX laststart
%1228:	store	 XXX lasttok
%1229:	br	 return

BASIC BLOCK sw.bb299
%1230:	load	 syntax_bits
%1231:	and	 %1230 XXX
%1232:	icmp	 %1231 XXX
%1233:	br	 %1232 if.end303 if.then302

BASIC BLOCK if.then302
%1234:	br	 normal_char

BASIC BLOCK if.end303
%1235:	load	 syntax_bits
%1236:	and	 %1235 XXX
%1237:	icmp	 %1236 XXX
%1238:	zext	 %1237
%1239:	icmp	 %811 %1238
%1240:	br	 %1239 if.end310 if.then309

BASIC BLOCK if.then309
%1241:	br	 normal_char

BASIC BLOCK if.end310
%1242:	store	 XXX laststart
%1243:	store	 XXX lasttok
%1244:	br	 return

BASIC BLOCK sw.bb311
%1245:	load	 syntax_bits
%1246:	and	 %1245 XXX
%1247:	icmp	 %1246 XXX
%1248:	br	 %1247 lor.lhs.false314 if.then319

BASIC BLOCK lor.lhs.false314
%1249:	icmp	 %811 XXX
%1250:	br	 %1249 lor.lhs.false316 if.then319

BASIC BLOCK lor.lhs.false316
%1251:	load	 syntax_bits
%1252:	and	 %1251 XXX
%1253:	icmp	 %1252 XXX
%1254:	br	 %1253 if.then319 if.end320

BASIC BLOCK if.then319
%1255:	br	 normal_char

BASIC BLOCK if.end320
%1256:	store	 XXX laststart
%1257:	store	 XXX lasttok
%1258:	br	 return

BASIC BLOCK sw.bb321
%1259:	load	 syntax_bits
%1260:	and	 %1259 XXX
%1261:	icmp	 %1260 XXX
%1262:	zext	 %1261
%1263:	icmp	 %811 %1262
%1264:	br	 %1263 if.end328 if.then327

BASIC BLOCK if.then327
%1265:	br	 normal_char

BASIC BLOCK if.end328
%1266:	load	 parens
%1267:	add	 %1266 XXX
%1268:	store	 %1267 parens
%1269:	store	 XXX laststart
%1270:	store	 XXX lasttok
%1271:	br	 return

BASIC BLOCK sw.bb329
%1272:	load	 syntax_bits
%1273:	and	 %1272 XXX
%1274:	icmp	 %1273 XXX
%1275:	zext	 %1274
%1276:	icmp	 %811 %1275
%1277:	br	 %1276 if.end336 if.then335

BASIC BLOCK if.then335
%1278:	br	 normal_char

BASIC BLOCK if.end336
%1279:	load	 parens
%1280:	icmp	 %1279 XXX
%1281:	br	 %1280 if.end343 land.lhs.true339

BASIC BLOCK land.lhs.true339
%1282:	load	 syntax_bits
%1283:	and	 %1282 XXX
%1284:	icmp	 %1283 XXX
%1285:	br	 %1284 if.end343 if.then342

BASIC BLOCK if.then342
%1286:	br	 normal_char

BASIC BLOCK if.end343
%1287:	load	 parens
%1288:	add	 %1287 XXX
%1289:	store	 %1288 parens
%1290:	store	 XXX laststart
%1291:	store	 XXX lasttok
%1292:	br	 return

BASIC BLOCK sw.bb345
%1293:	icmp	 %811 XXX
%1294:	br	 %1293 if.end348 if.then347

BASIC BLOCK if.then347
%1295:	br	 normal_char

BASIC BLOCK if.end348
%1296:	getelementptr	 %808 XXX XXX
%1297:	call	 %1296 zeroset
%1298:	getelementptr	 %808 XXX XXX
%1299:	call	 %1298 notset
%1300:	load	 syntax_bits
%1301:	and	 %1300 XXX
%1302:	icmp	 %1301 XXX
%1303:	br	 %1302 if.then352 if.end354

BASIC BLOCK if.then352
%1304:	getelementptr	 %808 XXX XXX
%1305:	call	 XXX %1304 clrbit
%1306:	br	 if.end354

BASIC BLOCK if.end354
%1307:	load	 syntax_bits
%1308:	and	 %1307 XXX
%1309:	icmp	 %1308 XXX
%1310:	br	 %1309 if.end359 if.then357

BASIC BLOCK if.then357
%1311:	getelementptr	 %808 XXX XXX
%1312:	call	 XXX %1311 clrbit
%1313:	br	 if.end359

BASIC BLOCK if.end359
%1314:	store	 XXX laststart
%1315:	getelementptr	 %808 XXX XXX
%1316:	call	 %1315 charclass_index
%1317:	add	 XXX %1316
%1318:	store	 %1317 lasttok
%1319:	br	 return

BASIC BLOCK sw.bb363
%1320:	icmp	 %811 XXX
%1321:	br	 %1320 if.then368 lor.lhs.false365

BASIC BLOCK lor.lhs.false365
%1322:	load	 syntax_bits
%1323:	and	 %1322 XXX
%1324:	icmp	 %1323 XXX
%1325:	br	 %1324 if.end369 if.then368

BASIC BLOCK if.then368
%1326:	br	 normal_char

BASIC BLOCK if.end369
%1327:	getelementptr	 %808 XXX XXX
%1328:	call	 %1327 zeroset
%1329:	br	 for.cond371

BASIC BLOCK for.cond371
%1330:	phi	 XXX %1348
%1331:	icmp	 %1330 XXX
%1332:	br	 %1331 for.end388 for.body374

BASIC BLOCK for.body374
%1333:	sext	 %1330
%1334:	call	 __ctype_b_loc
%1335:	load	 %1334
%1336:	getelementptr	 %1335 %1333
%1337:	load	 %1336
%1338:	zext	 %1337
%1339:	and	 %1338 XXX
%1340:	icmp	 %1339 XXX
%1341:	br	 %1340 lor.lhs.false381 if.then384

BASIC BLOCK lor.lhs.false381
%1342:	icmp	 %1330 XXX
%1343:	br	 %1342 if.end386 if.then384

BASIC BLOCK if.then384
%1344:	getelementptr	 %808 XXX XXX
%1345:	call	 %1330 %1344 setbit
%1346:	br	 if.end386

BASIC BLOCK if.end386
%1347:	br	 for.inc

BASIC BLOCK for.inc
%1348:	add	 %1330 XXX
%1349:	br	 for.cond371

BASIC BLOCK for.end388
%1350:	icmp	 %823 XXX
%1351:	br	 %1350 if.end393 if.then391

BASIC BLOCK if.then391
%1352:	getelementptr	 %808 XXX XXX
%1353:	call	 %1352 notset
%1354:	br	 if.end393

BASIC BLOCK if.end393
%1355:	store	 XXX laststart
%1356:	getelementptr	 %808 XXX XXX
%1357:	call	 %1356 charclass_index
%1358:	add	 XXX %1357
%1359:	store	 %1358 lasttok
%1360:	br	 return

BASIC BLOCK sw.bb397
%1361:	icmp	 %811 XXX
%1362:	br	 %1361 if.end400 if.then399

BASIC BLOCK if.then399
%1363:	br	 normal_char

BASIC BLOCK if.end400
%1364:	getelementptr	 %808 XXX XXX
%1365:	call	 %1364 zeroset
%1366:	load	 lexleft
%1367:	icmp	 %1366 XXX
%1368:	br	 %1367 if.then403 if.end411

BASIC BLOCK if.then403
%1369:	call	 XXX gettext
%1370:	icmp	 %1369 XXX
%1371:	br	 %1370 if.else409 if.then407

BASIC BLOCK if.then407
%1372:	call	 XXX gettext
%1373:	call	 %1372 dfaerror
%1374:	br	 if.end410

BASIC BLOCK if.else409
%1375:	store	 XXX lasttok
%1376:	br	 return

BASIC BLOCK if.end410
%1377:	br	 if.end411

BASIC BLOCK if.end411
%1378:	load	 lexptr
%1379:	getelementptr	 %1378 XXX
%1380:	store	 %1379 lexptr
%1381:	load	 %1378
%1382:	zext	 %1381
%1383:	load	 lexleft
%1384:	add	 %1383 XXX
%1385:	store	 %1384 lexleft
%1386:	icmp	 %1382 XXX
%1387:	br	 %1386 if.else431 if.then417

BASIC BLOCK if.then417
%1388:	load	 lexleft
%1389:	icmp	 %1388 XXX
%1390:	br	 %1389 if.then419 if.end427

BASIC BLOCK if.then419
%1391:	call	 XXX gettext
%1392:	icmp	 %1391 XXX
%1393:	br	 %1392 if.else425 if.then423

BASIC BLOCK if.then423
%1394:	call	 XXX gettext
%1395:	call	 %1394 dfaerror
%1396:	br	 if.end426

BASIC BLOCK if.else425
%1397:	store	 XXX lasttok
%1398:	br	 return

BASIC BLOCK if.end426
%1399:	br	 if.end427

BASIC BLOCK if.end427
%1400:	load	 lexptr
%1401:	getelementptr	 %1400 XXX
%1402:	store	 %1401 lexptr
%1403:	load	 %1400
%1404:	zext	 %1403
%1405:	load	 lexleft
%1406:	add	 %1405 XXX
%1407:	store	 %1406 lexleft
%1408:	br	 if.end432

BASIC BLOCK if.else431
%1409:	br	 if.end432

BASIC BLOCK if.end432
%1410:	phi	 XXX XXX
%1411:	phi	 %1404 %1382
%1412:	br	 do.body

BASIC BLOCK do.body
%1413:	phi	 %1411 %1680
%1414:	icmp	 %1413 XXX
%1415:	br	 %1414 if.end502 land.lhs.true435

BASIC BLOCK land.lhs.true435
%1416:	load	 syntax_bits
%1417:	and	 %1416 XXX
%1418:	icmp	 %1417 XXX
%1419:	br	 %1418 if.end502 if.then438

BASIC BLOCK if.then438
%1420:	br	 for.cond439

BASIC BLOCK for.cond439
%1421:	phi	 XXX %1503
%1422:	sext	 %1421
%1423:	getelementptr	 prednames XXX %1422
%1424:	getelementptr	 %1423 XXX XXX
%1425:	load	 %1424
%1426:	icmp	 %1425 XXX
%1427:	br	 %1426 for.end501 for.body443

BASIC BLOCK for.body443
%1428:	sext	 %1421
%1429:	getelementptr	 prednames XXX %1428
%1430:	getelementptr	 %1429 XXX XXX
%1431:	load	 %1430
%1432:	call	 %1431 looking_at
%1433:	icmp	 %1432 XXX
%1434:	br	 %1433 if.end498 if.then449

BASIC BLOCK if.then449
%1435:	sext	 %1421
%1436:	getelementptr	 prednames XXX %1435
%1437:	getelementptr	 %1436 XXX XXX
%1438:	load	 %1437
%1439:	bitcast	 %1438
%1440:	load	 case_fold
%1441:	icmp	 %1440 XXX
%1442:	br	 %1441 if.end461 land.lhs.true454

BASIC BLOCK land.lhs.true454
%1443:	icmp	 %1439 XXX
%1444:	br	 %1443 lor.lhs.false457 if.then460

BASIC BLOCK lor.lhs.false457
%1445:	icmp	 %1439 XXX
%1446:	br	 %1445 if.end461 if.then460

BASIC BLOCK if.then460
%1447:	br	 if.end461

BASIC BLOCK if.end461
%1448:	phi	 XXX %1439 %1439
%1449:	br	 for.cond462

BASIC BLOCK for.cond462
%1450:	phi	 XXX %1461
%1451:	icmp	 %1450 XXX
%1452:	br	 %1451 for.end473 for.body465

BASIC BLOCK for.body465
%1453:	bitcast	 %1448
%1454:	call	 %1450 %1453
%1455:	icmp	 %1454 XXX
%1456:	br	 %1455 if.end470 if.then468

BASIC BLOCK if.then468
%1457:	getelementptr	 %808 XXX XXX
%1458:	call	 %1450 %1457 setbit
%1459:	br	 if.end470

BASIC BLOCK if.end470
%1460:	br	 for.inc471

BASIC BLOCK for.inc471
%1461:	add	 %1450 XXX
%1462:	br	 for.cond462

BASIC BLOCK for.end473
%1463:	sext	 %1421
%1464:	getelementptr	 prednames XXX %1463
%1465:	getelementptr	 %1464 XXX XXX
%1466:	load	 %1465
%1467:	call	 %1466 strlen
%1468:	load	 lexptr
%1469:	getelementptr	 %1468 %1467
%1470:	store	 %1469 lexptr
%1471:	sext	 %1421
%1472:	getelementptr	 prednames XXX %1471
%1473:	getelementptr	 %1472 XXX XXX
%1474:	load	 %1473
%1475:	call	 %1474 strlen
%1476:	load	 lexleft
%1477:	sext	 %1476
%1478:	sub	 %1477 %1475
%1479:	trunc	 %1478
%1480:	store	 %1479 lexleft
%1481:	load	 lexleft
%1482:	icmp	 %1481 XXX
%1483:	br	 %1482 if.then486 if.end494

BASIC BLOCK if.then486
%1484:	call	 XXX gettext
%1485:	icmp	 %1484 XXX
%1486:	br	 %1485 if.else492 if.then490

BASIC BLOCK if.then490
%1487:	call	 XXX gettext
%1488:	call	 %1487 dfaerror
%1489:	br	 if.end493

BASIC BLOCK if.else492
%1490:	store	 XXX lasttok
%1491:	br	 return

BASIC BLOCK if.end493
%1492:	br	 if.end494

BASIC BLOCK if.end494
%1493:	load	 lexptr
%1494:	getelementptr	 %1493 XXX
%1495:	store	 %1494 lexptr
%1496:	load	 %1493
%1497:	zext	 %1496
%1498:	load	 lexleft
%1499:	add	 %1498 XXX
%1500:	store	 %1499 lexleft
%1501:	br	 skip

BASIC BLOCK if.end498
%1502:	br	 for.inc499

BASIC BLOCK for.inc499
%1503:	add	 %1421 XXX
%1504:	br	 for.cond439

BASIC BLOCK for.end501
%1505:	br	 if.end502

BASIC BLOCK if.end502
%1506:	icmp	 %1413 XXX
%1507:	br	 %1506 if.end522 land.lhs.true505

BASIC BLOCK land.lhs.true505
%1508:	load	 syntax_bits
%1509:	and	 %1508 XXX
%1510:	icmp	 %1509 XXX
%1511:	br	 %1510 if.end522 if.then508

BASIC BLOCK if.then508
%1512:	load	 lexleft
%1513:	icmp	 %1512 XXX
%1514:	br	 %1513 if.then510 if.end518

BASIC BLOCK if.then510
%1515:	call	 XXX gettext
%1516:	icmp	 %1515 XXX
%1517:	br	 %1516 if.else516 if.then514

BASIC BLOCK if.then514
%1518:	call	 XXX gettext
%1519:	call	 %1518 dfaerror
%1520:	br	 if.end517

BASIC BLOCK if.else516
%1521:	store	 XXX lasttok
%1522:	br	 return

BASIC BLOCK if.end517
%1523:	br	 if.end518

BASIC BLOCK if.end518
%1524:	load	 lexptr
%1525:	getelementptr	 %1524 XXX
%1526:	store	 %1525 lexptr
%1527:	load	 %1524
%1528:	zext	 %1527
%1529:	load	 lexleft
%1530:	add	 %1529 XXX
%1531:	store	 %1530 lexleft
%1532:	br	 if.end522

BASIC BLOCK if.end522
%1533:	phi	 %1528 %1413 %1413
%1534:	load	 lexleft
%1535:	icmp	 %1534 XXX
%1536:	br	 %1535 if.then524 if.end532

BASIC BLOCK if.then524
%1537:	call	 XXX gettext
%1538:	icmp	 %1537 XXX
%1539:	br	 %1538 if.else530 if.then528

BASIC BLOCK if.then528
%1540:	call	 XXX gettext
%1541:	call	 %1540 dfaerror
%1542:	br	 if.end531

BASIC BLOCK if.else530
%1543:	store	 XXX lasttok
%1544:	br	 return

BASIC BLOCK if.end531
%1545:	br	 if.end532

BASIC BLOCK if.end532
%1546:	load	 lexptr
%1547:	getelementptr	 %1546 XXX
%1548:	store	 %1547 lexptr
%1549:	load	 %1546
%1550:	zext	 %1549
%1551:	load	 lexleft
%1552:	add	 %1551 XXX
%1553:	store	 %1552 lexleft
%1554:	icmp	 %1550 XXX
%1555:	br	 %1554 if.else592 if.then538

BASIC BLOCK if.then538
%1556:	load	 lexleft
%1557:	icmp	 %1556 XXX
%1558:	br	 %1557 if.then540 if.end548

BASIC BLOCK if.then540
%1559:	call	 XXX gettext
%1560:	icmp	 %1559 XXX
%1561:	br	 %1560 if.else546 if.then544

BASIC BLOCK if.then544
%1562:	call	 XXX gettext
%1563:	call	 %1562 dfaerror
%1564:	br	 if.end547

BASIC BLOCK if.else546
%1565:	store	 XXX lasttok
%1566:	br	 return

BASIC BLOCK if.end547
%1567:	br	 if.end548

BASIC BLOCK if.end548
%1568:	load	 lexptr
%1569:	getelementptr	 %1568 XXX
%1570:	store	 %1569 lexptr
%1571:	load	 %1568
%1572:	zext	 %1571
%1573:	load	 lexleft
%1574:	add	 %1573 XXX
%1575:	store	 %1574 lexleft
%1576:	icmp	 %1572 XXX
%1577:	br	 %1576 if.else557 if.then554

BASIC BLOCK if.then554
%1578:	load	 lexptr
%1579:	getelementptr	 %1578 XXX
%1580:	store	 %1579 lexptr
%1581:	load	 lexleft
%1582:	add	 %1581 XXX
%1583:	store	 %1582 lexleft
%1584:	br	 if.end591

BASIC BLOCK if.else557
%1585:	icmp	 %1572 XXX
%1586:	br	 %1585 if.end577 land.lhs.true560

BASIC BLOCK land.lhs.true560
%1587:	load	 syntax_bits
%1588:	and	 %1587 XXX
%1589:	icmp	 %1588 XXX
%1590:	br	 %1589 if.end577 if.then563

BASIC BLOCK if.then563
%1591:	load	 lexleft
%1592:	icmp	 %1591 XXX
%1593:	br	 %1592 if.then565 if.end573

BASIC BLOCK if.then565
%1594:	call	 XXX gettext
%1595:	icmp	 %1594 XXX
%1596:	br	 %1595 if.else571 if.then569

BASIC BLOCK if.then569
%1597:	call	 XXX gettext
%1598:	call	 %1597 dfaerror
%1599:	br	 if.end572

BASIC BLOCK if.else571
%1600:	store	 XXX lasttok
%1601:	br	 return

BASIC BLOCK if.end572
%1602:	br	 if.end573

BASIC BLOCK if.end573
%1603:	load	 lexptr
%1604:	getelementptr	 %1603 XXX
%1605:	store	 %1604 lexptr
%1606:	load	 %1603
%1607:	zext	 %1606
%1608:	load	 lexleft
%1609:	add	 %1608 XXX
%1610:	store	 %1609 lexleft
%1611:	br	 if.end577

BASIC BLOCK if.end577
%1612:	phi	 %1607 %1572 %1572
%1613:	load	 lexleft
%1614:	icmp	 %1613 XXX
%1615:	br	 %1614 if.then579 if.end587

BASIC BLOCK if.then579
%1616:	call	 XXX gettext
%1617:	icmp	 %1616 XXX
%1618:	br	 %1617 if.else585 if.then583

BASIC BLOCK if.then583
%1619:	call	 XXX gettext
%1620:	call	 %1619 dfaerror
%1621:	br	 if.end586

BASIC BLOCK if.else585
%1622:	store	 XXX lasttok
%1623:	br	 return

BASIC BLOCK if.end586
%1624:	br	 if.end587

BASIC BLOCK if.end587
%1625:	load	 lexptr
%1626:	getelementptr	 %1625 XXX
%1627:	store	 %1626 lexptr
%1628:	load	 %1625
%1629:	zext	 %1628
%1630:	load	 lexleft
%1631:	add	 %1630 XXX
%1632:	store	 %1631 lexleft
%1633:	br	 if.end591

BASIC BLOCK if.end591
%1634:	phi	 %1533 %1612
%1635:	phi	 %1550 %1629
%1636:	br	 if.end593

BASIC BLOCK if.else592
%1637:	br	 if.end593

BASIC BLOCK if.end593
%1638:	phi	 %1634 %1533
%1639:	phi	 %1635 %1550
%1640:	br	 while.cond

BASIC BLOCK while.cond
%1641:	phi	 %1533 %1677
%1642:	icmp	 %1641 %1638
%1643:	br	 %1642 while.end while.body

BASIC BLOCK while.body
%1644:	getelementptr	 %808 XXX XXX
%1645:	call	 %1641 %1644 setbit
%1646:	load	 case_fold
%1647:	icmp	 %1646 XXX
%1648:	br	 %1647 if.end620 if.then598

BASIC BLOCK if.then598
%1649:	sext	 %1641
%1650:	call	 __ctype_b_loc
%1651:	load	 %1650
%1652:	getelementptr	 %1651 %1649
%1653:	load	 %1652
%1654:	zext	 %1653
%1655:	and	 %1654 XXX
%1656:	icmp	 %1655 XXX
%1657:	br	 %1656 if.else608 if.then605

BASIC BLOCK if.then605
%1658:	call	 %1641 tolower
%1659:	getelementptr	 %808 XXX XXX
%1660:	call	 %1658 %1659 setbit
%1661:	br	 if.end619

BASIC BLOCK if.else608
%1662:	sext	 %1641
%1663:	call	 __ctype_b_loc
%1664:	load	 %1663
%1665:	getelementptr	 %1664 %1662
%1666:	load	 %1665
%1667:	zext	 %1666
%1668:	and	 %1667 XXX
%1669:	icmp	 %1668 XXX
%1670:	br	 %1669 if.end618 if.then615

BASIC BLOCK if.then615
%1671:	call	 %1641 toupper
%1672:	getelementptr	 %808 XXX XXX
%1673:	call	 %1671 %1672 setbit
%1674:	br	 if.end618

BASIC BLOCK if.end618
%1675:	br	 if.end619

BASIC BLOCK if.end619
%1676:	br	 if.end620

BASIC BLOCK if.end620
%1677:	add	 %1641 XXX
%1678:	br	 while.cond

BASIC BLOCK while.end
%1679:	br	 skip

BASIC BLOCK skip
%1680:	phi	 %1497 %1639
%1681:	br	 do.cond

BASIC BLOCK do.cond
%1682:	icmp	 %1680 XXX
%1683:	br	 %1682 do.end do.body

BASIC BLOCK do.end
%1684:	icmp	 %1410 XXX
%1685:	br	 %1684 if.end632 if.then625

BASIC BLOCK if.then625
%1686:	getelementptr	 %808 XXX XXX
%1687:	call	 %1686 notset
%1688:	load	 syntax_bits
%1689:	and	 %1688 XXX
%1690:	icmp	 %1689 XXX
%1691:	br	 %1690 if.end631 if.then629

BASIC BLOCK if.then629
%1692:	getelementptr	 %808 XXX XXX
%1693:	call	 XXX %1692 clrbit
%1694:	br	 if.end631

BASIC BLOCK if.end631
%1695:	br	 if.end632

BASIC BLOCK if.end632
%1696:	store	 XXX laststart
%1697:	getelementptr	 %808 XXX XXX
%1698:	call	 %1697 charclass_index
%1699:	add	 XXX %1698
%1700:	store	 %1699 lasttok
%1701:	br	 return

BASIC BLOCK sw.default
%1702:	br	 normal_char

BASIC BLOCK normal_char
%1703:	store	 XXX laststart
%1704:	load	 case_fold
%1705:	icmp	 %1704 XXX
%1706:	br	 %1705 if.end663 land.lhs.true637

BASIC BLOCK land.lhs.true637
%1707:	sext	 %823
%1708:	call	 __ctype_b_loc
%1709:	load	 %1708
%1710:	getelementptr	 %1709 %1707
%1711:	load	 %1710
%1712:	zext	 %1711
%1713:	and	 %1712 XXX
%1714:	icmp	 %1713 XXX
%1715:	br	 %1714 if.end663 if.then644

BASIC BLOCK if.then644
%1716:	getelementptr	 %808 XXX XXX
%1717:	call	 %1716 zeroset
%1718:	getelementptr	 %808 XXX XXX
%1719:	call	 %823 %1718 setbit
%1720:	sext	 %823
%1721:	call	 __ctype_b_loc
%1722:	load	 %1721
%1723:	getelementptr	 %1722 %1720
%1724:	load	 %1723
%1725:	zext	 %1724
%1726:	and	 %1725 XXX
%1727:	icmp	 %1726 XXX
%1728:	br	 %1727 if.else656 if.then653

BASIC BLOCK if.then653
%1729:	call	 %823 tolower
%1730:	getelementptr	 %808 XXX XXX
%1731:	call	 %1729 %1730 setbit
%1732:	br	 if.end659

BASIC BLOCK if.else656
%1733:	call	 %823 toupper
%1734:	getelementptr	 %808 XXX XXX
%1735:	call	 %1733 %1734 setbit
%1736:	br	 if.end659

BASIC BLOCK if.end659
%1737:	getelementptr	 %808 XXX XXX
%1738:	call	 %1737 charclass_index
%1739:	add	 XXX %1738
%1740:	store	 %1739 lasttok
%1741:	br	 return

BASIC BLOCK if.end663
%1742:	br	 return

BASIC BLOCK sw.epilog
%1743:	br	 for.inc664

BASIC BLOCK for.inc664
%1744:	add	 %810 XXX
%1745:	br	 for.cond

BASIC BLOCK for.end666
%1746:	call	 abort
%1747:	unreachable	

BASIC BLOCK return
%1748:	phi	 %1739 %823 %1699 XXX XXX XXX XXX XXX XXX XXX XXX %1358 %1317 XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX
%1749:	ret	 %1748

FUNCTION regexp

BASIC BLOCK entry
%1750:	call	 branch
%1751:	br	 while.cond

BASIC BLOCK while.cond
%1752:	load	 tok
%1753:	icmp	 %1752 XXX
%1754:	br	 %1753 while.end while.body

BASIC BLOCK while.body
%1755:	call	 lex
%1756:	store	 %1755 tok
%1757:	call	 branch
%1758:	icmp	 toplevel XXX
%1759:	br	 %1758 if.else if.then

BASIC BLOCK if.then
%1760:	call	 XXX addtok
%1761:	br	 if.end

BASIC BLOCK if.else
%1762:	call	 XXX addtok
%1763:	br	 if.end

BASIC BLOCK if.end
%1764:	br	 while.cond

BASIC BLOCK while.end
%1765:	ret	

FUNCTION addtok

BASIC BLOCK entry
%1766:	load	 dfa
%1767:	getelementptr	 %1766 XXX XXX
%1768:	load	 %1767
%1769:	load	 dfa
%1770:	getelementptr	 %1769 XXX XXX
%1771:	load	 %1770
%1772:	icmp	 %1768 %1771
%1773:	br	 %1772 if.end if.then

BASIC BLOCK if.then
%1774:	br	 while.cond

BASIC BLOCK while.cond
%1775:	load	 dfa
%1776:	getelementptr	 %1775 XXX XXX
%1777:	load	 %1776
%1778:	load	 dfa
%1779:	getelementptr	 %1778 XXX XXX
%1780:	load	 %1779
%1781:	icmp	 %1777 %1780
%1782:	br	 %1781 while.end while.body

BASIC BLOCK while.body
%1783:	load	 dfa
%1784:	getelementptr	 %1783 XXX XXX
%1785:	load	 %1784
%1786:	mul	 %1785 XXX
%1787:	store	 %1786 %1784
%1788:	br	 while.cond

BASIC BLOCK while.end
%1789:	load	 dfa
%1790:	getelementptr	 %1789 XXX XXX
%1791:	load	 %1790
%1792:	bitcast	 %1791
%1793:	load	 dfa
%1794:	getelementptr	 %1793 XXX XXX
%1795:	load	 %1794
%1796:	sext	 %1795
%1797:	mul	 %1796 XXX
%1798:	call	 %1792 %1797 xrealloc_1
%1799:	bitcast	 %1798
%1800:	load	 dfa
%1801:	getelementptr	 %1800 XXX XXX
%1802:	store	 %1799 %1801
%1803:	br	 if.end

BASIC BLOCK if.end
%1804:	load	 dfa
%1805:	getelementptr	 %1804 XXX XXX
%1806:	load	 %1805
%1807:	add	 %1806 XXX
%1808:	store	 %1807 %1805
%1809:	sext	 %1806
%1810:	load	 dfa
%1811:	getelementptr	 %1810 XXX XXX
%1812:	load	 %1811
%1813:	getelementptr	 %1812 %1809
%1814:	store	 t %1813
%1815:	switch	 t sw.default XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb10 XXX sw.bb10 XXX sw.bb10 XXX sw.bb12

BASIC BLOCK sw.bb
%1816:	br	 sw.epilog

BASIC BLOCK sw.bb10
%1817:	load	 depth
%1818:	add	 %1817 XXX
%1819:	store	 %1818 depth
%1820:	br	 sw.epilog

BASIC BLOCK sw.default
%1821:	load	 dfa
%1822:	getelementptr	 %1821 XXX XXX
%1823:	load	 %1822
%1824:	add	 %1823 XXX
%1825:	store	 %1824 %1822
%1826:	br	 sw.bb12

BASIC BLOCK sw.bb12
%1827:	load	 depth
%1828:	add	 %1827 XXX
%1829:	store	 %1828 depth
%1830:	br	 sw.epilog

BASIC BLOCK sw.epilog
%1831:	load	 depth
%1832:	load	 dfa
%1833:	getelementptr	 %1832 XXX XXX
%1834:	load	 %1833
%1835:	icmp	 %1831 %1834
%1836:	br	 %1835 if.end18 if.then16

BASIC BLOCK if.then16
%1837:	load	 depth
%1838:	load	 dfa
%1839:	getelementptr	 %1838 XXX XXX
%1840:	store	 %1837 %1839
%1841:	br	 if.end18

BASIC BLOCK if.end18
%1842:	ret	

FUNCTION dfaanalyze

BASIC BLOCK entry
%1843:	alloca	 XXX
%1844:	alloca	 XXX
%1845:	getelementptr	 d XXX XXX
%1846:	store	 searchflag %1845
%1847:	getelementptr	 d XXX XXX
%1848:	load	 %1847
%1849:	sext	 %1848
%1850:	mul	 %1849 XXX
%1851:	call	 %1850 xmalloc_1
%1852:	bitcast	 %1851
%1853:	getelementptr	 d XXX XXX
%1854:	load	 %1853
%1855:	sext	 %1854
%1856:	mul	 %1855 XXX
%1857:	call	 %1856 xmalloc_1
%1858:	bitcast	 %1857
%1859:	getelementptr	 d XXX XXX
%1860:	load	 %1859
%1861:	sext	 %1860
%1862:	mul	 %1861 XXX
%1863:	call	 %1862 xmalloc_1
%1864:	bitcast	 %1863
%1865:	getelementptr	 d XXX XXX
%1866:	load	 %1865
%1867:	sext	 %1866
%1868:	getelementptr	 %1864 %1867
%1869:	getelementptr	 d XXX XXX
%1870:	load	 %1869
%1871:	sext	 %1870
%1872:	mul	 %1871 XXX
%1873:	call	 %1872 xmalloc_1
%1874:	bitcast	 %1873
%1875:	getelementptr	 d XXX XXX
%1876:	load	 %1875
%1877:	sext	 %1876
%1878:	mul	 %1877 XXX
%1879:	call	 %1878 xmalloc_1
%1880:	bitcast	 %1879
%1881:	getelementptr	 d XXX XXX
%1882:	load	 %1881
%1883:	sext	 %1882
%1884:	getelementptr	 %1880 %1883
%1885:	getelementptr	 d XXX XXX
%1886:	load	 %1885
%1887:	sext	 %1886
%1888:	mul	 %1887 XXX
%1889:	call	 %1888 xmalloc_1
%1890:	bitcast	 %1889
%1891:	br	 for.cond

BASIC BLOCK for.cond
%1892:	phi	 XXX %1901
%1893:	getelementptr	 d XXX XXX
%1894:	load	 %1893
%1895:	icmp	 %1892 %1894
%1896:	br	 %1895 for.end for.body

BASIC BLOCK for.body
%1897:	sext	 %1892
%1898:	getelementptr	 %1890 %1897
%1899:	store	 XXX %1898
%1900:	br	 for.inc

BASIC BLOCK for.inc
%1901:	add	 %1892 XXX
%1902:	br	 for.cond

BASIC BLOCK for.end
%1903:	getelementptr	 d XXX XXX
%1904:	load	 %1903
%1905:	sext	 %1904
%1906:	mul	 %1905 XXX
%1907:	call	 %1906 xmalloc_1
%1908:	bitcast	 %1907
%1909:	getelementptr	 %1844 XXX XXX
%1910:	store	 %1908 %1909
%1911:	getelementptr	 d XXX XXX
%1912:	load	 %1911
%1913:	sext	 %1912
%1914:	call	 %1913 XXX xcalloc
%1915:	bitcast	 %1914
%1916:	getelementptr	 d XXX XXX
%1917:	store	 %1915 %1916
%1918:	br	 for.cond43

BASIC BLOCK for.cond43
%1919:	phi	 XXX %2309
%1920:	phi	 %1884 %2303
%1921:	phi	 %1874 %2304
%1922:	phi	 %1868 %2305
%1923:	phi	 %1858 %2306
%1924:	phi	 %1852 %2307
%1925:	getelementptr	 d XXX XXX
%1926:	load	 %1925
%1927:	icmp	 %1919 %1926
%1928:	br	 %1927 for.end291 for.body47

BASIC BLOCK for.body47
%1929:	sext	 %1919
%1930:	getelementptr	 d XXX XXX
%1931:	load	 %1930
%1932:	getelementptr	 %1931 %1929
%1933:	load	 %1932
%1934:	switch	 %1933 sw.default XXX sw.bb XXX sw.bb52 XXX sw.bb52 XXX sw.bb119 XXX sw.bb128 XXX sw.bb250 XXX sw.bb250

BASIC BLOCK sw.bb
%1935:	getelementptr	 %1924 XXX
%1936:	store	 XXX %1924
%1937:	getelementptr	 %1921 XXX
%1938:	store	 XXX %1921
%1939:	getelementptr	 %1923 XXX
%1940:	store	 XXX %1923
%1941:	br	 sw.epilog

BASIC BLOCK sw.bb52
%1942:	getelementptr	 %1923 XXX
%1943:	load	 %1942
%1944:	getelementptr	 %1843 XXX XXX
%1945:	store	 %1943 %1944
%1946:	getelementptr	 %1843 XXX XXX
%1947:	store	 %1922 %1946
%1948:	br	 for.cond55

BASIC BLOCK for.cond55
%1949:	phi	 XXX %2041
%1950:	getelementptr	 %1921 XXX
%1951:	load	 %1950
%1952:	icmp	 %1949 %1951
%1953:	br	 %1952 for.end118 for.body59

BASIC BLOCK for.body59
%1954:	sext	 %1949
%1955:	getelementptr	 %1920 %1954
%1956:	getelementptr	 %1955 XXX XXX
%1957:	load	 %1956
%1958:	zext	 %1957
%1959:	getelementptr	 d XXX XXX
%1960:	load	 %1959
%1961:	getelementptr	 %1960 %1958
%1962:	call	 %1843 %1961 %1844 merge
%1963:	getelementptr	 %1844 XXX XXX
%1964:	load	 %1963
%1965:	sub	 %1964 XXX
%1966:	sext	 %1949
%1967:	getelementptr	 %1920 %1966
%1968:	getelementptr	 %1967 XXX XXX
%1969:	load	 %1968
%1970:	zext	 %1969
%1971:	getelementptr	 %1890 %1970
%1972:	load	 %1971
%1973:	icmp	 %1965 %1972
%1974:	br	 %1973 if.end if.then

BASIC BLOCK if.then
%1975:	br	 while.cond

BASIC BLOCK while.cond
%1976:	getelementptr	 %1844 XXX XXX
%1977:	load	 %1976
%1978:	sub	 %1977 XXX
%1979:	sext	 %1949
%1980:	getelementptr	 %1920 %1979
%1981:	getelementptr	 %1980 XXX XXX
%1982:	load	 %1981
%1983:	zext	 %1982
%1984:	getelementptr	 %1890 %1983
%1985:	load	 %1984
%1986:	icmp	 %1978 %1985
%1987:	br	 %1986 while.end while.body

BASIC BLOCK while.body
%1988:	sext	 %1949
%1989:	getelementptr	 %1920 %1988
%1990:	getelementptr	 %1989 XXX XXX
%1991:	load	 %1990
%1992:	zext	 %1991
%1993:	getelementptr	 %1890 %1992
%1994:	load	 %1993
%1995:	mul	 %1994 XXX
%1996:	store	 %1995 %1993
%1997:	br	 while.cond

BASIC BLOCK while.end
%1998:	sext	 %1949
%1999:	getelementptr	 %1920 %1998
%2000:	getelementptr	 %1999 XXX XXX
%2001:	load	 %2000
%2002:	zext	 %2001
%2003:	getelementptr	 d XXX XXX
%2004:	load	 %2003
%2005:	getelementptr	 %2004 %2002
%2006:	getelementptr	 %2005 XXX XXX
%2007:	load	 %2006
%2008:	bitcast	 %2007
%2009:	sext	 %1949
%2010:	getelementptr	 %1920 %2009
%2011:	getelementptr	 %2010 XXX XXX
%2012:	load	 %2011
%2013:	zext	 %2012
%2014:	getelementptr	 %1890 %2013
%2015:	load	 %2014
%2016:	sext	 %2015
%2017:	mul	 %2016 XXX
%2018:	call	 %2008 %2017 xrealloc_1
%2019:	bitcast	 %2018
%2020:	sext	 %1949
%2021:	getelementptr	 %1920 %2020
%2022:	getelementptr	 %2021 XXX XXX
%2023:	load	 %2022
%2024:	zext	 %2023
%2025:	getelementptr	 d XXX XXX
%2026:	load	 %2025
%2027:	getelementptr	 %2026 %2024
%2028:	getelementptr	 %2027 XXX XXX
%2029:	store	 %2019 %2028
%2030:	br	 if.end

BASIC BLOCK if.end
%2031:	sext	 %1949
%2032:	getelementptr	 %1920 %2031
%2033:	getelementptr	 %2032 XXX XXX
%2034:	load	 %2033
%2035:	zext	 %2034
%2036:	getelementptr	 d XXX XXX
%2037:	load	 %2036
%2038:	getelementptr	 %2037 %2035
%2039:	call	 %1844 %2038 copy
%2040:	br	 for.inc116

BASIC BLOCK for.inc116
%2041:	add	 %1949 XXX
%2042:	br	 for.cond55

BASIC BLOCK for.end118
%2043:	br	 sw.bb119

BASIC BLOCK sw.bb119
%2044:	sext	 %1919
%2045:	getelementptr	 d XXX XXX
%2046:	load	 %2045
%2047:	getelementptr	 %2046 %2044
%2048:	load	 %2047
%2049:	icmp	 %2048 XXX
%2050:	br	 %2049 if.end127 if.then125

BASIC BLOCK if.then125
%2051:	getelementptr	 %1924 XXX
%2052:	store	 XXX %2051
%2053:	br	 if.end127

BASIC BLOCK if.end127
%2054:	br	 sw.epilog

BASIC BLOCK sw.bb128
%2055:	getelementptr	 %1923 XXX
%2056:	load	 %2055
%2057:	getelementptr	 %1843 XXX XXX
%2058:	store	 %2056 %2057
%2059:	getelementptr	 %1843 XXX XXX
%2060:	store	 %1922 %2059
%2061:	getelementptr	 %1921 XXX
%2062:	load	 %2061
%2063:	sext	 %2062
%2064:	getelementptr	 %1920 %2063
%2065:	br	 for.cond135

BASIC BLOCK for.cond135
%2066:	phi	 XXX %2158
%2067:	getelementptr	 %1921 XXX
%2068:	load	 %2067
%2069:	icmp	 %2066 %2068
%2070:	br	 %2069 for.end205 for.body139

BASIC BLOCK for.body139
%2071:	sext	 %2066
%2072:	getelementptr	 %2064 %2071
%2073:	getelementptr	 %2072 XXX XXX
%2074:	load	 %2073
%2075:	zext	 %2074
%2076:	getelementptr	 d XXX XXX
%2077:	load	 %2076
%2078:	getelementptr	 %2077 %2075
%2079:	call	 %1843 %2078 %1844 merge
%2080:	getelementptr	 %1844 XXX XXX
%2081:	load	 %2080
%2082:	sub	 %2081 XXX
%2083:	sext	 %2066
%2084:	getelementptr	 %2064 %2083
%2085:	getelementptr	 %2084 XXX XXX
%2086:	load	 %2085
%2087:	zext	 %2086
%2088:	getelementptr	 %1890 %2087
%2089:	load	 %2088
%2090:	icmp	 %2082 %2089
%2091:	br	 %2090 if.end196 if.then155

BASIC BLOCK if.then155
%2092:	br	 while.cond156

BASIC BLOCK while.cond156
%2093:	getelementptr	 %1844 XXX XXX
%2094:	load	 %2093
%2095:	sub	 %2094 XXX
%2096:	sext	 %2066
%2097:	getelementptr	 %2064 %2096
%2098:	getelementptr	 %2097 XXX XXX
%2099:	load	 %2098
%2100:	zext	 %2099
%2101:	getelementptr	 %1890 %2100
%2102:	load	 %2101
%2103:	icmp	 %2095 %2102
%2104:	br	 %2103 while.end173 while.body166

BASIC BLOCK while.body166
%2105:	sext	 %2066
%2106:	getelementptr	 %2064 %2105
%2107:	getelementptr	 %2106 XXX XXX
%2108:	load	 %2107
%2109:	zext	 %2108
%2110:	getelementptr	 %1890 %2109
%2111:	load	 %2110
%2112:	mul	 %2111 XXX
%2113:	store	 %2112 %2110
%2114:	br	 while.cond156

BASIC BLOCK while.end173
%2115:	sext	 %2066
%2116:	getelementptr	 %2064 %2115
%2117:	getelementptr	 %2116 XXX XXX
%2118:	load	 %2117
%2119:	zext	 %2118
%2120:	getelementptr	 d XXX XXX
%2121:	load	 %2120
%2122:	getelementptr	 %2121 %2119
%2123:	getelementptr	 %2122 XXX XXX
%2124:	load	 %2123
%2125:	bitcast	 %2124
%2126:	sext	 %2066
%2127:	getelementptr	 %2064 %2126
%2128:	getelementptr	 %2127 XXX XXX
%2129:	load	 %2128
%2130:	zext	 %2129
%2131:	getelementptr	 %1890 %2130
%2132:	load	 %2131
%2133:	sext	 %2132
%2134:	mul	 %2133 XXX
%2135:	call	 %2125 %2134 xrealloc_1
%2136:	bitcast	 %2135
%2137:	sext	 %2066
%2138:	getelementptr	 %2064 %2137
%2139:	getelementptr	 %2138 XXX XXX
%2140:	load	 %2139
%2141:	zext	 %2140
%2142:	getelementptr	 d XXX XXX
%2143:	load	 %2142
%2144:	getelementptr	 %2143 %2141
%2145:	getelementptr	 %2144 XXX XXX
%2146:	store	 %2136 %2145
%2147:	br	 if.end196

BASIC BLOCK if.end196
%2148:	sext	 %2066
%2149:	getelementptr	 %2064 %2148
%2150:	getelementptr	 %2149 XXX XXX
%2151:	load	 %2150
%2152:	zext	 %2151
%2153:	getelementptr	 d XXX XXX
%2154:	load	 %2153
%2155:	getelementptr	 %2154 %2152
%2156:	call	 %1844 %2155 copy
%2157:	br	 for.inc203

BASIC BLOCK for.inc203
%2158:	add	 %2066 XXX
%2159:	br	 for.cond135

BASIC BLOCK for.end205
%2160:	getelementptr	 %1924 XXX
%2161:	load	 %2160
%2162:	icmp	 %2161 XXX
%2163:	br	 %2162 if.else if.then207

BASIC BLOCK if.then207
%2164:	getelementptr	 %1923 XXX
%2165:	load	 %2164
%2166:	getelementptr	 %1923 XXX
%2167:	load	 %2166
%2168:	add	 %2167 %2165
%2169:	store	 %2168 %2166
%2170:	br	 if.end213

BASIC BLOCK if.else
%2171:	getelementptr	 %1923 XXX
%2172:	load	 %2171
%2173:	sext	 %2172
%2174:	getelementptr	 %1922 %2173
%2175:	br	 if.end213

BASIC BLOCK if.end213
%2176:	phi	 %1922 %2174
%2177:	getelementptr	 %1923 XXX
%2178:	getelementptr	 %1924 XXX
%2179:	load	 %2178
%2180:	icmp	 %2179 XXX
%2181:	br	 %2180 if.else221 if.then217

BASIC BLOCK if.then217
%2182:	getelementptr	 %1921 XXX
%2183:	load	 %2182
%2184:	getelementptr	 %1921 XXX
%2185:	load	 %2184
%2186:	add	 %2185 %2183
%2187:	store	 %2186 %2184
%2188:	br	 if.end242

BASIC BLOCK if.else221
%2189:	getelementptr	 %1921 XXX
%2190:	load	 %2189
%2191:	sext	 %2190
%2192:	getelementptr	 %1920 %2191
%2193:	getelementptr	 %1921 XXX
%2194:	load	 %2193
%2195:	sub	 %2194 XXX
%2196:	br	 for.cond227

BASIC BLOCK for.cond227
%2197:	phi	 %2195 %2208
%2198:	icmp	 %2197 XXX
%2199:	br	 %2198 for.end236 for.body230

BASIC BLOCK for.body230
%2200:	sext	 %2197
%2201:	getelementptr	 %2192 %2200
%2202:	sext	 %2197
%2203:	getelementptr	 %1920 %2202
%2204:	bitcast	 %2201
%2205:	bitcast	 %2203
%2206:	call	 %2204 %2205 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2207:	br	 for.inc235

BASIC BLOCK for.inc235
%2208:	add	 %2197 XXX
%2209:	br	 for.cond227

BASIC BLOCK for.end236
%2210:	getelementptr	 %1921 XXX
%2211:	load	 %2210
%2212:	sext	 %2211
%2213:	getelementptr	 %1920 %2212
%2214:	getelementptr	 %1921 XXX
%2215:	load	 %2214
%2216:	getelementptr	 %1921 XXX
%2217:	store	 %2215 %2216
%2218:	br	 if.end242

BASIC BLOCK if.end242
%2219:	phi	 %1920 %2213
%2220:	getelementptr	 %1921 XXX
%2221:	getelementptr	 %1924 XXX
%2222:	load	 %2221
%2223:	icmp	 %2222 XXX
%2224:	br	 %2223 land.end land.rhs

BASIC BLOCK land.rhs
%2225:	getelementptr	 %1924 XXX
%2226:	load	 %2225
%2227:	icmp	 %2226 XXX
%2228:	br	 land.end

BASIC BLOCK land.end
%2229:	phi	 XXX %2227
%2230:	zext	 %2229
%2231:	getelementptr	 %1924 XXX
%2232:	store	 %2230 %2231
%2233:	getelementptr	 %1924 XXX
%2234:	br	 sw.epilog

BASIC BLOCK sw.bb250
%2235:	getelementptr	 %1923 XXX
%2236:	load	 %2235
%2237:	getelementptr	 %1923 XXX
%2238:	load	 %2237
%2239:	add	 %2238 %2236
%2240:	store	 %2239 %2237
%2241:	getelementptr	 %1923 XXX
%2242:	getelementptr	 %1921 XXX
%2243:	load	 %2242
%2244:	getelementptr	 %1921 XXX
%2245:	load	 %2244
%2246:	add	 %2245 %2243
%2247:	store	 %2246 %2244
%2248:	getelementptr	 %1921 XXX
%2249:	getelementptr	 %1924 XXX
%2250:	load	 %2249
%2251:	icmp	 %2250 XXX
%2252:	br	 %2251 lor.rhs lor.end

BASIC BLOCK lor.rhs
%2253:	getelementptr	 %1924 XXX
%2254:	load	 %2253
%2255:	icmp	 %2254 XXX
%2256:	br	 lor.end

BASIC BLOCK lor.end
%2257:	phi	 XXX %2255
%2258:	zext	 %2257
%2259:	getelementptr	 %1924 XXX
%2260:	store	 %2258 %2259
%2261:	getelementptr	 %1924 XXX
%2262:	br	 sw.epilog

BASIC BLOCK sw.default
%2263:	sext	 %1919
%2264:	getelementptr	 d XXX XXX
%2265:	load	 %2264
%2266:	getelementptr	 %2265 %2263
%2267:	load	 %2266
%2268:	icmp	 %2267 XXX
%2269:	zext	 %2268
%2270:	getelementptr	 %1924 XXX
%2271:	store	 %2269 %1924
%2272:	getelementptr	 %1921 XXX
%2273:	store	 XXX %1921
%2274:	getelementptr	 %1923 XXX
%2275:	store	 XXX %1923
%2276:	getelementptr	 %1922 XXX
%2277:	getelementptr	 %1920 XXX
%2278:	getelementptr	 %2277 XXX XXX
%2279:	store	 %1919 %2278
%2280:	getelementptr	 %2276 XXX XXX
%2281:	store	 %1919 %2280
%2282:	getelementptr	 %2277 XXX XXX
%2283:	store	 XXX %2282
%2284:	getelementptr	 %2276 XXX XXX
%2285:	store	 XXX %2284
%2286:	sext	 %1919
%2287:	getelementptr	 %1890 %2286
%2288:	store	 XXX %2287
%2289:	sext	 %1919
%2290:	getelementptr	 %1890 %2289
%2291:	load	 %2290
%2292:	sext	 %2291
%2293:	mul	 %2292 XXX
%2294:	call	 %2293 xmalloc_1
%2295:	bitcast	 %2294
%2296:	sext	 %1919
%2297:	getelementptr	 d XXX XXX
%2298:	load	 %2297
%2299:	getelementptr	 %2298 %2296
%2300:	getelementptr	 %2299 XXX XXX
%2301:	store	 %2295 %2300
%2302:	br	 sw.epilog

BASIC BLOCK sw.epilog
%2303:	phi	 %2277 %1920 %2219 %1920 %1920
%2304:	phi	 %2272 %2248 %2220 %1921 %1937
%2305:	phi	 %2276 %1922 %2176 %1922 %1922
%2306:	phi	 %2274 %2241 %2177 %1923 %1939
%2307:	phi	 %2270 %2261 %2233 %1924 %1935
%2308:	br	 for.inc289

BASIC BLOCK for.inc289
%2309:	add	 %1919 XXX
%2310:	br	 for.cond43

BASIC BLOCK for.end291
%2311:	br	 for.cond292

BASIC BLOCK for.cond292
%2312:	phi	 XXX %2381
%2313:	getelementptr	 d XXX XXX
%2314:	load	 %2313
%2315:	icmp	 %2312 %2314
%2316:	br	 %2315 for.end344 for.body296

BASIC BLOCK for.body296
%2317:	sext	 %2312
%2318:	getelementptr	 d XXX XXX
%2319:	load	 %2318
%2320:	getelementptr	 %2319 %2317
%2321:	load	 %2320
%2322:	icmp	 %2321 XXX
%2323:	br	 %2322 lor.lhs.false if.then313

BASIC BLOCK lor.lhs.false
%2324:	sext	 %2312
%2325:	getelementptr	 d XXX XXX
%2326:	load	 %2325
%2327:	getelementptr	 %2326 %2324
%2328:	load	 %2327
%2329:	icmp	 %2328 XXX
%2330:	br	 %2329 lor.lhs.false307 if.then313

BASIC BLOCK lor.lhs.false307
%2331:	sext	 %2312
%2332:	getelementptr	 d XXX XXX
%2333:	load	 %2332
%2334:	getelementptr	 %2333 %2331
%2335:	load	 %2334
%2336:	icmp	 %2335 XXX
%2337:	br	 %2336 if.end341 if.then313

BASIC BLOCK if.then313
%2338:	sext	 %2312
%2339:	getelementptr	 d XXX XXX
%2340:	load	 %2339
%2341:	getelementptr	 %2340 %2338
%2342:	call	 %2341 %1844 copy
%2343:	call	 %1844 d epsclosure
%2344:	sext	 %2312
%2345:	getelementptr	 d XXX XXX
%2346:	load	 %2345
%2347:	getelementptr	 %2346 %2344
%2348:	getelementptr	 %2347 XXX XXX
%2349:	load	 %2348
%2350:	getelementptr	 %1844 XXX XXX
%2351:	load	 %2350
%2352:	icmp	 %2349 %2351
%2353:	br	 %2352 if.end337 if.then324

BASIC BLOCK if.then324
%2354:	sext	 %2312
%2355:	getelementptr	 d XXX XXX
%2356:	load	 %2355
%2357:	getelementptr	 %2356 %2354
%2358:	getelementptr	 %2357 XXX XXX
%2359:	load	 %2358
%2360:	bitcast	 %2359
%2361:	getelementptr	 %1844 XXX XXX
%2362:	load	 %2361
%2363:	sext	 %2362
%2364:	mul	 %2363 XXX
%2365:	call	 %2360 %2364 xrealloc_1
%2366:	bitcast	 %2365
%2367:	sext	 %2312
%2368:	getelementptr	 d XXX XXX
%2369:	load	 %2368
%2370:	getelementptr	 %2369 %2367
%2371:	getelementptr	 %2370 XXX XXX
%2372:	store	 %2366 %2371
%2373:	br	 if.end337

BASIC BLOCK if.end337
%2374:	sext	 %2312
%2375:	getelementptr	 d XXX XXX
%2376:	load	 %2375
%2377:	getelementptr	 %2376 %2374
%2378:	call	 %1844 %2377 copy
%2379:	br	 if.end341

BASIC BLOCK if.end341
%2380:	br	 for.inc342

BASIC BLOCK for.inc342
%2381:	add	 %2312 XXX
%2382:	br	 for.cond292

BASIC BLOCK for.end344
%2383:	getelementptr	 %1844 XXX XXX
%2384:	store	 XXX %2383
%2385:	br	 for.cond346

BASIC BLOCK for.cond346
%2386:	phi	 XXX %2397
%2387:	getelementptr	 %1923 XXX
%2388:	load	 %2387
%2389:	icmp	 %2386 %2388
%2390:	br	 %2389 for.end355 for.body350

BASIC BLOCK for.body350
%2391:	sext	 %2386
%2392:	getelementptr	 %1922 %2391
%2393:	bitcast	 %2392
%2394:	load	 %2393
%2395:	call	 %2394 %1844 insert
%2396:	br	 for.inc353

BASIC BLOCK for.inc353
%2397:	add	 %2386 XXX
%2398:	br	 for.cond346

BASIC BLOCK for.end355
%2399:	call	 %1844 d epsclosure
%2400:	br	 for.cond356

BASIC BLOCK for.cond356
%2401:	phi	 XXX %2425
%2402:	phi	 XXX %2427
%2403:	getelementptr	 %1844 XXX XXX
%2404:	load	 %2403
%2405:	icmp	 %2402 %2404
%2406:	br	 %2405 for.end376 for.body360

BASIC BLOCK for.body360
%2407:	sext	 %2402
%2408:	getelementptr	 %1844 XXX XXX
%2409:	load	 %2408
%2410:	getelementptr	 %2409 %2407
%2411:	getelementptr	 %2410 XXX XXX
%2412:	load	 %2411
%2413:	and	 %2412 XXX
%2414:	lshr	 %2413 XXX
%2415:	sext	 %2402
%2416:	getelementptr	 %1844 XXX XXX
%2417:	load	 %2416
%2418:	getelementptr	 %2417 %2415
%2419:	getelementptr	 %2418 XXX XXX
%2420:	load	 %2419
%2421:	and	 %2420 XXX
%2422:	icmp	 %2414 %2421
%2423:	br	 %2422 if.end373 if.then372

BASIC BLOCK if.then372
%2424:	br	 if.end373

BASIC BLOCK if.end373
%2425:	phi	 XXX %2401
%2426:	br	 for.inc374

BASIC BLOCK for.inc374
%2427:	add	 %2402 XXX
%2428:	br	 for.cond356

BASIC BLOCK for.end376
%2429:	getelementptr	 d XXX XXX
%2430:	store	 XXX %2429
%2431:	getelementptr	 d XXX XXX
%2432:	store	 XXX %2431
%2433:	getelementptr	 d XXX XXX
%2434:	load	 %2433
%2435:	sext	 %2434
%2436:	mul	 %2435 XXX
%2437:	call	 %2436 xmalloc_1
%2438:	bitcast	 %2437
%2439:	getelementptr	 d XXX XXX
%2440:	store	 %2438 %2439
%2441:	call	 d %1844 %2401 XXX state_index
%2442:	bitcast	 %1852
%2443:	call	 %2442 free
%2444:	bitcast	 %1858
%2445:	call	 %2444 free
%2446:	bitcast	 %1864
%2447:	call	 %2446 free
%2448:	bitcast	 %1874
%2449:	call	 %2448 free
%2450:	bitcast	 %1880
%2451:	call	 %2450 free
%2452:	bitcast	 %1890
%2453:	call	 %2452 free
%2454:	getelementptr	 %1844 XXX XXX
%2455:	load	 %2454
%2456:	bitcast	 %2455
%2457:	call	 %2456 free
%2458:	ret	

FUNCTION xmalloc_1

BASIC BLOCK entry
%2459:	call	 n malloc
%2460:	icmp	 %2459 XXX
%2461:	br	 %2460 if.then if.end

BASIC BLOCK if.then
%2462:	call	 XXX gettext
%2463:	call	 %2462 dfaerror
%2464:	br	 if.end

BASIC BLOCK if.end
%2465:	ret	 %2459

FUNCTION xcalloc

BASIC BLOCK entry
%2466:	call	 n s calloc
%2467:	icmp	 %2466 XXX
%2468:	br	 %2467 if.then if.end

BASIC BLOCK if.then
%2469:	call	 XXX gettext
%2470:	call	 %2469 dfaerror
%2471:	br	 if.end

BASIC BLOCK if.end
%2472:	ret	 %2466

FUNCTION merge

BASIC BLOCK entry
%2473:	getelementptr	 m XXX XXX
%2474:	store	 XXX %2473
%2475:	br	 while.cond

BASIC BLOCK while.cond
%2476:	phi	 XXX %2587
%2477:	phi	 XXX %2588
%2478:	getelementptr	 s1 XXX XXX
%2479:	load	 %2478
%2480:	icmp	 %2476 %2479
%2481:	br	 %2480 land.end land.rhs

BASIC BLOCK land.rhs
%2482:	getelementptr	 s2 XXX XXX
%2483:	load	 %2482
%2484:	icmp	 %2477 %2483
%2485:	br	 land.end

BASIC BLOCK land.end
%2486:	phi	 XXX %2484
%2487:	br	 %2486 while.end while.body

BASIC BLOCK while.body
%2488:	sext	 %2476
%2489:	getelementptr	 s1 XXX XXX
%2490:	load	 %2489
%2491:	getelementptr	 %2490 %2488
%2492:	getelementptr	 %2491 XXX XXX
%2493:	load	 %2492
%2494:	sext	 %2477
%2495:	getelementptr	 s2 XXX XXX
%2496:	load	 %2495
%2497:	getelementptr	 %2496 %2494
%2498:	getelementptr	 %2497 XXX XXX
%2499:	load	 %2498
%2500:	icmp	 %2493 %2499
%2501:	br	 %2500 if.else if.then

BASIC BLOCK if.then
%2502:	getelementptr	 m XXX XXX
%2503:	load	 %2502
%2504:	add	 %2503 XXX
%2505:	store	 %2504 %2502
%2506:	sext	 %2503
%2507:	getelementptr	 m XXX XXX
%2508:	load	 %2507
%2509:	getelementptr	 %2508 %2506
%2510:	add	 %2476 XXX
%2511:	sext	 %2476
%2512:	getelementptr	 s1 XXX XXX
%2513:	load	 %2512
%2514:	getelementptr	 %2513 %2511
%2515:	bitcast	 %2509
%2516:	bitcast	 %2514
%2517:	call	 %2515 %2516 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2518:	br	 if.end55

BASIC BLOCK if.else
%2519:	sext	 %2476
%2520:	getelementptr	 s1 XXX XXX
%2521:	load	 %2520
%2522:	getelementptr	 %2521 %2519
%2523:	getelementptr	 %2522 XXX XXX
%2524:	load	 %2523
%2525:	sext	 %2477
%2526:	getelementptr	 s2 XXX XXX
%2527:	load	 %2526
%2528:	getelementptr	 %2527 %2525
%2529:	getelementptr	 %2528 XXX XXX
%2530:	load	 %2529
%2531:	icmp	 %2524 %2530
%2532:	br	 %2531 if.else36 if.then26

BASIC BLOCK if.then26
%2533:	getelementptr	 m XXX XXX
%2534:	load	 %2533
%2535:	add	 %2534 XXX
%2536:	store	 %2535 %2533
%2537:	sext	 %2534
%2538:	getelementptr	 m XXX XXX
%2539:	load	 %2538
%2540:	getelementptr	 %2539 %2537
%2541:	add	 %2477 XXX
%2542:	sext	 %2477
%2543:	getelementptr	 s2 XXX XXX
%2544:	load	 %2543
%2545:	getelementptr	 %2544 %2542
%2546:	bitcast	 %2540
%2547:	bitcast	 %2545
%2548:	call	 %2546 %2547 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2549:	br	 if.end

BASIC BLOCK if.else36
%2550:	getelementptr	 m XXX XXX
%2551:	load	 %2550
%2552:	sext	 %2551
%2553:	getelementptr	 m XXX XXX
%2554:	load	 %2553
%2555:	getelementptr	 %2554 %2552
%2556:	add	 %2476 XXX
%2557:	sext	 %2476
%2558:	getelementptr	 s1 XXX XXX
%2559:	load	 %2558
%2560:	getelementptr	 %2559 %2557
%2561:	bitcast	 %2555
%2562:	bitcast	 %2560
%2563:	call	 %2561 %2562 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2564:	add	 %2477 XXX
%2565:	sext	 %2477
%2566:	getelementptr	 s2 XXX XXX
%2567:	load	 %2566
%2568:	getelementptr	 %2567 %2565
%2569:	getelementptr	 %2568 XXX XXX
%2570:	load	 %2569
%2571:	getelementptr	 m XXX XXX
%2572:	load	 %2571
%2573:	add	 %2572 XXX
%2574:	store	 %2573 %2571
%2575:	sext	 %2572
%2576:	getelementptr	 m XXX XXX
%2577:	load	 %2576
%2578:	getelementptr	 %2577 %2575
%2579:	getelementptr	 %2578 XXX XXX
%2580:	load	 %2579
%2581:	or	 %2580 %2570
%2582:	store	 %2581 %2579
%2583:	br	 if.end

BASIC BLOCK if.end
%2584:	phi	 %2476 %2556
%2585:	phi	 %2541 %2564
%2586:	br	 if.end55

BASIC BLOCK if.end55
%2587:	phi	 %2510 %2584
%2588:	phi	 %2477 %2585
%2589:	br	 while.cond

BASIC BLOCK while.end
%2590:	br	 while.cond56

BASIC BLOCK while.cond56
%2591:	phi	 %2476 %2604
%2592:	getelementptr	 s1 XXX XXX
%2593:	load	 %2592
%2594:	icmp	 %2591 %2593
%2595:	br	 %2594 while.end69 while.body59

BASIC BLOCK while.body59
%2596:	getelementptr	 m XXX XXX
%2597:	load	 %2596
%2598:	add	 %2597 XXX
%2599:	store	 %2598 %2596
%2600:	sext	 %2597
%2601:	getelementptr	 m XXX XXX
%2602:	load	 %2601
%2603:	getelementptr	 %2602 %2600
%2604:	add	 %2591 XXX
%2605:	sext	 %2591
%2606:	getelementptr	 s1 XXX XXX
%2607:	load	 %2606
%2608:	getelementptr	 %2607 %2605
%2609:	bitcast	 %2603
%2610:	bitcast	 %2608
%2611:	call	 %2609 %2610 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2612:	br	 while.cond56

BASIC BLOCK while.end69
%2613:	br	 while.cond70

BASIC BLOCK while.cond70
%2614:	phi	 %2477 %2627
%2615:	getelementptr	 s2 XXX XXX
%2616:	load	 %2615
%2617:	icmp	 %2614 %2616
%2618:	br	 %2617 while.end83 while.body73

BASIC BLOCK while.body73
%2619:	getelementptr	 m XXX XXX
%2620:	load	 %2619
%2621:	add	 %2620 XXX
%2622:	store	 %2621 %2619
%2623:	sext	 %2620
%2624:	getelementptr	 m XXX XXX
%2625:	load	 %2624
%2626:	getelementptr	 %2625 %2623
%2627:	add	 %2614 XXX
%2628:	sext	 %2614
%2629:	getelementptr	 s2 XXX XXX
%2630:	load	 %2629
%2631:	getelementptr	 %2630 %2628
%2632:	bitcast	 %2626
%2633:	bitcast	 %2631
%2634:	call	 %2632 %2633 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2635:	br	 while.cond70

BASIC BLOCK while.end83
%2636:	ret	

FUNCTION xrealloc_1

BASIC BLOCK entry
%2637:	call	 p n realloc
%2638:	icmp	 %2637 XXX
%2639:	br	 %2638 if.then if.end

BASIC BLOCK if.then
%2640:	call	 XXX gettext
%2641:	call	 %2640 dfaerror
%2642:	br	 if.end

BASIC BLOCK if.end
%2643:	ret	 %2637

FUNCTION copy

BASIC BLOCK entry
%2644:	br	 for.cond

BASIC BLOCK for.cond
%2645:	phi	 XXX %2662
%2646:	getelementptr	 src XXX XXX
%2647:	load	 %2646
%2648:	icmp	 %2645 %2647
%2649:	br	 %2648 for.end for.body

BASIC BLOCK for.body
%2650:	sext	 %2645
%2651:	getelementptr	 dst XXX XXX
%2652:	load	 %2651
%2653:	getelementptr	 %2652 %2650
%2654:	sext	 %2645
%2655:	getelementptr	 src XXX XXX
%2656:	load	 %2655
%2657:	getelementptr	 %2656 %2654
%2658:	bitcast	 %2653
%2659:	bitcast	 %2657
%2660:	call	 %2658 %2659 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2661:	br	 for.inc

BASIC BLOCK for.inc
%2662:	add	 %2645 XXX
%2663:	br	 for.cond

BASIC BLOCK for.end
%2664:	getelementptr	 src XXX XXX
%2665:	load	 %2664
%2666:	getelementptr	 dst XXX XXX
%2667:	store	 %2665 %2666
%2668:	ret	

FUNCTION epsclosure

BASIC BLOCK entry
%2669:	alloca	 XXX
%2670:	alloca	 XXX
%2671:	getelementptr	 d XXX XXX
%2672:	load	 %2671
%2673:	sext	 %2672
%2674:	mul	 %2673 XXX
%2675:	call	 %2674 xmalloc_1
%2676:	bitcast	 %2675
%2677:	br	 for.cond

BASIC BLOCK for.cond
%2678:	phi	 XXX %2687
%2679:	getelementptr	 d XXX XXX
%2680:	load	 %2679
%2681:	icmp	 %2678 %2680
%2682:	br	 %2681 for.end for.body

BASIC BLOCK for.body
%2683:	sext	 %2678
%2684:	getelementptr	 %2676 %2683
%2685:	store	 XXX %2684
%2686:	br	 for.inc

BASIC BLOCK for.inc
%2687:	add	 %2678 XXX
%2688:	br	 for.cond

BASIC BLOCK for.end
%2689:	br	 for.cond3

BASIC BLOCK for.cond3
%2690:	phi	 XXX %2841
%2691:	getelementptr	 s XXX XXX
%2692:	load	 %2691
%2693:	icmp	 %2690 %2692
%2694:	br	 %2693 for.end89 for.body6

BASIC BLOCK for.body6
%2695:	sext	 %2690
%2696:	getelementptr	 s XXX XXX
%2697:	load	 %2696
%2698:	getelementptr	 %2697 %2695
%2699:	getelementptr	 %2698 XXX XXX
%2700:	load	 %2699
%2701:	zext	 %2700
%2702:	getelementptr	 d XXX XXX
%2703:	load	 %2702
%2704:	getelementptr	 %2703 %2701
%2705:	load	 %2704
%2706:	icmp	 %2705 XXX
%2707:	br	 %2706 if.end86 land.lhs.true

BASIC BLOCK land.lhs.true
%2708:	sext	 %2690
%2709:	getelementptr	 s XXX XXX
%2710:	load	 %2709
%2711:	getelementptr	 %2710 %2708
%2712:	getelementptr	 %2711 XXX XXX
%2713:	load	 %2712
%2714:	zext	 %2713
%2715:	getelementptr	 d XXX XXX
%2716:	load	 %2715
%2717:	getelementptr	 %2716 %2714
%2718:	load	 %2717
%2719:	icmp	 %2718 XXX
%2720:	br	 %2719 if.end86 land.lhs.true22

BASIC BLOCK land.lhs.true22
%2721:	sext	 %2690
%2722:	getelementptr	 s XXX XXX
%2723:	load	 %2722
%2724:	getelementptr	 %2723 %2721
%2725:	getelementptr	 %2724 XXX XXX
%2726:	load	 %2725
%2727:	zext	 %2726
%2728:	getelementptr	 d XXX XXX
%2729:	load	 %2728
%2730:	getelementptr	 %2729 %2727
%2731:	load	 %2730
%2732:	icmp	 %2731 XXX
%2733:	br	 %2732 if.end86 if.then

BASIC BLOCK if.then
%2734:	sext	 %2690
%2735:	getelementptr	 s XXX XXX
%2736:	load	 %2735
%2737:	getelementptr	 %2736 %2734
%2738:	bitcast	 %2670
%2739:	bitcast	 %2737
%2740:	call	 %2738 %2739 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2741:	getelementptr	 %2670 XXX XXX
%2742:	load	 %2741
%2743:	getelementptr	 %2669 XXX XXX
%2744:	store	 %2742 %2743
%2745:	sext	 %2690
%2746:	getelementptr	 s XXX XXX
%2747:	load	 %2746
%2748:	getelementptr	 %2747 %2745
%2749:	bitcast	 %2748
%2750:	load	 %2749
%2751:	call	 %2750 s delete
%2752:	getelementptr	 %2670 XXX XXX
%2753:	load	 %2752
%2754:	zext	 %2753
%2755:	getelementptr	 %2676 %2754
%2756:	load	 %2755
%2757:	icmp	 %2756 XXX
%2758:	br	 %2757 if.end if.then42

BASIC BLOCK if.then42
%2759:	add	 %2690 XXX
%2760:	br	 for.inc87

BASIC BLOCK if.end
%2761:	getelementptr	 %2670 XXX XXX
%2762:	load	 %2761
%2763:	zext	 %2762
%2764:	getelementptr	 %2676 %2763
%2765:	store	 XXX %2764
%2766:	getelementptr	 %2670 XXX XXX
%2767:	load	 %2766
%2768:	zext	 %2767
%2769:	getelementptr	 d XXX XXX
%2770:	load	 %2769
%2771:	getelementptr	 %2770 %2768
%2772:	load	 %2771
%2773:	switch	 %2772 sw.default XXX sw.bb XXX sw.bb51 XXX sw.bb54 XXX sw.bb57 XXX sw.bb60 XXX sw.bb63

BASIC BLOCK sw.bb
%2774:	getelementptr	 %2669 XXX XXX
%2775:	load	 %2774
%2776:	and	 %2775 XXX
%2777:	store	 %2776 %2774
%2778:	br	 sw.epilog

BASIC BLOCK sw.bb51
%2779:	getelementptr	 %2669 XXX XXX
%2780:	load	 %2779
%2781:	and	 %2780 XXX
%2782:	store	 %2781 %2779
%2783:	br	 sw.epilog

BASIC BLOCK sw.bb54
%2784:	getelementptr	 %2669 XXX XXX
%2785:	load	 %2784
%2786:	and	 %2785 XXX
%2787:	store	 %2786 %2784
%2788:	br	 sw.epilog

BASIC BLOCK sw.bb57
%2789:	getelementptr	 %2669 XXX XXX
%2790:	load	 %2789
%2791:	and	 %2790 XXX
%2792:	store	 %2791 %2789
%2793:	br	 sw.epilog

BASIC BLOCK sw.bb60
%2794:	getelementptr	 %2669 XXX XXX
%2795:	load	 %2794
%2796:	and	 %2795 XXX
%2797:	store	 %2796 %2794
%2798:	br	 sw.epilog

BASIC BLOCK sw.bb63
%2799:	getelementptr	 %2669 XXX XXX
%2800:	load	 %2799
%2801:	and	 %2800 XXX
%2802:	store	 %2801 %2799
%2803:	br	 sw.epilog

BASIC BLOCK sw.default
%2804:	br	 sw.epilog

BASIC BLOCK sw.epilog
%2805:	br	 for.cond66

BASIC BLOCK for.cond66
%2806:	phi	 XXX %2835
%2807:	getelementptr	 %2670 XXX XXX
%2808:	load	 %2807
%2809:	zext	 %2808
%2810:	getelementptr	 d XXX XXX
%2811:	load	 %2810
%2812:	getelementptr	 %2811 %2809
%2813:	getelementptr	 %2812 XXX XXX
%2814:	load	 %2813
%2815:	icmp	 %2806 %2814
%2816:	br	 %2815 for.end85 for.body73

BASIC BLOCK for.body73
%2817:	sext	 %2806
%2818:	getelementptr	 %2670 XXX XXX
%2819:	load	 %2818
%2820:	zext	 %2819
%2821:	getelementptr	 d XXX XXX
%2822:	load	 %2821
%2823:	getelementptr	 %2822 %2820
%2824:	getelementptr	 %2823 XXX XXX
%2825:	load	 %2824
%2826:	getelementptr	 %2825 %2817
%2827:	getelementptr	 %2826 XXX XXX
%2828:	load	 %2827
%2829:	getelementptr	 %2669 XXX XXX
%2830:	store	 %2828 %2829
%2831:	bitcast	 %2669
%2832:	load	 %2831
%2833:	call	 %2832 s insert
%2834:	br	 for.inc83

BASIC BLOCK for.inc83
%2835:	add	 %2806 XXX
%2836:	br	 for.cond66

BASIC BLOCK for.end85
%2837:	br	 if.end86

BASIC BLOCK if.end86
%2838:	phi	 XXX %2690 %2690 %2690
%2839:	br	 for.inc87

BASIC BLOCK for.inc87
%2840:	phi	 %2759 %2838
%2841:	add	 %2840 XXX
%2842:	br	 for.cond3

BASIC BLOCK for.end89
%2843:	bitcast	 %2676
%2844:	call	 %2843 free
%2845:	ret	

FUNCTION insert

BASIC BLOCK entry
%2846:	alloca	 XXX
%2847:	alloca	 XXX
%2848:	alloca	 XXX
%2849:	bitcast	 %2846
%2850:	store	 p.coerce %2849
%2851:	br	 for.cond

BASIC BLOCK for.cond
%2852:	phi	 XXX %2870
%2853:	getelementptr	 s XXX XXX
%2854:	load	 %2853
%2855:	icmp	 %2852 %2854
%2856:	br	 %2855 land.end land.rhs

BASIC BLOCK land.rhs
%2857:	getelementptr	 %2846 XXX XXX
%2858:	load	 %2857
%2859:	sext	 %2852
%2860:	getelementptr	 s XXX XXX
%2861:	load	 %2860
%2862:	getelementptr	 %2861 %2859
%2863:	getelementptr	 %2862 XXX XXX
%2864:	load	 %2863
%2865:	icmp	 %2858 %2864
%2866:	br	 land.end

BASIC BLOCK land.end
%2867:	phi	 XXX %2865
%2868:	br	 %2867 for.end for.body

BASIC BLOCK for.body
%2869:	br	 for.inc

BASIC BLOCK for.inc
%2870:	add	 %2852 XXX
%2871:	br	 for.cond

BASIC BLOCK for.end
%2872:	getelementptr	 s XXX XXX
%2873:	load	 %2872
%2874:	icmp	 %2852 %2873
%2875:	br	 %2874 if.else land.lhs.true

BASIC BLOCK land.lhs.true
%2876:	getelementptr	 %2846 XXX XXX
%2877:	load	 %2876
%2878:	sext	 %2852
%2879:	getelementptr	 s XXX XXX
%2880:	load	 %2879
%2881:	getelementptr	 %2880 %2878
%2882:	getelementptr	 %2881 XXX XXX
%2883:	load	 %2882
%2884:	icmp	 %2877 %2883
%2885:	br	 %2884 if.else if.then

BASIC BLOCK if.then
%2886:	getelementptr	 %2846 XXX XXX
%2887:	load	 %2886
%2888:	sext	 %2852
%2889:	getelementptr	 s XXX XXX
%2890:	load	 %2889
%2891:	getelementptr	 %2890 %2888
%2892:	getelementptr	 %2891 XXX XXX
%2893:	load	 %2892
%2894:	or	 %2893 %2887
%2895:	store	 %2894 %2892
%2896:	br	 if.end

BASIC BLOCK if.else
%2897:	bitcast	 %2847
%2898:	bitcast	 %2846
%2899:	call	 %2897 %2898 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2900:	getelementptr	 s XXX XXX
%2901:	load	 %2900
%2902:	add	 %2901 XXX
%2903:	store	 %2902 %2900
%2904:	br	 while.cond

BASIC BLOCK while.cond
%2905:	phi	 %2852 %2917
%2906:	getelementptr	 s XXX XXX
%2907:	load	 %2906
%2908:	icmp	 %2905 %2907
%2909:	br	 %2908 while.end while.body

BASIC BLOCK while.body
%2910:	sext	 %2905
%2911:	getelementptr	 s XXX XXX
%2912:	load	 %2911
%2913:	getelementptr	 %2912 %2910
%2914:	bitcast	 %2848
%2915:	bitcast	 %2913
%2916:	call	 %2914 %2915 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2917:	add	 %2905 XXX
%2918:	sext	 %2905
%2919:	getelementptr	 s XXX XXX
%2920:	load	 %2919
%2921:	getelementptr	 %2920 %2918
%2922:	bitcast	 %2921
%2923:	bitcast	 %2847
%2924:	call	 %2922 %2923 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2925:	bitcast	 %2847
%2926:	bitcast	 %2848
%2927:	call	 %2925 %2926 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%2928:	br	 while.cond

BASIC BLOCK while.end
%2929:	br	 if.end

BASIC BLOCK if.end
%2930:	ret	

FUNCTION state_index

BASIC BLOCK entry
%2931:	icmp	 newline XXX
%2932:	select	 %2931 XXX XXX
%2933:	icmp	 letter XXX
%2934:	select	 %2933 XXX XXX
%2935:	br	 for.cond

BASIC BLOCK for.cond
%2936:	phi	 XXX %2955
%2937:	phi	 XXX %2957
%2938:	getelementptr	 s XXX XXX
%2939:	load	 %2938
%2940:	icmp	 %2937 %2939
%2941:	br	 %2940 for.end for.body

BASIC BLOCK for.body
%2942:	sext	 %2937
%2943:	getelementptr	 s XXX XXX
%2944:	load	 %2943
%2945:	getelementptr	 %2944 %2942
%2946:	getelementptr	 %2945 XXX XXX
%2947:	load	 %2946
%2948:	sext	 %2937
%2949:	getelementptr	 s XXX XXX
%2950:	load	 %2949
%2951:	getelementptr	 %2950 %2948
%2952:	getelementptr	 %2951 XXX XXX
%2953:	load	 %2952
%2954:	add	 %2947 %2953
%2955:	xor	 %2936 %2954
%2956:	br	 for.inc

BASIC BLOCK for.inc
%2957:	add	 %2937 XXX
%2958:	br	 for.cond

BASIC BLOCK for.end
%2959:	br	 for.cond7

BASIC BLOCK for.cond7
%2960:	phi	 XXX %3057
%2961:	getelementptr	 d XXX XXX
%2962:	load	 %2961
%2963:	icmp	 %2960 %2962
%2964:	br	 %2963 for.end82 for.body9

BASIC BLOCK for.body9
%2965:	sext	 %2960
%2966:	getelementptr	 d XXX XXX
%2967:	load	 %2966
%2968:	getelementptr	 %2967 %2965
%2969:	getelementptr	 %2968 XXX XXX
%2970:	load	 %2969
%2971:	icmp	 %2936 %2970
%2972:	br	 %2971 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%2973:	getelementptr	 s XXX XXX
%2974:	load	 %2973
%2975:	sext	 %2960
%2976:	getelementptr	 d XXX XXX
%2977:	load	 %2976
%2978:	getelementptr	 %2977 %2975
%2979:	getelementptr	 %2978 XXX XXX
%2980:	getelementptr	 %2979 XXX XXX
%2981:	load	 %2980
%2982:	icmp	 %2974 %2981
%2983:	br	 %2982 lor.lhs.false21 if.then

BASIC BLOCK lor.lhs.false21
%2984:	sext	 %2960
%2985:	getelementptr	 d XXX XXX
%2986:	load	 %2985
%2987:	getelementptr	 %2986 %2984
%2988:	getelementptr	 %2987 XXX XXX
%2989:	load	 %2988
%2990:	sext	 %2989
%2991:	icmp	 %2932 %2990
%2992:	br	 %2991 lor.lhs.false28 if.then

BASIC BLOCK lor.lhs.false28
%2993:	sext	 %2960
%2994:	getelementptr	 d XXX XXX
%2995:	load	 %2994
%2996:	getelementptr	 %2995 %2993
%2997:	getelementptr	 %2996 XXX XXX
%2998:	load	 %2997
%2999:	sext	 %2998
%3000:	icmp	 %2934 %2999
%3001:	br	 %3000 if.end if.then

BASIC BLOCK if.then
%3002:	br	 for.inc80

BASIC BLOCK if.end
%3003:	br	 for.cond36

BASIC BLOCK for.cond36
%3004:	phi	 XXX %3049
%3005:	getelementptr	 s XXX XXX
%3006:	load	 %3005
%3007:	icmp	 %3004 %3006
%3008:	br	 %3007 for.end74 for.body40

BASIC BLOCK for.body40
%3009:	sext	 %3004
%3010:	getelementptr	 s XXX XXX
%3011:	load	 %3010
%3012:	getelementptr	 %3011 %3009
%3013:	getelementptr	 %3012 XXX XXX
%3014:	load	 %3013
%3015:	sext	 %3004
%3016:	sext	 %2960
%3017:	getelementptr	 d XXX XXX
%3018:	load	 %3017
%3019:	getelementptr	 %3018 %3016
%3020:	getelementptr	 %3019 XXX XXX
%3021:	getelementptr	 %3020 XXX XXX
%3022:	load	 %3021
%3023:	getelementptr	 %3022 %3015
%3024:	getelementptr	 %3023 XXX XXX
%3025:	load	 %3024
%3026:	icmp	 %3014 %3025
%3027:	br	 %3026 lor.lhs.false55 if.then70

BASIC BLOCK lor.lhs.false55
%3028:	sext	 %3004
%3029:	getelementptr	 s XXX XXX
%3030:	load	 %3029
%3031:	getelementptr	 %3030 %3028
%3032:	getelementptr	 %3031 XXX XXX
%3033:	load	 %3032
%3034:	sext	 %3004
%3035:	sext	 %2960
%3036:	getelementptr	 d XXX XXX
%3037:	load	 %3036
%3038:	getelementptr	 %3037 %3035
%3039:	getelementptr	 %3038 XXX XXX
%3040:	getelementptr	 %3039 XXX XXX
%3041:	load	 %3040
%3042:	getelementptr	 %3041 %3034
%3043:	getelementptr	 %3042 XXX XXX
%3044:	load	 %3043
%3045:	icmp	 %3033 %3044
%3046:	br	 %3045 if.end71 if.then70

BASIC BLOCK if.then70
%3047:	br	 for.end74

BASIC BLOCK if.end71
%3048:	br	 for.inc72

BASIC BLOCK for.inc72
%3049:	add	 %3004 XXX
%3050:	br	 for.cond36

BASIC BLOCK for.end74
%3051:	getelementptr	 s XXX XXX
%3052:	load	 %3051
%3053:	icmp	 %3004 %3052
%3054:	br	 %3053 if.end79 if.then78

BASIC BLOCK if.then78
%3055:	br	 return

BASIC BLOCK if.end79
%3056:	br	 for.inc80

BASIC BLOCK for.inc80
%3057:	add	 %2960 XXX
%3058:	br	 for.cond7

BASIC BLOCK for.end82
%3059:	getelementptr	 d XXX XXX
%3060:	load	 %3059
%3061:	getelementptr	 d XXX XXX
%3062:	load	 %3061
%3063:	icmp	 %3060 %3062
%3064:	br	 %3063 if.end97 if.then86

BASIC BLOCK if.then86
%3065:	br	 while.cond

BASIC BLOCK while.cond
%3066:	getelementptr	 d XXX XXX
%3067:	load	 %3066
%3068:	getelementptr	 d XXX XXX
%3069:	load	 %3068
%3070:	icmp	 %3067 %3069
%3071:	br	 %3070 while.end while.body

BASIC BLOCK while.body
%3072:	getelementptr	 d XXX XXX
%3073:	load	 %3072
%3074:	mul	 %3073 XXX
%3075:	store	 %3074 %3072
%3076:	br	 while.cond

BASIC BLOCK while.end
%3077:	getelementptr	 d XXX XXX
%3078:	load	 %3077
%3079:	bitcast	 %3078
%3080:	getelementptr	 d XXX XXX
%3081:	load	 %3080
%3082:	sext	 %3081
%3083:	mul	 %3082 XXX
%3084:	call	 %3079 %3083 xrealloc_1
%3085:	bitcast	 %3084
%3086:	getelementptr	 d XXX XXX
%3087:	store	 %3085 %3086
%3088:	br	 if.end97

BASIC BLOCK if.end97
%3089:	sext	 %2960
%3090:	getelementptr	 d XXX XXX
%3091:	load	 %3090
%3092:	getelementptr	 %3091 %3089
%3093:	getelementptr	 %3092 XXX XXX
%3094:	store	 %2936 %3093
%3095:	getelementptr	 s XXX XXX
%3096:	load	 %3095
%3097:	sext	 %3096
%3098:	mul	 %3097 XXX
%3099:	call	 %3098 xmalloc_1
%3100:	bitcast	 %3099
%3101:	sext	 %2960
%3102:	getelementptr	 d XXX XXX
%3103:	load	 %3102
%3104:	getelementptr	 %3103 %3101
%3105:	getelementptr	 %3104 XXX XXX
%3106:	getelementptr	 %3105 XXX XXX
%3107:	store	 %3100 %3106
%3108:	sext	 %2960
%3109:	getelementptr	 d XXX XXX
%3110:	load	 %3109
%3111:	getelementptr	 %3110 %3108
%3112:	getelementptr	 %3111 XXX XXX
%3113:	call	 s %3112 copy
%3114:	trunc	 %2932
%3115:	sext	 %2960
%3116:	getelementptr	 d XXX XXX
%3117:	load	 %3116
%3118:	getelementptr	 %3117 %3115
%3119:	getelementptr	 %3118 XXX XXX
%3120:	store	 %3114 %3119
%3121:	trunc	 %2934
%3122:	sext	 %2960
%3123:	getelementptr	 d XXX XXX
%3124:	load	 %3123
%3125:	getelementptr	 %3124 %3122
%3126:	getelementptr	 %3125 XXX XXX
%3127:	store	 %3121 %3126
%3128:	sext	 %2960
%3129:	getelementptr	 d XXX XXX
%3130:	load	 %3129
%3131:	getelementptr	 %3130 %3128
%3132:	getelementptr	 %3131 XXX XXX
%3133:	store	 XXX %3132
%3134:	sext	 %2960
%3135:	getelementptr	 d XXX XXX
%3136:	load	 %3135
%3137:	getelementptr	 %3136 %3134
%3138:	getelementptr	 %3137 XXX XXX
%3139:	store	 XXX %3138
%3140:	sext	 %2960
%3141:	getelementptr	 d XXX XXX
%3142:	load	 %3141
%3143:	getelementptr	 %3142 %3140
%3144:	getelementptr	 %3143 XXX XXX
%3145:	store	 XXX %3144
%3146:	br	 for.cond135

BASIC BLOCK for.cond135
%3147:	phi	 XXX %3297
%3148:	getelementptr	 s XXX XXX
%3149:	load	 %3148
%3150:	icmp	 %3147 %3149
%3151:	br	 %3150 for.end257 for.body139

BASIC BLOCK for.body139
%3152:	sext	 %3147
%3153:	getelementptr	 s XXX XXX
%3154:	load	 %3153
%3155:	getelementptr	 %3154 %3152
%3156:	getelementptr	 %3155 XXX XXX
%3157:	load	 %3156
%3158:	zext	 %3157
%3159:	getelementptr	 d XXX XXX
%3160:	load	 %3159
%3161:	getelementptr	 %3160 %3158
%3162:	load	 %3161
%3163:	icmp	 %3162 XXX
%3164:	br	 %3163 if.else if.then148

BASIC BLOCK if.then148
%3165:	sext	 %3147
%3166:	getelementptr	 s XXX XXX
%3167:	load	 %3166
%3168:	getelementptr	 %3167 %3165
%3169:	getelementptr	 %3168 XXX XXX
%3170:	load	 %3169
%3171:	icmp	 %2932 XXX
%3172:	select	 %3171 XXX XXX
%3173:	add	 %3172 XXX
%3174:	add	 %3173 XXX
%3175:	shl	 XXX %3174
%3176:	and	 %3170 %3175
%3177:	icmp	 %3176 XXX
%3178:	br	 %3177 lor.lhs.false164 land.lhs.true

BASIC BLOCK land.lhs.true
%3179:	icmp	 %2934 XXX
%3180:	select	 %3179 XXX XXX
%3181:	add	 %3180 XXX
%3182:	shl	 XXX %3181
%3183:	and	 %3170 %3182
%3184:	icmp	 %3183 XXX
%3185:	br	 %3184 lor.lhs.false164 if.then209

BASIC BLOCK lor.lhs.false164
%3186:	icmp	 %2932 XXX
%3187:	select	 %3186 XXX XXX
%3188:	add	 %3187 XXX
%3189:	add	 %3188 XXX
%3190:	shl	 XXX %3189
%3191:	and	 %3170 %3190
%3192:	icmp	 %3191 XXX
%3193:	br	 %3192 lor.lhs.false179 land.lhs.true172

BASIC BLOCK land.lhs.true172
%3194:	icmp	 %2934 XXX
%3195:	select	 %3194 XXX XXX
%3196:	add	 %3195 XXX
%3197:	shl	 XXX %3196
%3198:	and	 %3170 %3197
%3199:	icmp	 %3198 XXX
%3200:	br	 %3199 lor.lhs.false179 if.then209

BASIC BLOCK lor.lhs.false179
%3201:	icmp	 %2932 XXX
%3202:	select	 %3201 XXX XXX
%3203:	add	 %3202 XXX
%3204:	add	 %3203 XXX
%3205:	shl	 XXX %3204
%3206:	and	 %3170 %3205
%3207:	icmp	 %3206 XXX
%3208:	br	 %3207 lor.lhs.false194 land.lhs.true187

BASIC BLOCK land.lhs.true187
%3209:	icmp	 %2934 XXX
%3210:	select	 %3209 XXX XXX
%3211:	add	 %3210 XXX
%3212:	shl	 XXX %3211
%3213:	and	 %3170 %3212
%3214:	icmp	 %3213 XXX
%3215:	br	 %3214 lor.lhs.false194 if.then209

BASIC BLOCK lor.lhs.false194
%3216:	icmp	 %2932 XXX
%3217:	select	 %3216 XXX XXX
%3218:	add	 %3217 XXX
%3219:	add	 %3218 XXX
%3220:	shl	 XXX %3219
%3221:	and	 %3170 %3220
%3222:	icmp	 %3221 XXX
%3223:	br	 %3222 if.end216 land.lhs.true202

BASIC BLOCK land.lhs.true202
%3224:	icmp	 %2934 XXX
%3225:	select	 %3224 XXX XXX
%3226:	add	 %3225 XXX
%3227:	shl	 XXX %3226
%3228:	and	 %3170 %3227
%3229:	icmp	 %3228 XXX
%3230:	br	 %3229 if.end216 if.then209

BASIC BLOCK if.then209
%3231:	sext	 %2960
%3232:	getelementptr	 d XXX XXX
%3233:	load	 %3232
%3234:	getelementptr	 %3233 %3231
%3235:	getelementptr	 %3234 XXX XXX
%3236:	load	 %3235
%3237:	zext	 %3236
%3238:	or	 %3237 %3170
%3239:	trunc	 %3238
%3240:	store	 %3239 %3235
%3241:	br	 if.end216

BASIC BLOCK if.end216
%3242:	sext	 %2960
%3243:	getelementptr	 d XXX XXX
%3244:	load	 %3243
%3245:	getelementptr	 %3244 %3242
%3246:	getelementptr	 %3245 XXX XXX
%3247:	load	 %3246
%3248:	icmp	 %3247 XXX
%3249:	br	 %3248 if.then222 if.end234

BASIC BLOCK if.then222
%3250:	sext	 %3147
%3251:	getelementptr	 s XXX XXX
%3252:	load	 %3251
%3253:	getelementptr	 %3252 %3250
%3254:	getelementptr	 %3253 XXX XXX
%3255:	load	 %3254
%3256:	zext	 %3255
%3257:	getelementptr	 d XXX XXX
%3258:	load	 %3257
%3259:	getelementptr	 %3258 %3256
%3260:	load	 %3259
%3261:	sext	 %2960
%3262:	getelementptr	 d XXX XXX
%3263:	load	 %3262
%3264:	getelementptr	 %3263 %3261
%3265:	getelementptr	 %3264 XXX XXX
%3266:	store	 %3260 %3265
%3267:	br	 if.end234

BASIC BLOCK if.end234
%3268:	br	 if.end254

BASIC BLOCK if.else
%3269:	sext	 %3147
%3270:	getelementptr	 s XXX XXX
%3271:	load	 %3270
%3272:	getelementptr	 %3271 %3269
%3273:	getelementptr	 %3272 XXX XXX
%3274:	load	 %3273
%3275:	zext	 %3274
%3276:	getelementptr	 d XXX XXX
%3277:	load	 %3276
%3278:	getelementptr	 %3277 %3275
%3279:	load	 %3278
%3280:	icmp	 %3279 XXX
%3281:	br	 %3280 if.end253 if.then244

BASIC BLOCK if.then244
%3282:	sext	 %2960
%3283:	getelementptr	 d XXX XXX
%3284:	load	 %3283
%3285:	getelementptr	 %3284 %3282
%3286:	getelementptr	 %3285 XXX XXX
%3287:	store	 XXX %3286
%3288:	sext	 %2960
%3289:	getelementptr	 d XXX XXX
%3290:	load	 %3289
%3291:	getelementptr	 %3290 %3288
%3292:	getelementptr	 %3291 XXX XXX
%3293:	store	 XXX %3292
%3294:	br	 if.end253

BASIC BLOCK if.end253
%3295:	br	 if.end254

BASIC BLOCK if.end254
%3296:	br	 for.inc255

BASIC BLOCK for.inc255
%3297:	add	 %3147 XXX
%3298:	br	 for.cond135

BASIC BLOCK for.end257
%3299:	getelementptr	 d XXX XXX
%3300:	load	 %3299
%3301:	add	 %3300 XXX
%3302:	store	 %3301 %3299
%3303:	br	 return

BASIC BLOCK return
%3304:	ret	 %2960

FUNCTION dfastate

BASIC BLOCK entry
%3305:	alloca	 XXX
%3306:	alloca	 XXX
%3307:	alloca	 XXX
%3308:	alloca	 XXX
%3309:	alloca	 XXX
%3310:	alloca	 XXX
%3311:	alloca	 XXX
%3312:	alloca	 XXX
%3313:	load	 dfastate.initialized
%3314:	icmp	 %3313 XXX
%3315:	br	 %3314 if.then if.end13

BASIC BLOCK if.then
%3316:	store	 XXX dfastate.initialized
%3317:	br	 for.cond

BASIC BLOCK for.cond
%3318:	phi	 XXX %3335
%3319:	icmp	 %3318 XXX
%3320:	br	 %3319 for.end for.body

BASIC BLOCK for.body
%3321:	sext	 %3318
%3322:	call	 __ctype_b_loc
%3323:	load	 %3322
%3324:	getelementptr	 %3323 %3321
%3325:	load	 %3324
%3326:	zext	 %3325
%3327:	and	 %3326 XXX
%3328:	icmp	 %3327 XXX
%3329:	br	 %3328 lor.lhs.false if.then12

BASIC BLOCK lor.lhs.false
%3330:	icmp	 %3318 XXX
%3331:	br	 %3330 if.end if.then12

BASIC BLOCK if.then12
%3332:	call	 %3318 XXX setbit
%3333:	br	 if.end

BASIC BLOCK if.end
%3334:	br	 for.inc

BASIC BLOCK for.inc
%3335:	add	 %3318 XXX
%3336:	br	 for.cond

BASIC BLOCK for.end
%3337:	call	 XXX XXX setbit
%3338:	br	 if.end13

BASIC BLOCK if.end13
%3339:	getelementptr	 %3308 XXX XXX
%3340:	call	 %3339 zeroset
%3341:	br	 for.cond14

BASIC BLOCK for.cond14
%3342:	phi	 XXX %3761
%3343:	phi	 XXX %3762
%3344:	sext	 s
%3345:	getelementptr	 d XXX XXX
%3346:	load	 %3345
%3347:	getelementptr	 %3346 %3344
%3348:	getelementptr	 %3347 XXX XXX
%3349:	getelementptr	 %3348 XXX XXX
%3350:	load	 %3349
%3351:	icmp	 %3343 %3350
%3352:	br	 %3351 for.end321 for.body19

BASIC BLOCK for.body19
%3353:	sext	 %3343
%3354:	sext	 s
%3355:	getelementptr	 d XXX XXX
%3356:	load	 %3355
%3357:	getelementptr	 %3356 %3354
%3358:	getelementptr	 %3357 XXX XXX
%3359:	getelementptr	 %3358 XXX XXX
%3360:	load	 %3359
%3361:	getelementptr	 %3360 %3353
%3362:	bitcast	 %3307
%3363:	bitcast	 %3361
%3364:	call	 %3362 %3363 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%3365:	getelementptr	 %3307 XXX XXX
%3366:	load	 %3365
%3367:	zext	 %3366
%3368:	getelementptr	 d XXX XXX
%3369:	load	 %3368
%3370:	getelementptr	 %3369 %3367
%3371:	load	 %3370
%3372:	icmp	 %3371 XXX
%3373:	br	 %3372 if.else land.lhs.true

BASIC BLOCK land.lhs.true
%3374:	getelementptr	 %3307 XXX XXX
%3375:	load	 %3374
%3376:	zext	 %3375
%3377:	getelementptr	 d XXX XXX
%3378:	load	 %3377
%3379:	getelementptr	 %3378 %3376
%3380:	load	 %3379
%3381:	icmp	 %3380 XXX
%3382:	br	 %3381 if.else if.then37

BASIC BLOCK if.then37
%3383:	getelementptr	 %3307 XXX XXX
%3384:	load	 %3383
%3385:	zext	 %3384
%3386:	getelementptr	 d XXX XXX
%3387:	load	 %3386
%3388:	getelementptr	 %3387 %3385
%3389:	load	 %3388
%3390:	getelementptr	 %3308 XXX XXX
%3391:	call	 %3389 %3390 setbit
%3392:	br	 if.end60

BASIC BLOCK if.else
%3393:	getelementptr	 %3307 XXX XXX
%3394:	load	 %3393
%3395:	zext	 %3394
%3396:	getelementptr	 d XXX XXX
%3397:	load	 %3396
%3398:	getelementptr	 %3397 %3395
%3399:	load	 %3398
%3400:	icmp	 %3399 XXX
%3401:	br	 %3400 if.else58 if.then49

BASIC BLOCK if.then49
%3402:	getelementptr	 %3307 XXX XXX
%3403:	load	 %3402
%3404:	zext	 %3403
%3405:	getelementptr	 d XXX XXX
%3406:	load	 %3405
%3407:	getelementptr	 %3406 %3404
%3408:	load	 %3407
%3409:	sub	 %3408 XXX
%3410:	sext	 %3409
%3411:	getelementptr	 d XXX XXX
%3412:	load	 %3411
%3413:	getelementptr	 %3412 %3410
%3414:	getelementptr	 %3413 XXX XXX
%3415:	getelementptr	 %3308 XXX XXX
%3416:	call	 %3414 %3415 copyset
%3417:	br	 if.end59

BASIC BLOCK if.else58
%3418:	br	 for.inc319

BASIC BLOCK if.end59
%3419:	br	 if.end60

BASIC BLOCK if.end60
%3420:	getelementptr	 %3307 XXX XXX
%3421:	load	 %3420
%3422:	icmp	 %3421 XXX
%3423:	br	 %3422 if.end173 if.then63

BASIC BLOCK if.then63
%3424:	getelementptr	 %3307 XXX XXX
%3425:	load	 %3424
%3426:	sext	 s
%3427:	getelementptr	 d XXX XXX
%3428:	load	 %3427
%3429:	getelementptr	 %3428 %3426
%3430:	getelementptr	 %3429 XXX XXX
%3431:	load	 %3430
%3432:	sext	 %3431
%3433:	icmp	 %3432 XXX
%3434:	select	 %3433 XXX XXX
%3435:	add	 %3434 XXX
%3436:	add	 %3435 XXX
%3437:	shl	 XXX %3436
%3438:	and	 %3425 %3437
%3439:	icmp	 %3438 XXX
%3440:	br	 %3439 if.then73 if.end75

BASIC BLOCK if.then73
%3441:	getelementptr	 %3308 XXX XXX
%3442:	call	 XXX %3441 clrbit
%3443:	br	 if.end75

BASIC BLOCK if.end75
%3444:	getelementptr	 %3307 XXX XXX
%3445:	load	 %3444
%3446:	sext	 s
%3447:	getelementptr	 d XXX XXX
%3448:	load	 %3447
%3449:	getelementptr	 %3448 %3446
%3450:	getelementptr	 %3449 XXX XXX
%3451:	load	 %3450
%3452:	sext	 %3451
%3453:	icmp	 %3452 XXX
%3454:	select	 %3453 XXX XXX
%3455:	add	 %3454 XXX
%3456:	add	 %3455 XXX
%3457:	shl	 XXX %3456
%3458:	and	 %3445 %3457
%3459:	icmp	 %3458 XXX
%3460:	br	 %3459 if.then89 if.end103

BASIC BLOCK if.then89
%3461:	br	 for.cond90

BASIC BLOCK for.cond90
%3462:	phi	 XXX %3475
%3463:	sext	 %3462
%3464:	icmp	 %3463 XXX
%3465:	br	 %3464 for.end102 for.body94

BASIC BLOCK for.body94
%3466:	sext	 %3462
%3467:	getelementptr	 dfastate.newline XXX %3466
%3468:	load	 %3467
%3469:	sext	 %3462
%3470:	getelementptr	 %3308 XXX %3469
%3471:	load	 %3470
%3472:	and	 %3471 %3468
%3473:	store	 %3472 %3470
%3474:	br	 for.inc100

BASIC BLOCK for.inc100
%3475:	add	 %3462 XXX
%3476:	br	 for.cond90

BASIC BLOCK for.end102
%3477:	br	 if.end103

BASIC BLOCK if.end103
%3478:	getelementptr	 %3307 XXX XXX
%3479:	load	 %3478
%3480:	sext	 s
%3481:	getelementptr	 d XXX XXX
%3482:	load	 %3481
%3483:	getelementptr	 %3482 %3480
%3484:	getelementptr	 %3483 XXX XXX
%3485:	load	 %3484
%3486:	sext	 %3485
%3487:	icmp	 %3486 XXX
%3488:	select	 %3487 XXX XXX
%3489:	add	 %3488 XXX
%3490:	shl	 XXX %3489
%3491:	and	 %3479 %3490
%3492:	icmp	 %3491 XXX
%3493:	br	 %3492 if.then115 if.end129

BASIC BLOCK if.then115
%3494:	br	 for.cond116

BASIC BLOCK for.cond116
%3495:	phi	 XXX %3509
%3496:	sext	 %3495
%3497:	icmp	 %3496 XXX
%3498:	br	 %3497 for.end128 for.body120

BASIC BLOCK for.body120
%3499:	sext	 %3495
%3500:	getelementptr	 dfastate.letters XXX %3499
%3501:	load	 %3500
%3502:	xor	 %3501 XXX
%3503:	sext	 %3495
%3504:	getelementptr	 %3308 XXX %3503
%3505:	load	 %3504
%3506:	and	 %3505 %3502
%3507:	store	 %3506 %3504
%3508:	br	 for.inc126

BASIC BLOCK for.inc126
%3509:	add	 %3495 XXX
%3510:	br	 for.cond116

BASIC BLOCK for.end128
%3511:	br	 if.end129

BASIC BLOCK if.end129
%3512:	getelementptr	 %3307 XXX XXX
%3513:	load	 %3512
%3514:	sext	 s
%3515:	getelementptr	 d XXX XXX
%3516:	load	 %3515
%3517:	getelementptr	 %3516 %3514
%3518:	getelementptr	 %3517 XXX XXX
%3519:	load	 %3518
%3520:	sext	 %3519
%3521:	icmp	 %3520 XXX
%3522:	select	 %3521 XXX XXX
%3523:	add	 %3522 XXX
%3524:	shl	 XXX %3523
%3525:	and	 %3513 %3524
%3526:	icmp	 %3525 XXX
%3527:	br	 %3526 if.then142 if.end156

BASIC BLOCK if.then142
%3528:	br	 for.cond143

BASIC BLOCK for.cond143
%3529:	phi	 XXX %3542
%3530:	sext	 %3529
%3531:	icmp	 %3530 XXX
%3532:	br	 %3531 for.end155 for.body147

BASIC BLOCK for.body147
%3533:	sext	 %3529
%3534:	getelementptr	 dfastate.letters XXX %3533
%3535:	load	 %3534
%3536:	sext	 %3529
%3537:	getelementptr	 %3308 XXX %3536
%3538:	load	 %3537
%3539:	and	 %3538 %3535
%3540:	store	 %3539 %3537
%3541:	br	 for.inc153

BASIC BLOCK for.inc153
%3542:	add	 %3529 XXX
%3543:	br	 for.cond143

BASIC BLOCK for.end155
%3544:	br	 if.end156

BASIC BLOCK if.end156
%3545:	br	 for.cond157

BASIC BLOCK for.cond157
%3546:	phi	 XXX %3559
%3547:	sext	 %3546
%3548:	icmp	 %3547 XXX
%3549:	br	 %3548 land.end land.rhs

BASIC BLOCK land.rhs
%3550:	sext	 %3546
%3551:	getelementptr	 %3308 XXX %3550
%3552:	load	 %3551
%3553:	icmp	 %3552 XXX
%3554:	xor	 %3553 XXX
%3555:	br	 land.end

BASIC BLOCK land.end
%3556:	phi	 XXX %3554
%3557:	br	 %3556 for.end167 for.body164

BASIC BLOCK for.body164
%3558:	br	 for.inc165

BASIC BLOCK for.inc165
%3559:	add	 %3546 XXX
%3560:	br	 for.cond157

BASIC BLOCK for.end167
%3561:	sext	 %3546
%3562:	icmp	 %3561 XXX
%3563:	br	 %3562 if.end172 if.then171

BASIC BLOCK if.then171
%3564:	br	 for.inc319

BASIC BLOCK if.end172
%3565:	br	 if.end173

BASIC BLOCK if.end173
%3566:	br	 for.cond174

BASIC BLOCK for.cond174
%3567:	phi	 %3342 %3722
%3568:	phi	 XXX %3723
%3569:	icmp	 %3568 %3567
%3570:	br	 %3569 for.end294 for.body177

BASIC BLOCK for.body177
%3571:	getelementptr	 %3307 XXX XXX
%3572:	load	 %3571
%3573:	zext	 %3572
%3574:	getelementptr	 d XXX XXX
%3575:	load	 %3574
%3576:	getelementptr	 %3575 %3573
%3577:	load	 %3576
%3578:	icmp	 %3577 XXX
%3579:	br	 %3578 if.end202 land.lhs.true184

BASIC BLOCK land.lhs.true184
%3580:	getelementptr	 %3307 XXX XXX
%3581:	load	 %3580
%3582:	zext	 %3581
%3583:	getelementptr	 d XXX XXX
%3584:	load	 %3583
%3585:	getelementptr	 %3584 %3582
%3586:	load	 %3585
%3587:	icmp	 %3586 XXX
%3588:	br	 %3587 if.end202 land.lhs.true191

BASIC BLOCK land.lhs.true191
%3589:	getelementptr	 %3307 XXX XXX
%3590:	load	 %3589
%3591:	zext	 %3590
%3592:	getelementptr	 d XXX XXX
%3593:	load	 %3592
%3594:	getelementptr	 %3593 %3591
%3595:	load	 %3594
%3596:	sext	 %3568
%3597:	getelementptr	 %3306 XXX %3596
%3598:	getelementptr	 %3597 XXX XXX
%3599:	call	 %3595 %3598 tstbit
%3600:	icmp	 %3599 XXX
%3601:	br	 %3600 if.then201 if.end202

BASIC BLOCK if.then201
%3602:	br	 for.inc292

BASIC BLOCK if.end202
%3603:	br	 for.cond203

BASIC BLOCK for.cond203
%3604:	phi	 XXX %3625
%3605:	phi	 XXX %3628
%3606:	sext	 %3605
%3607:	icmp	 %3606 XXX
%3608:	br	 %3607 for.end221 for.body207

BASIC BLOCK for.body207
%3609:	sext	 %3605
%3610:	getelementptr	 %3308 XXX %3609
%3611:	load	 %3610
%3612:	sext	 %3605
%3613:	sext	 %3568
%3614:	getelementptr	 %3306 XXX %3613
%3615:	getelementptr	 %3614 XXX %3612
%3616:	load	 %3615
%3617:	and	 %3611 %3616
%3618:	sext	 %3605
%3619:	getelementptr	 %3309 XXX %3618
%3620:	store	 %3617 %3619
%3621:	icmp	 %3617 XXX
%3622:	br	 %3621 cond.false cond.true

BASIC BLOCK cond.true
%3623:	br	 cond.end

BASIC BLOCK cond.false
%3624:	br	 cond.end

BASIC BLOCK cond.end
%3625:	phi	 XXX %3604
%3626:	phi	 XXX XXX
%3627:	br	 for.inc219

BASIC BLOCK for.inc219
%3628:	add	 %3605 XXX
%3629:	br	 for.cond203

BASIC BLOCK for.end221
%3630:	icmp	 %3604 XXX
%3631:	br	 %3630 if.then223 if.end224

BASIC BLOCK if.then223
%3632:	br	 for.inc292

BASIC BLOCK if.end224
%3633:	br	 for.cond225

BASIC BLOCK for.cond225
%3634:	phi	 XXX %3657
%3635:	phi	 XXX %3668
%3636:	phi	 XXX %3671
%3637:	sext	 %3636
%3638:	icmp	 %3637 XXX
%3639:	br	 %3638 for.end258 for.body229

BASIC BLOCK for.body229
%3640:	sext	 %3636
%3641:	getelementptr	 %3308 XXX %3640
%3642:	load	 %3641
%3643:	sext	 %3636
%3644:	sext	 %3568
%3645:	getelementptr	 %3306 XXX %3644
%3646:	getelementptr	 %3645 XXX %3643
%3647:	load	 %3646
%3648:	xor	 %3642 XXX
%3649:	and	 %3648 %3647
%3650:	sext	 %3636
%3651:	getelementptr	 %3310 XXX %3650
%3652:	store	 %3649 %3651
%3653:	icmp	 %3649 XXX
%3654:	br	 %3653 cond.false244 cond.true243

BASIC BLOCK cond.true243
%3655:	br	 cond.end245

BASIC BLOCK cond.false244
%3656:	br	 cond.end245

BASIC BLOCK cond.end245
%3657:	phi	 XXX %3634
%3658:	phi	 XXX XXX
%3659:	xor	 %3647 XXX
%3660:	and	 %3642 %3659
%3661:	sext	 %3636
%3662:	getelementptr	 %3308 XXX %3661
%3663:	store	 %3660 %3662
%3664:	icmp	 %3660 XXX
%3665:	br	 %3664 cond.false253 cond.true252

BASIC BLOCK cond.true252
%3666:	br	 cond.end254

BASIC BLOCK cond.false253
%3667:	br	 cond.end254

BASIC BLOCK cond.end254
%3668:	phi	 XXX %3635
%3669:	phi	 XXX XXX
%3670:	br	 for.inc256

BASIC BLOCK for.inc256
%3671:	add	 %3636 XXX
%3672:	br	 for.cond225

BASIC BLOCK for.end258
%3673:	icmp	 %3634 XXX
%3674:	br	 %3673 if.end279 if.then260

BASIC BLOCK if.then260
%3675:	getelementptr	 %3310 XXX XXX
%3676:	sext	 %3567
%3677:	getelementptr	 %3306 XXX %3676
%3678:	getelementptr	 %3677 XXX XXX
%3679:	call	 %3675 %3678 copyset
%3680:	getelementptr	 %3309 XXX XXX
%3681:	sext	 %3568
%3682:	getelementptr	 %3306 XXX %3681
%3683:	getelementptr	 %3682 XXX XXX
%3684:	call	 %3680 %3683 copyset
%3685:	getelementptr	 d XXX XXX
%3686:	load	 %3685
%3687:	sext	 %3686
%3688:	mul	 %3687 XXX
%3689:	call	 %3688 xmalloc_1
%3690:	bitcast	 %3689
%3691:	sext	 %3567
%3692:	getelementptr	 %3305 XXX %3691
%3693:	getelementptr	 %3692 XXX XXX
%3694:	store	 %3690 %3693
%3695:	sext	 %3568
%3696:	getelementptr	 %3305 XXX %3695
%3697:	sext	 %3567
%3698:	getelementptr	 %3305 XXX %3697
%3699:	call	 %3696 %3698 copy
%3700:	add	 %3567 XXX
%3701:	br	 if.end279

BASIC BLOCK if.end279
%3702:	phi	 %3700 %3567
%3703:	sext	 %3568
%3704:	getelementptr	 %3305 XXX %3703
%3705:	getelementptr	 %3704 XXX XXX
%3706:	load	 %3705
%3707:	add	 %3706 XXX
%3708:	store	 %3707 %3705
%3709:	sext	 %3706
%3710:	sext	 %3568
%3711:	getelementptr	 %3305 XXX %3710
%3712:	getelementptr	 %3711 XXX XXX
%3713:	load	 %3712
%3714:	getelementptr	 %3713 %3709
%3715:	bitcast	 %3714
%3716:	bitcast	 %3307
%3717:	call	 %3715 %3716 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%3718:	icmp	 %3635 XXX
%3719:	br	 %3718 if.then290 if.end291

BASIC BLOCK if.then290
%3720:	br	 for.end294

BASIC BLOCK if.end291
%3721:	br	 for.inc292

BASIC BLOCK for.inc292
%3722:	phi	 %3702 %3567 %3567
%3723:	add	 %3568 XXX
%3724:	br	 for.cond174

BASIC BLOCK for.end294
%3725:	phi	 %3702 %3567
%3726:	icmp	 %3568 %3725
%3727:	br	 %3726 if.end318 if.then297

BASIC BLOCK if.then297
%3728:	getelementptr	 %3308 XXX XXX
%3729:	sext	 %3725
%3730:	getelementptr	 %3306 XXX %3729
%3731:	getelementptr	 %3730 XXX XXX
%3732:	call	 %3728 %3731 copyset
%3733:	getelementptr	 %3308 XXX XXX
%3734:	call	 %3733 zeroset
%3735:	getelementptr	 d XXX XXX
%3736:	load	 %3735
%3737:	sext	 %3736
%3738:	mul	 %3737 XXX
%3739:	call	 %3738 xmalloc_1
%3740:	bitcast	 %3739
%3741:	sext	 %3725
%3742:	getelementptr	 %3305 XXX %3741
%3743:	getelementptr	 %3742 XXX XXX
%3744:	store	 %3740 %3743
%3745:	sext	 %3725
%3746:	getelementptr	 %3305 XXX %3745
%3747:	getelementptr	 %3746 XXX XXX
%3748:	store	 XXX %3747
%3749:	sext	 %3725
%3750:	getelementptr	 %3305 XXX %3749
%3751:	getelementptr	 %3750 XXX XXX
%3752:	load	 %3751
%3753:	getelementptr	 %3752 XXX
%3754:	bitcast	 %3753
%3755:	bitcast	 %3307
%3756:	call	 %3754 %3755 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%3757:	add	 %3725 XXX
%3758:	br	 if.end318

BASIC BLOCK if.end318
%3759:	phi	 %3757 %3725
%3760:	br	 for.inc319

BASIC BLOCK for.inc319
%3761:	phi	 %3342 %3759 %3342
%3762:	add	 %3343 XXX
%3763:	br	 for.cond14

BASIC BLOCK for.end321
%3764:	getelementptr	 d XXX XXX
%3765:	load	 %3764
%3766:	sext	 %3765
%3767:	mul	 %3766 XXX
%3768:	call	 %3767 xmalloc_1
%3769:	bitcast	 %3768
%3770:	getelementptr	 %3311 XXX XXX
%3771:	store	 %3769 %3770
%3772:	getelementptr	 d XXX XXX
%3773:	load	 %3772
%3774:	sext	 %3773
%3775:	mul	 %3774 XXX
%3776:	call	 %3775 xmalloc_1
%3777:	bitcast	 %3776
%3778:	getelementptr	 %3312 XXX XXX
%3779:	store	 %3777 %3778
%3780:	getelementptr	 d XXX XXX
%3781:	load	 %3780
%3782:	icmp	 %3781 XXX
%3783:	br	 %3782 if.else423 if.then333

BASIC BLOCK if.then333
%3784:	br	 for.cond334

BASIC BLOCK for.cond334
%3785:	phi	 XXX %3849
%3786:	phi	 XXX %3822
%3787:	phi	 XXX %3851
%3788:	getelementptr	 d XXX XXX
%3789:	load	 %3788
%3790:	getelementptr	 %3789 XXX
%3791:	getelementptr	 %3790 XXX XXX
%3792:	getelementptr	 %3791 XXX XXX
%3793:	load	 %3792
%3794:	icmp	 %3787 %3793
%3795:	br	 %3794 for.end385 for.body341

BASIC BLOCK for.body341
%3796:	sext	 %3787
%3797:	getelementptr	 d XXX XXX
%3798:	load	 %3797
%3799:	getelementptr	 %3798 XXX
%3800:	getelementptr	 %3799 XXX XXX
%3801:	getelementptr	 %3800 XXX XXX
%3802:	load	 %3801
%3803:	getelementptr	 %3802 %3796
%3804:	getelementptr	 %3803 XXX XXX
%3805:	load	 %3804
%3806:	and	 %3805 XXX
%3807:	lshr	 %3806 XXX
%3808:	sext	 %3787
%3809:	getelementptr	 d XXX XXX
%3810:	load	 %3809
%3811:	getelementptr	 %3810 XXX
%3812:	getelementptr	 %3811 XXX XXX
%3813:	getelementptr	 %3812 XXX XXX
%3814:	load	 %3813
%3815:	getelementptr	 %3814 %3808
%3816:	getelementptr	 %3815 XXX XXX
%3817:	load	 %3816
%3818:	and	 %3817 XXX
%3819:	icmp	 %3807 %3818
%3820:	br	 %3819 if.end361 if.then360

BASIC BLOCK if.then360
%3821:	br	 if.end361

BASIC BLOCK if.end361
%3822:	phi	 XXX %3786
%3823:	sext	 %3787
%3824:	getelementptr	 d XXX XXX
%3825:	load	 %3824
%3826:	getelementptr	 %3825 XXX
%3827:	getelementptr	 %3826 XXX XXX
%3828:	getelementptr	 %3827 XXX XXX
%3829:	load	 %3828
%3830:	getelementptr	 %3829 %3823
%3831:	getelementptr	 %3830 XXX XXX
%3832:	load	 %3831
%3833:	and	 %3832 XXX
%3834:	lshr	 %3833 XXX
%3835:	sext	 %3787
%3836:	getelementptr	 d XXX XXX
%3837:	load	 %3836
%3838:	getelementptr	 %3837 XXX
%3839:	getelementptr	 %3838 XXX XXX
%3840:	getelementptr	 %3839 XXX XXX
%3841:	load	 %3840
%3842:	getelementptr	 %3841 %3835
%3843:	getelementptr	 %3842 XXX XXX
%3844:	load	 %3843
%3845:	and	 %3844 XXX
%3846:	icmp	 %3834 %3845
%3847:	br	 %3846 if.end382 if.then381

BASIC BLOCK if.then381
%3848:	br	 if.end382

BASIC BLOCK if.end382
%3849:	phi	 XXX %3785
%3850:	br	 for.inc383

BASIC BLOCK for.inc383
%3851:	add	 %3787 XXX
%3852:	br	 for.cond334

BASIC BLOCK for.end385
%3853:	getelementptr	 d XXX XXX
%3854:	load	 %3853
%3855:	getelementptr	 %3854 XXX
%3856:	getelementptr	 %3855 XXX XXX
%3857:	call	 %3856 %3311 copy
%3858:	call	 d %3311 XXX XXX state_index
%3859:	icmp	 %3786 XXX
%3860:	br	 %3859 if.else393 if.then391

BASIC BLOCK if.then391
%3861:	call	 d %3311 XXX XXX state_index
%3862:	br	 if.end394

BASIC BLOCK if.else393
%3863:	br	 if.end394

BASIC BLOCK if.end394
%3864:	phi	 %3861 %3858
%3865:	icmp	 %3785 XXX
%3866:	br	 %3865 if.else398 if.then396

BASIC BLOCK if.then396
%3867:	call	 d %3311 XXX XXX state_index
%3868:	br	 if.end399

BASIC BLOCK if.else398
%3869:	br	 if.end399

BASIC BLOCK if.end399
%3870:	phi	 %3867 %3858
%3871:	br	 for.cond400

BASIC BLOCK for.cond400
%3872:	phi	 XXX %3893
%3873:	icmp	 %3872 XXX
%3874:	br	 %3873 for.end421 for.body403

BASIC BLOCK for.body403
%3875:	sext	 %3872
%3876:	call	 __ctype_b_loc
%3877:	load	 %3876
%3878:	getelementptr	 %3877 %3875
%3879:	load	 %3878
%3880:	zext	 %3879
%3881:	and	 %3880 XXX
%3882:	icmp	 %3881 XXX
%3883:	br	 %3882 lor.lhs.false410 cond.true413

BASIC BLOCK lor.lhs.false410
%3884:	icmp	 %3872 XXX
%3885:	br	 %3884 cond.false414 cond.true413

BASIC BLOCK cond.true413
%3886:	br	 cond.end415

BASIC BLOCK cond.false414
%3887:	br	 cond.end415

BASIC BLOCK cond.end415
%3888:	phi	 %3870 %3858
%3889:	sext	 %3872
%3890:	getelementptr	 trans %3889
%3891:	store	 %3888 %3890
%3892:	br	 for.inc419

BASIC BLOCK for.inc419
%3893:	add	 %3872 XXX
%3894:	br	 for.cond400

BASIC BLOCK for.end421
%3895:	getelementptr	 trans XXX
%3896:	store	 %3864 %3895
%3897:	br	 if.end433

BASIC BLOCK if.else423
%3898:	br	 for.cond424

BASIC BLOCK for.cond424
%3899:	phi	 XXX %3906
%3900:	icmp	 %3899 XXX
%3901:	br	 %3900 for.end432 for.body427

BASIC BLOCK for.body427
%3902:	sext	 %3899
%3903:	getelementptr	 trans %3902
%3904:	store	 XXX %3903
%3905:	br	 for.inc430

BASIC BLOCK for.inc430
%3906:	add	 %3899 XXX
%3907:	br	 for.cond424

BASIC BLOCK for.end432
%3908:	br	 if.end433

BASIC BLOCK if.end433
%3909:	br	 for.cond434

BASIC BLOCK for.cond434
%3910:	phi	 XXX %4160
%3911:	icmp	 %3910 %3342
%3912:	br	 %3911 for.end646 for.body437

BASIC BLOCK for.body437
%3913:	getelementptr	 %3311 XXX XXX
%3914:	store	 XXX %3913
%3915:	br	 for.cond439

BASIC BLOCK for.cond439
%3916:	phi	 XXX %3964
%3917:	sext	 %3910
%3918:	getelementptr	 %3305 XXX %3917
%3919:	getelementptr	 %3918 XXX XXX
%3920:	load	 %3919
%3921:	icmp	 %3916 %3920
%3922:	br	 %3921 for.end477 for.body445

BASIC BLOCK for.body445
%3923:	br	 for.cond446

BASIC BLOCK for.cond446
%3924:	phi	 XXX %3961
%3925:	sext	 %3916
%3926:	sext	 %3910
%3927:	getelementptr	 %3305 XXX %3926
%3928:	getelementptr	 %3927 XXX XXX
%3929:	load	 %3928
%3930:	getelementptr	 %3929 %3925
%3931:	getelementptr	 %3930 XXX XXX
%3932:	load	 %3931
%3933:	zext	 %3932
%3934:	getelementptr	 d XXX XXX
%3935:	load	 %3934
%3936:	getelementptr	 %3935 %3933
%3937:	getelementptr	 %3936 XXX XXX
%3938:	load	 %3937
%3939:	icmp	 %3924 %3938
%3940:	br	 %3939 for.end474 for.body459

BASIC BLOCK for.body459
%3941:	sext	 %3924
%3942:	sext	 %3916
%3943:	sext	 %3910
%3944:	getelementptr	 %3305 XXX %3943
%3945:	getelementptr	 %3944 XXX XXX
%3946:	load	 %3945
%3947:	getelementptr	 %3946 %3942
%3948:	getelementptr	 %3947 XXX XXX
%3949:	load	 %3948
%3950:	zext	 %3949
%3951:	getelementptr	 d XXX XXX
%3952:	load	 %3951
%3953:	getelementptr	 %3952 %3950
%3954:	getelementptr	 %3953 XXX XXX
%3955:	load	 %3954
%3956:	getelementptr	 %3955 %3941
%3957:	bitcast	 %3956
%3958:	load	 %3957
%3959:	call	 %3958 %3311 insert
%3960:	br	 for.inc472

BASIC BLOCK for.inc472
%3961:	add	 %3924 XXX
%3962:	br	 for.cond446

BASIC BLOCK for.end474
%3963:	br	 for.inc475

BASIC BLOCK for.inc475
%3964:	add	 %3916 XXX
%3965:	br	 for.cond439

BASIC BLOCK for.end477
%3966:	getelementptr	 d XXX XXX
%3967:	load	 %3966
%3968:	icmp	 %3967 XXX
%3969:	br	 %3968 if.end498 if.then480

BASIC BLOCK if.then480
%3970:	br	 for.cond481

BASIC BLOCK for.cond481
%3971:	phi	 XXX %3992
%3972:	getelementptr	 d XXX XXX
%3973:	load	 %3972
%3974:	getelementptr	 %3973 XXX
%3975:	getelementptr	 %3974 XXX XXX
%3976:	getelementptr	 %3975 XXX XXX
%3977:	load	 %3976
%3978:	icmp	 %3971 %3977
%3979:	br	 %3978 for.end497 for.body488

BASIC BLOCK for.body488
%3980:	sext	 %3971
%3981:	getelementptr	 d XXX XXX
%3982:	load	 %3981
%3983:	getelementptr	 %3982 XXX
%3984:	getelementptr	 %3983 XXX XXX
%3985:	getelementptr	 %3984 XXX XXX
%3986:	load	 %3985
%3987:	getelementptr	 %3986 %3980
%3988:	bitcast	 %3987
%3989:	load	 %3988
%3990:	call	 %3989 %3311 insert
%3991:	br	 for.inc495

BASIC BLOCK for.inc495
%3992:	add	 %3971 XXX
%3993:	br	 for.cond481

BASIC BLOCK for.end497
%3994:	br	 if.end498

BASIC BLOCK if.end498
%3995:	sext	 %3910
%3996:	getelementptr	 %3306 XXX %3995
%3997:	getelementptr	 %3996 XXX XXX
%3998:	call	 XXX %3997 tstbit
%3999:	icmp	 %3998 XXX
%4000:	br	 %3999 if.end528 if.then504

BASIC BLOCK if.then504
%4001:	br	 for.cond505

BASIC BLOCK for.cond505
%4002:	phi	 XXX %4026
%4003:	phi	 XXX %4028
%4004:	getelementptr	 %3311 XXX XXX
%4005:	load	 %4004
%4006:	icmp	 %4003 %4005
%4007:	br	 %4006 for.end527 for.body509

BASIC BLOCK for.body509
%4008:	sext	 %4003
%4009:	getelementptr	 %3311 XXX XXX
%4010:	load	 %4009
%4011:	getelementptr	 %4010 %4008
%4012:	getelementptr	 %4011 XXX XXX
%4013:	load	 %4012
%4014:	and	 %4013 XXX
%4015:	lshr	 %4014 XXX
%4016:	sext	 %4003
%4017:	getelementptr	 %3311 XXX XXX
%4018:	load	 %4017
%4019:	getelementptr	 %4018 %4016
%4020:	getelementptr	 %4019 XXX XXX
%4021:	load	 %4020
%4022:	and	 %4021 XXX
%4023:	icmp	 %4015 %4022
%4024:	br	 %4023 if.end524 if.then523

BASIC BLOCK if.then523
%4025:	br	 if.end524

BASIC BLOCK if.end524
%4026:	phi	 XXX %4002
%4027:	br	 for.inc525

BASIC BLOCK for.inc525
%4028:	add	 %4003 XXX
%4029:	br	 for.cond505

BASIC BLOCK for.end527
%4030:	br	 if.end528

BASIC BLOCK if.end528
%4031:	phi	 %4002 XXX
%4032:	br	 for.cond529

BASIC BLOCK for.cond529
%4033:	phi	 XXX %4050
%4034:	sext	 %4033
%4035:	icmp	 %4034 XXX
%4036:	br	 %4035 for.end546 for.body533

BASIC BLOCK for.body533
%4037:	sext	 %4033
%4038:	sext	 %3910
%4039:	getelementptr	 %3306 XXX %4038
%4040:	getelementptr	 %4039 XXX %4037
%4041:	load	 %4040
%4042:	sext	 %4033
%4043:	getelementptr	 dfastate.letters XXX %4042
%4044:	load	 %4043
%4045:	and	 %4041 %4044
%4046:	icmp	 %4045 XXX
%4047:	br	 %4046 if.end543 if.then542

BASIC BLOCK if.then542
%4048:	br	 for.end546

BASIC BLOCK if.end543
%4049:	br	 for.inc544

BASIC BLOCK for.inc544
%4050:	add	 %4033 XXX
%4051:	br	 for.cond529

BASIC BLOCK for.end546
%4052:	sext	 %4033
%4053:	icmp	 %4052 XXX
%4054:	br	 %4053 if.end574 if.then550

BASIC BLOCK if.then550
%4055:	br	 for.cond551

BASIC BLOCK for.cond551
%4056:	phi	 XXX %4080
%4057:	phi	 XXX %4082
%4058:	getelementptr	 %3311 XXX XXX
%4059:	load	 %4058
%4060:	icmp	 %4057 %4059
%4061:	br	 %4060 for.end573 for.body555

BASIC BLOCK for.body555
%4062:	sext	 %4057
%4063:	getelementptr	 %3311 XXX XXX
%4064:	load	 %4063
%4065:	getelementptr	 %4064 %4062
%4066:	getelementptr	 %4065 XXX XXX
%4067:	load	 %4066
%4068:	and	 %4067 XXX
%4069:	lshr	 %4068 XXX
%4070:	sext	 %4057
%4071:	getelementptr	 %3311 XXX XXX
%4072:	load	 %4071
%4073:	getelementptr	 %4072 %4070
%4074:	getelementptr	 %4073 XXX XXX
%4075:	load	 %4074
%4076:	and	 %4075 XXX
%4077:	icmp	 %4069 %4076
%4078:	br	 %4077 if.end570 if.then569

BASIC BLOCK if.then569
%4079:	br	 if.end570

BASIC BLOCK if.end570
%4080:	phi	 XXX %4056
%4081:	br	 for.inc571

BASIC BLOCK for.inc571
%4082:	add	 %4057 XXX
%4083:	br	 for.cond551

BASIC BLOCK for.end573
%4084:	br	 if.end574

BASIC BLOCK if.end574
%4085:	phi	 %4056 XXX
%4086:	call	 d %3311 XXX XXX state_index
%4087:	icmp	 %4031 XXX
%4088:	br	 %4087 if.else579 if.then577

BASIC BLOCK if.then577
%4089:	call	 d %3311 XXX XXX state_index
%4090:	br	 if.end580

BASIC BLOCK if.else579
%4091:	br	 if.end580

BASIC BLOCK if.end580
%4092:	phi	 %4089 %4086
%4093:	icmp	 %4085 XXX
%4094:	br	 %4093 if.else584 if.then582

BASIC BLOCK if.then582
%4095:	call	 d %3311 XXX XXX state_index
%4096:	br	 if.end585

BASIC BLOCK if.else584
%4097:	br	 if.end585

BASIC BLOCK if.end585
%4098:	phi	 %4095 %4086
%4099:	br	 for.cond586

BASIC BLOCK for.cond586
%4100:	phi	 XXX %4157
%4101:	sext	 %4100
%4102:	icmp	 %4101 XXX
%4103:	br	 %4102 for.end643 for.body590

BASIC BLOCK for.body590
%4104:	br	 for.cond591

BASIC BLOCK for.cond591
%4105:	phi	 XXX %4154
%4106:	sext	 %4105
%4107:	icmp	 %4106 XXX
%4108:	br	 %4107 for.end640 for.body595

BASIC BLOCK for.body595
%4109:	sext	 %4100
%4110:	sext	 %3910
%4111:	getelementptr	 %3306 XXX %4110
%4112:	getelementptr	 %4111 XXX %4109
%4113:	load	 %4112
%4114:	shl	 XXX %4105
%4115:	and	 %4113 %4114
%4116:	icmp	 %4115 XXX
%4117:	br	 %4116 if.end637 if.then603

BASIC BLOCK if.then603
%4118:	sext	 %4100
%4119:	mul	 %4118 XXX
%4120:	sext	 %4105
%4121:	add	 %4119 %4120
%4122:	trunc	 %4121
%4123:	icmp	 %4122 XXX
%4124:	br	 %4123 if.else615 if.then612

BASIC BLOCK if.then612
%4125:	sext	 %4122
%4126:	getelementptr	 trans %4125
%4127:	store	 %4092 %4126
%4128:	br	 if.end636

BASIC BLOCK if.else615
%4129:	sext	 %4122
%4130:	call	 __ctype_b_loc
%4131:	load	 %4130
%4132:	getelementptr	 %4131 %4129
%4133:	load	 %4132
%4134:	zext	 %4133
%4135:	and	 %4134 XXX
%4136:	icmp	 %4135 XXX
%4137:	br	 %4136 lor.lhs.false622 if.then625

BASIC BLOCK lor.lhs.false622
%4138:	icmp	 %4122 XXX
%4139:	br	 %4138 if.else628 if.then625

BASIC BLOCK if.then625
%4140:	sext	 %4122
%4141:	getelementptr	 trans %4140
%4142:	store	 %4098 %4141
%4143:	br	 if.end635

BASIC BLOCK if.else628
%4144:	icmp	 %4122 XXX
%4145:	br	 %4144 if.end634 if.then631

BASIC BLOCK if.then631
%4146:	sext	 %4122
%4147:	getelementptr	 trans %4146
%4148:	store	 %4086 %4147
%4149:	br	 if.end634

BASIC BLOCK if.end634
%4150:	br	 if.end635

BASIC BLOCK if.end635
%4151:	br	 if.end636

BASIC BLOCK if.end636
%4152:	br	 if.end637

BASIC BLOCK if.end637
%4153:	br	 for.inc638

BASIC BLOCK for.inc638
%4154:	add	 %4105 XXX
%4155:	br	 for.cond591

BASIC BLOCK for.end640
%4156:	br	 for.inc641

BASIC BLOCK for.inc641
%4157:	add	 %4100 XXX
%4158:	br	 for.cond586

BASIC BLOCK for.end643
%4159:	br	 for.inc644

BASIC BLOCK for.inc644
%4160:	add	 %3910 XXX
%4161:	br	 for.cond434

BASIC BLOCK for.end646
%4162:	br	 for.cond647

BASIC BLOCK for.cond647
%4163:	phi	 XXX %4173
%4164:	icmp	 %4163 %3342
%4165:	br	 %4164 for.end656 for.body650

BASIC BLOCK for.body650
%4166:	sext	 %4163
%4167:	getelementptr	 %3305 XXX %4166
%4168:	getelementptr	 %4167 XXX XXX
%4169:	load	 %4168
%4170:	bitcast	 %4169
%4171:	call	 %4170 free
%4172:	br	 for.inc654

BASIC BLOCK for.inc654
%4173:	add	 %4163 XXX
%4174:	br	 for.cond647

BASIC BLOCK for.end656
%4175:	getelementptr	 %3311 XXX XXX
%4176:	load	 %4175
%4177:	bitcast	 %4176
%4178:	call	 %4177 free
%4179:	getelementptr	 %3312 XXX XXX
%4180:	load	 %4179
%4181:	bitcast	 %4180
%4182:	call	 %4181 free
%4183:	ret	

FUNCTION setbit

BASIC BLOCK entry
%4184:	sext	 b
%4185:	urem	 %4184 XXX
%4186:	trunc	 %4185
%4187:	shl	 XXX %4186
%4188:	sext	 b
%4189:	udiv	 %4188 XXX
%4190:	getelementptr	 c %4189
%4191:	load	 %4190
%4192:	or	 %4191 %4187
%4193:	store	 %4192 %4190
%4194:	ret	

FUNCTION zeroset

BASIC BLOCK entry
%4195:	br	 for.cond

BASIC BLOCK for.cond
%4196:	phi	 XXX %4204
%4197:	sext	 %4196
%4198:	icmp	 %4197 XXX
%4199:	br	 %4198 for.end for.body

BASIC BLOCK for.body
%4200:	sext	 %4196
%4201:	getelementptr	 s %4200
%4202:	store	 XXX %4201
%4203:	br	 for.inc

BASIC BLOCK for.inc
%4204:	add	 %4196 XXX
%4205:	br	 for.cond

BASIC BLOCK for.end
%4206:	ret	

FUNCTION copyset

BASIC BLOCK entry
%4207:	br	 for.cond

BASIC BLOCK for.cond
%4208:	phi	 XXX %4219
%4209:	sext	 %4208
%4210:	icmp	 %4209 XXX
%4211:	br	 %4210 for.end for.body

BASIC BLOCK for.body
%4212:	sext	 %4208
%4213:	getelementptr	 src %4212
%4214:	load	 %4213
%4215:	sext	 %4208
%4216:	getelementptr	 dst %4215
%4217:	store	 %4214 %4216
%4218:	br	 for.inc

BASIC BLOCK for.inc
%4219:	add	 %4208 XXX
%4220:	br	 for.cond

BASIC BLOCK for.end
%4221:	ret	

FUNCTION clrbit

BASIC BLOCK entry
%4222:	sext	 b
%4223:	urem	 %4222 XXX
%4224:	trunc	 %4223
%4225:	shl	 XXX %4224
%4226:	xor	 %4225 XXX
%4227:	sext	 b
%4228:	udiv	 %4227 XXX
%4229:	getelementptr	 c %4228
%4230:	load	 %4229
%4231:	and	 %4230 %4226
%4232:	store	 %4231 %4229
%4233:	ret	

FUNCTION tstbit

BASIC BLOCK entry
%4234:	sext	 b
%4235:	udiv	 %4234 XXX
%4236:	getelementptr	 c %4235
%4237:	load	 %4236
%4238:	sext	 b
%4239:	urem	 %4238 XXX
%4240:	trunc	 %4239
%4241:	shl	 XXX %4240
%4242:	and	 %4237 %4241
%4243:	ret	 %4242

FUNCTION dfaexec

BASIC BLOCK entry
%4244:	load	 dfaexec.sbit_init
%4245:	icmp	 %4244 XXX
%4246:	br	 %4245 if.then if.end

BASIC BLOCK if.then
%4247:	store	 XXX dfaexec.sbit_init
%4248:	br	 for.cond

BASIC BLOCK for.cond
%4249:	phi	 XXX %4269
%4250:	icmp	 %4249 XXX
%4251:	br	 %4250 for.end for.body

BASIC BLOCK for.body
%4252:	sext	 %4249
%4253:	call	 __ctype_b_loc
%4254:	load	 %4253
%4255:	getelementptr	 %4254 %4252
%4256:	load	 %4255
%4257:	zext	 %4256
%4258:	and	 %4257 XXX
%4259:	icmp	 %4258 XXX
%4260:	br	 %4259 lor.rhs lor.end

BASIC BLOCK lor.rhs
%4261:	icmp	 %4249 XXX
%4262:	br	 lor.end

BASIC BLOCK lor.end
%4263:	phi	 XXX %4261
%4264:	select	 %4263 XXX XXX
%4265:	sext	 %4249
%4266:	getelementptr	 dfaexec.sbit XXX %4265
%4267:	store	 %4264 %4266
%4268:	br	 for.inc

BASIC BLOCK for.inc
%4269:	add	 %4249 XXX
%4270:	br	 for.cond

BASIC BLOCK for.end
%4271:	store	 XXX XXX
%4272:	br	 if.end

BASIC BLOCK if.end
%4273:	getelementptr	 d XXX XXX
%4274:	load	 %4273
%4275:	icmp	 %4274 XXX
%4276:	br	 %4275 if.then11 if.end12

BASIC BLOCK if.then11
%4277:	call	 d build_state_zero
%4278:	br	 if.end12

BASIC BLOCK if.end12
%4279:	getelementptr	 d XXX XXX
%4280:	load	 %4279
%4281:	store	 XXX end
%4282:	br	 for.cond14

BASIC BLOCK for.cond14
%4283:	phi	 XXX %4362 %4313 %4397 XXX
%4284:	phi	 XXX %4313 %4314 %4314 %4314
%4285:	phi	 begin %4353 %4315 %4315 %4315
%4286:	phi	 %4280 %4286 %4384 %4286 %4286
%4287:	br	 while.cond

BASIC BLOCK while.cond
%4288:	phi	 %4283 %4311
%4289:	phi	 %4284 %4300
%4290:	phi	 %4285 %4307
%4291:	sext	 %4288
%4292:	getelementptr	 %4286 %4291
%4293:	load	 %4292
%4294:	icmp	 %4293 XXX
%4295:	br	 %4294 while.end while.body

BASIC BLOCK while.body
%4296:	getelementptr	 %4290 XXX
%4297:	load	 %4290
%4298:	zext	 %4297
%4299:	getelementptr	 %4293 %4298
%4300:	load	 %4299
%4301:	sext	 %4300
%4302:	getelementptr	 %4286 %4301
%4303:	load	 %4302
%4304:	icmp	 %4303 XXX
%4305:	br	 %4304 if.end26 if.then25

BASIC BLOCK if.then25
%4306:	br	 while.end

BASIC BLOCK if.end26
%4307:	getelementptr	 %4296 XXX
%4308:	load	 %4296
%4309:	zext	 %4308
%4310:	getelementptr	 %4303 %4309
%4311:	load	 %4310
%4312:	br	 while.cond

BASIC BLOCK while.end
%4313:	phi	 %4300 %4288
%4314:	phi	 %4288 %4289
%4315:	phi	 %4296 %4290
%4316:	icmp	 %4313 XXX
%4317:	br	 %4316 if.end62 land.lhs.true

BASIC BLOCK land.lhs.true
%4318:	icmp	 %4315 end
%4319:	br	 %4318 if.end62 land.lhs.true34

BASIC BLOCK land.lhs.true34
%4320:	sext	 %4313
%4321:	getelementptr	 d XXX XXX
%4322:	load	 %4321
%4323:	getelementptr	 %4322 %4320
%4324:	load	 %4323
%4325:	icmp	 %4324 XXX
%4326:	br	 %4325 if.end62 if.then38

BASIC BLOCK if.then38
%4327:	sext	 %4313
%4328:	getelementptr	 d XXX XXX
%4329:	load	 %4328
%4330:	getelementptr	 %4329 %4327
%4331:	load	 %4330
%4332:	load	 %4315
%4333:	zext	 %4332
%4334:	getelementptr	 dfaexec.sbit XXX %4333
%4335:	load	 %4334
%4336:	and	 %4331 %4335
%4337:	icmp	 %4336 XXX
%4338:	br	 %4337 if.end55 if.then45

BASIC BLOCK if.then45
%4339:	icmp	 backref XXX
%4340:	br	 %4339 if.end54 if.then47

BASIC BLOCK if.then47
%4341:	sext	 %4313
%4342:	getelementptr	 d XXX XXX
%4343:	load	 %4342
%4344:	getelementptr	 %4343 %4341
%4345:	getelementptr	 %4344 XXX XXX
%4346:	load	 %4345
%4347:	sext	 %4346
%4348:	icmp	 %4347 XXX
%4349:	zext	 %4348
%4350:	store	 %4349 backref
%4351:	br	 if.end54

BASIC BLOCK if.end54
%4352:	br	 return

BASIC BLOCK if.end55
%4353:	getelementptr	 %4315 XXX
%4354:	load	 %4315
%4355:	zext	 %4354
%4356:	sext	 %4313
%4357:	getelementptr	 d XXX XXX
%4358:	load	 %4357
%4359:	getelementptr	 %4358 %4356
%4360:	load	 %4359
%4361:	getelementptr	 %4360 %4355
%4362:	load	 %4361
%4363:	br	 for.cond14

BASIC BLOCK if.end62
%4364:	icmp	 count XXX
%4365:	br	 %4364 if.end74 land.lhs.true64

BASIC BLOCK land.lhs.true64
%4366:	icmp	 %4315 end
%4367:	br	 %4366 if.end74 land.lhs.true67

BASIC BLOCK land.lhs.true67
%4368:	getelementptr	 %4315 XXX
%4369:	load	 %4368
%4370:	zext	 %4369
%4371:	icmp	 %4370 XXX
%4372:	br	 %4371 if.end74 if.then72

BASIC BLOCK if.then72
%4373:	load	 count
%4374:	add	 %4373 XXX
%4375:	store	 %4374 count
%4376:	br	 if.end74

BASIC BLOCK if.end74
%4377:	icmp	 %4315 end
%4378:	br	 %4377 if.end78 if.then77

BASIC BLOCK if.then77
%4379:	br	 return

BASIC BLOCK if.end78
%4380:	icmp	 %4313 XXX
%4381:	br	 %4380 if.end83 if.then81

BASIC BLOCK if.then81
%4382:	call	 %4313 d build_state
%4383:	getelementptr	 d XXX XXX
%4384:	load	 %4383
%4385:	br	 for.cond14

BASIC BLOCK if.end83
%4386:	getelementptr	 %4315 XXX
%4387:	load	 %4386
%4388:	zext	 %4387
%4389:	icmp	 %4388 XXX
%4390:	br	 %4389 if.end93 land.lhs.true88

BASIC BLOCK land.lhs.true88
%4391:	icmp	 newline XXX
%4392:	br	 %4391 if.end93 if.then90

BASIC BLOCK if.then90
%4393:	sext	 %4314
%4394:	getelementptr	 d XXX XXX
%4395:	load	 %4394
%4396:	getelementptr	 %4395 %4393
%4397:	load	 %4396
%4398:	br	 for.cond14

BASIC BLOCK if.end93
%4399:	br	 for.cond14

BASIC BLOCK return
%4400:	phi	 %4315 XXX
%4401:	ret	 %4400

FUNCTION build_state_zero

BASIC BLOCK entry
%4402:	getelementptr	 d XXX XXX
%4403:	store	 XXX %4402
%4404:	getelementptr	 d XXX XXX
%4405:	store	 XXX %4404
%4406:	getelementptr	 d XXX XXX
%4407:	load	 %4406
%4408:	add	 %4407 XXX
%4409:	sext	 %4408
%4410:	call	 %4409 XXX xcalloc
%4411:	bitcast	 %4410
%4412:	getelementptr	 d XXX XXX
%4413:	store	 %4411 %4412
%4414:	getelementptr	 d XXX XXX
%4415:	load	 %4414
%4416:	getelementptr	 %4415 XXX
%4417:	getelementptr	 d XXX XXX
%4418:	store	 %4416 %4417
%4419:	getelementptr	 d XXX XXX
%4420:	load	 %4419
%4421:	sext	 %4420
%4422:	call	 %4421 XXX xcalloc
%4423:	bitcast	 %4422
%4424:	getelementptr	 d XXX XXX
%4425:	store	 %4423 %4424
%4426:	getelementptr	 d XXX XXX
%4427:	load	 %4426
%4428:	sext	 %4427
%4429:	mul	 %4428 XXX
%4430:	call	 %4429 xmalloc_1
%4431:	bitcast	 %4430
%4432:	getelementptr	 d XXX XXX
%4433:	store	 %4431 %4432
%4434:	getelementptr	 d XXX XXX
%4435:	load	 %4434
%4436:	sext	 %4435
%4437:	mul	 %4436 XXX
%4438:	call	 %4437 xmalloc_1
%4439:	bitcast	 %4438
%4440:	getelementptr	 d XXX XXX
%4441:	store	 %4439 %4440
%4442:	call	 XXX d build_state
%4443:	ret	

FUNCTION build_state

BASIC BLOCK entry
%4444:	getelementptr	 d XXX XXX
%4445:	load	 %4444
%4446:	icmp	 %4445 XXX
%4447:	br	 %4446 if.end22 if.then

BASIC BLOCK if.then
%4448:	br	 for.cond

BASIC BLOCK for.cond
%4449:	phi	 XXX %4496
%4450:	getelementptr	 d XXX XXX
%4451:	load	 %4450
%4452:	icmp	 %4449 %4451
%4453:	br	 %4452 for.end for.body

BASIC BLOCK for.body
%4454:	sext	 %4449
%4455:	getelementptr	 d XXX XXX
%4456:	load	 %4455
%4457:	getelementptr	 %4456 %4454
%4458:	load	 %4457
%4459:	icmp	 %4458 XXX
%4460:	br	 %4459 if.else if.then3

BASIC BLOCK if.then3
%4461:	sext	 %4449
%4462:	getelementptr	 d XXX XXX
%4463:	load	 %4462
%4464:	getelementptr	 %4463 %4461
%4465:	load	 %4464
%4466:	bitcast	 %4465
%4467:	call	 %4466 free
%4468:	sext	 %4449
%4469:	getelementptr	 d XXX XXX
%4470:	load	 %4469
%4471:	getelementptr	 %4470 %4468
%4472:	store	 XXX %4471
%4473:	br	 if.end20

BASIC BLOCK if.else
%4474:	sext	 %4449
%4475:	getelementptr	 d XXX XXX
%4476:	load	 %4475
%4477:	getelementptr	 %4476 %4474
%4478:	load	 %4477
%4479:	icmp	 %4478 XXX
%4480:	br	 %4479 if.end if.then13

BASIC BLOCK if.then13
%4481:	sext	 %4449
%4482:	getelementptr	 d XXX XXX
%4483:	load	 %4482
%4484:	getelementptr	 %4483 %4481
%4485:	load	 %4484
%4486:	bitcast	 %4485
%4487:	call	 %4486 free
%4488:	sext	 %4449
%4489:	getelementptr	 d XXX XXX
%4490:	load	 %4489
%4491:	getelementptr	 %4490 %4488
%4492:	store	 XXX %4491
%4493:	br	 if.end

BASIC BLOCK if.end
%4494:	br	 if.end20

BASIC BLOCK if.end20
%4495:	br	 for.inc

BASIC BLOCK for.inc
%4496:	add	 %4449 XXX
%4497:	br	 for.cond

BASIC BLOCK for.end
%4498:	getelementptr	 d XXX XXX
%4499:	store	 XXX %4498
%4500:	br	 if.end22

BASIC BLOCK if.end22
%4501:	getelementptr	 d XXX XXX
%4502:	load	 %4501
%4503:	add	 %4502 XXX
%4504:	store	 %4503 %4501
%4505:	sext	 s
%4506:	getelementptr	 d XXX XXX
%4507:	load	 %4506
%4508:	getelementptr	 %4507 %4505
%4509:	store	 XXX %4508
%4510:	sext	 s
%4511:	getelementptr	 d XXX XXX
%4512:	load	 %4511
%4513:	getelementptr	 %4512 %4510
%4514:	getelementptr	 %4513 XXX XXX
%4515:	load	 %4514
%4516:	zext	 %4515
%4517:	sext	 s
%4518:	getelementptr	 d XXX XXX
%4519:	load	 %4518
%4520:	getelementptr	 %4519 %4517
%4521:	getelementptr	 %4520 XXX XXX
%4522:	load	 %4521
%4523:	sext	 %4522
%4524:	icmp	 %4523 XXX
%4525:	select	 %4524 XXX XXX
%4526:	add	 %4525 XXX
%4527:	add	 %4526 XXX
%4528:	shl	 XXX %4527
%4529:	and	 %4516 %4528
%4530:	icmp	 %4529 XXX
%4531:	br	 %4530 if.end55 land.lhs.true

BASIC BLOCK land.lhs.true
%4532:	sext	 s
%4533:	getelementptr	 d XXX XXX
%4534:	load	 %4533
%4535:	getelementptr	 %4534 %4532
%4536:	getelementptr	 %4535 XXX XXX
%4537:	load	 %4536
%4538:	zext	 %4537
%4539:	sext	 s
%4540:	getelementptr	 d XXX XXX
%4541:	load	 %4540
%4542:	getelementptr	 %4541 %4539
%4543:	getelementptr	 %4542 XXX XXX
%4544:	load	 %4543
%4545:	sext	 %4544
%4546:	icmp	 %4545 XXX
%4547:	select	 %4546 XXX XXX
%4548:	add	 %4547 XXX
%4549:	shl	 XXX %4548
%4550:	and	 %4538 %4549
%4551:	icmp	 %4550 XXX
%4552:	br	 %4551 if.end55 if.then51

BASIC BLOCK if.then51
%4553:	sext	 s
%4554:	getelementptr	 d XXX XXX
%4555:	load	 %4554
%4556:	getelementptr	 %4555 %4553
%4557:	load	 %4556
%4558:	or	 %4557 XXX
%4559:	store	 %4558 %4556
%4560:	br	 if.end55

BASIC BLOCK if.end55
%4561:	sext	 s
%4562:	getelementptr	 d XXX XXX
%4563:	load	 %4562
%4564:	getelementptr	 %4563 %4561
%4565:	getelementptr	 %4564 XXX XXX
%4566:	load	 %4565
%4567:	zext	 %4566
%4568:	sext	 s
%4569:	getelementptr	 d XXX XXX
%4570:	load	 %4569
%4571:	getelementptr	 %4570 %4568
%4572:	getelementptr	 %4571 XXX XXX
%4573:	load	 %4572
%4574:	sext	 %4573
%4575:	icmp	 %4574 XXX
%4576:	select	 %4575 XXX XXX
%4577:	add	 %4576 XXX
%4578:	add	 %4577 XXX
%4579:	shl	 XXX %4578
%4580:	and	 %4567 %4579
%4581:	icmp	 %4580 XXX
%4582:	br	 %4581 if.end95 land.lhs.true73

BASIC BLOCK land.lhs.true73
%4583:	sext	 s
%4584:	getelementptr	 d XXX XXX
%4585:	load	 %4584
%4586:	getelementptr	 %4585 %4583
%4587:	getelementptr	 %4586 XXX XXX
%4588:	load	 %4587
%4589:	zext	 %4588
%4590:	sext	 s
%4591:	getelementptr	 d XXX XXX
%4592:	load	 %4591
%4593:	getelementptr	 %4592 %4590
%4594:	getelementptr	 %4593 XXX XXX
%4595:	load	 %4594
%4596:	sext	 %4595
%4597:	icmp	 %4596 XXX
%4598:	select	 %4597 XXX XXX
%4599:	add	 %4598 XXX
%4600:	shl	 XXX %4599
%4601:	and	 %4589 %4600
%4602:	icmp	 %4601 XXX
%4603:	br	 %4602 if.end95 if.then90

BASIC BLOCK if.then90
%4604:	sext	 s
%4605:	getelementptr	 d XXX XXX
%4606:	load	 %4605
%4607:	getelementptr	 %4606 %4604
%4608:	load	 %4607
%4609:	or	 %4608 XXX
%4610:	store	 %4609 %4607
%4611:	br	 if.end95

BASIC BLOCK if.end95
%4612:	sext	 s
%4613:	getelementptr	 d XXX XXX
%4614:	load	 %4613
%4615:	getelementptr	 %4614 %4612
%4616:	getelementptr	 %4615 XXX XXX
%4617:	load	 %4616
%4618:	zext	 %4617
%4619:	sext	 s
%4620:	getelementptr	 d XXX XXX
%4621:	load	 %4620
%4622:	getelementptr	 %4621 %4619
%4623:	getelementptr	 %4622 XXX XXX
%4624:	load	 %4623
%4625:	sext	 %4624
%4626:	icmp	 %4625 XXX
%4627:	select	 %4626 XXX XXX
%4628:	add	 %4627 XXX
%4629:	add	 %4628 XXX
%4630:	shl	 XXX %4629
%4631:	and	 %4618 %4630
%4632:	icmp	 %4631 XXX
%4633:	br	 %4632 if.end135 land.lhs.true113

BASIC BLOCK land.lhs.true113
%4634:	sext	 s
%4635:	getelementptr	 d XXX XXX
%4636:	load	 %4635
%4637:	getelementptr	 %4636 %4634
%4638:	getelementptr	 %4637 XXX XXX
%4639:	load	 %4638
%4640:	zext	 %4639
%4641:	sext	 s
%4642:	getelementptr	 d XXX XXX
%4643:	load	 %4642
%4644:	getelementptr	 %4643 %4641
%4645:	getelementptr	 %4644 XXX XXX
%4646:	load	 %4645
%4647:	sext	 %4646
%4648:	icmp	 %4647 XXX
%4649:	select	 %4648 XXX XXX
%4650:	add	 %4649 XXX
%4651:	shl	 XXX %4650
%4652:	and	 %4640 %4651
%4653:	icmp	 %4652 XXX
%4654:	br	 %4653 if.end135 if.then130

BASIC BLOCK if.then130
%4655:	sext	 s
%4656:	getelementptr	 d XXX XXX
%4657:	load	 %4656
%4658:	getelementptr	 %4657 %4655
%4659:	load	 %4658
%4660:	or	 %4659 XXX
%4661:	store	 %4660 %4658
%4662:	br	 if.end135

BASIC BLOCK if.end135
%4663:	call	 XXX xmalloc_1
%4664:	bitcast	 %4663
%4665:	call	 s d %4664 dfastate
%4666:	br	 for.cond136

BASIC BLOCK for.cond136
%4667:	phi	 XXX %4762
%4668:	icmp	 %4667 XXX
%4669:	br	 %4668 for.end194 for.body139

BASIC BLOCK for.body139
%4670:	sext	 %4667
%4671:	getelementptr	 %4664 %4670
%4672:	load	 %4671
%4673:	getelementptr	 d XXX XXX
%4674:	load	 %4673
%4675:	icmp	 %4672 %4674
%4676:	br	 %4675 if.end191 if.then145

BASIC BLOCK if.then145
%4677:	getelementptr	 d XXX XXX
%4678:	load	 %4677
%4679:	br	 while.cond

BASIC BLOCK while.cond
%4680:	sext	 %4667
%4681:	getelementptr	 %4664 %4680
%4682:	load	 %4681
%4683:	getelementptr	 d XXX XXX
%4684:	load	 %4683
%4685:	icmp	 %4682 %4684
%4686:	br	 %4685 while.end while.body

BASIC BLOCK while.body
%4687:	getelementptr	 d XXX XXX
%4688:	load	 %4687
%4689:	mul	 %4688 XXX
%4690:	store	 %4689 %4687
%4691:	br	 while.cond

BASIC BLOCK while.end
%4692:	getelementptr	 d XXX XXX
%4693:	load	 %4692
%4694:	bitcast	 %4693
%4695:	getelementptr	 d XXX XXX
%4696:	load	 %4695
%4697:	add	 %4696 XXX
%4698:	sext	 %4697
%4699:	mul	 %4698 XXX
%4700:	call	 %4694 %4699 xrealloc_1
%4701:	bitcast	 %4700
%4702:	getelementptr	 d XXX XXX
%4703:	store	 %4701 %4702
%4704:	getelementptr	 d XXX XXX
%4705:	load	 %4704
%4706:	getelementptr	 %4705 XXX
%4707:	getelementptr	 d XXX XXX
%4708:	store	 %4706 %4707
%4709:	getelementptr	 d XXX XXX
%4710:	load	 %4709
%4711:	bitcast	 %4710
%4712:	getelementptr	 d XXX XXX
%4713:	load	 %4712
%4714:	sext	 %4713
%4715:	mul	 %4714 XXX
%4716:	call	 %4711 %4715 xrealloc_1
%4717:	bitcast	 %4716
%4718:	getelementptr	 d XXX XXX
%4719:	store	 %4717 %4718
%4720:	getelementptr	 d XXX XXX
%4721:	load	 %4720
%4722:	bitcast	 %4721
%4723:	getelementptr	 d XXX XXX
%4724:	load	 %4723
%4725:	sext	 %4724
%4726:	mul	 %4725 XXX
%4727:	call	 %4722 %4726 xrealloc_1
%4728:	bitcast	 %4727
%4729:	getelementptr	 d XXX XXX
%4730:	store	 %4728 %4729
%4731:	getelementptr	 d XXX XXX
%4732:	load	 %4731
%4733:	bitcast	 %4732
%4734:	getelementptr	 d XXX XXX
%4735:	load	 %4734
%4736:	sext	 %4735
%4737:	mul	 %4736 XXX
%4738:	call	 %4733 %4737 xrealloc_1
%4739:	bitcast	 %4738
%4740:	getelementptr	 d XXX XXX
%4741:	store	 %4739 %4740
%4742:	br	 while.cond178

BASIC BLOCK while.cond178
%4743:	phi	 %4678 %4753
%4744:	getelementptr	 d XXX XXX
%4745:	load	 %4744
%4746:	icmp	 %4743 %4745
%4747:	br	 %4746 while.end190 while.body182

BASIC BLOCK while.body182
%4748:	sext	 %4743
%4749:	getelementptr	 d XXX XXX
%4750:	load	 %4749
%4751:	getelementptr	 %4750 %4748
%4752:	store	 XXX %4751
%4753:	add	 %4743 XXX
%4754:	sext	 %4743
%4755:	getelementptr	 d XXX XXX
%4756:	load	 %4755
%4757:	getelementptr	 %4756 %4754
%4758:	store	 XXX %4757
%4759:	br	 while.cond178

BASIC BLOCK while.end190
%4760:	br	 if.end191

BASIC BLOCK if.end191
%4761:	br	 for.inc192

BASIC BLOCK for.inc192
%4762:	add	 %4667 XXX
%4763:	br	 for.cond136

BASIC BLOCK for.end194
%4764:	getelementptr	 %4664 XXX
%4765:	load	 %4764
%4766:	sext	 s
%4767:	getelementptr	 d XXX XXX
%4768:	load	 %4767
%4769:	getelementptr	 %4768 %4766
%4770:	store	 %4765 %4769
%4771:	getelementptr	 %4664 XXX
%4772:	store	 XXX %4771
%4773:	sext	 s
%4774:	getelementptr	 d XXX XXX
%4775:	load	 %4774
%4776:	getelementptr	 %4775 %4773
%4777:	getelementptr	 %4776 XXX XXX
%4778:	load	 %4777
%4779:	icmp	 %4778 XXX
%4780:	br	 %4779 if.else209 if.then205

BASIC BLOCK if.then205
%4781:	sext	 s
%4782:	getelementptr	 d XXX XXX
%4783:	load	 %4782
%4784:	getelementptr	 %4783 %4781
%4785:	store	 %4664 %4784
%4786:	br	 if.end213

BASIC BLOCK if.else209
%4787:	sext	 s
%4788:	getelementptr	 d XXX XXX
%4789:	load	 %4788
%4790:	getelementptr	 %4789 %4787
%4791:	store	 %4664 %4790
%4792:	br	 if.end213

BASIC BLOCK if.end213
%4793:	ret	

FUNCTION dfainit

BASIC BLOCK entry
%4794:	getelementptr	 d XXX XXX
%4795:	store	 XXX %4794
%4796:	getelementptr	 d XXX XXX
%4797:	load	 %4796
%4798:	sext	 %4797
%4799:	mul	 %4798 XXX
%4800:	call	 %4799 xmalloc_1
%4801:	bitcast	 %4800
%4802:	getelementptr	 d XXX XXX
%4803:	store	 %4801 %4802
%4804:	getelementptr	 d XXX XXX
%4805:	store	 XXX %4804
%4806:	getelementptr	 d XXX XXX
%4807:	store	 XXX %4806
%4808:	getelementptr	 d XXX XXX
%4809:	load	 %4808
%4810:	sext	 %4809
%4811:	mul	 %4810 XXX
%4812:	call	 %4811 xmalloc_1
%4813:	bitcast	 %4812
%4814:	getelementptr	 d XXX XXX
%4815:	store	 %4813 %4814
%4816:	getelementptr	 d XXX XXX
%4817:	store	 XXX %4816
%4818:	getelementptr	 d XXX XXX
%4819:	store	 XXX %4818
%4820:	getelementptr	 d XXX XXX
%4821:	store	 XXX %4820
%4822:	getelementptr	 d XXX XXX
%4823:	store	 XXX %4822
%4824:	getelementptr	 d XXX XXX
%4825:	store	 XXX %4824
%4826:	getelementptr	 d XXX XXX
%4827:	store	 XXX %4826
%4828:	getelementptr	 d XXX XXX
%4829:	store	 XXX %4828
%4830:	ret	

FUNCTION dfacomp

BASIC BLOCK entry
%4831:	load	 case_fold
%4832:	icmp	 %4831 XXX
%4833:	br	 %4832 if.else24 if.then

BASIC BLOCK if.then
%4834:	call	 len malloc
%4835:	icmp	 %4834 XXX
%4836:	br	 %4835 if.then2 if.end

BASIC BLOCK if.then2
%4837:	call	 XXX gettext
%4838:	call	 %4837 dfaerror
%4839:	br	 if.end

BASIC BLOCK if.end
%4840:	store	 XXX case_fold
%4841:	br	 for.cond

BASIC BLOCK for.cond
%4842:	phi	 XXX %4877
%4843:	sext	 %4842
%4844:	icmp	 %4843 len
%4845:	br	 %4844 for.end for.body

BASIC BLOCK for.body
%4846:	sext	 %4842
%4847:	getelementptr	 s %4846
%4848:	load	 %4847
%4849:	sext	 %4848
%4850:	sext	 %4849
%4851:	call	 __ctype_b_loc
%4852:	load	 %4851
%4853:	getelementptr	 %4852 %4850
%4854:	load	 %4853
%4855:	zext	 %4854
%4856:	and	 %4855 XXX
%4857:	icmp	 %4856 XXX
%4858:	br	 %4857 if.else if.then11

BASIC BLOCK if.then11
%4859:	sext	 %4842
%4860:	getelementptr	 s %4859
%4861:	load	 %4860
%4862:	sext	 %4861
%4863:	call	 %4862 tolower
%4864:	trunc	 %4863
%4865:	sext	 %4842
%4866:	getelementptr	 %4834 %4865
%4867:	store	 %4864 %4866
%4868:	br	 if.end23

BASIC BLOCK if.else
%4869:	sext	 %4842
%4870:	getelementptr	 s %4869
%4871:	load	 %4870
%4872:	sext	 %4842
%4873:	getelementptr	 %4834 %4872
%4874:	store	 %4871 %4873
%4875:	br	 if.end23

BASIC BLOCK if.end23
%4876:	br	 for.inc

BASIC BLOCK for.inc
%4877:	add	 %4842 XXX
%4878:	br	 for.cond

BASIC BLOCK for.end
%4879:	call	 d dfainit
%4880:	call	 %4834 len d dfaparse
%4881:	call	 %4834 free
%4882:	call	 d dfamust
%4883:	getelementptr	 d XXX XXX
%4884:	store	 XXX %4883
%4885:	getelementptr	 d XXX XXX
%4886:	store	 XXX %4885
%4887:	getelementptr	 d XXX XXX
%4888:	store	 XXX %4887
%4889:	getelementptr	 d XXX XXX
%4890:	store	 XXX %4889
%4891:	getelementptr	 d XXX XXX
%4892:	store	 XXX %4891
%4893:	store	 XXX case_fold
%4894:	call	 s len d dfaparse
%4895:	call	 d searchflag dfaanalyze
%4896:	br	 if.end25

BASIC BLOCK if.else24
%4897:	call	 d dfainit
%4898:	call	 s len d dfaparse
%4899:	call	 d dfamust
%4900:	call	 d searchflag dfaanalyze
%4901:	br	 if.end25

BASIC BLOCK if.end25
%4902:	ret	

FUNCTION dfamust

BASIC BLOCK entry
%4903:	getelementptr	 dfa XXX XXX
%4904:	load	 %4903
%4905:	add	 %4904 XXX
%4906:	sext	 %4905
%4907:	mul	 %4906 XXX
%4908:	call	 %4907 malloc
%4909:	bitcast	 %4908
%4910:	icmp	 %4909 XXX
%4911:	br	 %4910 if.end if.then

BASIC BLOCK if.then
%4912:	br	 return

BASIC BLOCK if.end
%4913:	br	 for.cond

BASIC BLOCK for.cond
%4914:	phi	 XXX %4924
%4915:	getelementptr	 dfa XXX XXX
%4916:	load	 %4915
%4917:	icmp	 %4914 %4916
%4918:	br	 %4917 for.end for.body

BASIC BLOCK for.body
%4919:	sext	 %4914
%4920:	getelementptr	 %4909 %4919
%4921:	bitcast	 %4920
%4922:	call	 %4921 XXX XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%4923:	br	 for.inc

BASIC BLOCK for.inc
%4924:	add	 %4914 XXX
%4925:	br	 for.cond

BASIC BLOCK for.end
%4926:	br	 for.cond5

BASIC BLOCK for.cond5
%4927:	phi	 XXX %5003
%4928:	getelementptr	 dfa XXX XXX
%4929:	load	 %4928
%4930:	icmp	 %4927 %4929
%4931:	br	 %4930 for.end64 for.body9

BASIC BLOCK for.body9
%4932:	call	 XXX malloc
%4933:	bitcast	 %4932
%4934:	sext	 %4927
%4935:	getelementptr	 %4909 %4934
%4936:	getelementptr	 %4935 XXX XXX
%4937:	store	 %4933 %4936
%4938:	call	 XXX malloc
%4939:	sext	 %4927
%4940:	getelementptr	 %4909 %4939
%4941:	getelementptr	 %4940 XXX XXX
%4942:	store	 %4938 %4941
%4943:	call	 XXX malloc
%4944:	sext	 %4927
%4945:	getelementptr	 %4909 %4944
%4946:	getelementptr	 %4945 XXX XXX
%4947:	store	 %4943 %4946
%4948:	call	 XXX malloc
%4949:	sext	 %4927
%4950:	getelementptr	 %4909 %4949
%4951:	getelementptr	 %4950 XXX XXX
%4952:	store	 %4948 %4951
%4953:	sext	 %4927
%4954:	getelementptr	 %4909 %4953
%4955:	getelementptr	 %4954 XXX XXX
%4956:	load	 %4955
%4957:	icmp	 %4956 XXX
%4958:	br	 %4957 lor.lhs.false if.then44

BASIC BLOCK lor.lhs.false
%4959:	sext	 %4927
%4960:	getelementptr	 %4909 %4959
%4961:	getelementptr	 %4960 XXX XXX
%4962:	load	 %4961
%4963:	icmp	 %4962 XXX
%4964:	br	 %4963 lor.lhs.false32 if.then44

BASIC BLOCK lor.lhs.false32
%4965:	sext	 %4927
%4966:	getelementptr	 %4909 %4965
%4967:	getelementptr	 %4966 XXX XXX
%4968:	load	 %4967
%4969:	icmp	 %4968 XXX
%4970:	br	 %4969 lor.lhs.false38 if.then44

BASIC BLOCK lor.lhs.false38
%4971:	sext	 %4927
%4972:	getelementptr	 %4909 %4971
%4973:	getelementptr	 %4972 XXX XXX
%4974:	load	 %4973
%4975:	icmp	 %4974 XXX
%4976:	br	 %4975 if.end45 if.then44

BASIC BLOCK if.then44
%4977:	br	 done

BASIC BLOCK if.end45
%4978:	sext	 %4927
%4979:	getelementptr	 %4909 %4978
%4980:	getelementptr	 %4979 XXX XXX
%4981:	load	 %4980
%4982:	getelementptr	 %4981 XXX
%4983:	store	 XXX %4982
%4984:	sext	 %4927
%4985:	getelementptr	 %4909 %4984
%4986:	getelementptr	 %4985 XXX XXX
%4987:	load	 %4986
%4988:	getelementptr	 %4987 XXX
%4989:	store	 XXX %4988
%4990:	sext	 %4927
%4991:	getelementptr	 %4909 %4990
%4992:	getelementptr	 %4991 XXX XXX
%4993:	load	 %4992
%4994:	getelementptr	 %4993 XXX
%4995:	store	 XXX %4994
%4996:	sext	 %4927
%4997:	getelementptr	 %4909 %4996
%4998:	getelementptr	 %4997 XXX XXX
%4999:	load	 %4998
%5000:	getelementptr	 %4999 XXX
%5001:	store	 XXX %5000
%5002:	br	 for.inc62

BASIC BLOCK for.inc62
%5003:	add	 %4927 XXX
%5004:	br	 for.cond5

BASIC BLOCK for.end64
%5005:	br	 for.cond65

BASIC BLOCK for.cond65
%5006:	phi	 XXX %5401
%5007:	phi	 %4909 %5399
%5008:	getelementptr	 dfa XXX XXX
%5009:	load	 %5008
%5010:	icmp	 %5006 %5009
%5011:	br	 %5010 for.end371 for.body69

BASIC BLOCK for.body69
%5012:	sext	 %5006
%5013:	getelementptr	 dfa XXX XXX
%5014:	load	 %5013
%5015:	getelementptr	 %5014 %5012
%5016:	load	 %5015
%5017:	switch	 %5016 sw.default XXX sw.bb XXX sw.bb XXX sw.bb72 XXX sw.bb72 XXX sw.bb72 XXX sw.bb72 XXX sw.bb72 XXX sw.bb72 XXX sw.bb72 XXX sw.bb72 XXX sw.bb73 XXX sw.bb73 XXX sw.bb78 XXX sw.bb78 XXX sw.bb175 XXX sw.bb183 XXX sw.bb221

BASIC BLOCK sw.bb
%5018:	br	 done

BASIC BLOCK sw.bb72
%5019:	call	 %5007 resetmust
%5020:	br	 sw.epilog

BASIC BLOCK sw.bb73
%5021:	icmp	 %5007 %4909
%5022:	br	 %5021 if.end77 if.then76

BASIC BLOCK if.then76
%5023:	br	 done

BASIC BLOCK if.end77
%5024:	getelementptr	 %5007 XXX
%5025:	call	 %5024 resetmust
%5026:	br	 sw.epilog

BASIC BLOCK sw.bb78
%5027:	getelementptr	 %4909 XXX
%5028:	icmp	 %5007 %5027
%5029:	br	 %5028 if.end83 if.then82

BASIC BLOCK if.then82
%5030:	br	 done

BASIC BLOCK if.end83
%5031:	getelementptr	 %5007 XXX
%5032:	getelementptr	 %5031 XXX
%5033:	getelementptr	 %5032 XXX XXX
%5034:	load	 %5033
%5035:	getelementptr	 %5031 XXX XXX
%5036:	load	 %5035
%5037:	call	 %5034 %5036 strcmp
%5038:	icmp	 %5037 XXX
%5039:	br	 %5038 if.end94 if.then91

BASIC BLOCK if.then91
%5040:	getelementptr	 %5032 XXX XXX
%5041:	load	 %5040
%5042:	getelementptr	 %5041 XXX
%5043:	store	 XXX %5042
%5044:	br	 if.end94

BASIC BLOCK if.end94
%5045:	br	 while.cond

BASIC BLOCK while.cond
%5046:	phi	 XXX %5071
%5047:	sext	 %5046
%5048:	getelementptr	 %5032 XXX XXX
%5049:	load	 %5048
%5050:	getelementptr	 %5049 %5047
%5051:	load	 %5050
%5052:	sext	 %5051
%5053:	icmp	 %5052 XXX
%5054:	br	 %5053 land.end land.rhs

BASIC BLOCK land.rhs
%5055:	sext	 %5046
%5056:	getelementptr	 %5032 XXX XXX
%5057:	load	 %5056
%5058:	getelementptr	 %5057 %5055
%5059:	load	 %5058
%5060:	sext	 %5059
%5061:	sext	 %5046
%5062:	getelementptr	 %5031 XXX XXX
%5063:	load	 %5062
%5064:	getelementptr	 %5063 %5061
%5065:	load	 %5064
%5066:	sext	 %5065
%5067:	icmp	 %5060 %5066
%5068:	br	 land.end

BASIC BLOCK land.end
%5069:	phi	 XXX %5067
%5070:	br	 %5069 while.end while.body

BASIC BLOCK while.body
%5071:	add	 %5046 XXX
%5072:	br	 while.cond

BASIC BLOCK while.end
%5073:	sext	 %5046
%5074:	getelementptr	 %5032 XXX XXX
%5075:	load	 %5074
%5076:	getelementptr	 %5075 %5073
%5077:	store	 XXX %5076
%5078:	getelementptr	 %5032 XXX XXX
%5079:	load	 %5078
%5080:	call	 %5079 strlen
%5081:	trunc	 %5080
%5082:	getelementptr	 %5031 XXX XXX
%5083:	load	 %5082
%5084:	call	 %5083 strlen
%5085:	trunc	 %5084
%5086:	icmp	 %5081 %5085
%5087:	br	 %5086 if.end124 if.then123

BASIC BLOCK if.then123
%5088:	br	 if.end124

BASIC BLOCK if.end124
%5089:	phi	 %5085 %5081
%5090:	br	 for.cond125

BASIC BLOCK for.cond125
%5091:	phi	 XXX %5114
%5092:	icmp	 %5091 %5089
%5093:	br	 %5092 for.end146 for.body128

BASIC BLOCK for.body128
%5094:	sub	 %5081 %5091
%5095:	sub	 %5094 XXX
%5096:	sext	 %5095
%5097:	getelementptr	 %5032 XXX XXX
%5098:	load	 %5097
%5099:	getelementptr	 %5098 %5096
%5100:	load	 %5099
%5101:	sext	 %5100
%5102:	sub	 %5085 %5091
%5103:	sub	 %5102 XXX
%5104:	sext	 %5103
%5105:	getelementptr	 %5031 XXX XXX
%5106:	load	 %5105
%5107:	getelementptr	 %5106 %5104
%5108:	load	 %5107
%5109:	sext	 %5108
%5110:	icmp	 %5101 %5109
%5111:	br	 %5110 if.end143 if.then142

BASIC BLOCK if.then142
%5112:	br	 for.end146

BASIC BLOCK if.end143
%5113:	br	 for.inc144

BASIC BLOCK for.inc144
%5114:	add	 %5091 XXX
%5115:	br	 for.cond125

BASIC BLOCK for.end146
%5116:	br	 for.cond147

BASIC BLOCK for.cond147
%5117:	phi	 XXX %5133
%5118:	icmp	 %5117 %5091
%5119:	br	 %5118 for.end161 for.body150

BASIC BLOCK for.body150
%5120:	sub	 %5081 %5091
%5121:	add	 %5120 %5117
%5122:	sext	 %5121
%5123:	getelementptr	 %5032 XXX XXX
%5124:	load	 %5123
%5125:	getelementptr	 %5124 %5122
%5126:	load	 %5125
%5127:	sext	 %5117
%5128:	getelementptr	 %5032 XXX XXX
%5129:	load	 %5128
%5130:	getelementptr	 %5129 %5127
%5131:	store	 %5126 %5130
%5132:	br	 for.inc159

BASIC BLOCK for.inc159
%5133:	add	 %5117 XXX
%5134:	br	 for.cond147

BASIC BLOCK for.end161
%5135:	sext	 %5117
%5136:	getelementptr	 %5032 XXX XXX
%5137:	load	 %5136
%5138:	getelementptr	 %5137 %5135
%5139:	store	 XXX %5138
%5140:	getelementptr	 %5032 XXX XXX
%5141:	load	 %5140
%5142:	getelementptr	 %5031 XXX XXX
%5143:	load	 %5142
%5144:	call	 %5141 %5143 inboth
%5145:	icmp	 %5144 XXX
%5146:	br	 %5145 if.end171 if.then170

BASIC BLOCK if.then170
%5147:	br	 done

BASIC BLOCK if.end171
%5148:	getelementptr	 %5032 XXX XXX
%5149:	load	 %5148
%5150:	call	 %5149 freelist
%5151:	getelementptr	 %5032 XXX XXX
%5152:	load	 %5151
%5153:	bitcast	 %5152
%5154:	call	 %5153 free
%5155:	getelementptr	 %5032 XXX XXX
%5156:	store	 %5144 %5155
%5157:	br	 sw.epilog

BASIC BLOCK sw.bb175
%5158:	icmp	 %5007 %4909
%5159:	br	 %5158 if.end179 if.then178

BASIC BLOCK if.then178
%5160:	br	 done

BASIC BLOCK if.end179
%5161:	getelementptr	 %5007 XXX
%5162:	getelementptr	 %5161 XXX XXX
%5163:	load	 %5162
%5164:	getelementptr	 %5163 XXX
%5165:	store	 XXX %5164
%5166:	br	 sw.epilog

BASIC BLOCK sw.bb183
%5167:	getelementptr	 %4909 XXX
%5168:	icmp	 %5007 %5167
%5169:	br	 %5168 if.end188 if.then187

BASIC BLOCK if.then187
%5170:	br	 done

BASIC BLOCK if.end188
%5171:	br	 for.cond189

BASIC BLOCK for.cond189
%5172:	phi	 XXX %5201
%5173:	phi	 XXX %5199
%5174:	sext	 %5172
%5175:	getelementptr	 %4909 XXX
%5176:	getelementptr	 %5175 XXX XXX
%5177:	load	 %5176
%5178:	getelementptr	 %5177 %5174
%5179:	load	 %5178
%5180:	icmp	 %5179 XXX
%5181:	br	 %5180 for.end213 for.body196

BASIC BLOCK for.body196
%5182:	sext	 %5172
%5183:	getelementptr	 %4909 XXX
%5184:	getelementptr	 %5183 XXX XXX
%5185:	load	 %5184
%5186:	getelementptr	 %5185 %5182
%5187:	load	 %5186
%5188:	call	 %5187 strlen
%5189:	call	 %5173 strlen
%5190:	icmp	 %5188 %5189
%5191:	br	 %5190 if.end210 if.then205

BASIC BLOCK if.then205
%5192:	sext	 %5172
%5193:	getelementptr	 %4909 XXX
%5194:	getelementptr	 %5193 XXX XXX
%5195:	load	 %5194
%5196:	getelementptr	 %5195 %5192
%5197:	load	 %5196
%5198:	br	 if.end210

BASIC BLOCK if.end210
%5199:	phi	 %5197 %5173
%5200:	br	 for.inc211

BASIC BLOCK for.inc211
%5201:	add	 %5172 XXX
%5202:	br	 for.cond189

BASIC BLOCK for.end213
%5203:	getelementptr	 %4909 XXX
%5204:	getelementptr	 %5203 XXX XXX
%5205:	load	 %5204
%5206:	call	 %5173 %5205 strcmp
%5207:	icmp	 %5206 XXX
%5208:	br	 %5207 if.end220 if.then219

BASIC BLOCK if.then219
%5209:	br	 if.end220

BASIC BLOCK if.end220
%5210:	phi	 XXX XXX
%5211:	br	 done

BASIC BLOCK sw.bb221
%5212:	getelementptr	 %4909 XXX
%5213:	icmp	 %5007 %5212
%5214:	br	 %5213 if.end226 if.then225

BASIC BLOCK if.then225
%5215:	br	 done

BASIC BLOCK if.end226
%5216:	getelementptr	 %5007 XXX
%5217:	getelementptr	 %5216 XXX
%5218:	getelementptr	 %5217 XXX XXX
%5219:	load	 %5218
%5220:	getelementptr	 %5216 XXX XXX
%5221:	load	 %5220
%5222:	call	 %5219 %5221 addlists
%5223:	getelementptr	 %5217 XXX XXX
%5224:	store	 %5222 %5223
%5225:	getelementptr	 %5217 XXX XXX
%5226:	load	 %5225
%5227:	icmp	 %5226 XXX
%5228:	br	 %5227 if.end239 if.then238

BASIC BLOCK if.then238
%5229:	br	 done

BASIC BLOCK if.end239
%5230:	getelementptr	 %5217 XXX XXX
%5231:	load	 %5230
%5232:	getelementptr	 %5231 XXX
%5233:	load	 %5232
%5234:	sext	 %5233
%5235:	icmp	 %5234 XXX
%5236:	br	 %5235 if.end272 land.lhs.true

BASIC BLOCK land.lhs.true
%5237:	getelementptr	 %5216 XXX XXX
%5238:	load	 %5237
%5239:	getelementptr	 %5238 XXX
%5240:	load	 %5239
%5241:	sext	 %5240
%5242:	icmp	 %5241 XXX
%5243:	br	 %5242 if.end272 if.then250

BASIC BLOCK if.then250
%5244:	getelementptr	 %5217 XXX XXX
%5245:	load	 %5244
%5246:	call	 %5245 icpyalloc
%5247:	icmp	 %5246 XXX
%5248:	br	 %5247 if.end256 if.then255

BASIC BLOCK if.then255
%5249:	br	 done

BASIC BLOCK if.end256
%5250:	getelementptr	 %5216 XXX XXX
%5251:	load	 %5250
%5252:	call	 %5246 %5251 icatalloc
%5253:	icmp	 %5252 XXX
%5254:	br	 %5253 if.end262 if.then261

BASIC BLOCK if.then261
%5255:	br	 done

BASIC BLOCK if.end262
%5256:	getelementptr	 %5217 XXX XXX
%5257:	load	 %5256
%5258:	call	 %5252 strlen
%5259:	call	 %5257 %5252 %5258 enlist
%5260:	getelementptr	 %5217 XXX XXX
%5261:	store	 %5259 %5260
%5262:	call	 %5252 free
%5263:	getelementptr	 %5217 XXX XXX
%5264:	load	 %5263
%5265:	icmp	 %5264 XXX
%5266:	br	 %5265 if.end271 if.then270

BASIC BLOCK if.then270
%5267:	br	 done

BASIC BLOCK if.end271
%5268:	br	 if.end272

BASIC BLOCK if.end272
%5269:	getelementptr	 %5217 XXX XXX
%5270:	load	 %5269
%5271:	getelementptr	 %5270 XXX
%5272:	load	 %5271
%5273:	sext	 %5272
%5274:	icmp	 %5273 XXX
%5275:	br	 %5274 if.end288 if.then278

BASIC BLOCK if.then278
%5276:	getelementptr	 %5217 XXX XXX
%5277:	load	 %5276
%5278:	getelementptr	 %5216 XXX XXX
%5279:	load	 %5278
%5280:	call	 %5277 %5279 icatalloc
%5281:	getelementptr	 %5217 XXX XXX
%5282:	store	 %5280 %5281
%5283:	getelementptr	 %5217 XXX XXX
%5284:	load	 %5283
%5285:	icmp	 %5284 XXX
%5286:	br	 %5285 if.end287 if.then286

BASIC BLOCK if.then286
%5287:	br	 done

BASIC BLOCK if.end287
%5288:	br	 if.end288

BASIC BLOCK if.end288
%5289:	getelementptr	 %5216 XXX XXX
%5290:	load	 %5289
%5291:	getelementptr	 %5290 XXX
%5292:	load	 %5291
%5293:	sext	 %5292
%5294:	icmp	 %5293 XXX
%5295:	br	 %5294 if.end297 if.then294

BASIC BLOCK if.then294
%5296:	getelementptr	 %5217 XXX XXX
%5297:	load	 %5296
%5298:	getelementptr	 %5297 XXX
%5299:	store	 XXX %5298
%5300:	br	 if.end297

BASIC BLOCK if.end297
%5301:	getelementptr	 %5217 XXX XXX
%5302:	load	 %5301
%5303:	getelementptr	 %5216 XXX XXX
%5304:	load	 %5303
%5305:	call	 %5302 %5304 icatalloc
%5306:	getelementptr	 %5217 XXX XXX
%5307:	store	 %5305 %5306
%5308:	getelementptr	 %5217 XXX XXX
%5309:	load	 %5308
%5310:	icmp	 %5309 XXX
%5311:	br	 %5310 if.end306 if.then305

BASIC BLOCK if.then305
%5312:	br	 done

BASIC BLOCK if.end306
%5313:	getelementptr	 %5217 XXX XXX
%5314:	load	 %5313
%5315:	getelementptr	 %5314 XXX
%5316:	load	 %5315
%5317:	sext	 %5316
%5318:	icmp	 %5317 XXX
%5319:	br	 %5318 if.else land.lhs.true312

BASIC BLOCK land.lhs.true312
%5320:	getelementptr	 %5216 XXX XXX
%5321:	load	 %5320
%5322:	getelementptr	 %5321 XXX
%5323:	load	 %5322
%5324:	sext	 %5323
%5325:	icmp	 %5324 XXX
%5326:	br	 %5325 if.else if.then318

BASIC BLOCK if.then318
%5327:	getelementptr	 %5217 XXX XXX
%5328:	load	 %5327
%5329:	getelementptr	 %5216 XXX XXX
%5330:	load	 %5329
%5331:	call	 %5328 %5330 icatalloc
%5332:	getelementptr	 %5217 XXX XXX
%5333:	store	 %5331 %5332
%5334:	getelementptr	 %5217 XXX XXX
%5335:	load	 %5334
%5336:	icmp	 %5335 XXX
%5337:	br	 %5336 if.end327 if.then326

BASIC BLOCK if.then326
%5338:	br	 done

BASIC BLOCK if.end327
%5339:	br	 if.end330

BASIC BLOCK if.else
%5340:	getelementptr	 %5217 XXX XXX
%5341:	load	 %5340
%5342:	getelementptr	 %5341 XXX
%5343:	store	 XXX %5342
%5344:	br	 if.end330

BASIC BLOCK if.end330
%5345:	br	 sw.epilog

BASIC BLOCK sw.default
%5346:	icmp	 %5016 XXX
%5347:	br	 %5346 if.else334 if.then333

BASIC BLOCK if.then333
%5348:	br	 done

BASIC BLOCK if.else334
%5349:	icmp	 %5016 XXX
%5350:	br	 %5349 if.else338 if.then337

BASIC BLOCK if.then337
%5351:	br	 done

BASIC BLOCK if.else338
%5352:	icmp	 %5016 XXX
%5353:	br	 %5352 if.else342 if.then341

BASIC BLOCK if.then341
%5354:	call	 %5007 resetmust
%5355:	br	 if.end365

BASIC BLOCK if.else342
%5356:	call	 %5007 resetmust
%5357:	trunc	 %5016
%5358:	getelementptr	 %5007 XXX XXX
%5359:	load	 %5358
%5360:	getelementptr	 %5359 XXX
%5361:	store	 %5357 %5360
%5362:	getelementptr	 %5007 XXX XXX
%5363:	load	 %5362
%5364:	getelementptr	 %5363 XXX
%5365:	store	 %5357 %5364
%5366:	getelementptr	 %5007 XXX XXX
%5367:	load	 %5366
%5368:	getelementptr	 %5367 XXX
%5369:	store	 %5357 %5368
%5370:	getelementptr	 %5007 XXX XXX
%5371:	load	 %5370
%5372:	getelementptr	 %5371 XXX
%5373:	store	 XXX %5372
%5374:	getelementptr	 %5007 XXX XXX
%5375:	load	 %5374
%5376:	getelementptr	 %5375 XXX
%5377:	store	 XXX %5376
%5378:	getelementptr	 %5007 XXX XXX
%5379:	load	 %5378
%5380:	getelementptr	 %5379 XXX
%5381:	store	 XXX %5380
%5382:	getelementptr	 %5007 XXX XXX
%5383:	load	 %5382
%5384:	getelementptr	 %5007 XXX XXX
%5385:	load	 %5384
%5386:	call	 %5383 %5385 XXX enlist
%5387:	getelementptr	 %5007 XXX XXX
%5388:	store	 %5386 %5387
%5389:	getelementptr	 %5007 XXX XXX
%5390:	load	 %5389
%5391:	icmp	 %5390 XXX
%5392:	br	 %5391 if.end364 if.then363

BASIC BLOCK if.then363
%5393:	br	 done

BASIC BLOCK if.end364
%5394:	br	 if.end365

BASIC BLOCK if.end365
%5395:	br	 if.end366

BASIC BLOCK if.end366
%5396:	br	 if.end367

BASIC BLOCK if.end367
%5397:	br	 sw.epilog

BASIC BLOCK sw.epilog
%5398:	phi	 %5007 %5217 %5161 %5032 %5024 %5007
%5399:	getelementptr	 %5398 XXX
%5400:	br	 for.inc369

BASIC BLOCK for.inc369
%5401:	add	 %5006 XXX
%5402:	br	 for.cond65

BASIC BLOCK for.end371
%5403:	br	 done

BASIC BLOCK done
%5404:	phi	 XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX %5210 XXX XXX XXX XXX XXX XXX
%5405:	phi	 XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX %5173 XXX XXX XXX XXX XXX XXX
%5406:	call	 %5405 strlen
%5407:	icmp	 %5406 XXX
%5408:	br	 %5407 if.end383 if.then373

BASIC BLOCK if.then373
%5409:	call	 XXX malloc
%5410:	bitcast	 %5409
%5411:	getelementptr	 %5410 XXX XXX
%5412:	store	 %5404 %5411
%5413:	call	 %5405 strlen
%5414:	add	 %5413 XXX
%5415:	call	 %5414 malloc
%5416:	getelementptr	 %5410 XXX XXX
%5417:	store	 %5415 %5416
%5418:	getelementptr	 %5410 XXX XXX
%5419:	load	 %5418
%5420:	call	 %5419 %5405 strcpy
%5421:	getelementptr	 dfa XXX XXX
%5422:	load	 %5421
%5423:	getelementptr	 %5410 XXX XXX
%5424:	store	 %5422 %5423
%5425:	getelementptr	 dfa XXX XXX
%5426:	store	 %5410 %5425
%5427:	br	 if.end383

BASIC BLOCK if.end383
%5428:	br	 for.cond384

BASIC BLOCK for.cond384
%5429:	phi	 XXX %5461
%5430:	getelementptr	 dfa XXX XXX
%5431:	load	 %5430
%5432:	icmp	 %5429 %5431
%5433:	br	 %5432 for.end406 for.body388

BASIC BLOCK for.body388
%5434:	sext	 %5429
%5435:	getelementptr	 %4909 %5434
%5436:	getelementptr	 %5435 XXX XXX
%5437:	load	 %5436
%5438:	call	 %5437 freelist
%5439:	sext	 %5429
%5440:	getelementptr	 %4909 %5439
%5441:	getelementptr	 %5440 XXX XXX
%5442:	load	 %5441
%5443:	bitcast	 %5442
%5444:	call	 %5443 ifree
%5445:	sext	 %5429
%5446:	getelementptr	 %4909 %5445
%5447:	getelementptr	 %5446 XXX XXX
%5448:	load	 %5447
%5449:	call	 %5448 ifree
%5450:	sext	 %5429
%5451:	getelementptr	 %4909 %5450
%5452:	getelementptr	 %5451 XXX XXX
%5453:	load	 %5452
%5454:	call	 %5453 ifree
%5455:	sext	 %5429
%5456:	getelementptr	 %4909 %5455
%5457:	getelementptr	 %5456 XXX XXX
%5458:	load	 %5457
%5459:	call	 %5458 ifree
%5460:	br	 for.inc404

BASIC BLOCK for.inc404
%5461:	add	 %5429 XXX
%5462:	br	 for.cond384

BASIC BLOCK for.end406
%5463:	bitcast	 %4909
%5464:	call	 %5463 free
%5465:	br	 return

BASIC BLOCK return
%5466:	ret	

FUNCTION dfafree

BASIC BLOCK entry
%5467:	getelementptr	 d XXX XXX
%5468:	load	 %5467
%5469:	bitcast	 %5468
%5470:	call	 %5469 free
%5471:	getelementptr	 d XXX XXX
%5472:	load	 %5471
%5473:	bitcast	 %5472
%5474:	call	 %5473 free
%5475:	br	 for.cond

BASIC BLOCK for.cond
%5476:	phi	 XXX %5491
%5477:	getelementptr	 d XXX XXX
%5478:	load	 %5477
%5479:	icmp	 %5476 %5478
%5480:	br	 %5479 for.end for.body

BASIC BLOCK for.body
%5481:	sext	 %5476
%5482:	getelementptr	 d XXX XXX
%5483:	load	 %5482
%5484:	getelementptr	 %5483 %5481
%5485:	getelementptr	 %5484 XXX XXX
%5486:	getelementptr	 %5485 XXX XXX
%5487:	load	 %5486
%5488:	bitcast	 %5487
%5489:	call	 %5488 free
%5490:	br	 for.inc

BASIC BLOCK for.inc
%5491:	add	 %5476 XXX
%5492:	br	 for.cond

BASIC BLOCK for.end
%5493:	getelementptr	 d XXX XXX
%5494:	load	 %5493
%5495:	bitcast	 %5494
%5496:	call	 %5495 free
%5497:	br	 for.cond3

BASIC BLOCK for.cond3
%5498:	phi	 XXX %5521
%5499:	getelementptr	 d XXX XXX
%5500:	load	 %5499
%5501:	icmp	 %5498 %5500
%5502:	br	 %5501 for.end15 for.body5

BASIC BLOCK for.body5
%5503:	sext	 %5498
%5504:	getelementptr	 d XXX XXX
%5505:	load	 %5504
%5506:	getelementptr	 %5505 %5503
%5507:	getelementptr	 %5506 XXX XXX
%5508:	load	 %5507
%5509:	icmp	 %5508 XXX
%5510:	br	 %5509 if.end if.then

BASIC BLOCK if.then
%5511:	sext	 %5498
%5512:	getelementptr	 d XXX XXX
%5513:	load	 %5512
%5514:	getelementptr	 %5513 %5511
%5515:	getelementptr	 %5514 XXX XXX
%5516:	load	 %5515
%5517:	bitcast	 %5516
%5518:	call	 %5517 free
%5519:	br	 if.end

BASIC BLOCK if.end
%5520:	br	 for.inc13

BASIC BLOCK for.inc13
%5521:	add	 %5498 XXX
%5522:	br	 for.cond3

BASIC BLOCK for.end15
%5523:	getelementptr	 d XXX XXX
%5524:	load	 %5523
%5525:	bitcast	 %5524
%5526:	call	 %5525 free
%5527:	br	 for.cond17

BASIC BLOCK for.cond17
%5528:	phi	 XXX %5565
%5529:	getelementptr	 d XXX XXX
%5530:	load	 %5529
%5531:	icmp	 %5528 %5530
%5532:	br	 %5531 for.end38 for.body19

BASIC BLOCK for.body19
%5533:	sext	 %5528
%5534:	getelementptr	 d XXX XXX
%5535:	load	 %5534
%5536:	getelementptr	 %5535 %5533
%5537:	load	 %5536
%5538:	icmp	 %5537 XXX
%5539:	br	 %5538 if.else if.then23

BASIC BLOCK if.then23
%5540:	sext	 %5528
%5541:	getelementptr	 d XXX XXX
%5542:	load	 %5541
%5543:	getelementptr	 %5542 %5540
%5544:	load	 %5543
%5545:	bitcast	 %5544
%5546:	call	 %5545 free
%5547:	br	 if.end35

BASIC BLOCK if.else
%5548:	sext	 %5528
%5549:	getelementptr	 d XXX XXX
%5550:	load	 %5549
%5551:	getelementptr	 %5550 %5548
%5552:	load	 %5551
%5553:	icmp	 %5552 XXX
%5554:	br	 %5553 if.end34 if.then30

BASIC BLOCK if.then30
%5555:	sext	 %5528
%5556:	getelementptr	 d XXX XXX
%5557:	load	 %5556
%5558:	getelementptr	 %5557 %5555
%5559:	load	 %5558
%5560:	bitcast	 %5559
%5561:	call	 %5560 free
%5562:	br	 if.end34

BASIC BLOCK if.end34
%5563:	br	 if.end35

BASIC BLOCK if.end35
%5564:	br	 for.inc36

BASIC BLOCK for.inc36
%5565:	add	 %5528 XXX
%5566:	br	 for.cond17

BASIC BLOCK for.end38
%5567:	getelementptr	 d XXX XXX
%5568:	load	 %5567
%5569:	icmp	 %5568 XXX
%5570:	br	 %5569 if.end42 if.then40

BASIC BLOCK if.then40
%5571:	getelementptr	 d XXX XXX
%5572:	load	 %5571
%5573:	bitcast	 %5572
%5574:	call	 %5573 free
%5575:	br	 if.end42

BASIC BLOCK if.end42
%5576:	getelementptr	 d XXX XXX
%5577:	load	 %5576
%5578:	icmp	 %5577 XXX
%5579:	br	 %5578 if.end47 if.then45

BASIC BLOCK if.then45
%5580:	getelementptr	 d XXX XXX
%5581:	load	 %5580
%5582:	bitcast	 %5581
%5583:	call	 %5582 free
%5584:	br	 if.end47

BASIC BLOCK if.end47
%5585:	getelementptr	 d XXX XXX
%5586:	load	 %5585
%5587:	icmp	 %5586 XXX
%5588:	br	 %5587 if.end51 if.then49

BASIC BLOCK if.then49
%5589:	getelementptr	 d XXX XXX
%5590:	load	 %5589
%5591:	bitcast	 %5590
%5592:	call	 %5591 free
%5593:	br	 if.end51

BASIC BLOCK if.end51
%5594:	getelementptr	 d XXX XXX
%5595:	load	 %5594
%5596:	icmp	 %5595 XXX
%5597:	br	 %5596 if.end55 if.then53

BASIC BLOCK if.then53
%5598:	getelementptr	 d XXX XXX
%5599:	load	 %5598
%5600:	bitcast	 %5599
%5601:	call	 %5600 free
%5602:	br	 if.end55

BASIC BLOCK if.end55
%5603:	getelementptr	 d XXX XXX
%5604:	load	 %5603
%5605:	br	 for.cond56

BASIC BLOCK for.cond56
%5606:	phi	 %5604 %5610
%5607:	icmp	 %5606 XXX
%5608:	br	 %5607 for.end60 for.body58

BASIC BLOCK for.body58
%5609:	getelementptr	 %5606 XXX XXX
%5610:	load	 %5609
%5611:	getelementptr	 %5606 XXX XXX
%5612:	load	 %5611
%5613:	call	 %5612 free
%5614:	bitcast	 %5606
%5615:	call	 %5614 free
%5616:	br	 for.inc59

BASIC BLOCK for.inc59
%5617:	br	 for.cond56

BASIC BLOCK for.end60
%5618:	ret	

FUNCTION kwsalloc

BASIC BLOCK entry
%5619:	call	 XXX xmalloc
%5620:	bitcast	 %5619
%5621:	icmp	 %5620 XXX
%5622:	br	 %5621 if.then if.end

BASIC BLOCK if.then
%5623:	br	 return

BASIC BLOCK if.end
%5624:	getelementptr	 %5620 XXX XXX
%5625:	call	 %5624 XXX XXX xmalloc free _obstack_begin
%5626:	getelementptr	 %5620 XXX XXX
%5627:	store	 XXX %5626
%5628:	getelementptr	 %5620 XXX XXX
%5629:	getelementptr	 %5628 XXX XXX
%5630:	load	 %5629
%5631:	getelementptr	 %5628 XXX XXX
%5632:	load	 %5631
%5633:	ptrtoint	 %5630
%5634:	ptrtoint	 %5632
%5635:	sub	 %5633 %5634
%5636:	sext	 XXX
%5637:	icmp	 %5635 %5636
%5638:	br	 %5637 if.end5 if.then4

BASIC BLOCK if.then4
%5639:	call	 %5628 XXX _obstack_newchunk
%5640:	br	 if.end5

BASIC BLOCK if.end5
%5641:	getelementptr	 %5628 XXX XXX
%5642:	load	 %5641
%5643:	sext	 XXX
%5644:	getelementptr	 %5642 %5643
%5645:	store	 %5644 %5641
%5646:	getelementptr	 %5628 XXX XXX
%5647:	load	 %5646
%5648:	getelementptr	 %5628 XXX XXX
%5649:	load	 %5648
%5650:	icmp	 %5649 %5647
%5651:	br	 %5650 if.end11 if.then10

BASIC BLOCK if.then10
%5652:	getelementptr	 %5628 XXX XXX
%5653:	load	 %5652
%5654:	and	 %5653 XXX
%5655:	or	 %5654 XXX
%5656:	store	 %5655 %5652
%5657:	br	 if.end11

BASIC BLOCK if.end11
%5658:	getelementptr	 %5628 XXX XXX
%5659:	load	 %5658
%5660:	ptrtoint	 %5659
%5661:	sub	 %5660 XXX
%5662:	getelementptr	 %5628 XXX XXX
%5663:	load	 %5662
%5664:	sext	 %5663
%5665:	add	 %5661 %5664
%5666:	getelementptr	 %5628 XXX XXX
%5667:	load	 %5666
%5668:	xor	 %5667 XXX
%5669:	sext	 %5668
%5670:	and	 %5665 %5669
%5671:	getelementptr	 XXX %5670
%5672:	getelementptr	 %5628 XXX XXX
%5673:	store	 %5671 %5672
%5674:	getelementptr	 %5628 XXX XXX
%5675:	load	 %5674
%5676:	getelementptr	 %5628 XXX XXX
%5677:	load	 %5676
%5678:	bitcast	 %5677
%5679:	ptrtoint	 %5675
%5680:	ptrtoint	 %5678
%5681:	sub	 %5679 %5680
%5682:	getelementptr	 %5628 XXX XXX
%5683:	load	 %5682
%5684:	getelementptr	 %5628 XXX XXX
%5685:	load	 %5684
%5686:	bitcast	 %5685
%5687:	ptrtoint	 %5683
%5688:	ptrtoint	 %5686
%5689:	sub	 %5687 %5688
%5690:	icmp	 %5681 %5689
%5691:	br	 %5690 if.end34 if.then31

BASIC BLOCK if.then31
%5692:	getelementptr	 %5628 XXX XXX
%5693:	load	 %5692
%5694:	getelementptr	 %5628 XXX XXX
%5695:	store	 %5693 %5694
%5696:	br	 if.end34

BASIC BLOCK if.end34
%5697:	getelementptr	 %5628 XXX XXX
%5698:	load	 %5697
%5699:	getelementptr	 %5628 XXX XXX
%5700:	store	 %5698 %5699
%5701:	bitcast	 %5647
%5702:	getelementptr	 %5620 XXX XXX
%5703:	store	 %5701 %5702
%5704:	getelementptr	 %5620 XXX XXX
%5705:	load	 %5704
%5706:	icmp	 %5705 XXX
%5707:	br	 %5706 if.then39 if.end40

BASIC BLOCK if.then39
%5708:	bitcast	 %5620
%5709:	call	 %5708 kwsfree
%5710:	br	 return

BASIC BLOCK if.end40
%5711:	getelementptr	 %5620 XXX XXX
%5712:	load	 %5711
%5713:	getelementptr	 %5712 XXX XXX
%5714:	store	 XXX %5713
%5715:	getelementptr	 %5620 XXX XXX
%5716:	load	 %5715
%5717:	getelementptr	 %5716 XXX XXX
%5718:	store	 XXX %5717
%5719:	getelementptr	 %5620 XXX XXX
%5720:	load	 %5719
%5721:	getelementptr	 %5720 XXX XXX
%5722:	store	 XXX %5721
%5723:	getelementptr	 %5620 XXX XXX
%5724:	load	 %5723
%5725:	getelementptr	 %5724 XXX XXX
%5726:	store	 XXX %5725
%5727:	getelementptr	 %5620 XXX XXX
%5728:	load	 %5727
%5729:	getelementptr	 %5728 XXX XXX
%5730:	store	 XXX %5729
%5731:	getelementptr	 %5620 XXX XXX
%5732:	load	 %5731
%5733:	getelementptr	 %5732 XXX XXX
%5734:	store	 XXX %5733
%5735:	getelementptr	 %5620 XXX XXX
%5736:	load	 %5735
%5737:	getelementptr	 %5736 XXX XXX
%5738:	store	 XXX %5737
%5739:	getelementptr	 %5620 XXX XXX
%5740:	store	 XXX %5739
%5741:	getelementptr	 %5620 XXX XXX
%5742:	store	 XXX %5741
%5743:	getelementptr	 %5620 XXX XXX
%5744:	store	 XXX %5743
%5745:	getelementptr	 %5620 XXX XXX
%5746:	store	 trans %5745
%5747:	bitcast	 %5620
%5748:	br	 return

BASIC BLOCK return
%5749:	phi	 %5747 XXX XXX
%5750:	ret	 %5749

FUNCTION kwsfree

BASIC BLOCK entry
%5751:	bitcast	 kws
%5752:	getelementptr	 %5751 XXX XXX
%5753:	getelementptr	 %5752 XXX XXX
%5754:	load	 %5753
%5755:	bitcast	 %5754
%5756:	icmp	 XXX %5755
%5757:	br	 %5756 if.else land.lhs.true

BASIC BLOCK land.lhs.true
%5758:	getelementptr	 %5752 XXX XXX
%5759:	load	 %5758
%5760:	icmp	 XXX %5759
%5761:	br	 %5760 if.else if.then

BASIC BLOCK if.then
%5762:	getelementptr	 %5752 XXX XXX
%5763:	store	 XXX %5762
%5764:	getelementptr	 %5752 XXX XXX
%5765:	store	 XXX %5764
%5766:	br	 if.end

BASIC BLOCK if.else
%5767:	call	 %5752 XXX obstack_free
%5768:	br	 if.end

BASIC BLOCK if.end
%5769:	call	 kws free
%5770:	ret	

FUNCTION kwsincr

BASIC BLOCK entry
%5771:	alloca	 XXX
%5772:	alloca	 XXX
%5773:	bitcast	 kws
%5774:	getelementptr	 %5773 XXX XXX
%5775:	load	 %5774
%5776:	getelementptr	 text len
%5777:	br	 while.cond

BASIC BLOCK while.cond
%5778:	phi	 %5775 %6299
%5779:	phi	 len %5781
%5780:	phi	 %5776 %5801
%5781:	add	 %5779 XXX
%5782:	icmp	 %5779 XXX
%5783:	br	 %5782 while.end318 while.body

BASIC BLOCK while.body
%5784:	getelementptr	 %5773 XXX XXX
%5785:	load	 %5784
%5786:	icmp	 %5785 XXX
%5787:	br	 %5786 cond.false cond.true

BASIC BLOCK cond.true
%5788:	getelementptr	 %5780 XXX
%5789:	load	 %5788
%5790:	zext	 %5789
%5791:	getelementptr	 %5773 XXX XXX
%5792:	load	 %5791
%5793:	getelementptr	 %5792 %5790
%5794:	load	 %5793
%5795:	sext	 %5794
%5796:	br	 cond.end

BASIC BLOCK cond.false
%5797:	getelementptr	 %5780 XXX
%5798:	load	 %5797
%5799:	sext	 %5798
%5800:	br	 cond.end

BASIC BLOCK cond.end
%5801:	phi	 %5788 %5797
%5802:	phi	 %5795 %5799
%5803:	trunc	 %5802
%5804:	getelementptr	 %5778 XXX XXX
%5805:	load	 %5804
%5806:	getelementptr	 %5778 XXX XXX
%5807:	bitcast	 %5806
%5808:	getelementptr	 %5771 XXX XXX
%5809:	store	 %5807 %5808
%5810:	getelementptr	 %5772 XXX XXX
%5811:	store	 XXX %5810
%5812:	br	 while.cond11

BASIC BLOCK while.cond11
%5813:	phi	 XXX %5848
%5814:	phi	 %5805 %5849
%5815:	icmp	 %5814 XXX
%5816:	br	 %5815 land.end land.rhs

BASIC BLOCK land.rhs
%5817:	zext	 %5803
%5818:	getelementptr	 %5814 XXX XXX
%5819:	load	 %5818
%5820:	zext	 %5819
%5821:	icmp	 %5817 %5820
%5822:	br	 land.end

BASIC BLOCK land.end
%5823:	phi	 XXX %5821
%5824:	br	 %5823 while.end while.body17

BASIC BLOCK while.body17
%5825:	sext	 %5813
%5826:	getelementptr	 %5771 XXX %5825
%5827:	store	 %5814 %5826
%5828:	zext	 %5803
%5829:	getelementptr	 %5814 XXX XXX
%5830:	load	 %5829
%5831:	zext	 %5830
%5832:	icmp	 %5828 %5831
%5833:	br	 %5832 if.else if.then

BASIC BLOCK if.then
%5834:	add	 %5813 XXX
%5835:	sext	 %5813
%5836:	getelementptr	 %5772 XXX %5835
%5837:	store	 XXX %5836
%5838:	getelementptr	 %5814 XXX XXX
%5839:	load	 %5838
%5840:	br	 if.end

BASIC BLOCK if.else
%5841:	add	 %5813 XXX
%5842:	sext	 %5813
%5843:	getelementptr	 %5772 XXX %5842
%5844:	store	 XXX %5843
%5845:	getelementptr	 %5814 XXX XXX
%5846:	load	 %5845
%5847:	br	 if.end

BASIC BLOCK if.end
%5848:	phi	 %5834 %5841
%5849:	phi	 %5839 %5846
%5850:	br	 while.cond11

BASIC BLOCK while.end
%5851:	icmp	 %5814 XXX
%5852:	br	 %5851 if.then31 if.end316

BASIC BLOCK if.then31
%5853:	getelementptr	 %5773 XXX XXX
%5854:	getelementptr	 %5853 XXX XXX
%5855:	load	 %5854
%5856:	getelementptr	 %5853 XXX XXX
%5857:	load	 %5856
%5858:	ptrtoint	 %5855
%5859:	ptrtoint	 %5857
%5860:	sub	 %5858 %5859
%5861:	sext	 XXX
%5862:	icmp	 %5860 %5861
%5863:	br	 %5862 if.end36 if.then35

BASIC BLOCK if.then35
%5864:	call	 %5853 XXX _obstack_newchunk
%5865:	br	 if.end36

BASIC BLOCK if.end36
%5866:	getelementptr	 %5853 XXX XXX
%5867:	load	 %5866
%5868:	sext	 XXX
%5869:	getelementptr	 %5867 %5868
%5870:	store	 %5869 %5866
%5871:	getelementptr	 %5853 XXX XXX
%5872:	load	 %5871
%5873:	getelementptr	 %5853 XXX XXX
%5874:	load	 %5873
%5875:	icmp	 %5874 %5872
%5876:	br	 %5875 if.end43 if.then42

BASIC BLOCK if.then42
%5877:	getelementptr	 %5853 XXX XXX
%5878:	load	 %5877
%5879:	and	 %5878 XXX
%5880:	or	 %5879 XXX
%5881:	store	 %5880 %5877
%5882:	br	 if.end43

BASIC BLOCK if.end43
%5883:	getelementptr	 %5853 XXX XXX
%5884:	load	 %5883
%5885:	ptrtoint	 %5884
%5886:	sub	 %5885 XXX
%5887:	getelementptr	 %5853 XXX XXX
%5888:	load	 %5887
%5889:	sext	 %5888
%5890:	add	 %5886 %5889
%5891:	getelementptr	 %5853 XXX XXX
%5892:	load	 %5891
%5893:	xor	 %5892 XXX
%5894:	sext	 %5893
%5895:	and	 %5890 %5894
%5896:	getelementptr	 XXX %5895
%5897:	getelementptr	 %5853 XXX XXX
%5898:	store	 %5896 %5897
%5899:	getelementptr	 %5853 XXX XXX
%5900:	load	 %5899
%5901:	getelementptr	 %5853 XXX XXX
%5902:	load	 %5901
%5903:	bitcast	 %5902
%5904:	ptrtoint	 %5900
%5905:	ptrtoint	 %5903
%5906:	sub	 %5904 %5905
%5907:	getelementptr	 %5853 XXX XXX
%5908:	load	 %5907
%5909:	getelementptr	 %5853 XXX XXX
%5910:	load	 %5909
%5911:	bitcast	 %5910
%5912:	ptrtoint	 %5908
%5913:	ptrtoint	 %5911
%5914:	sub	 %5912 %5913
%5915:	icmp	 %5906 %5914
%5916:	br	 %5915 if.end66 if.then63

BASIC BLOCK if.then63
%5917:	getelementptr	 %5853 XXX XXX
%5918:	load	 %5917
%5919:	getelementptr	 %5853 XXX XXX
%5920:	store	 %5918 %5919
%5921:	br	 if.end66

BASIC BLOCK if.end66
%5922:	getelementptr	 %5853 XXX XXX
%5923:	load	 %5922
%5924:	getelementptr	 %5853 XXX XXX
%5925:	store	 %5923 %5924
%5926:	bitcast	 %5872
%5927:	icmp	 %5926 XXX
%5928:	br	 %5927 if.then70 if.end71

BASIC BLOCK if.then70
%5929:	call	 XXX gettext
%5930:	br	 return

BASIC BLOCK if.end71
%5931:	getelementptr	 %5926 XXX XXX
%5932:	store	 XXX %5931
%5933:	getelementptr	 %5926 XXX XXX
%5934:	store	 XXX %5933
%5935:	getelementptr	 %5773 XXX XXX
%5936:	getelementptr	 %5935 XXX XXX
%5937:	load	 %5936
%5938:	getelementptr	 %5935 XXX XXX
%5939:	load	 %5938
%5940:	ptrtoint	 %5937
%5941:	ptrtoint	 %5939
%5942:	sub	 %5940 %5941
%5943:	sext	 XXX
%5944:	icmp	 %5942 %5943
%5945:	br	 %5944 if.end87 if.then86

BASIC BLOCK if.then86
%5946:	call	 %5935 XXX _obstack_newchunk
%5947:	br	 if.end87

BASIC BLOCK if.end87
%5948:	getelementptr	 %5935 XXX XXX
%5949:	load	 %5948
%5950:	sext	 XXX
%5951:	getelementptr	 %5949 %5950
%5952:	store	 %5951 %5948
%5953:	getelementptr	 %5935 XXX XXX
%5954:	load	 %5953
%5955:	getelementptr	 %5935 XXX XXX
%5956:	load	 %5955
%5957:	icmp	 %5956 %5954
%5958:	br	 %5957 if.end102 if.then97

BASIC BLOCK if.then97
%5959:	getelementptr	 %5935 XXX XXX
%5960:	load	 %5959
%5961:	and	 %5960 XXX
%5962:	or	 %5961 XXX
%5963:	store	 %5962 %5959
%5964:	br	 if.end102

BASIC BLOCK if.end102
%5965:	getelementptr	 %5935 XXX XXX
%5966:	load	 %5965
%5967:	ptrtoint	 %5966
%5968:	sub	 %5967 XXX
%5969:	getelementptr	 %5935 XXX XXX
%5970:	load	 %5969
%5971:	sext	 %5970
%5972:	add	 %5968 %5971
%5973:	getelementptr	 %5935 XXX XXX
%5974:	load	 %5973
%5975:	xor	 %5974 XXX
%5976:	sext	 %5975
%5977:	and	 %5972 %5976
%5978:	getelementptr	 XXX %5977
%5979:	getelementptr	 %5935 XXX XXX
%5980:	store	 %5978 %5979
%5981:	getelementptr	 %5935 XXX XXX
%5982:	load	 %5981
%5983:	getelementptr	 %5935 XXX XXX
%5984:	load	 %5983
%5985:	bitcast	 %5984
%5986:	ptrtoint	 %5982
%5987:	ptrtoint	 %5985
%5988:	sub	 %5986 %5987
%5989:	getelementptr	 %5935 XXX XXX
%5990:	load	 %5989
%5991:	getelementptr	 %5935 XXX XXX
%5992:	load	 %5991
%5993:	bitcast	 %5992
%5994:	ptrtoint	 %5990
%5995:	ptrtoint	 %5993
%5996:	sub	 %5994 %5995
%5997:	icmp	 %5988 %5996
%5998:	br	 %5997 if.end130 if.then127

BASIC BLOCK if.then127
%5999:	getelementptr	 %5935 XXX XXX
%6000:	load	 %5999
%6001:	getelementptr	 %5935 XXX XXX
%6002:	store	 %6000 %6001
%6003:	br	 if.end130

BASIC BLOCK if.end130
%6004:	getelementptr	 %5935 XXX XXX
%6005:	load	 %6004
%6006:	getelementptr	 %5935 XXX XXX
%6007:	store	 %6005 %6006
%6008:	bitcast	 %5954
%6009:	getelementptr	 %5926 XXX XXX
%6010:	store	 %6008 %6009
%6011:	getelementptr	 %5926 XXX XXX
%6012:	load	 %6011
%6013:	icmp	 %6012 XXX
%6014:	br	 %6013 if.then136 if.end138

BASIC BLOCK if.then136
%6015:	call	 XXX gettext
%6016:	br	 return

BASIC BLOCK if.end138
%6017:	getelementptr	 %5926 XXX XXX
%6018:	load	 %6017
%6019:	getelementptr	 %6018 XXX XXX
%6020:	store	 XXX %6019
%6021:	getelementptr	 %5926 XXX XXX
%6022:	load	 %6021
%6023:	getelementptr	 %6022 XXX XXX
%6024:	store	 XXX %6023
%6025:	getelementptr	 %5926 XXX XXX
%6026:	load	 %6025
%6027:	getelementptr	 %6026 XXX XXX
%6028:	store	 %5778 %6027
%6029:	getelementptr	 %5926 XXX XXX
%6030:	load	 %6029
%6031:	getelementptr	 %6030 XXX XXX
%6032:	store	 XXX %6031
%6033:	getelementptr	 %5926 XXX XXX
%6034:	load	 %6033
%6035:	getelementptr	 %6034 XXX XXX
%6036:	store	 XXX %6035
%6037:	getelementptr	 %5778 XXX XXX
%6038:	load	 %6037
%6039:	add	 %6038 XXX
%6040:	getelementptr	 %5926 XXX XXX
%6041:	load	 %6040
%6042:	getelementptr	 %6041 XXX XXX
%6043:	store	 %6039 %6042
%6044:	getelementptr	 %5926 XXX XXX
%6045:	load	 %6044
%6046:	getelementptr	 %6045 XXX XXX
%6047:	store	 XXX %6046
%6048:	getelementptr	 %5926 XXX XXX
%6049:	store	 %5803 %6048
%6050:	getelementptr	 %5926 XXX XXX
%6051:	store	 XXX %6050
%6052:	add	 %5813 XXX
%6053:	sext	 %6052
%6054:	getelementptr	 %5772 XXX %6053
%6055:	load	 %6054
%6056:	icmp	 %6055 XXX
%6057:	br	 %6056 if.else160 if.then156

BASIC BLOCK if.then156
%6058:	sext	 %6052
%6059:	getelementptr	 %5771 XXX %6058
%6060:	load	 %6059
%6061:	getelementptr	 %6060 XXX XXX
%6062:	store	 %5926 %6061
%6063:	br	 if.end164

BASIC BLOCK if.else160
%6064:	sext	 %6052
%6065:	getelementptr	 %5771 XXX %6064
%6066:	load	 %6065
%6067:	getelementptr	 %6066 XXX XXX
%6068:	store	 %5926 %6067
%6069:	br	 if.end164

BASIC BLOCK if.end164
%6070:	br	 while.cond165

BASIC BLOCK while.cond165
%6071:	phi	 %6052 %6105
%6072:	icmp	 %6071 XXX
%6073:	br	 %6072 land.end172 land.rhs167

BASIC BLOCK land.rhs167
%6074:	sext	 %6071
%6075:	getelementptr	 %5771 XXX %6074
%6076:	load	 %6075
%6077:	getelementptr	 %6076 XXX XXX
%6078:	load	 %6077
%6079:	icmp	 %6078 XXX
%6080:	xor	 %6079 XXX
%6081:	br	 land.end172

BASIC BLOCK land.end172
%6082:	phi	 XXX %6080
%6083:	br	 %6082 while.end190 while.body173

BASIC BLOCK while.body173
%6084:	sext	 %6071
%6085:	getelementptr	 %5772 XXX %6084
%6086:	load	 %6085
%6087:	icmp	 %6086 XXX
%6088:	br	 %6087 if.else183 if.then178

BASIC BLOCK if.then178
%6089:	sext	 %6071
%6090:	getelementptr	 %5771 XXX %6089
%6091:	load	 %6090
%6092:	getelementptr	 %6091 XXX XXX
%6093:	load	 %6092
%6094:	add	 %6093 XXX
%6095:	store	 %6094 %6092
%6096:	br	 if.end188

BASIC BLOCK if.else183
%6097:	sext	 %6071
%6098:	getelementptr	 %5771 XXX %6097
%6099:	load	 %6098
%6100:	getelementptr	 %6099 XXX XXX
%6101:	load	 %6100
%6102:	add	 %6101 XXX
%6103:	store	 %6102 %6100
%6104:	br	 if.end188

BASIC BLOCK if.end188
%6105:	add	 %6071 XXX
%6106:	br	 while.cond165

BASIC BLOCK while.end190
%6107:	icmp	 %6071 XXX
%6108:	br	 %6107 if.end315 land.lhs.true

BASIC BLOCK land.lhs.true
%6109:	sext	 %6071
%6110:	getelementptr	 %5772 XXX %6109
%6111:	load	 %6110
%6112:	icmp	 %6111 XXX
%6113:	br	 %6112 lor.lhs.false land.lhs.true196

BASIC BLOCK land.lhs.true196
%6114:	sext	 %6071
%6115:	getelementptr	 %5771 XXX %6114
%6116:	load	 %6115
%6117:	getelementptr	 %6116 XXX XXX
%6118:	load	 %6117
%6119:	add	 %6118 XXX
%6120:	store	 %6119 %6117
%6121:	sext	 %6119
%6122:	icmp	 %6121 XXX
%6123:	br	 %6122 lor.lhs.false if.then214

BASIC BLOCK lor.lhs.false
%6124:	sext	 %6071
%6125:	getelementptr	 %5772 XXX %6124
%6126:	load	 %6125
%6127:	icmp	 %6126 XXX
%6128:	br	 %6127 if.end315 land.lhs.true207

BASIC BLOCK land.lhs.true207
%6129:	sext	 %6071
%6130:	getelementptr	 %5771 XXX %6129
%6131:	load	 %6130
%6132:	getelementptr	 %6131 XXX XXX
%6133:	load	 %6132
%6134:	add	 %6133 XXX
%6135:	store	 %6134 %6132
%6136:	sext	 %6134
%6137:	icmp	 %6136 XXX
%6138:	br	 %6137 if.end315 if.then214

BASIC BLOCK if.then214
%6139:	sext	 %6071
%6140:	getelementptr	 %5771 XXX %6139
%6141:	load	 %6140
%6142:	getelementptr	 %6141 XXX XXX
%6143:	load	 %6142
%6144:	sext	 %6143
%6145:	switch	 %6144 sw.default298 XXX sw.bb XXX sw.bb257

BASIC BLOCK sw.bb
%6146:	add	 %6071 XXX
%6147:	sext	 %6146
%6148:	getelementptr	 %5772 XXX %6147
%6149:	load	 %6148
%6150:	switch	 %6149 sw.default XXX sw.bb222 XXX sw.bb231

BASIC BLOCK sw.bb222
%6151:	sext	 %6071
%6152:	getelementptr	 %5771 XXX %6151
%6153:	load	 %6152
%6154:	getelementptr	 %6153 XXX XXX
%6155:	load	 %6154
%6156:	getelementptr	 %6155 XXX XXX
%6157:	load	 %6156
%6158:	getelementptr	 %6155 XXX XXX
%6159:	store	 %6153 %6158
%6160:	getelementptr	 %6153 XXX XXX
%6161:	store	 %6157 %6160
%6162:	getelementptr	 %6153 XXX XXX
%6163:	store	 XXX %6162
%6164:	getelementptr	 %6155 XXX XXX
%6165:	store	 XXX %6164
%6166:	br	 sw.epilog

BASIC BLOCK sw.bb231
%6167:	sext	 %6071
%6168:	getelementptr	 %5771 XXX %6167
%6169:	load	 %6168
%6170:	getelementptr	 %6169 XXX XXX
%6171:	load	 %6170
%6172:	getelementptr	 %6171 XXX XXX
%6173:	load	 %6172
%6174:	getelementptr	 %6173 XXX XXX
%6175:	load	 %6174
%6176:	getelementptr	 %6173 XXX XXX
%6177:	load	 %6176
%6178:	getelementptr	 %6173 XXX XXX
%6179:	store	 %6171 %6178
%6180:	getelementptr	 %6171 XXX XXX
%6181:	store	 %6177 %6180
%6182:	getelementptr	 %6173 XXX XXX
%6183:	store	 %6169 %6182
%6184:	getelementptr	 %6169 XXX XXX
%6185:	store	 %6175 %6184
%6186:	getelementptr	 %6173 XXX XXX
%6187:	load	 %6186
%6188:	sext	 %6187
%6189:	icmp	 %6188 XXX
%6190:	select	 %6189 XXX XXX
%6191:	trunc	 %6190
%6192:	getelementptr	 %6171 XXX XXX
%6193:	store	 %6191 %6192
%6194:	getelementptr	 %6173 XXX XXX
%6195:	load	 %6194
%6196:	sext	 %6195
%6197:	icmp	 %6196 XXX
%6198:	select	 %6197 XXX XXX
%6199:	trunc	 %6198
%6200:	getelementptr	 %6169 XXX XXX
%6201:	store	 %6199 %6200
%6202:	getelementptr	 %6173 XXX XXX
%6203:	store	 XXX %6202
%6204:	br	 sw.epilog

BASIC BLOCK sw.default
%6205:	call	 abort
%6206:	unreachable	

BASIC BLOCK sw.epilog
%6207:	phi	 %6173 %6155
%6208:	br	 sw.epilog299

BASIC BLOCK sw.bb257
%6209:	add	 %6071 XXX
%6210:	sext	 %6209
%6211:	getelementptr	 %5772 XXX %6210
%6212:	load	 %6211
%6213:	switch	 %6212 sw.default296 XXX sw.bb261 XXX sw.bb270

BASIC BLOCK sw.bb261
%6214:	sext	 %6071
%6215:	getelementptr	 %5771 XXX %6214
%6216:	load	 %6215
%6217:	getelementptr	 %6216 XXX XXX
%6218:	load	 %6217
%6219:	getelementptr	 %6218 XXX XXX
%6220:	load	 %6219
%6221:	getelementptr	 %6218 XXX XXX
%6222:	store	 %6216 %6221
%6223:	getelementptr	 %6216 XXX XXX
%6224:	store	 %6220 %6223
%6225:	getelementptr	 %6216 XXX XXX
%6226:	store	 XXX %6225
%6227:	getelementptr	 %6218 XXX XXX
%6228:	store	 XXX %6227
%6229:	br	 sw.epilog297

BASIC BLOCK sw.bb270
%6230:	sext	 %6071
%6231:	getelementptr	 %5771 XXX %6230
%6232:	load	 %6231
%6233:	getelementptr	 %6232 XXX XXX
%6234:	load	 %6233
%6235:	getelementptr	 %6234 XXX XXX
%6236:	load	 %6235
%6237:	getelementptr	 %6236 XXX XXX
%6238:	load	 %6237
%6239:	getelementptr	 %6236 XXX XXX
%6240:	load	 %6239
%6241:	getelementptr	 %6236 XXX XXX
%6242:	store	 %6232 %6241
%6243:	getelementptr	 %6232 XXX XXX
%6244:	store	 %6238 %6243
%6245:	getelementptr	 %6236 XXX XXX
%6246:	store	 %6234 %6245
%6247:	getelementptr	 %6234 XXX XXX
%6248:	store	 %6240 %6247
%6249:	getelementptr	 %6236 XXX XXX
%6250:	load	 %6249
%6251:	sext	 %6250
%6252:	icmp	 %6251 XXX
%6253:	select	 %6252 XXX XXX
%6254:	trunc	 %6253
%6255:	getelementptr	 %6232 XXX XXX
%6256:	store	 %6254 %6255
%6257:	getelementptr	 %6236 XXX XXX
%6258:	load	 %6257
%6259:	sext	 %6258
%6260:	icmp	 %6259 XXX
%6261:	select	 %6260 XXX XXX
%6262:	trunc	 %6261
%6263:	getelementptr	 %6234 XXX XXX
%6264:	store	 %6262 %6263
%6265:	getelementptr	 %6236 XXX XXX
%6266:	store	 XXX %6265
%6267:	br	 sw.epilog297

BASIC BLOCK sw.default296
%6268:	call	 abort
%6269:	unreachable	

BASIC BLOCK sw.epilog297
%6270:	phi	 %6236 %6218
%6271:	br	 sw.epilog299

BASIC BLOCK sw.default298
%6272:	call	 abort
%6273:	unreachable	

BASIC BLOCK sw.epilog299
%6274:	phi	 %6270 %6207
%6275:	sub	 %6071 XXX
%6276:	sext	 %6275
%6277:	getelementptr	 %5772 XXX %6276
%6278:	load	 %6277
%6279:	icmp	 %6278 XXX
%6280:	br	 %6279 if.else309 if.then304

BASIC BLOCK if.then304
%6281:	sub	 %6071 XXX
%6282:	sext	 %6281
%6283:	getelementptr	 %5771 XXX %6282
%6284:	load	 %6283
%6285:	getelementptr	 %6284 XXX XXX
%6286:	store	 %6274 %6285
%6287:	br	 if.end314

BASIC BLOCK if.else309
%6288:	sub	 %6071 XXX
%6289:	sext	 %6288
%6290:	getelementptr	 %5771 XXX %6289
%6291:	load	 %6290
%6292:	getelementptr	 %6291 XXX XXX
%6293:	store	 %6274 %6292
%6294:	br	 if.end314

BASIC BLOCK if.end314
%6295:	br	 if.end315

BASIC BLOCK if.end315
%6296:	br	 if.end316

BASIC BLOCK if.end316
%6297:	phi	 %5814 %5926
%6298:	getelementptr	 %6297 XXX XXX
%6299:	load	 %6298
%6300:	br	 while.cond

BASIC BLOCK while.end318
%6301:	getelementptr	 %5778 XXX XXX
%6302:	load	 %6301
%6303:	icmp	 %6302 XXX
%6304:	br	 %6303 if.then321 if.end324

BASIC BLOCK if.then321
%6305:	getelementptr	 %5773 XXX XXX
%6306:	load	 %6305
%6307:	mul	 XXX %6306
%6308:	add	 XXX %6307
%6309:	getelementptr	 %5778 XXX XXX
%6310:	store	 %6308 %6309
%6311:	br	 if.end324

BASIC BLOCK if.end324
%6312:	getelementptr	 %5773 XXX XXX
%6313:	load	 %6312
%6314:	add	 %6313 XXX
%6315:	store	 %6314 %6312
%6316:	getelementptr	 %5778 XXX XXX
%6317:	load	 %6316
%6318:	getelementptr	 %5773 XXX XXX
%6319:	load	 %6318
%6320:	icmp	 %6317 %6319
%6321:	br	 %6320 if.end333 if.then330

BASIC BLOCK if.then330
%6322:	getelementptr	 %5778 XXX XXX
%6323:	load	 %6322
%6324:	getelementptr	 %5773 XXX XXX
%6325:	store	 %6323 %6324
%6326:	br	 if.end333

BASIC BLOCK if.end333
%6327:	getelementptr	 %5778 XXX XXX
%6328:	load	 %6327
%6329:	getelementptr	 %5773 XXX XXX
%6330:	load	 %6329
%6331:	icmp	 %6328 %6330
%6332:	br	 %6331 if.end340 if.then337

BASIC BLOCK if.then337
%6333:	getelementptr	 %5778 XXX XXX
%6334:	load	 %6333
%6335:	getelementptr	 %5773 XXX XXX
%6336:	store	 %6334 %6335
%6337:	br	 if.end340

BASIC BLOCK if.end340
%6338:	br	 return

BASIC BLOCK return
%6339:	phi	 %6015 %5929 XXX
%6340:	ret	 %6339

FUNCTION kwsprep

BASIC BLOCK entry
%6341:	alloca	 XXX
%6342:	alloca	 XXX
%6343:	alloca	 XXX
%6344:	bitcast	 kws
%6345:	getelementptr	 %6344 XXX XXX
%6346:	load	 %6345
%6347:	icmp	 %6346 XXX
%6348:	br	 %6347 if.else if.then

BASIC BLOCK if.then
%6349:	br	 for.cond

BASIC BLOCK for.cond
%6350:	phi	 XXX %6360
%6351:	icmp	 %6350 XXX
%6352:	br	 %6351 for.end for.body

BASIC BLOCK for.body
%6353:	getelementptr	 %6344 XXX XXX
%6354:	load	 %6353
%6355:	trunc	 %6354
%6356:	sext	 %6350
%6357:	getelementptr	 %6341 XXX %6356
%6358:	store	 %6355 %6357
%6359:	br	 for.inc

BASIC BLOCK for.inc
%6360:	add	 %6350 XXX
%6361:	br	 for.cond

BASIC BLOCK for.end
%6362:	br	 if.end

BASIC BLOCK if.else
%6363:	br	 for.cond3

BASIC BLOCK for.cond3
%6364:	phi	 XXX %6371
%6365:	icmp	 %6364 XXX
%6366:	br	 %6365 for.end11 for.body6

BASIC BLOCK for.body6
%6367:	sext	 %6364
%6368:	getelementptr	 %6341 XXX %6367
%6369:	store	 XXX %6368
%6370:	br	 for.inc9

BASIC BLOCK for.inc9
%6371:	add	 %6364 XXX
%6372:	br	 for.cond3

BASIC BLOCK for.end11
%6373:	br	 if.end

BASIC BLOCK if.end
%6374:	getelementptr	 %6344 XXX XXX
%6375:	load	 %6374
%6376:	icmp	 %6375 XXX
%6377:	br	 %6376 if.else113 land.lhs.true

BASIC BLOCK land.lhs.true
%6378:	getelementptr	 %6344 XXX XXX
%6379:	load	 %6378
%6380:	icmp	 %6379 XXX
%6381:	br	 %6380 if.else113 if.then17

BASIC BLOCK if.then17
%6382:	getelementptr	 %6344 XXX XXX
%6383:	getelementptr	 %6344 XXX XXX
%6384:	load	 %6383
%6385:	getelementptr	 %6382 XXX XXX
%6386:	load	 %6385
%6387:	getelementptr	 %6382 XXX XXX
%6388:	load	 %6387
%6389:	ptrtoint	 %6386
%6390:	ptrtoint	 %6388
%6391:	sub	 %6389 %6390
%6392:	sext	 %6384
%6393:	icmp	 %6391 %6392
%6394:	br	 %6393 if.end23 if.then22

BASIC BLOCK if.then22
%6395:	call	 %6382 %6384 _obstack_newchunk
%6396:	br	 if.end23

BASIC BLOCK if.end23
%6397:	getelementptr	 %6382 XXX XXX
%6398:	load	 %6397
%6399:	sext	 %6384
%6400:	getelementptr	 %6398 %6399
%6401:	store	 %6400 %6397
%6402:	getelementptr	 %6382 XXX XXX
%6403:	load	 %6402
%6404:	getelementptr	 %6382 XXX XXX
%6405:	load	 %6404
%6406:	icmp	 %6405 %6403
%6407:	br	 %6406 if.end29 if.then28

BASIC BLOCK if.then28
%6408:	getelementptr	 %6382 XXX XXX
%6409:	load	 %6408
%6410:	and	 %6409 XXX
%6411:	or	 %6410 XXX
%6412:	store	 %6411 %6408
%6413:	br	 if.end29

BASIC BLOCK if.end29
%6414:	getelementptr	 %6382 XXX XXX
%6415:	load	 %6414
%6416:	ptrtoint	 %6415
%6417:	sub	 %6416 XXX
%6418:	getelementptr	 %6382 XXX XXX
%6419:	load	 %6418
%6420:	sext	 %6419
%6421:	add	 %6417 %6420
%6422:	getelementptr	 %6382 XXX XXX
%6423:	load	 %6422
%6424:	xor	 %6423 XXX
%6425:	sext	 %6424
%6426:	and	 %6421 %6425
%6427:	getelementptr	 XXX %6426
%6428:	getelementptr	 %6382 XXX XXX
%6429:	store	 %6427 %6428
%6430:	getelementptr	 %6382 XXX XXX
%6431:	load	 %6430
%6432:	getelementptr	 %6382 XXX XXX
%6433:	load	 %6432
%6434:	bitcast	 %6433
%6435:	ptrtoint	 %6431
%6436:	ptrtoint	 %6434
%6437:	sub	 %6435 %6436
%6438:	getelementptr	 %6382 XXX XXX
%6439:	load	 %6438
%6440:	getelementptr	 %6382 XXX XXX
%6441:	load	 %6440
%6442:	bitcast	 %6441
%6443:	ptrtoint	 %6439
%6444:	ptrtoint	 %6442
%6445:	sub	 %6443 %6444
%6446:	icmp	 %6437 %6445
%6447:	br	 %6446 if.end52 if.then49

BASIC BLOCK if.then49
%6448:	getelementptr	 %6382 XXX XXX
%6449:	load	 %6448
%6450:	getelementptr	 %6382 XXX XXX
%6451:	store	 %6449 %6450
%6452:	br	 if.end52

BASIC BLOCK if.end52
%6453:	getelementptr	 %6382 XXX XXX
%6454:	load	 %6453
%6455:	getelementptr	 %6382 XXX XXX
%6456:	store	 %6454 %6455
%6457:	getelementptr	 %6344 XXX XXX
%6458:	store	 %6403 %6457
%6459:	getelementptr	 %6344 XXX XXX
%6460:	load	 %6459
%6461:	sub	 %6460 XXX
%6462:	getelementptr	 %6344 XXX XXX
%6463:	load	 %6462
%6464:	br	 for.cond56

BASIC BLOCK for.cond56
%6465:	phi	 %6463 %6481
%6466:	phi	 %6461 %6483
%6467:	icmp	 %6466 XXX
%6468:	br	 %6467 for.end66 for.body59

BASIC BLOCK for.body59
%6469:	getelementptr	 %6465 XXX XXX
%6470:	load	 %6469
%6471:	getelementptr	 %6470 XXX XXX
%6472:	load	 %6471
%6473:	sext	 %6466
%6474:	getelementptr	 %6344 XXX XXX
%6475:	load	 %6474
%6476:	getelementptr	 %6475 %6473
%6477:	store	 %6472 %6476
%6478:	getelementptr	 %6465 XXX XXX
%6479:	load	 %6478
%6480:	getelementptr	 %6479 XXX XXX
%6481:	load	 %6480
%6482:	br	 for.inc65

BASIC BLOCK for.inc65
%6483:	add	 %6466 XXX
%6484:	br	 for.cond56

BASIC BLOCK for.end66
%6485:	br	 for.cond67

BASIC BLOCK for.cond67
%6486:	phi	 XXX %6505
%6487:	getelementptr	 %6344 XXX XXX
%6488:	load	 %6487
%6489:	icmp	 %6486 %6488
%6490:	br	 %6489 for.end83 for.body71

BASIC BLOCK for.body71
%6491:	getelementptr	 %6344 XXX XXX
%6492:	load	 %6491
%6493:	add	 %6486 XXX
%6494:	sub	 %6492 %6493
%6495:	trunc	 %6494
%6496:	sext	 %6486
%6497:	getelementptr	 %6344 XXX XXX
%6498:	load	 %6497
%6499:	getelementptr	 %6498 %6496
%6500:	load	 %6499
%6501:	zext	 %6500
%6502:	getelementptr	 %6341 XXX %6501
%6503:	store	 %6495 %6502
%6504:	br	 for.inc81

BASIC BLOCK for.inc81
%6505:	add	 %6486 XXX
%6506:	br	 for.cond67

BASIC BLOCK for.end83
%6507:	getelementptr	 %6344 XXX XXX
%6508:	load	 %6507
%6509:	getelementptr	 %6344 XXX XXX
%6510:	store	 %6508 %6509
%6511:	br	 for.cond86

BASIC BLOCK for.cond86
%6512:	phi	 XXX %6543
%6513:	getelementptr	 %6344 XXX XXX
%6514:	load	 %6513
%6515:	sub	 %6514 XXX
%6516:	icmp	 %6512 %6515
%6517:	br	 %6516 for.end112 for.body91

BASIC BLOCK for.body91
%6518:	sext	 %6512
%6519:	getelementptr	 %6344 XXX XXX
%6520:	load	 %6519
%6521:	getelementptr	 %6520 %6518
%6522:	load	 %6521
%6523:	sext	 %6522
%6524:	getelementptr	 %6344 XXX XXX
%6525:	load	 %6524
%6526:	sub	 %6525 XXX
%6527:	sext	 %6526
%6528:	getelementptr	 %6344 XXX XXX
%6529:	load	 %6528
%6530:	getelementptr	 %6529 %6527
%6531:	load	 %6530
%6532:	sext	 %6531
%6533:	icmp	 %6523 %6532
%6534:	br	 %6533 if.end109 if.then104

BASIC BLOCK if.then104
%6535:	getelementptr	 %6344 XXX XXX
%6536:	load	 %6535
%6537:	add	 %6512 XXX
%6538:	sub	 %6536 %6537
%6539:	getelementptr	 %6344 XXX XXX
%6540:	store	 %6538 %6539
%6541:	br	 if.end109

BASIC BLOCK if.end109
%6542:	br	 for.inc110

BASIC BLOCK for.inc110
%6543:	add	 %6512 XXX
%6544:	br	 for.cond86

BASIC BLOCK for.end112
%6545:	br	 if.end234

BASIC BLOCK if.else113
%6546:	getelementptr	 %6344 XXX XXX
%6547:	load	 %6546
%6548:	store	 %6547 %6342
%6549:	br	 for.cond115

BASIC BLOCK for.cond115
%6550:	phi	 %6547 %6635
%6551:	icmp	 %6550 XXX
%6552:	br	 %6551 for.end164 for.body116

BASIC BLOCK for.body116
%6553:	getelementptr	 %6550 XXX XXX
%6554:	load	 %6553
%6555:	call	 %6554 %6342 enqueue
%6556:	getelementptr	 %6344 XXX XXX
%6557:	load	 %6556
%6558:	getelementptr	 %6550 XXX XXX
%6559:	store	 %6557 %6558
%6560:	getelementptr	 %6344 XXX XXX
%6561:	load	 %6560
%6562:	getelementptr	 %6550 XXX XXX
%6563:	store	 %6561 %6562
%6564:	getelementptr	 %6550 XXX XXX
%6565:	load	 %6564
%6566:	getelementptr	 %6550 XXX XXX
%6567:	load	 %6566
%6568:	getelementptr	 %6341 XXX XXX
%6569:	call	 %6565 %6567 %6568 treedelta
%6570:	getelementptr	 %6550 XXX XXX
%6571:	load	 %6570
%6572:	getelementptr	 %6550 XXX XXX
%6573:	load	 %6572
%6574:	getelementptr	 %6344 XXX XXX
%6575:	load	 %6574
%6576:	call	 %6571 %6573 %6575 treefails
%6577:	getelementptr	 %6550 XXX XXX
%6578:	load	 %6577
%6579:	br	 for.cond125

BASIC BLOCK for.cond125
%6580:	phi	 %6578 %6631
%6581:	icmp	 %6580 XXX
%6582:	br	 %6581 for.end161 for.body127

BASIC BLOCK for.body127
%6583:	getelementptr	 %6580 XXX XXX
%6584:	load	 %6583
%6585:	getelementptr	 %6550 XXX XXX
%6586:	load	 %6585
%6587:	call	 %6584 %6586 hasevery
%6588:	icmp	 %6587 XXX
%6589:	br	 %6588 if.then131 if.end144

BASIC BLOCK if.then131
%6590:	getelementptr	 %6550 XXX XXX
%6591:	load	 %6590
%6592:	getelementptr	 %6580 XXX XXX
%6593:	load	 %6592
%6594:	sub	 %6591 %6593
%6595:	getelementptr	 %6580 XXX XXX
%6596:	load	 %6595
%6597:	icmp	 %6594 %6596
%6598:	br	 %6597 if.end143 if.then138

BASIC BLOCK if.then138
%6599:	getelementptr	 %6550 XXX XXX
%6600:	load	 %6599
%6601:	getelementptr	 %6580 XXX XXX
%6602:	load	 %6601
%6603:	sub	 %6600 %6602
%6604:	getelementptr	 %6580 XXX XXX
%6605:	store	 %6603 %6604
%6606:	br	 if.end143

BASIC BLOCK if.end143
%6607:	br	 if.end144

BASIC BLOCK if.end144
%6608:	getelementptr	 %6550 XXX XXX
%6609:	load	 %6608
%6610:	icmp	 %6609 XXX
%6611:	br	 %6610 if.end158 land.lhs.true146

BASIC BLOCK land.lhs.true146
%6612:	getelementptr	 %6580 XXX XXX
%6613:	load	 %6612
%6614:	getelementptr	 %6550 XXX XXX
%6615:	load	 %6614
%6616:	getelementptr	 %6580 XXX XXX
%6617:	load	 %6616
%6618:	sub	 %6615 %6617
%6619:	icmp	 %6613 %6618
%6620:	br	 %6619 if.end158 if.then153

BASIC BLOCK if.then153
%6621:	getelementptr	 %6550 XXX XXX
%6622:	load	 %6621
%6623:	getelementptr	 %6580 XXX XXX
%6624:	load	 %6623
%6625:	sub	 %6622 %6624
%6626:	getelementptr	 %6580 XXX XXX
%6627:	store	 %6625 %6626
%6628:	br	 if.end158

BASIC BLOCK if.end158
%6629:	br	 for.inc159

BASIC BLOCK for.inc159
%6630:	getelementptr	 %6580 XXX XXX
%6631:	load	 %6630
%6632:	br	 for.cond125

BASIC BLOCK for.end161
%6633:	br	 for.inc162

BASIC BLOCK for.inc162
%6634:	getelementptr	 %6550 XXX XXX
%6635:	load	 %6634
%6636:	br	 for.cond115

BASIC BLOCK for.end164
%6637:	getelementptr	 %6344 XXX XXX
%6638:	load	 %6637
%6639:	getelementptr	 %6638 XXX XXX
%6640:	load	 %6639
%6641:	br	 for.cond167

BASIC BLOCK for.cond167
%6642:	phi	 %6640 %6673
%6643:	icmp	 %6642 XXX
%6644:	br	 %6643 for.end189 for.body169

BASIC BLOCK for.body169
%6645:	getelementptr	 %6642 XXX XXX
%6646:	load	 %6645
%6647:	getelementptr	 %6642 XXX XXX
%6648:	load	 %6647
%6649:	getelementptr	 %6648 XXX XXX
%6650:	load	 %6649
%6651:	icmp	 %6646 %6650
%6652:	br	 %6651 if.end178 if.then174

BASIC BLOCK if.then174
%6653:	getelementptr	 %6642 XXX XXX
%6654:	load	 %6653
%6655:	getelementptr	 %6654 XXX XXX
%6656:	load	 %6655
%6657:	getelementptr	 %6642 XXX XXX
%6658:	store	 %6656 %6657
%6659:	br	 if.end178

BASIC BLOCK if.end178
%6660:	getelementptr	 %6642 XXX XXX
%6661:	load	 %6660
%6662:	getelementptr	 %6642 XXX XXX
%6663:	load	 %6662
%6664:	icmp	 %6661 %6663
%6665:	br	 %6664 if.end186 if.then183

BASIC BLOCK if.then183
%6666:	getelementptr	 %6642 XXX XXX
%6667:	load	 %6666
%6668:	getelementptr	 %6642 XXX XXX
%6669:	store	 %6667 %6668
%6670:	br	 if.end186

BASIC BLOCK if.end186
%6671:	br	 for.inc187

BASIC BLOCK for.inc187
%6672:	getelementptr	 %6642 XXX XXX
%6673:	load	 %6672
%6674:	br	 for.cond167

BASIC BLOCK for.end189
%6675:	br	 for.cond190

BASIC BLOCK for.cond190
%6676:	phi	 XXX %6683
%6677:	icmp	 %6676 XXX
%6678:	br	 %6677 for.end198 for.body193

BASIC BLOCK for.body193
%6679:	sext	 %6676
%6680:	getelementptr	 %6343 XXX %6679
%6681:	store	 XXX %6680
%6682:	br	 for.inc196

BASIC BLOCK for.inc196
%6683:	add	 %6676 XXX
%6684:	br	 for.cond190

BASIC BLOCK for.end198
%6685:	getelementptr	 %6344 XXX XXX
%6686:	load	 %6685
%6687:	getelementptr	 %6686 XXX XXX
%6688:	load	 %6687
%6689:	getelementptr	 %6343 XXX XXX
%6690:	call	 %6688 %6689 treenext
%6691:	getelementptr	 %6344 XXX XXX
%6692:	load	 %6691
%6693:	icmp	 %6692 XXX
%6694:	br	 %6693 if.else220 if.then205

BASIC BLOCK if.then205
%6695:	br	 for.cond206

BASIC BLOCK for.cond206
%6696:	phi	 XXX %6710
%6697:	icmp	 %6696 XXX
%6698:	br	 %6697 for.end219 for.body209

BASIC BLOCK for.body209
%6699:	sext	 %6696
%6700:	getelementptr	 %6692 %6699
%6701:	load	 %6700
%6702:	zext	 %6701
%6703:	getelementptr	 %6343 XXX %6702
%6704:	load	 %6703
%6705:	sext	 %6696
%6706:	getelementptr	 %6344 XXX XXX
%6707:	getelementptr	 %6706 XXX %6705
%6708:	store	 %6704 %6707
%6709:	br	 for.inc217

BASIC BLOCK for.inc217
%6710:	add	 %6696 XXX
%6711:	br	 for.cond206

BASIC BLOCK for.end219
%6712:	br	 if.end233

BASIC BLOCK if.else220
%6713:	br	 for.cond221

BASIC BLOCK for.cond221
%6714:	phi	 XXX %6725
%6715:	icmp	 %6714 XXX
%6716:	br	 %6715 for.end232 for.body224

BASIC BLOCK for.body224
%6717:	sext	 %6714
%6718:	getelementptr	 %6343 XXX %6717
%6719:	load	 %6718
%6720:	sext	 %6714
%6721:	getelementptr	 %6344 XXX XXX
%6722:	getelementptr	 %6721 XXX %6720
%6723:	store	 %6719 %6722
%6724:	br	 for.inc230

BASIC BLOCK for.inc230
%6725:	add	 %6714 XXX
%6726:	br	 for.cond221

BASIC BLOCK for.end232
%6727:	br	 if.end233

BASIC BLOCK if.end233
%6728:	br	 if.end234

BASIC BLOCK if.end234
%6729:	getelementptr	 %6344 XXX XXX
%6730:	load	 %6729
%6731:	icmp	 %6730 XXX
%6732:	br	 %6731 if.else253 if.then238

BASIC BLOCK if.then238
%6733:	br	 for.cond239

BASIC BLOCK for.cond239
%6734:	phi	 XXX %6748
%6735:	icmp	 %6734 XXX
%6736:	br	 %6735 for.end252 for.body242

BASIC BLOCK for.body242
%6737:	sext	 %6734
%6738:	getelementptr	 %6730 %6737
%6739:	load	 %6738
%6740:	zext	 %6739
%6741:	getelementptr	 %6341 XXX %6740
%6742:	load	 %6741
%6743:	sext	 %6734
%6744:	getelementptr	 %6344 XXX XXX
%6745:	getelementptr	 %6744 XXX %6743
%6746:	store	 %6742 %6745
%6747:	br	 for.inc250

BASIC BLOCK for.inc250
%6748:	add	 %6734 XXX
%6749:	br	 for.cond239

BASIC BLOCK for.end252
%6750:	br	 if.end266

BASIC BLOCK if.else253
%6751:	br	 for.cond254

BASIC BLOCK for.cond254
%6752:	phi	 XXX %6763
%6753:	icmp	 %6752 XXX
%6754:	br	 %6753 for.end265 for.body257

BASIC BLOCK for.body257
%6755:	sext	 %6752
%6756:	getelementptr	 %6341 XXX %6755
%6757:	load	 %6756
%6758:	sext	 %6752
%6759:	getelementptr	 %6344 XXX XXX
%6760:	getelementptr	 %6759 XXX %6758
%6761:	store	 %6757 %6760
%6762:	br	 for.inc263

BASIC BLOCK for.inc263
%6763:	add	 %6752 XXX
%6764:	br	 for.cond254

BASIC BLOCK for.end265
%6765:	br	 if.end266

BASIC BLOCK if.end266
%6766:	ret	 XXX

FUNCTION enqueue

BASIC BLOCK entry
%6767:	icmp	 tree XXX
%6768:	br	 %6767 if.then if.end

BASIC BLOCK if.then
%6769:	br	 return

BASIC BLOCK if.end
%6770:	getelementptr	 tree XXX XXX
%6771:	load	 %6770
%6772:	call	 %6771 last enqueue
%6773:	getelementptr	 tree XXX XXX
%6774:	load	 %6773
%6775:	call	 %6774 last enqueue
%6776:	getelementptr	 tree XXX XXX
%6777:	load	 %6776
%6778:	load	 last
%6779:	getelementptr	 %6778 XXX XXX
%6780:	store	 %6777 %6779
%6781:	store	 %6777 last
%6782:	br	 return

BASIC BLOCK return
%6783:	ret	

FUNCTION treedelta

BASIC BLOCK entry
%6784:	icmp	 tree XXX
%6785:	br	 %6784 if.then if.end

BASIC BLOCK if.then
%6786:	br	 if.end7

BASIC BLOCK if.end
%6787:	getelementptr	 tree XXX XXX
%6788:	load	 %6787
%6789:	call	 %6788 depth delta treedelta
%6790:	getelementptr	 tree XXX XXX
%6791:	load	 %6790
%6792:	call	 %6791 depth delta treedelta
%6793:	getelementptr	 tree XXX XXX
%6794:	load	 %6793
%6795:	zext	 %6794
%6796:	getelementptr	 delta %6795
%6797:	load	 %6796
%6798:	zext	 %6797
%6799:	icmp	 depth %6798
%6800:	br	 %6799 if.end7 if.then2

BASIC BLOCK if.then2
%6801:	trunc	 depth
%6802:	getelementptr	 tree XXX XXX
%6803:	load	 %6802
%6804:	zext	 %6803
%6805:	getelementptr	 delta %6804
%6806:	store	 %6801 %6805
%6807:	br	 if.end7

BASIC BLOCK if.end7
%6808:	ret	

FUNCTION treefails

BASIC BLOCK entry
%6809:	icmp	 tree XXX
%6810:	br	 %6809 if.then if.end

BASIC BLOCK if.then
%6811:	br	 return

BASIC BLOCK if.end
%6812:	getelementptr	 tree XXX XXX
%6813:	load	 %6812
%6814:	call	 %6813 fail recourse treefails
%6815:	getelementptr	 tree XXX XXX
%6816:	load	 %6815
%6817:	call	 %6816 fail recourse treefails
%6818:	br	 while.cond

BASIC BLOCK while.cond
%6819:	phi	 fail %6864
%6820:	icmp	 %6819 XXX
%6821:	br	 %6820 while.end24 while.body

BASIC BLOCK while.body
%6822:	getelementptr	 %6819 XXX XXX
%6823:	load	 %6822
%6824:	br	 while.cond2

BASIC BLOCK while.cond2
%6825:	phi	 %6823 %6852
%6826:	icmp	 %6825 XXX
%6827:	br	 %6826 land.end land.rhs

BASIC BLOCK land.rhs
%6828:	getelementptr	 tree XXX XXX
%6829:	load	 %6828
%6830:	zext	 %6829
%6831:	getelementptr	 %6825 XXX XXX
%6832:	load	 %6831
%6833:	zext	 %6832
%6834:	icmp	 %6830 %6833
%6835:	br	 land.end

BASIC BLOCK land.end
%6836:	phi	 XXX %6834
%6837:	br	 %6836 while.end while.body7

BASIC BLOCK while.body7
%6838:	getelementptr	 tree XXX XXX
%6839:	load	 %6838
%6840:	zext	 %6839
%6841:	getelementptr	 %6825 XXX XXX
%6842:	load	 %6841
%6843:	zext	 %6842
%6844:	icmp	 %6840 %6843
%6845:	br	 %6844 if.else if.then14

BASIC BLOCK if.then14
%6846:	getelementptr	 %6825 XXX XXX
%6847:	load	 %6846
%6848:	br	 if.end17

BASIC BLOCK if.else
%6849:	getelementptr	 %6825 XXX XXX
%6850:	load	 %6849
%6851:	br	 if.end17

BASIC BLOCK if.end17
%6852:	phi	 %6847 %6850
%6853:	br	 while.cond2

BASIC BLOCK while.end
%6854:	icmp	 %6825 XXX
%6855:	br	 %6854 if.end22 if.then19

BASIC BLOCK if.then19
%6856:	getelementptr	 %6825 XXX XXX
%6857:	load	 %6856
%6858:	getelementptr	 tree XXX XXX
%6859:	load	 %6858
%6860:	getelementptr	 %6859 XXX XXX
%6861:	store	 %6857 %6860
%6862:	br	 return

BASIC BLOCK if.end22
%6863:	getelementptr	 %6819 XXX XXX
%6864:	load	 %6863
%6865:	br	 while.cond

BASIC BLOCK while.end24
%6866:	getelementptr	 tree XXX XXX
%6867:	load	 %6866
%6868:	getelementptr	 %6867 XXX XXX
%6869:	store	 recourse %6868
%6870:	br	 return

BASIC BLOCK return
%6871:	ret	

FUNCTION hasevery

BASIC BLOCK entry
%6872:	icmp	 b XXX
%6873:	br	 %6872 if.then if.end

BASIC BLOCK if.then
%6874:	br	 return

BASIC BLOCK if.end
%6875:	getelementptr	 b XXX XXX
%6876:	load	 %6875
%6877:	call	 a %6876 hasevery
%6878:	icmp	 %6877 XXX
%6879:	br	 %6878 if.then2 if.end3

BASIC BLOCK if.then2
%6880:	br	 return

BASIC BLOCK if.end3
%6881:	getelementptr	 b XXX XXX
%6882:	load	 %6881
%6883:	call	 a %6882 hasevery
%6884:	icmp	 %6883 XXX
%6885:	br	 %6884 if.then6 if.end7

BASIC BLOCK if.then6
%6886:	br	 return

BASIC BLOCK if.end7
%6887:	br	 while.cond

BASIC BLOCK while.cond
%6888:	phi	 a %6915
%6889:	icmp	 %6888 XXX
%6890:	br	 %6889 land.end land.rhs

BASIC BLOCK land.rhs
%6891:	getelementptr	 b XXX XXX
%6892:	load	 %6891
%6893:	zext	 %6892
%6894:	getelementptr	 %6888 XXX XXX
%6895:	load	 %6894
%6896:	zext	 %6895
%6897:	icmp	 %6893 %6896
%6898:	br	 land.end

BASIC BLOCK land.end
%6899:	phi	 XXX %6897
%6900:	br	 %6899 while.end while.body

BASIC BLOCK while.body
%6901:	getelementptr	 b XXX XXX
%6902:	load	 %6901
%6903:	zext	 %6902
%6904:	getelementptr	 %6888 XXX XXX
%6905:	load	 %6904
%6906:	zext	 %6905
%6907:	icmp	 %6903 %6906
%6908:	br	 %6907 if.else if.then18

BASIC BLOCK if.then18
%6909:	getelementptr	 %6888 XXX XXX
%6910:	load	 %6909
%6911:	br	 if.end21

BASIC BLOCK if.else
%6912:	getelementptr	 %6888 XXX XXX
%6913:	load	 %6912
%6914:	br	 if.end21

BASIC BLOCK if.end21
%6915:	phi	 %6910 %6913
%6916:	br	 while.cond

BASIC BLOCK while.end
%6917:	icmp	 %6888 XXX
%6918:	xor	 %6917 XXX
%6919:	xor	 %6918 XXX
%6920:	zext	 %6919
%6921:	br	 return

BASIC BLOCK return
%6922:	phi	 %6920 XXX XXX XXX
%6923:	ret	 %6922

FUNCTION treenext

BASIC BLOCK entry
%6924:	icmp	 tree XXX
%6925:	br	 %6924 if.then if.end

BASIC BLOCK if.then
%6926:	br	 return

BASIC BLOCK if.end
%6927:	getelementptr	 tree XXX XXX
%6928:	load	 %6927
%6929:	call	 %6928 next treenext
%6930:	getelementptr	 tree XXX XXX
%6931:	load	 %6930
%6932:	call	 %6931 next treenext
%6933:	getelementptr	 tree XXX XXX
%6934:	load	 %6933
%6935:	getelementptr	 tree XXX XXX
%6936:	load	 %6935
%6937:	zext	 %6936
%6938:	getelementptr	 next %6937
%6939:	store	 %6934 %6938
%6940:	br	 return

BASIC BLOCK return
%6941:	ret	

FUNCTION kwsexec

BASIC BLOCK entry
%6942:	bitcast	 kws
%6943:	getelementptr	 %6942 XXX XXX
%6944:	load	 %6943
%6945:	icmp	 %6944 XXX
%6946:	br	 %6945 if.else land.lhs.true

BASIC BLOCK land.lhs.true
%6947:	getelementptr	 %6942 XXX XXX
%6948:	load	 %6947
%6949:	icmp	 %6948 XXX
%6950:	br	 %6949 if.else if.then

BASIC BLOCK if.then
%6951:	call	 kws text size bmexec
%6952:	icmp	 kwsmatch XXX
%6953:	br	 %6952 if.end land.lhs.true3

BASIC BLOCK land.lhs.true3
%6954:	icmp	 %6951 XXX
%6955:	br	 %6954 if.end if.then5

BASIC BLOCK if.then5
%6956:	getelementptr	 kwsmatch XXX XXX
%6957:	store	 XXX %6956
%6958:	getelementptr	 kwsmatch XXX XXX
%6959:	getelementptr	 %6958 XXX XXX
%6960:	store	 %6951 %6959
%6961:	getelementptr	 %6942 XXX XXX
%6962:	load	 %6961
%6963:	sext	 %6962
%6964:	getelementptr	 kwsmatch XXX XXX
%6965:	getelementptr	 %6964 XXX XXX
%6966:	store	 %6963 %6965
%6967:	br	 if.end

BASIC BLOCK if.end
%6968:	br	 return

BASIC BLOCK if.else
%6969:	call	 kws text size kwsmatch cwexec
%6970:	br	 return

BASIC BLOCK return
%6971:	phi	 %6951 %6969
%6972:	ret	 %6971

FUNCTION bmexec

BASIC BLOCK entry
%6973:	bitcast	 kws
%6974:	getelementptr	 %6973 XXX XXX
%6975:	load	 %6974
%6976:	icmp	 %6975 XXX
%6977:	br	 %6976 if.end if.then

BASIC BLOCK if.then
%6978:	br	 return

BASIC BLOCK if.end
%6979:	sext	 %6975
%6980:	icmp	 %6979 size
%6981:	br	 %6980 if.end4 if.then3

BASIC BLOCK if.then3
%6982:	br	 return

BASIC BLOCK if.end4
%6983:	icmp	 %6975 XXX
%6984:	br	 %6983 if.end9 if.then7

BASIC BLOCK if.then7
%6985:	getelementptr	 %6973 XXX XXX
%6986:	load	 %6985
%6987:	getelementptr	 %6986 XXX
%6988:	load	 %6987
%6989:	sext	 %6988
%6990:	call	 text %6989 size memchr
%6991:	br	 return

BASIC BLOCK if.end9
%6992:	getelementptr	 %6973 XXX XXX
%6993:	getelementptr	 %6992 XXX XXX
%6994:	getelementptr	 %6973 XXX XXX
%6995:	load	 %6994
%6996:	sext	 %6975
%6997:	getelementptr	 %6995 %6996
%6998:	getelementptr	 %6997 XXX
%6999:	load	 %6998
%7000:	zext	 %6999
%7001:	getelementptr	 %6973 XXX XXX
%7002:	load	 %7001
%7003:	sext	 %6975
%7004:	getelementptr	 text %7003
%7005:	mul	 XXX %6975
%7006:	sext	 %7005
%7007:	icmp	 size %7006
%7008:	br	 %7007 if.end124 if.then18

BASIC BLOCK if.then18
%7009:	getelementptr	 text size
%7010:	mul	 XXX %6975
%7011:	sext	 %7010
%7012:	sub	 XXX %7011
%7013:	getelementptr	 %7009 %7012
%7014:	br	 for.cond

BASIC BLOCK for.cond
%7015:	phi	 %7004 %7146
%7016:	br	 while.cond

BASIC BLOCK while.cond
%7017:	phi	 %7015 %7108
%7018:	icmp	 %7017 %7013
%7019:	br	 %7018 while.end while.body

BASIC BLOCK while.body
%7020:	getelementptr	 %7017 XXX
%7021:	load	 %7020
%7022:	zext	 %7021
%7023:	getelementptr	 %6993 %7022
%7024:	load	 %7023
%7025:	zext	 %7024
%7026:	sext	 %7025
%7027:	getelementptr	 %7017 %7026
%7028:	getelementptr	 %7027 XXX
%7029:	load	 %7028
%7030:	zext	 %7029
%7031:	getelementptr	 %6993 %7030
%7032:	load	 %7031
%7033:	zext	 %7032
%7034:	sext	 %7033
%7035:	getelementptr	 %7027 %7034
%7036:	icmp	 %7033 XXX
%7037:	br	 %7036 if.end39 if.then38

BASIC BLOCK if.then38
%7038:	br	 found

BASIC BLOCK if.end39
%7039:	getelementptr	 %7035 XXX
%7040:	load	 %7039
%7041:	zext	 %7040
%7042:	getelementptr	 %6993 %7041
%7043:	load	 %7042
%7044:	zext	 %7043
%7045:	sext	 %7044
%7046:	getelementptr	 %7035 %7045
%7047:	getelementptr	 %7046 XXX
%7048:	load	 %7047
%7049:	zext	 %7048
%7050:	getelementptr	 %6993 %7049
%7051:	load	 %7050
%7052:	zext	 %7051
%7053:	sext	 %7052
%7054:	getelementptr	 %7046 %7053
%7055:	getelementptr	 %7054 XXX
%7056:	load	 %7055
%7057:	zext	 %7056
%7058:	getelementptr	 %6993 %7057
%7059:	load	 %7058
%7060:	zext	 %7059
%7061:	sext	 %7060
%7062:	getelementptr	 %7054 %7061
%7063:	icmp	 %7060 XXX
%7064:	br	 %7063 if.end61 if.then60

BASIC BLOCK if.then60
%7065:	br	 found

BASIC BLOCK if.end61
%7066:	getelementptr	 %7062 XXX
%7067:	load	 %7066
%7068:	zext	 %7067
%7069:	getelementptr	 %6993 %7068
%7070:	load	 %7069
%7071:	zext	 %7070
%7072:	sext	 %7071
%7073:	getelementptr	 %7062 %7072
%7074:	getelementptr	 %7073 XXX
%7075:	load	 %7074
%7076:	zext	 %7075
%7077:	getelementptr	 %6993 %7076
%7078:	load	 %7077
%7079:	zext	 %7078
%7080:	sext	 %7079
%7081:	getelementptr	 %7073 %7080
%7082:	getelementptr	 %7081 XXX
%7083:	load	 %7082
%7084:	zext	 %7083
%7085:	getelementptr	 %6993 %7084
%7086:	load	 %7085
%7087:	zext	 %7086
%7088:	sext	 %7087
%7089:	getelementptr	 %7081 %7088
%7090:	icmp	 %7087 XXX
%7091:	br	 %7090 if.end83 if.then82

BASIC BLOCK if.then82
%7092:	br	 found

BASIC BLOCK if.end83
%7093:	getelementptr	 %7089 XXX
%7094:	load	 %7093
%7095:	zext	 %7094
%7096:	getelementptr	 %6993 %7095
%7097:	load	 %7096
%7098:	zext	 %7097
%7099:	sext	 %7098
%7100:	getelementptr	 %7089 %7099
%7101:	getelementptr	 %7100 XXX
%7102:	load	 %7101
%7103:	zext	 %7102
%7104:	getelementptr	 %6993 %7103
%7105:	load	 %7104
%7106:	zext	 %7105
%7107:	sext	 %7106
%7108:	getelementptr	 %7100 %7107
%7109:	br	 while.cond

BASIC BLOCK while.end
%7110:	br	 for.end123

BASIC BLOCK found
%7111:	phi	 %7035 %7062 %7089
%7112:	getelementptr	 %7111 XXX
%7113:	load	 %7112
%7114:	zext	 %7113
%7115:	icmp	 %7114 %7000
%7116:	br	 %7115 if.end120 if.then100

BASIC BLOCK if.then100
%7117:	br	 for.cond101

BASIC BLOCK for.cond101
%7118:	phi	 XXX %7136
%7119:	icmp	 %7118 %6975
%7120:	br	 %7119 land.end land.rhs

BASIC BLOCK land.rhs
%7121:	sub	 XXX %7118
%7122:	sext	 %7121
%7123:	getelementptr	 %7111 %7122
%7124:	load	 %7123
%7125:	zext	 %7124
%7126:	sub	 XXX %7118
%7127:	sext	 %7126
%7128:	getelementptr	 %6997 %7127
%7129:	load	 %7128
%7130:	zext	 %7129
%7131:	icmp	 %7125 %7130
%7132:	br	 land.end

BASIC BLOCK land.end
%7133:	phi	 XXX %7131
%7134:	br	 %7133 for.end for.body

BASIC BLOCK for.body
%7135:	br	 for.inc

BASIC BLOCK for.inc
%7136:	add	 %7118 XXX
%7137:	br	 for.cond101

BASIC BLOCK for.end
%7138:	icmp	 %7118 %6975
%7139:	br	 %7138 if.end119 if.then115

BASIC BLOCK if.then115
%7140:	sext	 %6975
%7141:	sub	 XXX %7140
%7142:	getelementptr	 %7111 %7141
%7143:	br	 return

BASIC BLOCK if.end119
%7144:	br	 if.end120

BASIC BLOCK if.end120
%7145:	sext	 %7002
%7146:	getelementptr	 %7111 %7145
%7147:	br	 for.cond

BASIC BLOCK for.end123
%7148:	br	 if.end124

BASIC BLOCK if.end124
%7149:	phi	 %7017 %7004
%7150:	getelementptr	 text size
%7151:	getelementptr	 %7149 XXX
%7152:	load	 %7151
%7153:	zext	 %7152
%7154:	getelementptr	 %6993 %7153
%7155:	load	 %7154
%7156:	zext	 %7155
%7157:	br	 while.cond130

BASIC BLOCK while.cond130
%7158:	phi	 %7149 %7167 %7167
%7159:	phi	 %7156 %7173 %7002
%7160:	sext	 %7159
%7161:	ptrtoint	 %7150
%7162:	ptrtoint	 %7158
%7163:	sub	 %7161 %7162
%7164:	icmp	 %7160 %7163
%7165:	br	 %7164 while.end177 while.body134

BASIC BLOCK while.body134
%7166:	sext	 %7159
%7167:	getelementptr	 %7158 %7166
%7168:	getelementptr	 %7167 XXX
%7169:	load	 %7168
%7170:	zext	 %7169
%7171:	getelementptr	 %6993 %7170
%7172:	load	 %7171
%7173:	zext	 %7172
%7174:	icmp	 %7173 XXX
%7175:	br	 %7174 if.end144 if.then143

BASIC BLOCK if.then143
%7176:	br	 while.cond130

BASIC BLOCK if.end144
%7177:	getelementptr	 %7167 XXX
%7178:	load	 %7177
%7179:	zext	 %7178
%7180:	icmp	 %7179 %7000
%7181:	br	 %7180 if.end176 if.then149

BASIC BLOCK if.then149
%7182:	br	 for.cond150

BASIC BLOCK for.cond150
%7183:	phi	 XXX %7201
%7184:	icmp	 %7183 %6975
%7185:	br	 %7184 land.end164 land.rhs153

BASIC BLOCK land.rhs153
%7186:	sub	 XXX %7183
%7187:	sext	 %7186
%7188:	getelementptr	 %7167 %7187
%7189:	load	 %7188
%7190:	zext	 %7189
%7191:	sub	 XXX %7183
%7192:	sext	 %7191
%7193:	getelementptr	 %6997 %7192
%7194:	load	 %7193
%7195:	zext	 %7194
%7196:	icmp	 %7190 %7195
%7197:	br	 land.end164

BASIC BLOCK land.end164
%7198:	phi	 XXX %7196
%7199:	br	 %7198 for.end168 for.body165

BASIC BLOCK for.body165
%7200:	br	 for.inc166

BASIC BLOCK for.inc166
%7201:	add	 %7183 XXX
%7202:	br	 for.cond150

BASIC BLOCK for.end168
%7203:	icmp	 %7183 %6975
%7204:	br	 %7203 if.end175 if.then171

BASIC BLOCK if.then171
%7205:	sext	 %6975
%7206:	sub	 XXX %7205
%7207:	getelementptr	 %7167 %7206
%7208:	br	 return

BASIC BLOCK if.end175
%7209:	br	 if.end176

BASIC BLOCK if.end176
%7210:	br	 while.cond130

BASIC BLOCK while.end177
%7211:	br	 return

BASIC BLOCK return
%7212:	phi	 text XXX %6990 %7142 %7207 XXX
%7213:	ret	 %7212

FUNCTION cwexec

BASIC BLOCK entry
%7214:	bitcast	 kws
%7215:	getelementptr	 %7214 XXX XXX
%7216:	load	 %7215
%7217:	sext	 %7216
%7218:	icmp	 len %7217
%7219:	br	 %7218 if.end if.then

BASIC BLOCK if.then
%7220:	br	 return

BASIC BLOCK if.end
%7221:	getelementptr	 %7214 XXX XXX
%7222:	getelementptr	 %7221 XXX XXX
%7223:	getelementptr	 %7214 XXX XXX
%7224:	getelementptr	 %7223 XXX XXX
%7225:	getelementptr	 %7214 XXX XXX
%7226:	load	 %7225
%7227:	getelementptr	 text len
%7228:	getelementptr	 %7214 XXX XXX
%7229:	load	 %7228
%7230:	icmp	 %7229 XXX
%7231:	br	 %7230 if.else if.then9

BASIC BLOCK if.then9
%7232:	br	 if.end11

BASIC BLOCK if.else
%7233:	getelementptr	 %7214 XXX XXX
%7234:	load	 %7233
%7235:	br	 match

BASIC BLOCK if.end11
%7236:	getelementptr	 %7214 XXX XXX
%7237:	load	 %7236
%7238:	mul	 XXX %7237
%7239:	sext	 %7238
%7240:	icmp	 len %7239
%7241:	br	 %7240 if.else20 if.then16

BASIC BLOCK if.then16
%7242:	getelementptr	 %7214 XXX XXX
%7243:	load	 %7242
%7244:	mul	 XXX %7243
%7245:	sext	 %7244
%7246:	sub	 XXX %7245
%7247:	getelementptr	 %7227 %7246
%7248:	br	 if.end21

BASIC BLOCK if.else20
%7249:	br	 if.end21

BASIC BLOCK if.end21
%7250:	phi	 %7247 XXX
%7251:	br	 while.cond

BASIC BLOCK while.cond
%7252:	phi	 XXX %7252 %7330
%7253:	phi	 XXX %7253 %7332
%7254:	phi	 %7229 %7311 %7334
%7255:	phi	 text %7312 %7312
%7256:	ptrtoint	 %7227
%7257:	ptrtoint	 %7255
%7258:	sub	 %7256 %7257
%7259:	sext	 %7254
%7260:	icmp	 %7258 %7259
%7261:	br	 %7260 while.end109 while.body

BASIC BLOCK while.body
%7262:	icmp	 %7250 XXX
%7263:	br	 %7262 if.else48 land.lhs.true

BASIC BLOCK land.lhs.true
%7264:	icmp	 %7255 %7250
%7265:	br	 %7264 if.else48 if.then27

BASIC BLOCK if.then27
%7266:	sub	 %7254 XXX
%7267:	sext	 %7266
%7268:	getelementptr	 %7255 %7267
%7269:	br	 while.cond30

BASIC BLOCK while.cond30
%7270:	phi	 %7268 %7297
%7271:	load	 %7270
%7272:	zext	 %7271
%7273:	getelementptr	 %7224 %7272
%7274:	load	 %7273
%7275:	zext	 %7274
%7276:	icmp	 %7275 XXX
%7277:	br	 %7276 land.end land.rhs

BASIC BLOCK land.rhs
%7278:	icmp	 %7270 %7250
%7279:	br	 land.end

BASIC BLOCK land.end
%7280:	phi	 XXX %7278
%7281:	br	 %7280 while.end while.body35

BASIC BLOCK while.body35
%7282:	sext	 %7275
%7283:	getelementptr	 %7270 %7282
%7284:	load	 %7283
%7285:	zext	 %7284
%7286:	getelementptr	 %7224 %7285
%7287:	load	 %7286
%7288:	zext	 %7287
%7289:	sext	 %7288
%7290:	getelementptr	 %7283 %7289
%7291:	load	 %7290
%7292:	zext	 %7291
%7293:	getelementptr	 %7224 %7292
%7294:	load	 %7293
%7295:	zext	 %7294
%7296:	sext	 %7295
%7297:	getelementptr	 %7290 %7296
%7298:	br	 while.cond30

BASIC BLOCK while.end
%7299:	getelementptr	 %7270 XXX
%7300:	br	 if.end55

BASIC BLOCK if.else48
%7301:	sext	 %7254
%7302:	getelementptr	 %7255 %7301
%7303:	getelementptr	 %7302 XXX
%7304:	load	 %7303
%7305:	zext	 %7304
%7306:	getelementptr	 %7224 %7305
%7307:	load	 %7306
%7308:	zext	 %7307
%7309:	br	 if.end55

BASIC BLOCK if.end55
%7310:	phi	 %7271 %7304
%7311:	phi	 %7275 %7308
%7312:	phi	 %7299 %7302
%7313:	icmp	 %7311 XXX
%7314:	br	 %7313 if.end58 if.then57

BASIC BLOCK if.then57
%7315:	br	 while.cond

BASIC BLOCK if.end58
%7316:	getelementptr	 %7312 XXX
%7317:	zext	 %7310
%7318:	getelementptr	 %7222 %7317
%7319:	load	 %7318
%7320:	getelementptr	 %7319 XXX XXX
%7321:	load	 %7320
%7322:	icmp	 %7321 XXX
%7323:	br	 %7322 if.end64 if.then63

BASIC BLOCK if.then63
%7324:	br	 if.end64

BASIC BLOCK if.end64
%7325:	phi	 %7316 %7252
%7326:	phi	 %7319 %7253
%7327:	getelementptr	 %7319 XXX XXX
%7328:	load	 %7327
%7329:	br	 while.cond65

BASIC BLOCK while.cond65
%7330:	phi	 %7325 %7390
%7331:	phi	 %7316 %7350
%7332:	phi	 %7326 %7391
%7333:	phi	 %7319 %7384
%7334:	phi	 %7328 %7395
%7335:	icmp	 %7331 text
%7336:	br	 %7335 while.end105 while.body68

BASIC BLOCK while.body68
%7337:	icmp	 %7226 XXX
%7338:	br	 %7337 cond.false cond.true

BASIC BLOCK cond.true
%7339:	getelementptr	 %7331 XXX
%7340:	load	 %7339
%7341:	zext	 %7340
%7342:	getelementptr	 %7226 %7341
%7343:	load	 %7342
%7344:	sext	 %7343
%7345:	br	 cond.end

BASIC BLOCK cond.false
%7346:	getelementptr	 %7331 XXX
%7347:	load	 %7346
%7348:	sext	 %7347
%7349:	br	 cond.end

BASIC BLOCK cond.end
%7350:	phi	 %7339 %7346
%7351:	phi	 %7344 %7348
%7352:	trunc	 %7351
%7353:	getelementptr	 %7333 XXX XXX
%7354:	load	 %7353
%7355:	br	 while.cond77

BASIC BLOCK while.cond77
%7356:	phi	 %7354 %7379
%7357:	icmp	 %7356 XXX
%7358:	br	 %7357 land.end84 land.rhs79

BASIC BLOCK land.rhs79
%7359:	zext	 %7352
%7360:	getelementptr	 %7356 XXX XXX
%7361:	load	 %7360
%7362:	zext	 %7361
%7363:	icmp	 %7359 %7362
%7364:	br	 land.end84

BASIC BLOCK land.end84
%7365:	phi	 XXX %7363
%7366:	br	 %7365 while.end94 while.body85

BASIC BLOCK while.body85
%7367:	zext	 %7352
%7368:	getelementptr	 %7356 XXX XXX
%7369:	load	 %7368
%7370:	zext	 %7369
%7371:	icmp	 %7367 %7370
%7372:	br	 %7371 if.else92 if.then91

BASIC BLOCK if.then91
%7373:	getelementptr	 %7356 XXX XXX
%7374:	load	 %7373
%7375:	br	 if.end93

BASIC BLOCK if.else92
%7376:	getelementptr	 %7356 XXX XXX
%7377:	load	 %7376
%7378:	br	 if.end93

BASIC BLOCK if.end93
%7379:	phi	 %7374 %7377
%7380:	br	 while.cond77

BASIC BLOCK while.end94
%7381:	icmp	 %7356 XXX
%7382:	br	 %7381 if.else102 if.then96

BASIC BLOCK if.then96
%7383:	getelementptr	 %7356 XXX XXX
%7384:	load	 %7383
%7385:	getelementptr	 %7384 XXX XXX
%7386:	load	 %7385
%7387:	icmp	 %7386 XXX
%7388:	br	 %7387 if.end101 if.then100

BASIC BLOCK if.then100
%7389:	br	 if.end101

BASIC BLOCK if.end101
%7390:	phi	 %7350 %7330
%7391:	phi	 %7384 %7332
%7392:	br	 if.end103

BASIC BLOCK if.else102
%7393:	br	 while.end105

BASIC BLOCK if.end103
%7394:	getelementptr	 %7384 XXX XXX
%7395:	load	 %7394
%7396:	br	 while.cond65

BASIC BLOCK while.end105
%7397:	icmp	 %7330 XXX
%7398:	br	 %7397 if.end108 if.then107

BASIC BLOCK if.then107
%7399:	br	 match

BASIC BLOCK if.end108
%7400:	br	 while.cond

BASIC BLOCK while.end109
%7401:	br	 return

BASIC BLOCK match
%7402:	phi	 %7330 %7464 text
%7403:	phi	 %7227 %7419 %7227
%7404:	phi	 %7332 %7462 %7234
%7405:	phi	 %7312 %7432 text
%7406:	ptrtoint	 %7403
%7407:	ptrtoint	 %7402
%7408:	sub	 %7406 %7407
%7409:	getelementptr	 %7214 XXX XXX
%7410:	load	 %7409
%7411:	sext	 %7410
%7412:	icmp	 %7408 %7411
%7413:	br	 %7412 if.end120 if.then116

BASIC BLOCK if.then116
%7414:	getelementptr	 %7214 XXX XXX
%7415:	load	 %7414
%7416:	sext	 %7415
%7417:	getelementptr	 %7402 %7416
%7418:	br	 if.end120

BASIC BLOCK if.end120
%7419:	phi	 %7417 %7403
%7420:	br	 while.cond121

BASIC BLOCK while.cond121
%7421:	phi	 %7404 %7421 %7462 %7421
%7422:	phi	 XXX %7422 %7464 %7422
%7423:	phi	 XXX %7438 %7536 XXX
%7424:	phi	 %7405 %7432 %7432 %7432
%7425:	ptrtoint	 %7419
%7426:	ptrtoint	 %7424
%7427:	sub	 %7425 %7426
%7428:	sext	 %7423
%7429:	icmp	 %7427 %7428
%7430:	br	 %7429 while.end211 while.body128

BASIC BLOCK while.body128
%7431:	sext	 %7423
%7432:	getelementptr	 %7424 %7431
%7433:	getelementptr	 %7432 XXX
%7434:	load	 %7433
%7435:	zext	 %7434
%7436:	getelementptr	 %7224 %7435
%7437:	load	 %7436
%7438:	zext	 %7437
%7439:	icmp	 %7438 XXX
%7440:	br	 %7439 if.end138 if.then137

BASIC BLOCK if.then137
%7441:	br	 while.cond121

BASIC BLOCK if.end138
%7442:	getelementptr	 %7432 XXX
%7443:	zext	 %7434
%7444:	getelementptr	 %7222 %7443
%7445:	load	 %7444
%7446:	icmp	 %7445 XXX
%7447:	br	 %7446 if.then143 if.end144

BASIC BLOCK if.then143
%7448:	br	 while.cond121

BASIC BLOCK if.end144
%7449:	getelementptr	 %7445 XXX XXX
%7450:	load	 %7449
%7451:	icmp	 %7450 XXX
%7452:	br	 %7451 if.end151 land.lhs.true147

BASIC BLOCK land.lhs.true147
%7453:	icmp	 %7442 %7402
%7454:	br	 %7453 if.end151 if.then150

BASIC BLOCK if.then150
%7455:	br	 if.end151

BASIC BLOCK if.end151
%7456:	phi	 %7445 %7421 %7421
%7457:	phi	 %7442 %7422 %7422
%7458:	getelementptr	 %7445 XXX XXX
%7459:	load	 %7458
%7460:	br	 while.cond153

BASIC BLOCK while.cond153
%7461:	phi	 %7442 %7481
%7462:	phi	 %7456 %7523
%7463:	phi	 %7445 %7515
%7464:	phi	 %7457 %7524
%7465:	phi	 %7459 %7528
%7466:	icmp	 %7461 text
%7467:	br	 %7466 while.end204 while.body156

BASIC BLOCK while.body156
%7468:	icmp	 %7226 XXX
%7469:	br	 %7468 cond.false163 cond.true158

BASIC BLOCK cond.true158
%7470:	getelementptr	 %7461 XXX
%7471:	load	 %7470
%7472:	zext	 %7471
%7473:	getelementptr	 %7226 %7472
%7474:	load	 %7473
%7475:	sext	 %7474
%7476:	br	 cond.end166

BASIC BLOCK cond.false163
%7477:	getelementptr	 %7461 XXX
%7478:	load	 %7477
%7479:	sext	 %7478
%7480:	br	 cond.end166

BASIC BLOCK cond.end166
%7481:	phi	 %7470 %7477
%7482:	phi	 %7475 %7479
%7483:	trunc	 %7482
%7484:	getelementptr	 %7463 XXX XXX
%7485:	load	 %7484
%7486:	br	 while.cond170

BASIC BLOCK while.cond170
%7487:	phi	 %7485 %7510
%7488:	icmp	 %7487 XXX
%7489:	br	 %7488 land.end178 land.rhs172

BASIC BLOCK land.rhs172
%7490:	zext	 %7483
%7491:	getelementptr	 %7487 XXX XXX
%7492:	load	 %7491
%7493:	zext	 %7492
%7494:	icmp	 %7490 %7493
%7495:	br	 land.end178

BASIC BLOCK land.end178
%7496:	phi	 XXX %7494
%7497:	br	 %7496 while.end190 while.body179

BASIC BLOCK while.body179
%7498:	zext	 %7483
%7499:	getelementptr	 %7487 XXX XXX
%7500:	load	 %7499
%7501:	zext	 %7500
%7502:	icmp	 %7498 %7501
%7503:	br	 %7502 if.else187 if.then185

BASIC BLOCK if.then185
%7504:	getelementptr	 %7487 XXX XXX
%7505:	load	 %7504
%7506:	br	 if.end189

BASIC BLOCK if.else187
%7507:	getelementptr	 %7487 XXX XXX
%7508:	load	 %7507
%7509:	br	 if.end189

BASIC BLOCK if.end189
%7510:	phi	 %7505 %7508
%7511:	br	 while.cond170

BASIC BLOCK while.end190
%7512:	icmp	 %7487 XXX
%7513:	br	 %7512 if.else201 if.then192

BASIC BLOCK if.then192
%7514:	getelementptr	 %7487 XXX XXX
%7515:	load	 %7514
%7516:	getelementptr	 %7515 XXX XXX
%7517:	load	 %7516
%7518:	icmp	 %7517 XXX
%7519:	br	 %7518 if.end200 land.lhs.true196

BASIC BLOCK land.lhs.true196
%7520:	icmp	 %7481 %7402
%7521:	br	 %7520 if.end200 if.then199

BASIC BLOCK if.then199
%7522:	br	 if.end200

BASIC BLOCK if.end200
%7523:	phi	 %7515 %7462 %7462
%7524:	phi	 %7481 %7464 %7464
%7525:	br	 if.end202

BASIC BLOCK if.else201
%7526:	br	 while.end204

BASIC BLOCK if.end202
%7527:	getelementptr	 %7515 XXX XXX
%7528:	load	 %7527
%7529:	br	 while.cond153

BASIC BLOCK while.end204
%7530:	icmp	 %7464 XXX
%7531:	br	 %7530 if.end207 if.then206

BASIC BLOCK if.then206
%7532:	br	 match

BASIC BLOCK if.end207
%7533:	icmp	 %7465 XXX
%7534:	br	 %7533 if.then209 if.end210

BASIC BLOCK if.then209
%7535:	br	 if.end210

BASIC BLOCK if.end210
%7536:	phi	 %7465 XXX
%7537:	br	 while.cond121

BASIC BLOCK while.end211
%7538:	icmp	 kwsmatch XXX
%7539:	br	 %7538 if.end219 if.then213

BASIC BLOCK if.then213
%7540:	getelementptr	 %7421 XXX XXX
%7541:	load	 %7540
%7542:	udiv	 %7541 XXX
%7543:	getelementptr	 kwsmatch XXX XXX
%7544:	store	 %7542 %7543
%7545:	getelementptr	 kwsmatch XXX XXX
%7546:	getelementptr	 %7545 XXX XXX
%7547:	store	 %7402 %7546
%7548:	getelementptr	 %7421 XXX XXX
%7549:	load	 %7548
%7550:	sext	 %7549
%7551:	getelementptr	 kwsmatch XXX XXX
%7552:	getelementptr	 %7551 XXX XXX
%7553:	store	 %7550 %7552
%7554:	br	 if.end219

BASIC BLOCK if.end219
%7555:	br	 return

BASIC BLOCK return
%7556:	phi	 XXX %7402 XXX
%7557:	ret	 %7556

FUNCTION Gcompile

BASIC BLOCK entry
%7558:	call	 XXX re_set_syntax
%7559:	load	 match_icase
%7560:	call	 XXX %7559 dfasyntax
%7561:	call	 pattern size regex re_compile_pattern
%7562:	icmp	 %7561 XXX
%7563:	br	 %7562 if.end if.then

BASIC BLOCK if.then
%7564:	call	 %7561 XXX fatal
%7565:	br	 if.end

BASIC BLOCK if.end
%7566:	call	 dfa_1 dfainit
%7567:	load	 match_words
%7568:	icmp	 %7567 XXX
%7569:	br	 %7568 lor.lhs.false if.then3

BASIC BLOCK lor.lhs.false
%7570:	load	 match_lines
%7571:	icmp	 %7570 XXX
%7572:	br	 %7571 if.else if.then3

BASIC BLOCK if.then3
%7573:	add	 size XXX
%7574:	call	 %7573 xmalloc
%7575:	call	 %7574 XXX strcpy
%7576:	load	 match_lines
%7577:	icmp	 %7576 XXX
%7578:	br	 %7577 if.end9 if.then7

BASIC BLOCK if.then7
%7579:	call	 %7574 XXX strcpy
%7580:	br	 if.end9

BASIC BLOCK if.end9
%7581:	load	 match_words
%7582:	icmp	 %7581 XXX
%7583:	br	 %7582 if.end13 if.then11

BASIC BLOCK if.then11
%7584:	call	 %7574 XXX strcpy
%7585:	br	 if.end13

BASIC BLOCK if.end13
%7586:	call	 %7574 strlen
%7587:	trunc	 %7586
%7588:	sext	 %7587
%7589:	getelementptr	 %7574 %7588
%7590:	call	 %7589 pattern size XXX XXX llvm.memcpy.p0i8.p0i8.i64
%7591:	sext	 %7587
%7592:	add	 %7591 size
%7593:	trunc	 %7592
%7594:	load	 match_words
%7595:	icmp	 %7594 XXX
%7596:	br	 %7595 if.end23 if.then19

BASIC BLOCK if.then19
%7597:	sext	 %7593
%7598:	getelementptr	 %7574 %7597
%7599:	call	 %7598 XXX strcpy
%7600:	br	 if.end23

BASIC BLOCK if.end23
%7601:	load	 match_lines
%7602:	icmp	 %7601 XXX
%7603:	br	 %7602 if.end29 if.then25

BASIC BLOCK if.then25
%7604:	sext	 %7593
%7605:	getelementptr	 %7574 %7604
%7606:	call	 %7605 XXX strcpy
%7607:	br	 if.end29

BASIC BLOCK if.end29
%7608:	sext	 %7593
%7609:	getelementptr	 %7574 %7608
%7610:	call	 %7609 strlen
%7611:	sext	 %7593
%7612:	add	 %7611 %7610
%7613:	trunc	 %7612
%7614:	sext	 %7613
%7615:	call	 %7574 %7614 dfa_1 XXX dfacomp
%7616:	br	 if.end37

BASIC BLOCK if.else
%7617:	call	 pattern size dfa_1 XXX dfacomp
%7618:	br	 if.end37

BASIC BLOCK if.end37
%7619:	call	 kwsmusts
%7620:	ret	

FUNCTION EGexecute

BASIC BLOCK entry
%7621:	alloca	 XXX
%7622:	alloca	 XXX
%7623:	getelementptr	 buf size
%7624:	br	 for.cond

BASIC BLOCK for.cond
%7625:	phi	 buf %7853
%7626:	phi	 buf %7852
%7627:	icmp	 %7626 %7623
%7628:	br	 %7627 for.end for.body

BASIC BLOCK for.body
%7629:	load	 kwset
%7630:	icmp	 %7629 XXX
%7631:	br	 %7630 if.else if.then

BASIC BLOCK if.then
%7632:	load	 kwset
%7633:	ptrtoint	 %7623
%7634:	ptrtoint	 %7625
%7635:	sub	 %7633 %7634
%7636:	call	 %7632 %7625 %7635 %7622 kwsexec
%7637:	icmp	 %7636 XXX
%7638:	br	 %7637 if.then2 if.end

BASIC BLOCK if.then2
%7639:	br	 failure

BASIC BLOCK if.end
%7640:	ptrtoint	 %7623
%7641:	ptrtoint	 %7636
%7642:	sub	 %7640 %7641
%7643:	call	 %7636 XXX %7642 memchr
%7644:	icmp	 %7643 XXX
%7645:	br	 %7644 if.then8 if.end9

BASIC BLOCK if.then8
%7646:	br	 if.end9

BASIC BLOCK if.end9
%7647:	phi	 %7643 %7623
%7648:	br	 while.cond

BASIC BLOCK while.cond
%7649:	phi	 %7636 %7659
%7650:	icmp	 %7649 buf
%7651:	br	 %7650 land.end land.rhs

BASIC BLOCK land.rhs
%7652:	getelementptr	 %7649 XXX
%7653:	load	 %7652
%7654:	sext	 %7653
%7655:	icmp	 %7654 XXX
%7656:	br	 land.end

BASIC BLOCK land.end
%7657:	phi	 XXX %7655
%7658:	br	 %7657 while.end while.body

BASIC BLOCK while.body
%7659:	getelementptr	 %7649 XXX
%7660:	br	 while.cond

BASIC BLOCK while.end
%7661:	load	 %7647
%7662:	getelementptr	 %7622 XXX XXX
%7663:	load	 %7662
%7664:	load	 lastexact
%7665:	icmp	 %7663 %7664
%7666:	br	 %7665 if.end16 if.then15

BASIC BLOCK if.then15
%7667:	br	 success

BASIC BLOCK if.end16
%7668:	call	 dfa_1 %7649 %7647 XXX XXX %7621 dfaexec
%7669:	icmp	 %7668 XXX
%7670:	br	 %7669 if.then19 if.end20

BASIC BLOCK if.then19
%7671:	store	 %7661 %7647
%7672:	br	 for.inc

BASIC BLOCK if.end20
%7673:	store	 %7661 %7647
%7674:	load	 %7621
%7675:	icmp	 %7674 XXX
%7676:	br	 %7675 if.then22 if.end23

BASIC BLOCK if.then22
%7677:	br	 success

BASIC BLOCK if.end23
%7678:	br	 if.end50

BASIC BLOCK if.else
%7679:	load	 %7623
%7680:	call	 dfa_1 %7625 %7623 XXX XXX %7621 dfaexec
%7681:	store	 %7679 %7623
%7682:	icmp	 %7680 XXX
%7683:	br	 %7682 if.then26 if.end27

BASIC BLOCK if.then26
%7684:	br	 failure

BASIC BLOCK if.end27
%7685:	ptrtoint	 %7623
%7686:	ptrtoint	 %7680
%7687:	sub	 %7685 %7686
%7688:	call	 %7680 XXX %7687 memchr
%7689:	icmp	 %7688 XXX
%7690:	br	 %7689 if.then33 if.end34

BASIC BLOCK if.then33
%7691:	br	 if.end34

BASIC BLOCK if.end34
%7692:	phi	 %7688 %7623
%7693:	br	 while.cond35

BASIC BLOCK while.cond35
%7694:	phi	 %7680 %7704
%7695:	icmp	 %7694 buf
%7696:	br	 %7695 land.end43 land.rhs38

BASIC BLOCK land.rhs38
%7697:	getelementptr	 %7694 XXX
%7698:	load	 %7697
%7699:	sext	 %7698
%7700:	icmp	 %7699 XXX
%7701:	br	 land.end43

BASIC BLOCK land.end43
%7702:	phi	 XXX %7700
%7703:	br	 %7702 while.end46 while.body44

BASIC BLOCK while.body44
%7704:	getelementptr	 %7694 XXX
%7705:	br	 while.cond35

BASIC BLOCK while.end46
%7706:	load	 %7621
%7707:	icmp	 %7706 XXX
%7708:	br	 %7707 if.then48 if.end49

BASIC BLOCK if.then48
%7709:	br	 success

BASIC BLOCK if.end49
%7710:	br	 if.end50

BASIC BLOCK if.end50
%7711:	phi	 %7649 %7694
%7712:	phi	 %7647 %7692
%7713:	load	 XXX
%7714:	and	 %7713 XXX
%7715:	store	 %7714 XXX
%7716:	ptrtoint	 %7712
%7717:	ptrtoint	 %7711
%7718:	sub	 %7716 %7717
%7719:	trunc	 %7718
%7720:	ptrtoint	 %7712
%7721:	ptrtoint	 %7711
%7722:	sub	 %7720 %7721
%7723:	trunc	 %7722
%7724:	call	 regex %7711 %7719 XXX %7723 EGexecute.regs re_search
%7725:	icmp	 %7724 XXX
%7726:	br	 %7725 if.end163 if.then62

BASIC BLOCK if.then62
%7727:	load	 XXX
%7728:	getelementptr	 %7727 XXX
%7729:	load	 %7728
%7730:	sub	 %7729 %7724
%7731:	load	 match_lines
%7732:	icmp	 %7731 XXX
%7733:	br	 %7732 land.lhs.true lor.lhs.false

BASIC BLOCK land.lhs.true
%7734:	load	 match_words
%7735:	icmp	 %7734 XXX
%7736:	br	 %7735 if.then74 lor.lhs.false

BASIC BLOCK lor.lhs.false
%7737:	load	 match_lines
%7738:	icmp	 %7737 XXX
%7739:	br	 %7738 if.end75 land.lhs.true67

BASIC BLOCK land.lhs.true67
%7740:	sext	 %7730
%7741:	ptrtoint	 %7712
%7742:	ptrtoint	 %7711
%7743:	sub	 %7741 %7742
%7744:	icmp	 %7740 %7743
%7745:	br	 %7744 if.end75 if.then74

BASIC BLOCK if.then74
%7746:	br	 success

BASIC BLOCK if.end75
%7747:	load	 match_words
%7748:	icmp	 %7747 XXX
%7749:	br	 %7748 if.end162 if.then77

BASIC BLOCK if.then77
%7750:	br	 while.cond78

BASIC BLOCK while.cond78
%7751:	phi	 %7724 %7846
%7752:	phi	 %7730 %7847
%7753:	icmp	 %7751 XXX
%7754:	br	 %7753 while.end161 while.body81

BASIC BLOCK while.body81
%7755:	icmp	 %7751 XXX
%7756:	br	 %7755 lor.lhs.false84 land.lhs.true100

BASIC BLOCK lor.lhs.false84
%7757:	sub	 %7751 XXX
%7758:	sext	 %7757
%7759:	getelementptr	 %7711 %7758
%7760:	load	 %7759
%7761:	sext	 %7760
%7762:	sext	 %7761
%7763:	call	 __ctype_b_loc
%7764:	load	 %7763
%7765:	getelementptr	 %7764 %7762
%7766:	load	 %7765
%7767:	zext	 %7766
%7768:	and	 %7767 XXX
%7769:	icmp	 %7768 XXX
%7770:	br	 %7769 lor.lhs.false93 if.end125

BASIC BLOCK lor.lhs.false93
%7771:	sub	 %7751 XXX
%7772:	sext	 %7771
%7773:	getelementptr	 %7711 %7772
%7774:	load	 %7773
%7775:	sext	 %7774
%7776:	icmp	 %7775 XXX
%7777:	br	 %7776 land.lhs.true100 if.end125

BASIC BLOCK land.lhs.true100
%7778:	sext	 %7752
%7779:	ptrtoint	 %7712
%7780:	ptrtoint	 %7711
%7781:	sub	 %7779 %7780
%7782:	icmp	 %7778 %7781
%7783:	br	 %7782 lor.lhs.false107 if.then124

BASIC BLOCK lor.lhs.false107
%7784:	add	 %7751 %7752
%7785:	sext	 %7784
%7786:	getelementptr	 %7711 %7785
%7787:	load	 %7786
%7788:	sext	 %7787
%7789:	sext	 %7788
%7790:	call	 __ctype_b_loc
%7791:	load	 %7790
%7792:	getelementptr	 %7791 %7789
%7793:	load	 %7792
%7794:	zext	 %7793
%7795:	and	 %7794 XXX
%7796:	icmp	 %7795 XXX
%7797:	br	 %7796 lor.lhs.false117 if.end125

BASIC BLOCK lor.lhs.false117
%7798:	add	 %7751 %7752
%7799:	sext	 %7798
%7800:	getelementptr	 %7711 %7799
%7801:	load	 %7800
%7802:	sext	 %7801
%7803:	icmp	 %7802 XXX
%7804:	br	 %7803 if.then124 if.end125

BASIC BLOCK if.then124
%7805:	br	 success

BASIC BLOCK if.end125
%7806:	icmp	 %7752 XXX
%7807:	br	 %7806 if.end133 if.then128

BASIC BLOCK if.then128
%7808:	add	 %7752 XXX
%7809:	load	 XXX
%7810:	and	 %7809 XXX
%7811:	or	 %7810 XXX
%7812:	store	 %7811 XXX
%7813:	add	 %7751 %7808
%7814:	call	 regex %7711 %7813 %7751 EGexecute.regs re_match
%7815:	br	 if.end133

BASIC BLOCK if.end133
%7816:	phi	 %7814 %7752
%7817:	icmp	 %7816 XXX
%7818:	br	 %7817 if.end160 if.then136

BASIC BLOCK if.then136
%7819:	sext	 %7751
%7820:	ptrtoint	 %7712
%7821:	ptrtoint	 %7711
%7822:	sub	 %7820 %7821
%7823:	icmp	 %7819 %7822
%7824:	br	 %7823 if.end144 if.then143

BASIC BLOCK if.then143
%7825:	br	 while.end161

BASIC BLOCK if.end144
%7826:	add	 %7751 XXX
%7827:	load	 XXX
%7828:	and	 %7827 XXX
%7829:	store	 %7828 XXX
%7830:	ptrtoint	 %7712
%7831:	ptrtoint	 %7711
%7832:	sub	 %7830 %7831
%7833:	trunc	 %7832
%7834:	ptrtoint	 %7712
%7835:	ptrtoint	 %7711
%7836:	sub	 %7834 %7835
%7837:	sext	 %7826
%7838:	sub	 %7836 %7837
%7839:	trunc	 %7838
%7840:	call	 regex %7711 %7833 %7826 %7839 EGexecute.regs re_search
%7841:	load	 XXX
%7842:	getelementptr	 %7841 XXX
%7843:	load	 %7842
%7844:	sub	 %7843 %7840
%7845:	br	 if.end160

BASIC BLOCK if.end160
%7846:	phi	 %7840 %7751
%7847:	phi	 %7844 %7816
%7848:	br	 while.cond78

BASIC BLOCK while.end161
%7849:	br	 if.end162

BASIC BLOCK if.end162
%7850:	br	 if.end163

BASIC BLOCK if.end163
%7851:	br	 for.inc

BASIC BLOCK for.inc
%7852:	phi	 %7712 %7647
%7853:	getelementptr	 %7852 XXX
%7854:	br	 for.cond

BASIC BLOCK for.end
%7855:	br	 failure

BASIC BLOCK failure
%7856:	br	 return

BASIC BLOCK success
%7857:	phi	 %7649 %7711 %7711 %7649 %7694
%7858:	phi	 %7647 %7712 %7712 %7647 %7692
%7859:	icmp	 %7858 %7623
%7860:	br	 %7859 cond.false cond.true

BASIC BLOCK cond.true
%7861:	getelementptr	 %7858 XXX
%7862:	br	 cond.end

BASIC BLOCK cond.false
%7863:	br	 cond.end

BASIC BLOCK cond.end
%7864:	phi	 %7861 %7858
%7865:	store	 %7864 endp
%7866:	br	 return

BASIC BLOCK return
%7867:	phi	 %7857 XXX
%7868:	ret	 %7867

FUNCTION Ecompile

BASIC BLOCK entry
%7869:	load	 matcher
%7870:	call	 %7869 XXX strcmp
%7871:	icmp	 %7870 XXX
%7872:	br	 %7871 if.else if.then

BASIC BLOCK if.then
%7873:	call	 XXX re_set_syntax
%7874:	load	 match_icase
%7875:	call	 XXX %7874 dfasyntax
%7876:	br	 if.end8

BASIC BLOCK if.else
%7877:	load	 matcher
%7878:	call	 %7877 XXX strcmp
%7879:	icmp	 %7878 XXX
%7880:	br	 %7879 if.else6 if.then4

BASIC BLOCK if.then4
%7881:	call	 XXX re_set_syntax
%7882:	load	 match_icase
%7883:	call	 XXX %7882 dfasyntax
%7884:	br	 if.end

BASIC BLOCK if.else6
%7885:	call	 XXX re_set_syntax
%7886:	load	 match_icase
%7887:	call	 XXX %7886 dfasyntax
%7888:	br	 if.end

BASIC BLOCK if.end
%7889:	br	 if.end8

BASIC BLOCK if.end8
%7890:	call	 pattern size regex re_compile_pattern
%7891:	icmp	 %7890 XXX
%7892:	br	 %7891 if.end12 if.then11

BASIC BLOCK if.then11
%7893:	call	 %7890 XXX fatal
%7894:	br	 if.end12

BASIC BLOCK if.end12
%7895:	call	 dfa_1 dfainit
%7896:	load	 match_words
%7897:	icmp	 %7896 XXX
%7898:	br	 %7897 lor.lhs.false if.then14

BASIC BLOCK lor.lhs.false
%7899:	load	 match_lines
%7900:	icmp	 %7899 XXX
%7901:	br	 %7900 if.else48 if.then14

BASIC BLOCK if.then14
%7902:	add	 size XXX
%7903:	call	 %7902 xmalloc
%7904:	call	 %7903 XXX strcpy
%7905:	load	 match_lines
%7906:	icmp	 %7905 XXX
%7907:	br	 %7906 if.end20 if.then18

BASIC BLOCK if.then18
%7908:	call	 %7903 XXX strcpy
%7909:	br	 if.end20

BASIC BLOCK if.end20
%7910:	load	 match_words
%7911:	icmp	 %7910 XXX
%7912:	br	 %7911 if.end24 if.then22

BASIC BLOCK if.then22
%7913:	call	 %7903 XXX strcpy
%7914:	br	 if.end24

BASIC BLOCK if.end24
%7915:	call	 %7903 strlen
%7916:	trunc	 %7915
%7917:	sext	 %7916
%7918:	getelementptr	 %7903 %7917
%7919:	call	 %7918 pattern size XXX XXX llvm.memcpy.p0i8.p0i8.i64
%7920:	sext	 %7916
%7921:	add	 %7920 size
%7922:	trunc	 %7921
%7923:	load	 match_words
%7924:	icmp	 %7923 XXX
%7925:	br	 %7924 if.end34 if.then30

BASIC BLOCK if.then30
%7926:	sext	 %7922
%7927:	getelementptr	 %7903 %7926
%7928:	call	 %7927 XXX strcpy
%7929:	br	 if.end34

BASIC BLOCK if.end34
%7930:	load	 match_lines
%7931:	icmp	 %7930 XXX
%7932:	br	 %7931 if.end40 if.then36

BASIC BLOCK if.then36
%7933:	sext	 %7922
%7934:	getelementptr	 %7903 %7933
%7935:	call	 %7934 XXX strcpy
%7936:	br	 if.end40

BASIC BLOCK if.end40
%7937:	sext	 %7922
%7938:	getelementptr	 %7903 %7937
%7939:	call	 %7938 strlen
%7940:	sext	 %7922
%7941:	add	 %7940 %7939
%7942:	trunc	 %7941
%7943:	sext	 %7942
%7944:	call	 %7903 %7943 dfa_1 XXX dfacomp
%7945:	br	 if.end49

BASIC BLOCK if.else48
%7946:	call	 pattern size dfa_1 XXX dfacomp
%7947:	br	 if.end49

BASIC BLOCK if.end49
%7948:	call	 kwsmusts
%7949:	ret	

FUNCTION Fcompile

BASIC BLOCK entry
%7950:	call	 kwsinit
%7951:	br	 do.body

BASIC BLOCK do.body
%7952:	phi	 pattern %7981
%7953:	br	 for.cond

BASIC BLOCK for.cond
%7954:	phi	 %7952 %7965
%7955:	getelementptr	 pattern size
%7956:	icmp	 %7954 %7955
%7957:	br	 %7956 land.end land.rhs

BASIC BLOCK land.rhs
%7958:	load	 %7954
%7959:	sext	 %7958
%7960:	icmp	 %7959 XXX
%7961:	br	 land.end

BASIC BLOCK land.end
%7962:	phi	 XXX %7960
%7963:	br	 %7962 for.end for.body

BASIC BLOCK for.body
%7964:	br	 for.inc

BASIC BLOCK for.inc
%7965:	getelementptr	 %7954 XXX
%7966:	br	 for.cond

BASIC BLOCK for.end
%7967:	load	 kwset
%7968:	ptrtoint	 %7954
%7969:	ptrtoint	 %7952
%7970:	sub	 %7968 %7969
%7971:	call	 %7967 %7952 %7970 kwsincr
%7972:	icmp	 %7971 XXX
%7973:	br	 %7972 if.end if.then

BASIC BLOCK if.then
%7974:	call	 %7971 XXX fatal
%7975:	br	 if.end

BASIC BLOCK if.end
%7976:	getelementptr	 pattern size
%7977:	icmp	 %7954 %7976
%7978:	br	 %7977 if.end10 if.then8

BASIC BLOCK if.then8
%7979:	getelementptr	 %7954 XXX
%7980:	br	 if.end10

BASIC BLOCK if.end10
%7981:	phi	 %7979 %7954
%7982:	br	 do.cond

BASIC BLOCK do.cond
%7983:	getelementptr	 pattern size
%7984:	icmp	 %7981 %7983
%7985:	br	 %7984 do.end do.body

BASIC BLOCK do.end
%7986:	load	 kwset
%7987:	call	 %7986 kwsprep
%7988:	icmp	 %7987 XXX
%7989:	br	 %7988 if.end18 if.then17

BASIC BLOCK if.then17
%7990:	call	 %7987 XXX fatal
%7991:	br	 if.end18

BASIC BLOCK if.end18
%7992:	ret	

FUNCTION Fexecute

BASIC BLOCK entry
%7993:	alloca	 XXX
%7994:	br	 for.cond

BASIC BLOCK for.cond
%7995:	phi	 buf %8099
%7996:	getelementptr	 buf size
%7997:	icmp	 %7995 %7996
%7998:	br	 %7997 for.end70 for.body

BASIC BLOCK for.body
%7999:	load	 kwset
%8000:	getelementptr	 buf size
%8001:	ptrtoint	 %8000
%8002:	ptrtoint	 %7995
%8003:	sub	 %8001 %8002
%8004:	call	 %7999 %7995 %8003 %7993 kwsexec
%8005:	icmp	 %8004 XXX
%8006:	br	 %8005 if.then if.end

BASIC BLOCK if.then
%8007:	br	 return

BASIC BLOCK if.end
%8008:	getelementptr	 %7993 XXX XXX
%8009:	getelementptr	 %8008 XXX XXX
%8010:	load	 %8009
%8011:	load	 match_lines
%8012:	icmp	 %8011 XXX
%8013:	br	 %8012 if.else if.then4

BASIC BLOCK if.then4
%8014:	icmp	 %8004 buf
%8015:	br	 %8014 if.end10 land.lhs.true

BASIC BLOCK land.lhs.true
%8016:	getelementptr	 %8004 XXX
%8017:	load	 %8016
%8018:	sext	 %8017
%8019:	icmp	 %8018 XXX
%8020:	br	 %8019 if.end10 if.then9

BASIC BLOCK if.then9
%8021:	br	 for.inc

BASIC BLOCK if.end10
%8022:	getelementptr	 %8004 %8010
%8023:	getelementptr	 buf size
%8024:	icmp	 %8022 %8023
%8025:	br	 %8024 if.end21 land.lhs.true15

BASIC BLOCK land.lhs.true15
%8026:	getelementptr	 %8004 %8010
%8027:	load	 %8026
%8028:	sext	 %8027
%8029:	icmp	 %8028 XXX
%8030:	br	 %8029 if.end21 if.then20

BASIC BLOCK if.then20
%8031:	br	 for.inc

BASIC BLOCK if.end21
%8032:	br	 success

BASIC BLOCK if.else
%8033:	load	 match_words
%8034:	icmp	 %8033 XXX
%8035:	br	 %8034 if.else67 if.then23

BASIC BLOCK if.then23
%8036:	br	 for.cond24

BASIC BLOCK for.cond24
%8037:	phi	 %8004 %8088
%8038:	phi	 %8010 %8091
%8039:	icmp	 %8038 XXX
%8040:	br	 %8039 land.end land.rhs

BASIC BLOCK land.rhs
%8041:	icmp	 %8037 XXX
%8042:	br	 land.end

BASIC BLOCK land.end
%8043:	phi	 XXX %8041
%8044:	br	 %8043 for.end for.body27

BASIC BLOCK for.body27
%8045:	icmp	 %8037 buf
%8046:	br	 %8045 if.end42 land.lhs.true30

BASIC BLOCK land.lhs.true30
%8047:	getelementptr	 %8037 XXX
%8048:	load	 %8047
%8049:	zext	 %8048
%8050:	sext	 %8049
%8051:	call	 __ctype_b_loc
%8052:	load	 %8051
%8053:	getelementptr	 %8052 %8050
%8054:	load	 %8053
%8055:	zext	 %8054
%8056:	and	 %8055 XXX
%8057:	icmp	 %8056 XXX
%8058:	br	 %8057 lor.lhs.false if.then41

BASIC BLOCK lor.lhs.false
%8059:	getelementptr	 %8037 XXX
%8060:	load	 %8059
%8061:	zext	 %8060
%8062:	icmp	 %8061 XXX
%8063:	br	 %8062 if.end42 if.then41

BASIC BLOCK if.then41
%8064:	br	 for.end

BASIC BLOCK if.end42
%8065:	getelementptr	 %8037 %8038
%8066:	getelementptr	 buf size
%8067:	icmp	 %8065 %8066
%8068:	br	 %8067 if.else65 land.lhs.true47

BASIC BLOCK land.lhs.true47
%8069:	getelementptr	 %8037 %8038
%8070:	load	 %8069
%8071:	zext	 %8070
%8072:	sext	 %8071
%8073:	call	 __ctype_b_loc
%8074:	load	 %8073
%8075:	getelementptr	 %8074 %8072
%8076:	load	 %8075
%8077:	zext	 %8076
%8078:	and	 %8077 XXX
%8079:	icmp	 %8078 XXX
%8080:	br	 %8079 lor.lhs.false56 if.then61

BASIC BLOCK lor.lhs.false56
%8081:	getelementptr	 %8037 %8038
%8082:	load	 %8081
%8083:	zext	 %8082
%8084:	icmp	 %8083 XXX
%8085:	br	 %8084 if.else65 if.then61

BASIC BLOCK if.then61
%8086:	load	 kwset
%8087:	add	 %8038 XXX
%8088:	call	 %8086 %8004 %8087 %7993 kwsexec
%8089:	getelementptr	 %7993 XXX XXX
%8090:	getelementptr	 %8089 XXX XXX
%8091:	load	 %8090
%8092:	br	 if.end66

BASIC BLOCK if.else65
%8093:	br	 success

BASIC BLOCK if.end66
%8094:	br	 for.cond24

BASIC BLOCK for.end
%8095:	br	 if.end68

BASIC BLOCK if.else67
%8096:	br	 success

BASIC BLOCK if.end68
%8097:	br	 if.end69

BASIC BLOCK if.end69
%8098:	br	 for.inc

BASIC BLOCK for.inc
%8099:	getelementptr	 %8004 XXX
%8100:	br	 for.cond

BASIC BLOCK for.end70
%8101:	br	 return

BASIC BLOCK success
%8102:	phi	 %8010 %8038 %8010
%8103:	getelementptr	 %8004 %8102
%8104:	getelementptr	 buf size
%8105:	getelementptr	 %8004 %8102
%8106:	ptrtoint	 %8104
%8107:	ptrtoint	 %8105
%8108:	sub	 %8106 %8107
%8109:	call	 %8103 XXX %8108 memchr
%8110:	icmp	 %8109 XXX
%8111:	br	 %8110 if.else82 if.then80

BASIC BLOCK if.then80
%8112:	getelementptr	 %8109 XXX
%8113:	br	 if.end84

BASIC BLOCK if.else82
%8114:	getelementptr	 buf size
%8115:	br	 if.end84

BASIC BLOCK if.end84
%8116:	phi	 %8112 %8114
%8117:	store	 %8116 endp
%8118:	br	 while.cond

BASIC BLOCK while.cond
%8119:	phi	 %8004 %8129
%8120:	icmp	 %8119 buf
%8121:	br	 %8120 land.end92 land.rhs87

BASIC BLOCK land.rhs87
%8122:	getelementptr	 %8119 XXX
%8123:	load	 %8122
%8124:	sext	 %8123
%8125:	icmp	 %8124 XXX
%8126:	br	 land.end92

BASIC BLOCK land.end92
%8127:	phi	 XXX %8125
%8128:	br	 %8127 while.end while.body

BASIC BLOCK while.body
%8129:	getelementptr	 %8119 XXX
%8130:	br	 while.cond

BASIC BLOCK while.end
%8131:	br	 return

BASIC BLOCK return
%8132:	phi	 %8119 XXX XXX
%8133:	ret	 %8132

FUNCTION btowc

BASIC BLOCK entry
%8134:	icmp	 c XXX
%8135:	br	 %8134 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%8136:	icmp	 c XXX
%8137:	br	 %8136 if.else if.then

BASIC BLOCK if.then
%8138:	br	 return

BASIC BLOCK if.else
%8139:	br	 return

BASIC BLOCK return
%8140:	phi	 XXX c
%8141:	ret	 %8140

FUNCTION re_set_syntax

BASIC BLOCK entry
%8142:	load	 re_syntax_options
%8143:	store	 syntax re_syntax_options
%8144:	ret	 %8142

FUNCTION re_compile_fastmap

BASIC BLOCK entry
%8145:	alloca	 XXX
%8146:	getelementptr	 bufp XXX XXX
%8147:	load	 %8146
%8148:	getelementptr	 bufp XXX XXX
%8149:	load	 %8148
%8150:	getelementptr	 bufp XXX XXX
%8151:	load	 %8150
%8152:	getelementptr	 %8149 %8151
%8153:	br	 do.body

BASIC BLOCK do.body
%8154:	alloca	 XXX
%8155:	bitcast	 %8154
%8156:	getelementptr	 %8145 XXX XXX
%8157:	store	 %8155 %8156
%8158:	getelementptr	 %8145 XXX XXX
%8159:	load	 %8158
%8160:	icmp	 %8159 XXX
%8161:	br	 %8160 if.end if.then

BASIC BLOCK if.then
%8162:	br	 return

BASIC BLOCK if.end
%8163:	getelementptr	 %8145 XXX XXX
%8164:	store	 XXX %8163
%8165:	getelementptr	 %8145 XXX XXX
%8166:	store	 XXX %8165
%8167:	br	 do.end

BASIC BLOCK do.end
%8168:	call	 %8147 XXX XXX XXX XXX llvm.memset.p0i8.i64
%8169:	getelementptr	 bufp XXX XXX
%8170:	load	 %8169
%8171:	and	 %8170 XXX
%8172:	or	 %8171 XXX
%8173:	store	 %8172 %8169
%8174:	getelementptr	 bufp XXX XXX
%8175:	load	 %8174
%8176:	and	 %8175 XXX
%8177:	store	 %8176 %8174
%8178:	br	 while.body

BASIC BLOCK while.body
%8179:	phi	 %8149 %8213 %8555 %8553 %8531 %8546 %8381 %8381 %8409 %8216 %8152
%8180:	phi	 XXX XXX %8180 %8180 %8180 %8180 %8180 %8180 %8180 %8180 XXX
%8181:	phi	 XXX %8181 %8181 %8181 %8532 %8181 %8181 %8181 %8181 %8181 %8181
%8182:	icmp	 %8179 %8152
%8183:	br	 %8182 lor.lhs.false if.then8

BASIC BLOCK lor.lhs.false
%8184:	load	 %8179
%8185:	zext	 %8184
%8186:	icmp	 %8185 XXX
%8187:	br	 %8186 if.end22 if.then8

BASIC BLOCK if.then8
%8188:	getelementptr	 %8145 XXX XXX
%8189:	load	 %8188
%8190:	icmp	 %8189 XXX
%8191:	br	 %8190 if.then12 if.else

BASIC BLOCK if.then12
%8192:	sext	 %8180
%8193:	getelementptr	 bufp XXX XXX
%8194:	load	 %8193
%8195:	and	 %8194 XXX
%8196:	zext	 %8195
%8197:	or	 %8196 %8192
%8198:	trunc	 %8197
%8199:	load	 %8193
%8200:	and	 %8198 XXX
%8201:	and	 %8199 XXX
%8202:	or	 %8201 %8200
%8203:	store	 %8202 %8193
%8204:	getelementptr	 %8145 XXX XXX
%8205:	load	 %8204
%8206:	add	 %8205 XXX
%8207:	store	 %8206 %8204
%8208:	zext	 %8206
%8209:	getelementptr	 %8145 XXX XXX
%8210:	load	 %8209
%8211:	getelementptr	 %8210 %8208
%8212:	bitcast	 %8211
%8213:	load	 %8212
%8214:	br	 while.body

BASIC BLOCK if.else
%8215:	br	 while.end

BASIC BLOCK if.end22
%8216:	getelementptr	 %8179 XXX
%8217:	load	 %8179
%8218:	zext	 %8217
%8219:	switch	 %8218 sw.default XXX sw.bb XXX sw.bb28 XXX sw.bb32 XXX sw.bb45 XXX sw.bb79 XXX sw.bb96 XXX sw.bb113 XXX sw.bb139 XXX sw.bb139 XXX sw.bb139 XXX sw.bb139 XXX sw.bb139 XXX sw.bb139 XXX sw.bb139 XXX sw.bb139 XXX sw.bb139 XXX sw.bb139 XXX sw.bb140 XXX sw.bb140 XXX sw.bb140 XXX sw.bb140 XXX sw.bb140 XXX sw.bb140 XXX sw.bb194 XXX sw.bb194 XXX sw.bb269 XXX sw.bb287 XXX sw.bb289 XXX sw.bb289

BASIC BLOCK sw.bb
%8220:	getelementptr	 bufp XXX XXX
%8221:	load	 %8220
%8222:	and	 %8221 XXX
%8223:	or	 %8222 XXX
%8224:	store	 %8223 %8220
%8225:	br	 done

BASIC BLOCK sw.bb28
%8226:	getelementptr	 %8216 XXX
%8227:	load	 %8226
%8228:	zext	 %8227
%8229:	getelementptr	 %8147 %8228
%8230:	store	 XXX %8229
%8231:	br	 sw.epilog

BASIC BLOCK sw.bb32
%8232:	getelementptr	 %8216 XXX
%8233:	load	 %8216
%8234:	zext	 %8233
%8235:	mul	 %8234 XXX
%8236:	sub	 %8235 XXX
%8237:	br	 for.cond

BASIC BLOCK for.cond
%8238:	phi	 %8236 %8256
%8239:	icmp	 %8238 XXX
%8240:	br	 %8239 for.end for.body

BASIC BLOCK for.body
%8241:	sdiv	 %8238 XXX
%8242:	sext	 %8241
%8243:	getelementptr	 %8232 %8242
%8244:	load	 %8243
%8245:	zext	 %8244
%8246:	srem	 %8238 XXX
%8247:	shl	 XXX %8246
%8248:	and	 %8245 %8247
%8249:	icmp	 %8248 XXX
%8250:	br	 %8249 if.end43 if.then40

BASIC BLOCK if.then40
%8251:	sext	 %8238
%8252:	getelementptr	 %8147 %8251
%8253:	store	 XXX %8252
%8254:	br	 if.end43

BASIC BLOCK if.end43
%8255:	br	 for.inc

BASIC BLOCK for.inc
%8256:	add	 %8238 XXX
%8257:	br	 for.cond

BASIC BLOCK for.end
%8258:	br	 sw.epilog

BASIC BLOCK sw.bb45
%8259:	load	 %8216
%8260:	zext	 %8259
%8261:	mul	 %8260 XXX
%8262:	br	 for.cond48

BASIC BLOCK for.cond48
%8263:	phi	 %8261 %8270
%8264:	icmp	 %8263 XXX
%8265:	br	 %8264 for.end55 for.body51

BASIC BLOCK for.body51
%8266:	sext	 %8263
%8267:	getelementptr	 %8147 %8266
%8268:	store	 XXX %8267
%8269:	br	 for.inc54

BASIC BLOCK for.inc54
%8270:	add	 %8263 XXX
%8271:	br	 for.cond48

BASIC BLOCK for.end55
%8272:	getelementptr	 %8216 XXX
%8273:	load	 %8216
%8274:	zext	 %8273
%8275:	mul	 %8274 XXX
%8276:	sub	 %8275 XXX
%8277:	br	 for.cond60

BASIC BLOCK for.cond60
%8278:	phi	 %8276 %8296
%8279:	icmp	 %8278 XXX
%8280:	br	 %8279 for.end78 for.body63

BASIC BLOCK for.body63
%8281:	sdiv	 %8278 XXX
%8282:	sext	 %8281
%8283:	getelementptr	 %8272 %8282
%8284:	load	 %8283
%8285:	zext	 %8284
%8286:	srem	 %8278 XXX
%8287:	shl	 XXX %8286
%8288:	and	 %8285 %8287
%8289:	icmp	 %8288 XXX
%8290:	br	 %8289 if.then72 if.end75

BASIC BLOCK if.then72
%8291:	sext	 %8278
%8292:	getelementptr	 %8147 %8291
%8293:	store	 XXX %8292
%8294:	br	 if.end75

BASIC BLOCK if.end75
%8295:	br	 for.inc76

BASIC BLOCK for.inc76
%8296:	add	 %8278 XXX
%8297:	br	 for.cond60

BASIC BLOCK for.end78
%8298:	br	 sw.epilog

BASIC BLOCK sw.bb79
%8299:	br	 for.cond80

BASIC BLOCK for.cond80
%8300:	phi	 XXX %8314
%8301:	icmp	 %8300 XXX
%8302:	br	 %8301 for.end95 for.body83

BASIC BLOCK for.body83
%8303:	sext	 %8300
%8304:	getelementptr	 re_syntax_table XXX %8303
%8305:	load	 %8304
%8306:	sext	 %8305
%8307:	icmp	 %8306 XXX
%8308:	br	 %8307 if.end92 if.then89

BASIC BLOCK if.then89
%8309:	sext	 %8300
%8310:	getelementptr	 %8147 %8309
%8311:	store	 XXX %8310
%8312:	br	 if.end92

BASIC BLOCK if.end92
%8313:	br	 for.inc93

BASIC BLOCK for.inc93
%8314:	add	 %8300 XXX
%8315:	br	 for.cond80

BASIC BLOCK for.end95
%8316:	br	 sw.epilog

BASIC BLOCK sw.bb96
%8317:	br	 for.cond97

BASIC BLOCK for.cond97
%8318:	phi	 XXX %8332
%8319:	icmp	 %8318 XXX
%8320:	br	 %8319 for.end112 for.body100

BASIC BLOCK for.body100
%8321:	sext	 %8318
%8322:	getelementptr	 re_syntax_table XXX %8321
%8323:	load	 %8322
%8324:	sext	 %8323
%8325:	icmp	 %8324 XXX
%8326:	br	 %8325 if.end109 if.then106

BASIC BLOCK if.then106
%8327:	sext	 %8318
%8328:	getelementptr	 %8147 %8327
%8329:	store	 XXX %8328
%8330:	br	 if.end109

BASIC BLOCK if.end109
%8331:	br	 for.inc110

BASIC BLOCK for.inc110
%8332:	add	 %8318 XXX
%8333:	br	 for.cond97

BASIC BLOCK for.end112
%8334:	br	 sw.epilog

BASIC BLOCK sw.bb113
%8335:	getelementptr	 %8147 XXX
%8336:	load	 %8335
%8337:	sext	 %8336
%8338:	br	 for.cond116

BASIC BLOCK for.cond116
%8339:	phi	 XXX %8346
%8340:	icmp	 %8339 XXX
%8341:	br	 %8340 for.end124 for.body119

BASIC BLOCK for.body119
%8342:	sext	 %8339
%8343:	getelementptr	 %8147 %8342
%8344:	store	 XXX %8343
%8345:	br	 for.inc122

BASIC BLOCK for.inc122
%8346:	add	 %8339 XXX
%8347:	br	 for.cond116

BASIC BLOCK for.end124
%8348:	getelementptr	 bufp XXX XXX
%8349:	load	 %8348
%8350:	and	 %8349 XXX
%8351:	icmp	 %8350 XXX
%8352:	br	 %8351 if.then127 if.else130

BASIC BLOCK if.then127
%8353:	trunc	 %8337
%8354:	getelementptr	 %8147 XXX
%8355:	store	 %8353 %8354
%8356:	br	 if.end138

BASIC BLOCK if.else130
%8357:	getelementptr	 bufp XXX XXX
%8358:	load	 %8357
%8359:	and	 %8358 XXX
%8360:	zext	 %8359
%8361:	icmp	 %8360 XXX
%8362:	br	 %8361 if.end137 if.then136

BASIC BLOCK if.then136
%8363:	br	 done

BASIC BLOCK if.end137
%8364:	br	 if.end138

BASIC BLOCK if.end138
%8365:	br	 sw.epilog

BASIC BLOCK sw.bb139
%8366:	br	 while.body

BASIC BLOCK sw.bb140
%8367:	br	 do.body141

BASIC BLOCK do.body141
%8368:	br	 do.body142

BASIC BLOCK do.body142
%8369:	load	 %8216
%8370:	zext	 %8369
%8371:	and	 %8370 XXX
%8372:	getelementptr	 %8216 XXX
%8373:	load	 %8372
%8374:	sext	 %8373
%8375:	shl	 %8374 XXX
%8376:	add	 %8371 %8375
%8377:	br	 do.end148

BASIC BLOCK do.end148
%8378:	getelementptr	 %8216 XXX
%8379:	br	 do.end150

BASIC BLOCK do.end150
%8380:	sext	 %8376
%8381:	getelementptr	 %8378 %8380
%8382:	icmp	 %8376 XXX
%8383:	br	 %8382 if.end155 if.then154

BASIC BLOCK if.then154
%8384:	br	 while.body

BASIC BLOCK if.end155
%8385:	load	 %8381
%8386:	zext	 %8385
%8387:	icmp	 %8386 XXX
%8388:	br	 %8387 if.end163 land.lhs.true

BASIC BLOCK land.lhs.true
%8389:	load	 %8381
%8390:	zext	 %8389
%8391:	icmp	 %8390 XXX
%8392:	br	 %8391 if.end163 if.then162

BASIC BLOCK if.then162
%8393:	br	 while.body

BASIC BLOCK if.end163
%8394:	getelementptr	 %8381 XXX
%8395:	br	 do.body165

BASIC BLOCK do.body165
%8396:	br	 do.body166

BASIC BLOCK do.body166
%8397:	load	 %8394
%8398:	zext	 %8397
%8399:	and	 %8398 XXX
%8400:	getelementptr	 %8394 XXX
%8401:	load	 %8400
%8402:	sext	 %8401
%8403:	shl	 %8402 XXX
%8404:	add	 %8399 %8403
%8405:	br	 do.end173

BASIC BLOCK do.end173
%8406:	getelementptr	 %8394 XXX
%8407:	br	 do.end175

BASIC BLOCK do.end175
%8408:	sext	 %8404
%8409:	getelementptr	 %8406 %8408
%8410:	getelementptr	 %8145 XXX XXX
%8411:	load	 %8410
%8412:	icmp	 %8411 XXX
%8413:	br	 %8412 land.lhs.true181 if.end193

BASIC BLOCK land.lhs.true181
%8414:	getelementptr	 %8145 XXX XXX
%8415:	load	 %8414
%8416:	sub	 %8415 XXX
%8417:	zext	 %8416
%8418:	getelementptr	 %8145 XXX XXX
%8419:	load	 %8418
%8420:	getelementptr	 %8419 %8417
%8421:	bitcast	 %8420
%8422:	load	 %8421
%8423:	icmp	 %8422 %8409
%8424:	br	 %8423 if.end193 if.then190

BASIC BLOCK if.then190
%8425:	getelementptr	 %8145 XXX XXX
%8426:	load	 %8425
%8427:	add	 %8426 XXX
%8428:	store	 %8427 %8425
%8429:	br	 if.end193

BASIC BLOCK if.end193
%8430:	br	 while.body

BASIC BLOCK sw.bb194
%8431:	br	 handle_on_failure_jump

BASIC BLOCK handle_on_failure_jump
%8432:	phi	 %8550 %8216
%8433:	phi	 XXX %8181
%8434:	br	 do.body195

BASIC BLOCK do.body195
%8435:	br	 do.body196

BASIC BLOCK do.body196
%8436:	load	 %8432
%8437:	zext	 %8436
%8438:	and	 %8437 XXX
%8439:	getelementptr	 %8432 XXX
%8440:	load	 %8439
%8441:	sext	 %8440
%8442:	shl	 %8441 XXX
%8443:	add	 %8438 %8442
%8444:	br	 do.end203

BASIC BLOCK do.end203
%8445:	getelementptr	 %8432 XXX
%8446:	br	 do.end205

BASIC BLOCK do.end205
%8447:	sext	 %8443
%8448:	getelementptr	 %8445 %8447
%8449:	icmp	 %8448 %8152
%8450:	br	 %8449 if.else249 if.then210

BASIC BLOCK if.then210
%8451:	getelementptr	 %8145 XXX XXX
%8452:	load	 %8451
%8453:	getelementptr	 %8145 XXX XXX
%8454:	load	 %8453
%8455:	icmp	 %8452 %8454
%8456:	br	 %8455 cond.false238 land.lhs.true215

BASIC BLOCK land.lhs.true215
%8457:	getelementptr	 %8145 XXX XXX
%8458:	load	 %8457
%8459:	load	 re_max_failures
%8460:	mul	 %8459 XXX
%8461:	icmp	 %8458 %8460
%8462:	br	 %8461 cond.false cond.true

BASIC BLOCK cond.true
%8463:	br	 XXX cond.true237 cond.false238

BASIC BLOCK cond.false
%8464:	getelementptr	 %8145 XXX XXX
%8465:	load	 %8464
%8466:	shl	 %8465 XXX
%8467:	zext	 %8466
%8468:	mul	 %8467 XXX
%8469:	alloca	 %8468
%8470:	getelementptr	 %8145 XXX XXX
%8471:	load	 %8470
%8472:	bitcast	 %8471
%8473:	getelementptr	 %8145 XXX XXX
%8474:	load	 %8473
%8475:	zext	 %8474
%8476:	mul	 %8475 XXX
%8477:	call	 %8469 %8472 %8476 XXX XXX llvm.memcpy.p0i8.p0i8.i64
%8478:	bitcast	 %8469
%8479:	getelementptr	 %8145 XXX XXX
%8480:	store	 %8478 %8479
%8481:	getelementptr	 %8145 XXX XXX
%8482:	load	 %8481
%8483:	icmp	 %8482 XXX
%8484:	br	 %8483 cond.false233 cond.true232

BASIC BLOCK cond.true232
%8485:	br	 cond.end

BASIC BLOCK cond.false233
%8486:	getelementptr	 %8145 XXX XXX
%8487:	load	 %8486
%8488:	shl	 %8487 XXX
%8489:	store	 %8488 %8486
%8490:	br	 cond.end

BASIC BLOCK cond.end
%8491:	phi	 XXX XXX
%8492:	icmp	 %8491 XXX
%8493:	br	 %8492 cond.true237 cond.false238

BASIC BLOCK cond.true237
%8494:	br	 XXX if.then247 if.end248

BASIC BLOCK cond.false238
%8495:	sext	 %8443
%8496:	getelementptr	 %8445 %8495
%8497:	getelementptr	 %8145 XXX XXX
%8498:	load	 %8497
%8499:	add	 %8498 XXX
%8500:	store	 %8499 %8497
%8501:	zext	 %8498
%8502:	getelementptr	 %8145 XXX XXX
%8503:	load	 %8502
%8504:	getelementptr	 %8503 %8501
%8505:	bitcast	 %8504
%8506:	store	 %8496 %8505
%8507:	br	 XXX if.then247 if.end248

BASIC BLOCK if.then247
%8508:	br	 return

BASIC BLOCK if.end248
%8509:	br	 if.end254

BASIC BLOCK if.else249
%8510:	getelementptr	 bufp XXX XXX
%8511:	load	 %8510
%8512:	and	 %8511 XXX
%8513:	or	 %8512 XXX
%8514:	store	 %8513 %8510
%8515:	br	 if.end254

BASIC BLOCK if.end254
%8516:	icmp	 %8433 XXX
%8517:	br	 %8516 if.end268 if.then256

BASIC BLOCK if.then256
%8518:	br	 do.body257

BASIC BLOCK do.body257
%8519:	br	 do.body258

BASIC BLOCK do.body258
%8520:	load	 %8445
%8521:	zext	 %8520
%8522:	and	 %8521 XXX
%8523:	getelementptr	 %8445 XXX
%8524:	load	 %8523
%8525:	sext	 %8524
%8526:	shl	 %8525 XXX
%8527:	br	 do.end265

BASIC BLOCK do.end265
%8528:	getelementptr	 %8445 XXX
%8529:	br	 do.end267

BASIC BLOCK do.end267
%8530:	br	 if.end268

BASIC BLOCK if.end268
%8531:	phi	 %8528 %8445
%8532:	phi	 XXX %8433
%8533:	br	 while.body

BASIC BLOCK sw.bb269
%8534:	getelementptr	 %8216 XXX
%8535:	br	 do.body271

BASIC BLOCK do.body271
%8536:	br	 do.body272

BASIC BLOCK do.body272
%8537:	load	 %8534
%8538:	zext	 %8537
%8539:	and	 %8538 XXX
%8540:	getelementptr	 %8534 XXX
%8541:	load	 %8540
%8542:	sext	 %8541
%8543:	shl	 %8542 XXX
%8544:	add	 %8539 %8543
%8545:	br	 do.end279

BASIC BLOCK do.end279
%8546:	getelementptr	 %8534 XXX
%8547:	br	 do.end281

BASIC BLOCK do.end281
%8548:	icmp	 %8544 XXX
%8549:	br	 %8548 if.end286 if.then284

BASIC BLOCK if.then284
%8550:	getelementptr	 %8546 XXX
%8551:	br	 handle_on_failure_jump

BASIC BLOCK if.end286
%8552:	br	 while.body

BASIC BLOCK sw.bb287
%8553:	getelementptr	 %8216 XXX
%8554:	br	 while.body

BASIC BLOCK sw.bb289
%8555:	getelementptr	 %8216 XXX
%8556:	br	 while.body

BASIC BLOCK sw.default
%8557:	call	 abort
%8558:	unreachable	

BASIC BLOCK sw.epilog
%8559:	br	 while.body

BASIC BLOCK while.end
%8560:	sext	 %8180
%8561:	getelementptr	 bufp XXX XXX
%8562:	load	 %8561
%8563:	and	 %8562 XXX
%8564:	zext	 %8563
%8565:	or	 %8564 %8560
%8566:	trunc	 %8565
%8567:	load	 %8561
%8568:	and	 %8566 XXX
%8569:	and	 %8567 XXX
%8570:	or	 %8569 %8568
%8571:	store	 %8570 %8561
%8572:	br	 done

BASIC BLOCK done
%8573:	br	 return

BASIC BLOCK return
%8574:	phi	 XXX XXX XXX
%8575:	ret	 %8574

FUNCTION re_set_registers

BASIC BLOCK entry
%8576:	icmp	 num_regs XXX
%8577:	br	 %8576 if.else if.then

BASIC BLOCK if.then
%8578:	getelementptr	 bufp XXX XXX
%8579:	load	 %8578
%8580:	and	 %8579 XXX
%8581:	or	 %8580 XXX
%8582:	store	 %8581 %8578
%8583:	getelementptr	 regs XXX XXX
%8584:	store	 num_regs %8583
%8585:	getelementptr	 regs XXX XXX
%8586:	store	 starts %8585
%8587:	getelementptr	 regs XXX XXX
%8588:	store	 ends %8587
%8589:	br	 if.end

BASIC BLOCK if.else
%8590:	getelementptr	 bufp XXX XXX
%8591:	load	 %8590
%8592:	and	 %8591 XXX
%8593:	store	 %8592 %8590
%8594:	getelementptr	 regs XXX XXX
%8595:	store	 XXX %8594
%8596:	getelementptr	 regs XXX XXX
%8597:	store	 XXX %8596
%8598:	getelementptr	 regs XXX XXX
%8599:	store	 XXX %8598
%8600:	br	 if.end

BASIC BLOCK if.end
%8601:	ret	

FUNCTION re_search

BASIC BLOCK entry
%8602:	call	 bufp XXX XXX string size startpos range regs size re_search_2
%8603:	ret	 %8602

FUNCTION re_search_2

BASIC BLOCK entry
%8604:	getelementptr	 bufp XXX XXX
%8605:	load	 %8604
%8606:	getelementptr	 bufp XXX XXX
%8607:	load	 %8606
%8608:	add	 size1 size2
%8609:	add	 startpos range
%8610:	icmp	 startpos XXX
%8611:	br	 %8610 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%8612:	icmp	 startpos %8608
%8613:	br	 %8612 if.end if.then

BASIC BLOCK if.then
%8614:	br	 return

BASIC BLOCK if.end
%8615:	icmp	 %8609 XXX
%8616:	br	 %8615 if.else if.then6

BASIC BLOCK if.then6
%8617:	sub	 XXX startpos
%8618:	br	 if.end11

BASIC BLOCK if.else
%8619:	icmp	 %8609 %8608
%8620:	br	 %8619 if.end10 if.then8

BASIC BLOCK if.then8
%8621:	sub	 %8608 startpos
%8622:	br	 if.end10

BASIC BLOCK if.end10
%8623:	phi	 %8621 range
%8624:	br	 if.end11

BASIC BLOCK if.end11
%8625:	phi	 %8617 %8623
%8626:	getelementptr	 bufp XXX XXX
%8627:	load	 %8626
%8628:	icmp	 %8627 XXX
%8629:	br	 %8628 if.end24 land.lhs.true

BASIC BLOCK land.lhs.true
%8630:	getelementptr	 bufp XXX XXX
%8631:	load	 %8630
%8632:	getelementptr	 %8631 XXX
%8633:	load	 %8632
%8634:	zext	 %8633
%8635:	icmp	 %8634 XXX
%8636:	br	 %8635 if.end24 land.lhs.true15

BASIC BLOCK land.lhs.true15
%8637:	icmp	 %8625 XXX
%8638:	br	 %8637 if.end24 if.then18

BASIC BLOCK if.then18
%8639:	icmp	 startpos XXX
%8640:	br	 %8639 if.else22 if.then21

BASIC BLOCK if.then21
%8641:	br	 return

BASIC BLOCK if.else22
%8642:	br	 if.end23

BASIC BLOCK if.end23
%8643:	br	 if.end24

BASIC BLOCK if.end24
%8644:	phi	 XXX %8625 %8625 %8625
%8645:	icmp	 %8605 XXX
%8646:	br	 %8645 if.end32 land.lhs.true25

BASIC BLOCK land.lhs.true25
%8647:	getelementptr	 bufp XXX XXX
%8648:	load	 %8647
%8649:	lshr	 %8648 XXX
%8650:	and	 %8649 XXX
%8651:	zext	 %8650
%8652:	icmp	 %8651 XXX
%8653:	br	 %8652 if.then27 if.end32

BASIC BLOCK if.then27
%8654:	call	 bufp re_compile_fastmap
%8655:	icmp	 %8654 XXX
%8656:	br	 %8655 if.end31 if.then30

BASIC BLOCK if.then30
%8657:	br	 return

BASIC BLOCK if.end31
%8658:	br	 if.end32

BASIC BLOCK if.end32
%8659:	br	 for.cond

BASIC BLOCK for.cond
%8660:	phi	 startpos %8814
%8661:	phi	 %8644 %8815
%8662:	icmp	 %8605 XXX
%8663:	br	 %8662 if.end119 land.lhs.true34

BASIC BLOCK land.lhs.true34
%8664:	icmp	 %8660 %8608
%8665:	br	 %8664 if.end119 land.lhs.true37

BASIC BLOCK land.lhs.true37
%8666:	getelementptr	 bufp XXX XXX
%8667:	load	 %8666
%8668:	and	 %8667 XXX
%8669:	zext	 %8668
%8670:	icmp	 %8669 XXX
%8671:	br	 %8670 if.then42 if.end119

BASIC BLOCK if.then42
%8672:	icmp	 %8661 XXX
%8673:	br	 %8672 if.else85 if.then45

BASIC BLOCK if.then45
%8674:	icmp	 %8660 size1
%8675:	br	 %8674 if.end55 land.lhs.true48

BASIC BLOCK land.lhs.true48
%8676:	add	 %8660 %8661
%8677:	icmp	 %8676 size1
%8678:	br	 %8677 if.end55 if.then52

BASIC BLOCK if.then52
%8679:	sub	 size1 %8660
%8680:	sub	 %8661 %8679
%8681:	br	 if.end55

BASIC BLOCK if.end55
%8682:	phi	 %8680 XXX XXX
%8683:	icmp	 %8660 size1
%8684:	br	 %8683 cond.false cond.true

BASIC BLOCK cond.true
%8685:	sext	 size1
%8686:	sub	 XXX %8685
%8687:	getelementptr	 string2 %8686
%8688:	br	 cond.end

BASIC BLOCK cond.false
%8689:	br	 cond.end

BASIC BLOCK cond.end
%8690:	phi	 %8687 string1
%8691:	sext	 %8660
%8692:	getelementptr	 %8690 %8691
%8693:	icmp	 %8607 XXX
%8694:	br	 %8693 if.else68 if.then61

BASIC BLOCK if.then61
%8695:	br	 while.cond

BASIC BLOCK while.cond
%8696:	phi	 %8661 %8714
%8697:	phi	 %8692 %8711
%8698:	icmp	 %8696 %8682
%8699:	br	 %8698 land.end land.rhs

BASIC BLOCK land.rhs
%8700:	getelementptr	 %8697 XXX
%8701:	load	 %8697
%8702:	zext	 %8701
%8703:	getelementptr	 %8607 %8702
%8704:	load	 %8703
%8705:	zext	 %8704
%8706:	getelementptr	 %8605 %8705
%8707:	load	 %8706
%8708:	icmp	 %8707 XXX
%8709:	xor	 %8708 XXX
%8710:	br	 land.end

BASIC BLOCK land.end
%8711:	phi	 %8700 %8697
%8712:	phi	 XXX %8709
%8713:	br	 %8712 while.end while.body

BASIC BLOCK while.body
%8714:	add	 %8696 XXX
%8715:	br	 while.cond

BASIC BLOCK while.end
%8716:	br	 if.end82

BASIC BLOCK if.else68
%8717:	br	 while.cond69

BASIC BLOCK while.cond69
%8718:	phi	 %8661 %8733
%8719:	phi	 %8692 %8730
%8720:	icmp	 %8718 %8682
%8721:	br	 %8720 land.end78 land.rhs72

BASIC BLOCK land.rhs72
%8722:	getelementptr	 %8719 XXX
%8723:	load	 %8719
%8724:	zext	 %8723
%8725:	getelementptr	 %8605 %8724
%8726:	load	 %8725
%8727:	icmp	 %8726 XXX
%8728:	xor	 %8727 XXX
%8729:	br	 land.end78

BASIC BLOCK land.end78
%8730:	phi	 %8722 %8719
%8731:	phi	 XXX %8728
%8732:	br	 %8731 while.end81 while.body79

BASIC BLOCK while.body79
%8733:	add	 %8718 XXX
%8734:	br	 while.cond69

BASIC BLOCK while.end81
%8735:	br	 if.end82

BASIC BLOCK if.end82
%8736:	phi	 %8696 %8718
%8737:	sub	 %8661 %8736
%8738:	add	 %8660 %8737
%8739:	br	 if.end118

BASIC BLOCK if.else85
%8740:	icmp	 size1 XXX
%8741:	br	 %8740 lor.lhs.false88 cond.true91

BASIC BLOCK lor.lhs.false88
%8742:	icmp	 %8660 size1
%8743:	br	 %8742 cond.false96 cond.true91

BASIC BLOCK cond.true91
%8744:	sub	 %8660 size1
%8745:	sext	 %8744
%8746:	getelementptr	 string2 %8745
%8747:	load	 %8746
%8748:	sext	 %8747
%8749:	br	 cond.end100

BASIC BLOCK cond.false96
%8750:	sext	 %8660
%8751:	getelementptr	 string1 %8750
%8752:	load	 %8751
%8753:	sext	 %8752
%8754:	br	 cond.end100

BASIC BLOCK cond.end100
%8755:	phi	 %8748 %8753
%8756:	trunc	 %8755
%8757:	icmp	 %8607 XXX
%8758:	br	 %8757 cond.false108 cond.true104

BASIC BLOCK cond.true104
%8759:	zext	 %8756
%8760:	getelementptr	 %8607 %8759
%8761:	load	 %8760
%8762:	sext	 %8761
%8763:	br	 cond.end110

BASIC BLOCK cond.false108
%8764:	sext	 %8756
%8765:	br	 cond.end110

BASIC BLOCK cond.end110
%8766:	phi	 %8762 %8764
%8767:	trunc	 %8766
%8768:	zext	 %8767
%8769:	getelementptr	 %8605 %8768
%8770:	load	 %8769
%8771:	icmp	 %8770 XXX
%8772:	br	 %8771 if.then116 if.end117

BASIC BLOCK if.then116
%8773:	br	 advance

BASIC BLOCK if.end117
%8774:	br	 if.end118

BASIC BLOCK if.end118
%8775:	phi	 %8738 %8660
%8776:	phi	 %8736 %8661
%8777:	br	 if.end119

BASIC BLOCK if.end119
%8778:	phi	 %8660 %8775 %8660 %8660
%8779:	phi	 %8661 %8776 %8661 %8661
%8780:	icmp	 %8779 XXX
%8781:	br	 %8780 if.end134 land.lhs.true122

BASIC BLOCK land.lhs.true122
%8782:	icmp	 %8778 %8608
%8783:	br	 %8782 if.end134 land.lhs.true125

BASIC BLOCK land.lhs.true125
%8784:	icmp	 %8605 XXX
%8785:	br	 %8784 if.end134 land.lhs.true127

BASIC BLOCK land.lhs.true127
%8786:	getelementptr	 bufp XXX XXX
%8787:	load	 %8786
%8788:	and	 %8787 XXX
%8789:	zext	 %8788
%8790:	icmp	 %8789 XXX
%8791:	br	 %8790 if.then133 if.end134

BASIC BLOCK if.then133
%8792:	br	 return

BASIC BLOCK if.end134
%8793:	call	 bufp string1 size1 string2 size2 %8778 regs stop re_match_2_internal
%8794:	icmp	 %8793 XXX
%8795:	br	 %8794 if.end139 if.then138

BASIC BLOCK if.then138
%8796:	br	 return

BASIC BLOCK if.end139
%8797:	icmp	 %8793 XXX
%8798:	br	 %8797 if.end143 if.then142

BASIC BLOCK if.then142
%8799:	br	 return

BASIC BLOCK if.end143
%8800:	br	 advance

BASIC BLOCK advance
%8801:	phi	 %8778 %8660
%8802:	phi	 %8779 %8661
%8803:	icmp	 %8802 XXX
%8804:	br	 %8803 if.then145 if.else146

BASIC BLOCK if.then145
%8805:	br	 for.end

BASIC BLOCK if.else146
%8806:	icmp	 %8802 XXX
%8807:	br	 %8806 if.else151 if.then149

BASIC BLOCK if.then149
%8808:	add	 %8802 XXX
%8809:	add	 %8801 XXX
%8810:	br	 if.end154

BASIC BLOCK if.else151
%8811:	add	 %8802 XXX
%8812:	add	 %8801 XXX
%8813:	br	 if.end154

BASIC BLOCK if.end154
%8814:	phi	 %8809 %8812
%8815:	phi	 %8808 %8811
%8816:	br	 if.end155

BASIC BLOCK if.end155
%8817:	br	 for.cond

BASIC BLOCK for.end
%8818:	br	 return

BASIC BLOCK return
%8819:	phi	 XXX XXX %8778 XXX XXX XXX XXX
%8820:	ret	 %8819

FUNCTION re_match

BASIC BLOCK entry
%8821:	call	 bufp XXX XXX string size pos regs size re_match_2_internal
%8822:	ret	 %8821

FUNCTION re_match_2

BASIC BLOCK entry
%8823:	call	 bufp string1 size1 string2 size2 pos regs stop re_match_2_internal
%8824:	ret	 %8823

FUNCTION re_compile_pattern

BASIC BLOCK entry
%8825:	getelementptr	 bufp XXX XXX
%8826:	load	 %8825
%8827:	and	 %8826 XXX
%8828:	store	 %8827 %8825
%8829:	getelementptr	 bufp XXX XXX
%8830:	load	 %8829
%8831:	and	 %8830 XXX
%8832:	store	 %8831 %8829
%8833:	getelementptr	 bufp XXX XXX
%8834:	load	 %8833
%8835:	and	 %8834 XXX
%8836:	or	 %8835 XXX
%8837:	store	 %8836 %8833
%8838:	load	 re_syntax_options
%8839:	call	 pattern length %8838 bufp regex_compile
%8840:	icmp	 %8839 XXX
%8841:	br	 %8840 if.then if.end

BASIC BLOCK if.then
%8842:	br	 return

BASIC BLOCK if.end
%8843:	sext	 %8839
%8844:	getelementptr	 re_error_msgid XXX %8843
%8845:	load	 %8844
%8846:	call	 %8845 gettext
%8847:	br	 return

BASIC BLOCK return
%8848:	phi	 %8846 XXX
%8849:	ret	 %8848

FUNCTION regex_compile

BASIC BLOCK entry
%8850:	alloca	 XXX
%8851:	alloca	 XXX
%8852:	alloca	 XXX
%8853:	store	 pattern %8851
%8854:	getelementptr	 pattern size
%8855:	getelementptr	 bufp XXX XXX
%8856:	load	 %8855
%8857:	call	 XXX xmalloc
%8858:	bitcast	 %8857
%8859:	getelementptr	 %8850 XXX XXX
%8860:	store	 %8858 %8859
%8861:	getelementptr	 %8850 XXX XXX
%8862:	load	 %8861
%8863:	icmp	 %8862 XXX
%8864:	br	 %8863 if.end if.then

BASIC BLOCK if.then
%8865:	br	 return

BASIC BLOCK if.end
%8866:	getelementptr	 %8850 XXX XXX
%8867:	store	 XXX %8866
%8868:	getelementptr	 %8850 XXX XXX
%8869:	store	 XXX %8868
%8870:	getelementptr	 bufp XXX XXX
%8871:	store	 syntax %8870
%8872:	getelementptr	 bufp XXX XXX
%8873:	load	 %8872
%8874:	and	 %8873 XXX
%8875:	store	 %8874 %8872
%8876:	getelementptr	 bufp XXX XXX
%8877:	load	 %8876
%8878:	and	 %8877 XXX
%8879:	store	 %8878 %8876
%8880:	getelementptr	 bufp XXX XXX
%8881:	load	 %8880
%8882:	and	 %8881 XXX
%8883:	store	 %8882 %8880
%8884:	getelementptr	 bufp XXX XXX
%8885:	store	 XXX %8884
%8886:	getelementptr	 bufp XXX XXX
%8887:	store	 XXX %8886
%8888:	call	 init_syntax_once
%8889:	getelementptr	 bufp XXX XXX
%8890:	load	 %8889
%8891:	icmp	 %8890 XXX
%8892:	br	 %8891 if.end24 if.then10

BASIC BLOCK if.then10
%8893:	getelementptr	 bufp XXX XXX
%8894:	load	 %8893
%8895:	icmp	 %8894 XXX
%8896:	br	 %8895 if.else if.then11

BASIC BLOCK if.then11
%8897:	getelementptr	 bufp XXX XXX
%8898:	load	 %8897
%8899:	call	 %8898 XXX realloc
%8900:	getelementptr	 bufp XXX XXX
%8901:	store	 %8899 %8900
%8902:	br	 if.end17

BASIC BLOCK if.else
%8903:	call	 XXX xmalloc
%8904:	getelementptr	 bufp XXX XXX
%8905:	store	 %8903 %8904
%8906:	br	 if.end17

BASIC BLOCK if.end17
%8907:	getelementptr	 bufp XXX XXX
%8908:	load	 %8907
%8909:	icmp	 %8908 XXX
%8910:	br	 %8909 if.then20 if.end22

BASIC BLOCK if.then20
%8911:	getelementptr	 %8850 XXX XXX
%8912:	load	 %8911
%8913:	bitcast	 %8912
%8914:	call	 %8913 free
%8915:	br	 return

BASIC BLOCK if.end22
%8916:	getelementptr	 bufp XXX XXX
%8917:	store	 XXX %8916
%8918:	br	 if.end24

BASIC BLOCK if.end24
%8919:	getelementptr	 bufp XXX XXX
%8920:	load	 %8919
%8921:	br	 while.cond

BASIC BLOCK while.cond
%8922:	phi	 XXX %13385
%8923:	phi	 XXX %13386
%8924:	phi	 %8920 %13387
%8925:	phi	 XXX %13388
%8926:	phi	 XXX %13389
%8927:	phi	 %8920 %13390
%8928:	load	 %8851
%8929:	icmp	 %8928 %8854
%8930:	br	 %8929 while.end3390 while.body

BASIC BLOCK while.body
%8931:	br	 do.body

BASIC BLOCK do.body
%8932:	load	 %8851
%8933:	icmp	 %8932 %8854
%8934:	br	 %8933 if.end29 if.then28

BASIC BLOCK if.then28
%8935:	br	 return

BASIC BLOCK if.end29
%8936:	load	 %8851
%8937:	getelementptr	 %8936 XXX
%8938:	store	 %8937 %8851
%8939:	load	 %8936
%8940:	icmp	 %8856 XXX
%8941:	br	 %8940 if.end32 if.then31

BASIC BLOCK if.then31
%8942:	zext	 %8939
%8943:	getelementptr	 %8856 %8942
%8944:	load	 %8943
%8945:	br	 if.end32

BASIC BLOCK if.end32
%8946:	phi	 %8944 %8939
%8947:	br	 do.end

BASIC BLOCK do.end
%8948:	zext	 %8946
%8949:	switch	 %8948 sw.default3160 XXX sw.bb XXX sw.bb116 XXX sw.bb208 XXX sw.bb208 XXX sw.bb216 XXX sw.bb623 XXX sw.bb703 XXX sw.bb1319 XXX sw.bb1324 XXX sw.bb1329 XXX sw.bb1334 XXX sw.bb1339 XXX sw.bb1347

BASIC BLOCK sw.bb
%8950:	load	 %8851
%8951:	getelementptr	 pattern XXX
%8952:	icmp	 %8950 %8951
%8953:	br	 %8952 lor.lhs.false if.then41

BASIC BLOCK lor.lhs.false
%8954:	and	 syntax XXX
%8955:	icmp	 %8954 XXX
%8956:	br	 %8955 lor.lhs.false37 if.then41

BASIC BLOCK lor.lhs.false37
%8957:	load	 %8851
%8958:	call	 pattern %8957 syntax at_begline_loc_p
%8959:	sext	 %8958
%8960:	icmp	 %8959 XXX
%8961:	br	 %8960 if.else114 if.then41

BASIC BLOCK if.then41
%8962:	br	 do.body42

BASIC BLOCK do.body42
%8963:	br	 while.cond43

BASIC BLOCK while.cond43
%8964:	phi	 %8923 %9057
%8965:	phi	 %8924 %9058
%8966:	phi	 %8925 %9059
%8967:	phi	 %8926 %9060
%8968:	phi	 %8927 %9061
%8969:	getelementptr	 bufp XXX XXX
%8970:	load	 %8969
%8971:	ptrtoint	 %8968
%8972:	ptrtoint	 %8970
%8973:	sub	 %8971 %8972
%8974:	add	 %8973 XXX
%8975:	getelementptr	 bufp XXX XXX
%8976:	load	 %8975
%8977:	icmp	 %8974 %8976
%8978:	br	 %8977 while.end while.body48

BASIC BLOCK while.body48
%8979:	br	 do.body49

BASIC BLOCK do.body49
%8980:	getelementptr	 bufp XXX XXX
%8981:	load	 %8980
%8982:	getelementptr	 bufp XXX XXX
%8983:	load	 %8982
%8984:	icmp	 %8983 XXX
%8985:	br	 %8984 if.end55 if.then54

BASIC BLOCK if.then54
%8986:	br	 return

BASIC BLOCK if.end55
%8987:	getelementptr	 bufp XXX XXX
%8988:	load	 %8987
%8989:	shl	 %8988 XXX
%8990:	store	 %8989 %8987
%8991:	getelementptr	 bufp XXX XXX
%8992:	load	 %8991
%8993:	icmp	 %8992 XXX
%8994:	br	 %8993 if.end62 if.then60

BASIC BLOCK if.then60
%8995:	getelementptr	 bufp XXX XXX
%8996:	store	 XXX %8995
%8997:	br	 if.end62

BASIC BLOCK if.end62
%8998:	getelementptr	 bufp XXX XXX
%8999:	load	 %8998
%9000:	getelementptr	 bufp XXX XXX
%9001:	load	 %9000
%9002:	call	 %8999 %9001 realloc
%9003:	getelementptr	 bufp XXX XXX
%9004:	store	 %9002 %9003
%9005:	getelementptr	 bufp XXX XXX
%9006:	load	 %9005
%9007:	icmp	 %9006 XXX
%9008:	br	 %9007 if.end71 if.then70

BASIC BLOCK if.then70
%9009:	br	 return

BASIC BLOCK if.end71
%9010:	getelementptr	 bufp XXX XXX
%9011:	load	 %9010
%9012:	icmp	 %8981 %9011
%9013:	br	 %9012 if.end110 if.then75

BASIC BLOCK if.then75
%9014:	ptrtoint	 %8968
%9015:	ptrtoint	 %8981
%9016:	sub	 %9014 %9015
%9017:	getelementptr	 bufp XXX XXX
%9018:	load	 %9017
%9019:	getelementptr	 %9018 %9016
%9020:	ptrtoint	 %8965
%9021:	ptrtoint	 %8981
%9022:	sub	 %9020 %9021
%9023:	getelementptr	 bufp XXX XXX
%9024:	load	 %9023
%9025:	getelementptr	 %9024 %9022
%9026:	icmp	 %8964 XXX
%9027:	br	 %9026 if.end93 if.then87

BASIC BLOCK if.then87
%9028:	ptrtoint	 %8964
%9029:	ptrtoint	 %8981
%9030:	sub	 %9028 %9029
%9031:	getelementptr	 bufp XXX XXX
%9032:	load	 %9031
%9033:	getelementptr	 %9032 %9030
%9034:	br	 if.end93

BASIC BLOCK if.end93
%9035:	phi	 %9033 %8964
%9036:	icmp	 %8966 XXX
%9037:	br	 %9036 if.end101 if.then95

BASIC BLOCK if.then95
%9038:	ptrtoint	 %8966
%9039:	ptrtoint	 %8981
%9040:	sub	 %9038 %9039
%9041:	getelementptr	 bufp XXX XXX
%9042:	load	 %9041
%9043:	getelementptr	 %9042 %9040
%9044:	br	 if.end101

BASIC BLOCK if.end101
%9045:	phi	 %9043 %8966
%9046:	icmp	 %8967 XXX
%9047:	br	 %9046 if.end109 if.then103

BASIC BLOCK if.then103
%9048:	ptrtoint	 %8967
%9049:	ptrtoint	 %8981
%9050:	sub	 %9048 %9049
%9051:	getelementptr	 bufp XXX XXX
%9052:	load	 %9051
%9053:	getelementptr	 %9052 %9050
%9054:	br	 if.end109

BASIC BLOCK if.end109
%9055:	phi	 %9053 %8967
%9056:	br	 if.end110

BASIC BLOCK if.end110
%9057:	phi	 %9035 %8964
%9058:	phi	 %9025 %8965
%9059:	phi	 %9045 %8966
%9060:	phi	 %9055 %8967
%9061:	phi	 %9019 %8968
%9062:	br	 do.end111

BASIC BLOCK do.end111
%9063:	br	 while.cond43

BASIC BLOCK while.end
%9064:	getelementptr	 %8968 XXX
%9065:	store	 XXX %8968
%9066:	br	 do.end113

BASIC BLOCK do.end113
%9067:	br	 if.end115

BASIC BLOCK if.else114
%9068:	br	 normal_char

BASIC BLOCK if.end115
%9069:	br	 sw.epilog3389

BASIC BLOCK sw.bb116
%9070:	load	 %8851
%9071:	icmp	 %9070 %8854
%9072:	br	 %9071 lor.lhs.false119 if.then126

BASIC BLOCK lor.lhs.false119
%9073:	and	 syntax XXX
%9074:	icmp	 %9073 XXX
%9075:	br	 %9074 lor.lhs.false122 if.then126

BASIC BLOCK lor.lhs.false122
%9076:	load	 %8851
%9077:	call	 %9076 %8854 syntax at_endline_loc_p
%9078:	sext	 %9077
%9079:	icmp	 %9078 XXX
%9080:	br	 %9079 if.else206 if.then126

BASIC BLOCK if.then126
%9081:	br	 do.body127

BASIC BLOCK do.body127
%9082:	br	 while.cond128

BASIC BLOCK while.cond128
%9083:	phi	 %8923 %9176
%9084:	phi	 %8924 %9177
%9085:	phi	 %8925 %9178
%9086:	phi	 %8926 %9179
%9087:	phi	 %8927 %9180
%9088:	getelementptr	 bufp XXX XXX
%9089:	load	 %9088
%9090:	ptrtoint	 %9087
%9091:	ptrtoint	 %9089
%9092:	sub	 %9090 %9091
%9093:	add	 %9092 XXX
%9094:	getelementptr	 bufp XXX XXX
%9095:	load	 %9094
%9096:	icmp	 %9093 %9095
%9097:	br	 %9096 while.end203 while.body137

BASIC BLOCK while.body137
%9098:	br	 do.body138

BASIC BLOCK do.body138
%9099:	getelementptr	 bufp XXX XXX
%9100:	load	 %9099
%9101:	getelementptr	 bufp XXX XXX
%9102:	load	 %9101
%9103:	icmp	 %9102 XXX
%9104:	br	 %9103 if.end145 if.then144

BASIC BLOCK if.then144
%9105:	br	 return

BASIC BLOCK if.end145
%9106:	getelementptr	 bufp XXX XXX
%9107:	load	 %9106
%9108:	shl	 %9107 XXX
%9109:	store	 %9108 %9106
%9110:	getelementptr	 bufp XXX XXX
%9111:	load	 %9110
%9112:	icmp	 %9111 XXX
%9113:	br	 %9112 if.end153 if.then151

BASIC BLOCK if.then151
%9114:	getelementptr	 bufp XXX XXX
%9115:	store	 XXX %9114
%9116:	br	 if.end153

BASIC BLOCK if.end153
%9117:	getelementptr	 bufp XXX XXX
%9118:	load	 %9117
%9119:	getelementptr	 bufp XXX XXX
%9120:	load	 %9119
%9121:	call	 %9118 %9120 realloc
%9122:	getelementptr	 bufp XXX XXX
%9123:	store	 %9121 %9122
%9124:	getelementptr	 bufp XXX XXX
%9125:	load	 %9124
%9126:	icmp	 %9125 XXX
%9127:	br	 %9126 if.end162 if.then161

BASIC BLOCK if.then161
%9128:	br	 return

BASIC BLOCK if.end162
%9129:	getelementptr	 bufp XXX XXX
%9130:	load	 %9129
%9131:	icmp	 %9100 %9130
%9132:	br	 %9131 if.end201 if.then166

BASIC BLOCK if.then166
%9133:	ptrtoint	 %9087
%9134:	ptrtoint	 %9100
%9135:	sub	 %9133 %9134
%9136:	getelementptr	 bufp XXX XXX
%9137:	load	 %9136
%9138:	getelementptr	 %9137 %9135
%9139:	ptrtoint	 %9084
%9140:	ptrtoint	 %9100
%9141:	sub	 %9139 %9140
%9142:	getelementptr	 bufp XXX XXX
%9143:	load	 %9142
%9144:	getelementptr	 %9143 %9141
%9145:	icmp	 %9083 XXX
%9146:	br	 %9145 if.end184 if.then178

BASIC BLOCK if.then178
%9147:	ptrtoint	 %9083
%9148:	ptrtoint	 %9100
%9149:	sub	 %9147 %9148
%9150:	getelementptr	 bufp XXX XXX
%9151:	load	 %9150
%9152:	getelementptr	 %9151 %9149
%9153:	br	 if.end184

BASIC BLOCK if.end184
%9154:	phi	 %9152 %9083
%9155:	icmp	 %9085 XXX
%9156:	br	 %9155 if.end192 if.then186

BASIC BLOCK if.then186
%9157:	ptrtoint	 %9085
%9158:	ptrtoint	 %9100
%9159:	sub	 %9157 %9158
%9160:	getelementptr	 bufp XXX XXX
%9161:	load	 %9160
%9162:	getelementptr	 %9161 %9159
%9163:	br	 if.end192

BASIC BLOCK if.end192
%9164:	phi	 %9162 %9085
%9165:	icmp	 %9086 XXX
%9166:	br	 %9165 if.end200 if.then194

BASIC BLOCK if.then194
%9167:	ptrtoint	 %9086
%9168:	ptrtoint	 %9100
%9169:	sub	 %9167 %9168
%9170:	getelementptr	 bufp XXX XXX
%9171:	load	 %9170
%9172:	getelementptr	 %9171 %9169
%9173:	br	 if.end200

BASIC BLOCK if.end200
%9174:	phi	 %9172 %9086
%9175:	br	 if.end201

BASIC BLOCK if.end201
%9176:	phi	 %9154 %9083
%9177:	phi	 %9144 %9084
%9178:	phi	 %9164 %9085
%9179:	phi	 %9174 %9086
%9180:	phi	 %9138 %9087
%9181:	br	 do.end202

BASIC BLOCK do.end202
%9182:	br	 while.cond128

BASIC BLOCK while.end203
%9183:	getelementptr	 %9087 XXX
%9184:	store	 XXX %9087
%9185:	br	 do.end205

BASIC BLOCK do.end205
%9186:	br	 if.end207

BASIC BLOCK if.else206
%9187:	br	 normal_char

BASIC BLOCK if.end207
%9188:	br	 sw.epilog3389

BASIC BLOCK sw.bb208
%9189:	and	 syntax XXX
%9190:	icmp	 %9189 XXX
%9191:	br	 %9190 lor.lhs.false211 if.then214

BASIC BLOCK lor.lhs.false211
%9192:	and	 syntax XXX
%9193:	icmp	 %9192 XXX
%9194:	br	 %9193 if.end215 if.then214

BASIC BLOCK if.then214
%9195:	br	 normal_char

BASIC BLOCK if.end215
%9196:	br	 handle_plus

BASIC BLOCK handle_plus
%9197:	phi	 %10679 %8946
%9198:	br	 sw.bb216

BASIC BLOCK sw.bb216
%9199:	phi	 %9197 %8946
%9200:	icmp	 %8925 XXX
%9201:	br	 %9200 if.then218 if.end229

BASIC BLOCK if.then218
%9202:	and	 syntax XXX
%9203:	icmp	 %9202 XXX
%9204:	br	 %9203 if.else223 if.then221

BASIC BLOCK if.then221
%9205:	getelementptr	 %8850 XXX XXX
%9206:	load	 %9205
%9207:	bitcast	 %9206
%9208:	call	 %9207 free
%9209:	br	 return

BASIC BLOCK if.else223
%9210:	and	 syntax XXX
%9211:	icmp	 %9210 XXX
%9212:	br	 %9211 if.then226 if.end227

BASIC BLOCK if.then226
%9213:	br	 normal_char

BASIC BLOCK if.end227
%9214:	br	 if.end228

BASIC BLOCK if.end228
%9215:	br	 if.end229

BASIC BLOCK if.end229
%9216:	br	 for.cond

BASIC BLOCK for.cond
%9217:	phi	 XXX %9225
%9218:	phi	 XXX %9231
%9219:	phi	 %9199 %9316
%9220:	zext	 %9219
%9221:	icmp	 %9220 XXX
%9222:	zext	 %9221
%9223:	sext	 %9217
%9224:	or	 %9223 %9222
%9225:	trunc	 %9224
%9226:	zext	 %9219
%9227:	icmp	 %9226 XXX
%9228:	zext	 %9227
%9229:	sext	 %9218
%9230:	or	 %9229 %9228
%9231:	trunc	 %9230
%9232:	load	 %8851
%9233:	icmp	 %9232 %8854
%9234:	br	 %9233 if.end244 if.then243

BASIC BLOCK if.then243
%9235:	br	 for.end

BASIC BLOCK if.end244
%9236:	br	 do.body245

BASIC BLOCK do.body245
%9237:	load	 %8851
%9238:	icmp	 %9237 %8854
%9239:	br	 %9238 if.end249 if.then248

BASIC BLOCK if.then248
%9240:	br	 return

BASIC BLOCK if.end249
%9241:	load	 %8851
%9242:	getelementptr	 %9241 XXX
%9243:	store	 %9242 %8851
%9244:	load	 %9241
%9245:	icmp	 %8856 XXX
%9246:	br	 %9245 if.end255 if.then252

BASIC BLOCK if.then252
%9247:	zext	 %9244
%9248:	getelementptr	 %8856 %9247
%9249:	load	 %9248
%9250:	br	 if.end255

BASIC BLOCK if.end255
%9251:	phi	 %9249 %9244
%9252:	br	 do.end256

BASIC BLOCK do.end256
%9253:	zext	 %9251
%9254:	icmp	 %9253 XXX
%9255:	br	 %9254 lor.lhs.false260 if.then270

BASIC BLOCK lor.lhs.false260
%9256:	and	 syntax XXX
%9257:	icmp	 %9256 XXX
%9258:	br	 %9257 land.lhs.true if.else271

BASIC BLOCK land.lhs.true
%9259:	zext	 %9251
%9260:	icmp	 %9259 XXX
%9261:	br	 %9260 lor.lhs.false266 if.then270

BASIC BLOCK lor.lhs.false266
%9262:	zext	 %9251
%9263:	icmp	 %9262 XXX
%9264:	br	 %9263 if.else271 if.then270

BASIC BLOCK if.then270
%9265:	br	 if.end310

BASIC BLOCK if.else271
%9266:	and	 syntax XXX
%9267:	icmp	 %9266 XXX
%9268:	br	 %9267 if.else307 land.lhs.true274

BASIC BLOCK land.lhs.true274
%9269:	zext	 %9251
%9270:	icmp	 %9269 XXX
%9271:	br	 %9270 if.else307 if.then278

BASIC BLOCK if.then278
%9272:	load	 %8851
%9273:	icmp	 %9272 %8854
%9274:	br	 %9273 if.end283 if.then281

BASIC BLOCK if.then281
%9275:	getelementptr	 %8850 XXX XXX
%9276:	load	 %9275
%9277:	bitcast	 %9276
%9278:	call	 %9277 free
%9279:	br	 return

BASIC BLOCK if.end283
%9280:	br	 do.body284

BASIC BLOCK do.body284
%9281:	load	 %8851
%9282:	icmp	 %9281 %8854
%9283:	br	 %9282 if.end288 if.then287

BASIC BLOCK if.then287
%9284:	br	 return

BASIC BLOCK if.end288
%9285:	load	 %8851
%9286:	getelementptr	 %9285 XXX
%9287:	store	 %9286 %8851
%9288:	load	 %9285
%9289:	icmp	 %8856 XXX
%9290:	br	 %9289 if.end294 if.then291

BASIC BLOCK if.then291
%9291:	zext	 %9288
%9292:	getelementptr	 %8856 %9291
%9293:	load	 %9292
%9294:	br	 if.end294

BASIC BLOCK if.end294
%9295:	phi	 %9293 %9288
%9296:	br	 do.end295

BASIC BLOCK do.end295
%9297:	zext	 %9295
%9298:	icmp	 %9297 XXX
%9299:	br	 %9298 lor.lhs.false299 if.end306

BASIC BLOCK lor.lhs.false299
%9300:	zext	 %9295
%9301:	icmp	 %9300 XXX
%9302:	br	 %9301 if.then303 if.end306

BASIC BLOCK if.then303
%9303:	load	 %8851
%9304:	getelementptr	 %9303 XXX
%9305:	store	 %9304 %8851
%9306:	load	 %8851
%9307:	getelementptr	 %9306 XXX
%9308:	store	 %9307 %8851
%9309:	br	 for.end

BASIC BLOCK if.end306
%9310:	br	 if.end309

BASIC BLOCK if.else307
%9311:	load	 %8851
%9312:	getelementptr	 %9311 XXX
%9313:	store	 %9312 %8851
%9314:	br	 for.end

BASIC BLOCK if.end309
%9315:	br	 if.end310

BASIC BLOCK if.end310
%9316:	phi	 %9251 %9295
%9317:	br	 for.cond

BASIC BLOCK for.end
%9318:	icmp	 %8925 XXX
%9319:	br	 %9318 if.then312 if.end313

BASIC BLOCK if.then312
%9320:	br	 sw.epilog3389

BASIC BLOCK if.end313
%9321:	icmp	 %9231 XXX
%9322:	br	 %9321 if.end450 if.then315

BASIC BLOCK if.then315
%9323:	br	 while.cond316

BASIC BLOCK while.cond316
%9324:	phi	 %8923 %9417
%9325:	phi	 %8924 %9418
%9326:	phi	 %8925 %9419
%9327:	phi	 %8926 %9420
%9328:	phi	 %8927 %9421
%9329:	getelementptr	 bufp XXX XXX
%9330:	load	 %9329
%9331:	ptrtoint	 %9328
%9332:	ptrtoint	 %9330
%9333:	sub	 %9331 %9332
%9334:	add	 %9333 XXX
%9335:	getelementptr	 bufp XXX XXX
%9336:	load	 %9335
%9337:	icmp	 %9334 %9336
%9338:	br	 %9337 while.end391 while.body325

BASIC BLOCK while.body325
%9339:	br	 do.body326

BASIC BLOCK do.body326
%9340:	getelementptr	 bufp XXX XXX
%9341:	load	 %9340
%9342:	getelementptr	 bufp XXX XXX
%9343:	load	 %9342
%9344:	icmp	 %9343 XXX
%9345:	br	 %9344 if.end333 if.then332

BASIC BLOCK if.then332
%9346:	br	 return

BASIC BLOCK if.end333
%9347:	getelementptr	 bufp XXX XXX
%9348:	load	 %9347
%9349:	shl	 %9348 XXX
%9350:	store	 %9349 %9347
%9351:	getelementptr	 bufp XXX XXX
%9352:	load	 %9351
%9353:	icmp	 %9352 XXX
%9354:	br	 %9353 if.end341 if.then339

BASIC BLOCK if.then339
%9355:	getelementptr	 bufp XXX XXX
%9356:	store	 XXX %9355
%9357:	br	 if.end341

BASIC BLOCK if.end341
%9358:	getelementptr	 bufp XXX XXX
%9359:	load	 %9358
%9360:	getelementptr	 bufp XXX XXX
%9361:	load	 %9360
%9362:	call	 %9359 %9361 realloc
%9363:	getelementptr	 bufp XXX XXX
%9364:	store	 %9362 %9363
%9365:	getelementptr	 bufp XXX XXX
%9366:	load	 %9365
%9367:	icmp	 %9366 XXX
%9368:	br	 %9367 if.end350 if.then349

BASIC BLOCK if.then349
%9369:	br	 return

BASIC BLOCK if.end350
%9370:	getelementptr	 bufp XXX XXX
%9371:	load	 %9370
%9372:	icmp	 %9341 %9371
%9373:	br	 %9372 if.end389 if.then354

BASIC BLOCK if.then354
%9374:	ptrtoint	 %9328
%9375:	ptrtoint	 %9341
%9376:	sub	 %9374 %9375
%9377:	getelementptr	 bufp XXX XXX
%9378:	load	 %9377
%9379:	getelementptr	 %9378 %9376
%9380:	ptrtoint	 %9325
%9381:	ptrtoint	 %9341
%9382:	sub	 %9380 %9381
%9383:	getelementptr	 bufp XXX XXX
%9384:	load	 %9383
%9385:	getelementptr	 %9384 %9382
%9386:	icmp	 %9324 XXX
%9387:	br	 %9386 if.end372 if.then366

BASIC BLOCK if.then366
%9388:	ptrtoint	 %9324
%9389:	ptrtoint	 %9341
%9390:	sub	 %9388 %9389
%9391:	getelementptr	 bufp XXX XXX
%9392:	load	 %9391
%9393:	getelementptr	 %9392 %9390
%9394:	br	 if.end372

BASIC BLOCK if.end372
%9395:	phi	 %9393 %9324
%9396:	icmp	 %9326 XXX
%9397:	br	 %9396 if.end380 if.then374

BASIC BLOCK if.then374
%9398:	ptrtoint	 %9326
%9399:	ptrtoint	 %9341
%9400:	sub	 %9398 %9399
%9401:	getelementptr	 bufp XXX XXX
%9402:	load	 %9401
%9403:	getelementptr	 %9402 %9400
%9404:	br	 if.end380

BASIC BLOCK if.end380
%9405:	phi	 %9403 %9326
%9406:	icmp	 %9327 XXX
%9407:	br	 %9406 if.end388 if.then382

BASIC BLOCK if.then382
%9408:	ptrtoint	 %9327
%9409:	ptrtoint	 %9341
%9410:	sub	 %9408 %9409
%9411:	getelementptr	 bufp XXX XXX
%9412:	load	 %9411
%9413:	getelementptr	 %9412 %9410
%9414:	br	 if.end388

BASIC BLOCK if.end388
%9415:	phi	 %9413 %9327
%9416:	br	 if.end389

BASIC BLOCK if.end389
%9417:	phi	 %9395 %9324
%9418:	phi	 %9385 %9325
%9419:	phi	 %9405 %9326
%9420:	phi	 %9415 %9327
%9421:	phi	 %9379 %9328
%9422:	br	 do.end390

BASIC BLOCK do.end390
%9423:	br	 while.cond316

BASIC BLOCK while.end391
%9424:	icmp	 %8856 XXX
%9425:	br	 %9424 cond.false cond.true

BASIC BLOCK cond.true
%9426:	load	 %8851
%9427:	getelementptr	 %9426 XXX
%9428:	load	 %9427
%9429:	zext	 %9428
%9430:	getelementptr	 %8856 %9429
%9431:	load	 %9430
%9432:	sext	 %9431
%9433:	br	 cond.end

BASIC BLOCK cond.false
%9434:	load	 %8851
%9435:	getelementptr	 %9434 XXX
%9436:	load	 %9435
%9437:	sext	 %9436
%9438:	br	 cond.end

BASIC BLOCK cond.end
%9439:	phi	 %9432 %9437
%9440:	icmp	 %8856 XXX
%9441:	br	 %9440 cond.false403 cond.true400

BASIC BLOCK cond.true400
%9442:	getelementptr	 %8856 XXX
%9443:	load	 %9442
%9444:	sext	 %9443
%9445:	br	 cond.end404

BASIC BLOCK cond.false403
%9446:	br	 cond.end404

BASIC BLOCK cond.end404
%9447:	phi	 %9444 XXX
%9448:	icmp	 %9439 %9447
%9449:	br	 %9448 if.else441 land.lhs.true408

BASIC BLOCK land.lhs.true408
%9450:	sext	 %9225
%9451:	icmp	 %9450 XXX
%9452:	br	 %9451 if.else441 land.lhs.true411

BASIC BLOCK land.lhs.true411
%9453:	load	 %8851
%9454:	icmp	 %9453 %8854
%9455:	br	 %9454 if.else441 land.lhs.true414

BASIC BLOCK land.lhs.true414
%9456:	icmp	 %8856 XXX
%9457:	br	 %9456 cond.false420 cond.true416

BASIC BLOCK cond.true416
%9458:	load	 %8851
%9459:	load	 %9458
%9460:	zext	 %9459
%9461:	getelementptr	 %8856 %9460
%9462:	load	 %9461
%9463:	sext	 %9462
%9464:	br	 cond.end422

BASIC BLOCK cond.false420
%9465:	load	 %8851
%9466:	load	 %9465
%9467:	sext	 %9466
%9468:	br	 cond.end422

BASIC BLOCK cond.end422
%9469:	phi	 %9463 %9467
%9470:	icmp	 %8856 XXX
%9471:	br	 %9470 cond.false428 cond.true425

BASIC BLOCK cond.true425
%9472:	getelementptr	 %8856 XXX
%9473:	load	 %9472
%9474:	sext	 %9473
%9475:	br	 cond.end429

BASIC BLOCK cond.false428
%9476:	br	 cond.end429

BASIC BLOCK cond.end429
%9477:	phi	 %9474 XXX
%9478:	icmp	 %9469 %9477
%9479:	br	 %9478 if.else441 land.lhs.true433

BASIC BLOCK land.lhs.true433
%9480:	and	 syntax XXX
%9481:	icmp	 %9480 XXX
%9482:	br	 %9481 if.then436 if.else441

BASIC BLOCK if.then436
%9483:	ptrtoint	 %9326
%9484:	ptrtoint	 %9328
%9485:	sub	 %9483 %9484
%9486:	sub	 %9485 XXX
%9487:	trunc	 %9486
%9488:	call	 XXX %9328 %9487 store_op1
%9489:	br	 if.end448

BASIC BLOCK if.else441
%9490:	getelementptr	 %9326 XXX
%9491:	ptrtoint	 %9490
%9492:	ptrtoint	 %9328
%9493:	sub	 %9491 %9492
%9494:	sub	 %9493 XXX
%9495:	trunc	 %9494
%9496:	call	 XXX %9328 %9495 store_op1
%9497:	br	 if.end448

BASIC BLOCK if.end448
%9498:	phi	 XXX XXX
%9499:	getelementptr	 %9328 XXX
%9500:	br	 if.end450

BASIC BLOCK if.end450
%9501:	phi	 %9324 %8923
%9502:	phi	 %9325 %8924
%9503:	phi	 %9326 %8925
%9504:	phi	 %9327 %8926
%9505:	phi	 %9498 XXX
%9506:	phi	 %9499 %8927
%9507:	br	 while.cond451

BASIC BLOCK while.cond451
%9508:	phi	 %9501 %9601
%9509:	phi	 %9502 %9602
%9510:	phi	 %9503 %9603
%9511:	phi	 %9504 %9604
%9512:	phi	 %9506 %9605
%9513:	getelementptr	 bufp XXX XXX
%9514:	load	 %9513
%9515:	ptrtoint	 %9512
%9516:	ptrtoint	 %9514
%9517:	sub	 %9515 %9516
%9518:	add	 %9517 XXX
%9519:	getelementptr	 bufp XXX XXX
%9520:	load	 %9519
%9521:	icmp	 %9518 %9520
%9522:	br	 %9521 while.end526 while.body460

BASIC BLOCK while.body460
%9523:	br	 do.body461

BASIC BLOCK do.body461
%9524:	getelementptr	 bufp XXX XXX
%9525:	load	 %9524
%9526:	getelementptr	 bufp XXX XXX
%9527:	load	 %9526
%9528:	icmp	 %9527 XXX
%9529:	br	 %9528 if.end468 if.then467

BASIC BLOCK if.then467
%9530:	br	 return

BASIC BLOCK if.end468
%9531:	getelementptr	 bufp XXX XXX
%9532:	load	 %9531
%9533:	shl	 %9532 XXX
%9534:	store	 %9533 %9531
%9535:	getelementptr	 bufp XXX XXX
%9536:	load	 %9535
%9537:	icmp	 %9536 XXX
%9538:	br	 %9537 if.end476 if.then474

BASIC BLOCK if.then474
%9539:	getelementptr	 bufp XXX XXX
%9540:	store	 XXX %9539
%9541:	br	 if.end476

BASIC BLOCK if.end476
%9542:	getelementptr	 bufp XXX XXX
%9543:	load	 %9542
%9544:	getelementptr	 bufp XXX XXX
%9545:	load	 %9544
%9546:	call	 %9543 %9545 realloc
%9547:	getelementptr	 bufp XXX XXX
%9548:	store	 %9546 %9547
%9549:	getelementptr	 bufp XXX XXX
%9550:	load	 %9549
%9551:	icmp	 %9550 XXX
%9552:	br	 %9551 if.end485 if.then484

BASIC BLOCK if.then484
%9553:	br	 return

BASIC BLOCK if.end485
%9554:	getelementptr	 bufp XXX XXX
%9555:	load	 %9554
%9556:	icmp	 %9525 %9555
%9557:	br	 %9556 if.end524 if.then489

BASIC BLOCK if.then489
%9558:	ptrtoint	 %9512
%9559:	ptrtoint	 %9525
%9560:	sub	 %9558 %9559
%9561:	getelementptr	 bufp XXX XXX
%9562:	load	 %9561
%9563:	getelementptr	 %9562 %9560
%9564:	ptrtoint	 %9509
%9565:	ptrtoint	 %9525
%9566:	sub	 %9564 %9565
%9567:	getelementptr	 bufp XXX XXX
%9568:	load	 %9567
%9569:	getelementptr	 %9568 %9566
%9570:	icmp	 %9508 XXX
%9571:	br	 %9570 if.end507 if.then501

BASIC BLOCK if.then501
%9572:	ptrtoint	 %9508
%9573:	ptrtoint	 %9525
%9574:	sub	 %9572 %9573
%9575:	getelementptr	 bufp XXX XXX
%9576:	load	 %9575
%9577:	getelementptr	 %9576 %9574
%9578:	br	 if.end507

BASIC BLOCK if.end507
%9579:	phi	 %9577 %9508
%9580:	icmp	 %9510 XXX
%9581:	br	 %9580 if.end515 if.then509

BASIC BLOCK if.then509
%9582:	ptrtoint	 %9510
%9583:	ptrtoint	 %9525
%9584:	sub	 %9582 %9583
%9585:	getelementptr	 bufp XXX XXX
%9586:	load	 %9585
%9587:	getelementptr	 %9586 %9584
%9588:	br	 if.end515

BASIC BLOCK if.end515
%9589:	phi	 %9587 %9510
%9590:	icmp	 %9511 XXX
%9591:	br	 %9590 if.end523 if.then517

BASIC BLOCK if.then517
%9592:	ptrtoint	 %9511
%9593:	ptrtoint	 %9525
%9594:	sub	 %9592 %9593
%9595:	getelementptr	 bufp XXX XXX
%9596:	load	 %9595
%9597:	getelementptr	 %9596 %9594
%9598:	br	 if.end523

BASIC BLOCK if.end523
%9599:	phi	 %9597 %9511
%9600:	br	 if.end524

BASIC BLOCK if.end524
%9601:	phi	 %9579 %9508
%9602:	phi	 %9569 %9509
%9603:	phi	 %9589 %9510
%9604:	phi	 %9599 %9511
%9605:	phi	 %9563 %9512
%9606:	br	 do.end525

BASIC BLOCK do.end525
%9607:	br	 while.cond451

BASIC BLOCK while.end526
%9608:	sext	 %9505
%9609:	icmp	 %9608 XXX
%9610:	select	 %9609 XXX XXX
%9611:	getelementptr	 %9512 XXX
%9612:	ptrtoint	 %9611
%9613:	ptrtoint	 %9510
%9614:	sub	 %9612 %9613
%9615:	sub	 %9614 XXX
%9616:	trunc	 %9615
%9617:	call	 %9610 %9510 %9616 %9512 insert_op1
%9618:	getelementptr	 %9512 XXX
%9619:	icmp	 %9225 XXX
%9620:	br	 %9619 if.then538 if.end622

BASIC BLOCK if.then538
%9621:	br	 while.cond539

BASIC BLOCK while.cond539
%9622:	phi	 %9508 %9715
%9623:	phi	 %9509 %9716
%9624:	phi	 %9510 %9717
%9625:	phi	 XXX %9718
%9626:	phi	 %9618 %9719
%9627:	getelementptr	 bufp XXX XXX
%9628:	load	 %9627
%9629:	ptrtoint	 %9626
%9630:	ptrtoint	 %9628
%9631:	sub	 %9629 %9630
%9632:	add	 %9631 XXX
%9633:	getelementptr	 bufp XXX XXX
%9634:	load	 %9633
%9635:	icmp	 %9632 %9634
%9636:	br	 %9635 while.end614 while.body548

BASIC BLOCK while.body548
%9637:	br	 do.body549

BASIC BLOCK do.body549
%9638:	getelementptr	 bufp XXX XXX
%9639:	load	 %9638
%9640:	getelementptr	 bufp XXX XXX
%9641:	load	 %9640
%9642:	icmp	 %9641 XXX
%9643:	br	 %9642 if.end556 if.then555

BASIC BLOCK if.then555
%9644:	br	 return

BASIC BLOCK if.end556
%9645:	getelementptr	 bufp XXX XXX
%9646:	load	 %9645
%9647:	shl	 %9646 XXX
%9648:	store	 %9647 %9645
%9649:	getelementptr	 bufp XXX XXX
%9650:	load	 %9649
%9651:	icmp	 %9650 XXX
%9652:	br	 %9651 if.end564 if.then562

BASIC BLOCK if.then562
%9653:	getelementptr	 bufp XXX XXX
%9654:	store	 XXX %9653
%9655:	br	 if.end564

BASIC BLOCK if.end564
%9656:	getelementptr	 bufp XXX XXX
%9657:	load	 %9656
%9658:	getelementptr	 bufp XXX XXX
%9659:	load	 %9658
%9660:	call	 %9657 %9659 realloc
%9661:	getelementptr	 bufp XXX XXX
%9662:	store	 %9660 %9661
%9663:	getelementptr	 bufp XXX XXX
%9664:	load	 %9663
%9665:	icmp	 %9664 XXX
%9666:	br	 %9665 if.end573 if.then572

BASIC BLOCK if.then572
%9667:	br	 return

BASIC BLOCK if.end573
%9668:	getelementptr	 bufp XXX XXX
%9669:	load	 %9668
%9670:	icmp	 %9639 %9669
%9671:	br	 %9670 if.end612 if.then577

BASIC BLOCK if.then577
%9672:	ptrtoint	 %9626
%9673:	ptrtoint	 %9639
%9674:	sub	 %9672 %9673
%9675:	getelementptr	 bufp XXX XXX
%9676:	load	 %9675
%9677:	getelementptr	 %9676 %9674
%9678:	ptrtoint	 %9623
%9679:	ptrtoint	 %9639
%9680:	sub	 %9678 %9679
%9681:	getelementptr	 bufp XXX XXX
%9682:	load	 %9681
%9683:	getelementptr	 %9682 %9680
%9684:	icmp	 %9622 XXX
%9685:	br	 %9684 if.end595 if.then589

BASIC BLOCK if.then589
%9686:	ptrtoint	 %9622
%9687:	ptrtoint	 %9639
%9688:	sub	 %9686 %9687
%9689:	getelementptr	 bufp XXX XXX
%9690:	load	 %9689
%9691:	getelementptr	 %9690 %9688
%9692:	br	 if.end595

BASIC BLOCK if.end595
%9693:	phi	 %9691 %9622
%9694:	icmp	 %9624 XXX
%9695:	br	 %9694 if.end603 if.then597

BASIC BLOCK if.then597
%9696:	ptrtoint	 %9624
%9697:	ptrtoint	 %9639
%9698:	sub	 %9696 %9697
%9699:	getelementptr	 bufp XXX XXX
%9700:	load	 %9699
%9701:	getelementptr	 %9700 %9698
%9702:	br	 if.end603

BASIC BLOCK if.end603
%9703:	phi	 %9701 %9624
%9704:	icmp	 %9625 XXX
%9705:	br	 %9704 if.end611 if.then605

BASIC BLOCK if.then605
%9706:	ptrtoint	 %9625
%9707:	ptrtoint	 %9639
%9708:	sub	 %9706 %9707
%9709:	getelementptr	 bufp XXX XXX
%9710:	load	 %9709
%9711:	getelementptr	 %9710 %9708
%9712:	br	 if.end611

BASIC BLOCK if.end611
%9713:	phi	 %9711 %9625
%9714:	br	 if.end612

BASIC BLOCK if.end612
%9715:	phi	 %9693 %9622
%9716:	phi	 %9683 %9623
%9717:	phi	 %9703 %9624
%9718:	phi	 %9713 %9625
%9719:	phi	 %9677 %9626
%9720:	br	 do.end613

BASIC BLOCK do.end613
%9721:	br	 while.cond539

BASIC BLOCK while.end614
%9722:	getelementptr	 %9624 XXX
%9723:	ptrtoint	 %9722
%9724:	ptrtoint	 %9624
%9725:	sub	 %9723 %9724
%9726:	sub	 %9725 XXX
%9727:	trunc	 %9726
%9728:	call	 XXX %9624 %9727 %9626 insert_op1
%9729:	getelementptr	 %9626 XXX
%9730:	br	 if.end622

BASIC BLOCK if.end622
%9731:	phi	 %9508 %9622
%9732:	phi	 %9509 %9623
%9733:	phi	 %9510 %9624
%9734:	phi	 XXX %9625
%9735:	phi	 %9618 %9729
%9736:	br	 sw.epilog3389

BASIC BLOCK sw.bb623
%9737:	br	 do.body624

BASIC BLOCK do.body624
%9738:	br	 while.cond625

BASIC BLOCK while.cond625
%9739:	phi	 %8923 %9832
%9740:	phi	 %8924 %9833
%9741:	phi	 %8927 %9834
%9742:	phi	 %8926 %9835
%9743:	phi	 %8927 %9836
%9744:	getelementptr	 bufp XXX XXX
%9745:	load	 %9744
%9746:	ptrtoint	 %9743
%9747:	ptrtoint	 %9745
%9748:	sub	 %9746 %9747
%9749:	add	 %9748 XXX
%9750:	getelementptr	 bufp XXX XXX
%9751:	load	 %9750
%9752:	icmp	 %9749 %9751
%9753:	br	 %9752 while.end700 while.body634

BASIC BLOCK while.body634
%9754:	br	 do.body635

BASIC BLOCK do.body635
%9755:	getelementptr	 bufp XXX XXX
%9756:	load	 %9755
%9757:	getelementptr	 bufp XXX XXX
%9758:	load	 %9757
%9759:	icmp	 %9758 XXX
%9760:	br	 %9759 if.end642 if.then641

BASIC BLOCK if.then641
%9761:	br	 return

BASIC BLOCK if.end642
%9762:	getelementptr	 bufp XXX XXX
%9763:	load	 %9762
%9764:	shl	 %9763 XXX
%9765:	store	 %9764 %9762
%9766:	getelementptr	 bufp XXX XXX
%9767:	load	 %9766
%9768:	icmp	 %9767 XXX
%9769:	br	 %9768 if.end650 if.then648

BASIC BLOCK if.then648
%9770:	getelementptr	 bufp XXX XXX
%9771:	store	 XXX %9770
%9772:	br	 if.end650

BASIC BLOCK if.end650
%9773:	getelementptr	 bufp XXX XXX
%9774:	load	 %9773
%9775:	getelementptr	 bufp XXX XXX
%9776:	load	 %9775
%9777:	call	 %9774 %9776 realloc
%9778:	getelementptr	 bufp XXX XXX
%9779:	store	 %9777 %9778
%9780:	getelementptr	 bufp XXX XXX
%9781:	load	 %9780
%9782:	icmp	 %9781 XXX
%9783:	br	 %9782 if.end659 if.then658

BASIC BLOCK if.then658
%9784:	br	 return

BASIC BLOCK if.end659
%9785:	getelementptr	 bufp XXX XXX
%9786:	load	 %9785
%9787:	icmp	 %9756 %9786
%9788:	br	 %9787 if.end698 if.then663

BASIC BLOCK if.then663
%9789:	ptrtoint	 %9743
%9790:	ptrtoint	 %9756
%9791:	sub	 %9789 %9790
%9792:	getelementptr	 bufp XXX XXX
%9793:	load	 %9792
%9794:	getelementptr	 %9793 %9791
%9795:	ptrtoint	 %9740
%9796:	ptrtoint	 %9756
%9797:	sub	 %9795 %9796
%9798:	getelementptr	 bufp XXX XXX
%9799:	load	 %9798
%9800:	getelementptr	 %9799 %9797
%9801:	icmp	 %9739 XXX
%9802:	br	 %9801 if.end681 if.then675

BASIC BLOCK if.then675
%9803:	ptrtoint	 %9739
%9804:	ptrtoint	 %9756
%9805:	sub	 %9803 %9804
%9806:	getelementptr	 bufp XXX XXX
%9807:	load	 %9806
%9808:	getelementptr	 %9807 %9805
%9809:	br	 if.end681

BASIC BLOCK if.end681
%9810:	phi	 %9808 %9739
%9811:	icmp	 %9741 XXX
%9812:	br	 %9811 if.end689 if.then683

BASIC BLOCK if.then683
%9813:	ptrtoint	 %9741
%9814:	ptrtoint	 %9756
%9815:	sub	 %9813 %9814
%9816:	getelementptr	 bufp XXX XXX
%9817:	load	 %9816
%9818:	getelementptr	 %9817 %9815
%9819:	br	 if.end689

BASIC BLOCK if.end689
%9820:	phi	 %9818 %9741
%9821:	icmp	 %9742 XXX
%9822:	br	 %9821 if.end697 if.then691

BASIC BLOCK if.then691
%9823:	ptrtoint	 %9742
%9824:	ptrtoint	 %9756
%9825:	sub	 %9823 %9824
%9826:	getelementptr	 bufp XXX XXX
%9827:	load	 %9826
%9828:	getelementptr	 %9827 %9825
%9829:	br	 if.end697

BASIC BLOCK if.end697
%9830:	phi	 %9828 %9742
%9831:	br	 if.end698

BASIC BLOCK if.end698
%9832:	phi	 %9810 %9739
%9833:	phi	 %9800 %9740
%9834:	phi	 %9820 %9741
%9835:	phi	 %9830 %9742
%9836:	phi	 %9794 %9743
%9837:	br	 do.end699

BASIC BLOCK do.end699
%9838:	br	 while.cond625

BASIC BLOCK while.end700
%9839:	getelementptr	 %9743 XXX
%9840:	store	 XXX %9743
%9841:	br	 do.end702

BASIC BLOCK do.end702
%9842:	br	 sw.epilog3389

BASIC BLOCK sw.bb703
%9843:	load	 %8851
%9844:	icmp	 %9843 %8854
%9845:	br	 %9844 if.end708 if.then706

BASIC BLOCK if.then706
%9846:	getelementptr	 %8850 XXX XXX
%9847:	load	 %9846
%9848:	bitcast	 %9847
%9849:	call	 %9848 free
%9850:	br	 return

BASIC BLOCK if.end708
%9851:	br	 while.cond709

BASIC BLOCK while.cond709
%9852:	phi	 %8923 %9945
%9853:	phi	 %8924 %9946
%9854:	phi	 %8925 %9947
%9855:	phi	 %8926 %9948
%9856:	phi	 %8927 %9949
%9857:	getelementptr	 bufp XXX XXX
%9858:	load	 %9857
%9859:	ptrtoint	 %9856
%9860:	ptrtoint	 %9858
%9861:	sub	 %9859 %9860
%9862:	add	 %9861 XXX
%9863:	getelementptr	 bufp XXX XXX
%9864:	load	 %9863
%9865:	icmp	 %9862 %9864
%9866:	br	 %9865 while.end784 while.body718

BASIC BLOCK while.body718
%9867:	br	 do.body719

BASIC BLOCK do.body719
%9868:	getelementptr	 bufp XXX XXX
%9869:	load	 %9868
%9870:	getelementptr	 bufp XXX XXX
%9871:	load	 %9870
%9872:	icmp	 %9871 XXX
%9873:	br	 %9872 if.end726 if.then725

BASIC BLOCK if.then725
%9874:	br	 return

BASIC BLOCK if.end726
%9875:	getelementptr	 bufp XXX XXX
%9876:	load	 %9875
%9877:	shl	 %9876 XXX
%9878:	store	 %9877 %9875
%9879:	getelementptr	 bufp XXX XXX
%9880:	load	 %9879
%9881:	icmp	 %9880 XXX
%9882:	br	 %9881 if.end734 if.then732

BASIC BLOCK if.then732
%9883:	getelementptr	 bufp XXX XXX
%9884:	store	 XXX %9883
%9885:	br	 if.end734

BASIC BLOCK if.end734
%9886:	getelementptr	 bufp XXX XXX
%9887:	load	 %9886
%9888:	getelementptr	 bufp XXX XXX
%9889:	load	 %9888
%9890:	call	 %9887 %9889 realloc
%9891:	getelementptr	 bufp XXX XXX
%9892:	store	 %9890 %9891
%9893:	getelementptr	 bufp XXX XXX
%9894:	load	 %9893
%9895:	icmp	 %9894 XXX
%9896:	br	 %9895 if.end743 if.then742

BASIC BLOCK if.then742
%9897:	br	 return

BASIC BLOCK if.end743
%9898:	getelementptr	 bufp XXX XXX
%9899:	load	 %9898
%9900:	icmp	 %9869 %9899
%9901:	br	 %9900 if.end782 if.then747

BASIC BLOCK if.then747
%9902:	ptrtoint	 %9856
%9903:	ptrtoint	 %9869
%9904:	sub	 %9902 %9903
%9905:	getelementptr	 bufp XXX XXX
%9906:	load	 %9905
%9907:	getelementptr	 %9906 %9904
%9908:	ptrtoint	 %9853
%9909:	ptrtoint	 %9869
%9910:	sub	 %9908 %9909
%9911:	getelementptr	 bufp XXX XXX
%9912:	load	 %9911
%9913:	getelementptr	 %9912 %9910
%9914:	icmp	 %9852 XXX
%9915:	br	 %9914 if.end765 if.then759

BASIC BLOCK if.then759
%9916:	ptrtoint	 %9852
%9917:	ptrtoint	 %9869
%9918:	sub	 %9916 %9917
%9919:	getelementptr	 bufp XXX XXX
%9920:	load	 %9919
%9921:	getelementptr	 %9920 %9918
%9922:	br	 if.end765

BASIC BLOCK if.end765
%9923:	phi	 %9921 %9852
%9924:	icmp	 %9854 XXX
%9925:	br	 %9924 if.end773 if.then767

BASIC BLOCK if.then767
%9926:	ptrtoint	 %9854
%9927:	ptrtoint	 %9869
%9928:	sub	 %9926 %9927
%9929:	getelementptr	 bufp XXX XXX
%9930:	load	 %9929
%9931:	getelementptr	 %9930 %9928
%9932:	br	 if.end773

BASIC BLOCK if.end773
%9933:	phi	 %9931 %9854
%9934:	icmp	 %9855 XXX
%9935:	br	 %9934 if.end781 if.then775

BASIC BLOCK if.then775
%9936:	ptrtoint	 %9855
%9937:	ptrtoint	 %9869
%9938:	sub	 %9936 %9937
%9939:	getelementptr	 bufp XXX XXX
%9940:	load	 %9939
%9941:	getelementptr	 %9940 %9938
%9942:	br	 if.end781

BASIC BLOCK if.end781
%9943:	phi	 %9941 %9855
%9944:	br	 if.end782

BASIC BLOCK if.end782
%9945:	phi	 %9923 %9852
%9946:	phi	 %9913 %9853
%9947:	phi	 %9933 %9854
%9948:	phi	 %9943 %9855
%9949:	phi	 %9907 %9856
%9950:	br	 do.end783

BASIC BLOCK do.end783
%9951:	br	 while.cond709

BASIC BLOCK while.end784
%9952:	br	 do.body785

BASIC BLOCK do.body785
%9953:	br	 while.cond786

BASIC BLOCK while.cond786
%9954:	phi	 %9852 %10047
%9955:	phi	 %9853 %10048
%9956:	phi	 %9856 %10049
%9957:	phi	 %9855 %10050
%9958:	phi	 %9856 %10051
%9959:	getelementptr	 bufp XXX XXX
%9960:	load	 %9959
%9961:	ptrtoint	 %9958
%9962:	ptrtoint	 %9960
%9963:	sub	 %9961 %9962
%9964:	add	 %9963 XXX
%9965:	getelementptr	 bufp XXX XXX
%9966:	load	 %9965
%9967:	icmp	 %9964 %9966
%9968:	br	 %9967 while.end861 while.body795

BASIC BLOCK while.body795
%9969:	br	 do.body796

BASIC BLOCK do.body796
%9970:	getelementptr	 bufp XXX XXX
%9971:	load	 %9970
%9972:	getelementptr	 bufp XXX XXX
%9973:	load	 %9972
%9974:	icmp	 %9973 XXX
%9975:	br	 %9974 if.end803 if.then802

BASIC BLOCK if.then802
%9976:	br	 return

BASIC BLOCK if.end803
%9977:	getelementptr	 bufp XXX XXX
%9978:	load	 %9977
%9979:	shl	 %9978 XXX
%9980:	store	 %9979 %9977
%9981:	getelementptr	 bufp XXX XXX
%9982:	load	 %9981
%9983:	icmp	 %9982 XXX
%9984:	br	 %9983 if.end811 if.then809

BASIC BLOCK if.then809
%9985:	getelementptr	 bufp XXX XXX
%9986:	store	 XXX %9985
%9987:	br	 if.end811

BASIC BLOCK if.end811
%9988:	getelementptr	 bufp XXX XXX
%9989:	load	 %9988
%9990:	getelementptr	 bufp XXX XXX
%9991:	load	 %9990
%9992:	call	 %9989 %9991 realloc
%9993:	getelementptr	 bufp XXX XXX
%9994:	store	 %9992 %9993
%9995:	getelementptr	 bufp XXX XXX
%9996:	load	 %9995
%9997:	icmp	 %9996 XXX
%9998:	br	 %9997 if.end820 if.then819

BASIC BLOCK if.then819
%9999:	br	 return

BASIC BLOCK if.end820
%10000:	getelementptr	 bufp XXX XXX
%10001:	load	 %10000
%10002:	icmp	 %9971 %10001
%10003:	br	 %10002 if.end859 if.then824

BASIC BLOCK if.then824
%10004:	ptrtoint	 %9958
%10005:	ptrtoint	 %9971
%10006:	sub	 %10004 %10005
%10007:	getelementptr	 bufp XXX XXX
%10008:	load	 %10007
%10009:	getelementptr	 %10008 %10006
%10010:	ptrtoint	 %9955
%10011:	ptrtoint	 %9971
%10012:	sub	 %10010 %10011
%10013:	getelementptr	 bufp XXX XXX
%10014:	load	 %10013
%10015:	getelementptr	 %10014 %10012
%10016:	icmp	 %9954 XXX
%10017:	br	 %10016 if.end842 if.then836

BASIC BLOCK if.then836
%10018:	ptrtoint	 %9954
%10019:	ptrtoint	 %9971
%10020:	sub	 %10018 %10019
%10021:	getelementptr	 bufp XXX XXX
%10022:	load	 %10021
%10023:	getelementptr	 %10022 %10020
%10024:	br	 if.end842

BASIC BLOCK if.end842
%10025:	phi	 %10023 %9954
%10026:	icmp	 %9956 XXX
%10027:	br	 %10026 if.end850 if.then844

BASIC BLOCK if.then844
%10028:	ptrtoint	 %9956
%10029:	ptrtoint	 %9971
%10030:	sub	 %10028 %10029
%10031:	getelementptr	 bufp XXX XXX
%10032:	load	 %10031
%10033:	getelementptr	 %10032 %10030
%10034:	br	 if.end850

BASIC BLOCK if.end850
%10035:	phi	 %10033 %9956
%10036:	icmp	 %9957 XXX
%10037:	br	 %10036 if.end858 if.then852

BASIC BLOCK if.then852
%10038:	ptrtoint	 %9957
%10039:	ptrtoint	 %9971
%10040:	sub	 %10038 %10039
%10041:	getelementptr	 bufp XXX XXX
%10042:	load	 %10041
%10043:	getelementptr	 %10042 %10040
%10044:	br	 if.end858

BASIC BLOCK if.end858
%10045:	phi	 %10043 %9957
%10046:	br	 if.end859

BASIC BLOCK if.end859
%10047:	phi	 %10025 %9954
%10048:	phi	 %10015 %9955
%10049:	phi	 %10035 %9956
%10050:	phi	 %10045 %9957
%10051:	phi	 %10009 %9958
%10052:	br	 do.end860

BASIC BLOCK do.end860
%10053:	br	 while.cond786

BASIC BLOCK while.end861
%10054:	load	 %8851
%10055:	load	 %10054
%10056:	sext	 %10055
%10057:	icmp	 %10056 XXX
%10058:	select	 %10057 XXX XXX
%10059:	trunc	 %10058
%10060:	getelementptr	 %9958 XXX
%10061:	store	 %10059 %9958
%10062:	br	 do.end868

BASIC BLOCK do.end868
%10063:	load	 %8851
%10064:	load	 %10063
%10065:	sext	 %10064
%10066:	icmp	 %10065 XXX
%10067:	br	 %10066 if.end874 if.then872

BASIC BLOCK if.then872
%10068:	load	 %8851
%10069:	getelementptr	 %10068 XXX
%10070:	store	 %10069 %8851
%10071:	br	 if.end874

BASIC BLOCK if.end874
%10072:	load	 %8851
%10073:	br	 do.body875

BASIC BLOCK do.body875
%10074:	br	 while.cond876

BASIC BLOCK while.cond876
%10075:	phi	 %9954 %10168
%10076:	phi	 %9955 %10169
%10077:	phi	 %9956 %10170
%10078:	phi	 %9957 %10171
%10079:	phi	 %10060 %10172
%10080:	getelementptr	 bufp XXX XXX
%10081:	load	 %10080
%10082:	ptrtoint	 %10079
%10083:	ptrtoint	 %10081
%10084:	sub	 %10082 %10083
%10085:	add	 %10084 XXX
%10086:	getelementptr	 bufp XXX XXX
%10087:	load	 %10086
%10088:	icmp	 %10085 %10087
%10089:	br	 %10088 while.end951 while.body885

BASIC BLOCK while.body885
%10090:	br	 do.body886

BASIC BLOCK do.body886
%10091:	getelementptr	 bufp XXX XXX
%10092:	load	 %10091
%10093:	getelementptr	 bufp XXX XXX
%10094:	load	 %10093
%10095:	icmp	 %10094 XXX
%10096:	br	 %10095 if.end893 if.then892

BASIC BLOCK if.then892
%10097:	br	 return

BASIC BLOCK if.end893
%10098:	getelementptr	 bufp XXX XXX
%10099:	load	 %10098
%10100:	shl	 %10099 XXX
%10101:	store	 %10100 %10098
%10102:	getelementptr	 bufp XXX XXX
%10103:	load	 %10102
%10104:	icmp	 %10103 XXX
%10105:	br	 %10104 if.end901 if.then899

BASIC BLOCK if.then899
%10106:	getelementptr	 bufp XXX XXX
%10107:	store	 XXX %10106
%10108:	br	 if.end901

BASIC BLOCK if.end901
%10109:	getelementptr	 bufp XXX XXX
%10110:	load	 %10109
%10111:	getelementptr	 bufp XXX XXX
%10112:	load	 %10111
%10113:	call	 %10110 %10112 realloc
%10114:	getelementptr	 bufp XXX XXX
%10115:	store	 %10113 %10114
%10116:	getelementptr	 bufp XXX XXX
%10117:	load	 %10116
%10118:	icmp	 %10117 XXX
%10119:	br	 %10118 if.end910 if.then909

BASIC BLOCK if.then909
%10120:	br	 return

BASIC BLOCK if.end910
%10121:	getelementptr	 bufp XXX XXX
%10122:	load	 %10121
%10123:	icmp	 %10092 %10122
%10124:	br	 %10123 if.end949 if.then914

BASIC BLOCK if.then914
%10125:	ptrtoint	 %10079
%10126:	ptrtoint	 %10092
%10127:	sub	 %10125 %10126
%10128:	getelementptr	 bufp XXX XXX
%10129:	load	 %10128
%10130:	getelementptr	 %10129 %10127
%10131:	ptrtoint	 %10076
%10132:	ptrtoint	 %10092
%10133:	sub	 %10131 %10132
%10134:	getelementptr	 bufp XXX XXX
%10135:	load	 %10134
%10136:	getelementptr	 %10135 %10133
%10137:	icmp	 %10075 XXX
%10138:	br	 %10137 if.end932 if.then926

BASIC BLOCK if.then926
%10139:	ptrtoint	 %10075
%10140:	ptrtoint	 %10092
%10141:	sub	 %10139 %10140
%10142:	getelementptr	 bufp XXX XXX
%10143:	load	 %10142
%10144:	getelementptr	 %10143 %10141
%10145:	br	 if.end932

BASIC BLOCK if.end932
%10146:	phi	 %10144 %10075
%10147:	icmp	 %10077 XXX
%10148:	br	 %10147 if.end940 if.then934

BASIC BLOCK if.then934
%10149:	ptrtoint	 %10077
%10150:	ptrtoint	 %10092
%10151:	sub	 %10149 %10150
%10152:	getelementptr	 bufp XXX XXX
%10153:	load	 %10152
%10154:	getelementptr	 %10153 %10151
%10155:	br	 if.end940

BASIC BLOCK if.end940
%10156:	phi	 %10154 %10077
%10157:	icmp	 %10078 XXX
%10158:	br	 %10157 if.end948 if.then942

BASIC BLOCK if.then942
%10159:	ptrtoint	 %10078
%10160:	ptrtoint	 %10092
%10161:	sub	 %10159 %10160
%10162:	getelementptr	 bufp XXX XXX
%10163:	load	 %10162
%10164:	getelementptr	 %10163 %10161
%10165:	br	 if.end948

BASIC BLOCK if.end948
%10166:	phi	 %10164 %10078
%10167:	br	 if.end949

BASIC BLOCK if.end949
%10168:	phi	 %10146 %10075
%10169:	phi	 %10136 %10076
%10170:	phi	 %10156 %10077
%10171:	phi	 %10166 %10078
%10172:	phi	 %10130 %10079
%10173:	br	 do.end950

BASIC BLOCK do.end950
%10174:	br	 while.cond876

BASIC BLOCK while.end951
%10175:	getelementptr	 %10079 XXX
%10176:	store	 XXX %10079
%10177:	br	 do.end953

BASIC BLOCK do.end953
%10178:	call	 %10175 XXX XXX XXX XXX llvm.memset.p0i8.i64
%10179:	getelementptr	 %10175 XXX
%10180:	load	 %10179
%10181:	zext	 %10180
%10182:	icmp	 %10181 XXX
%10183:	br	 %10182 if.end966 land.lhs.true958

BASIC BLOCK land.lhs.true958
%10184:	and	 syntax XXX
%10185:	icmp	 %10184 XXX
%10186:	br	 %10185 if.end966 if.then961

BASIC BLOCK if.then961
%10187:	getelementptr	 %10175 XXX
%10188:	load	 %10187
%10189:	zext	 %10188
%10190:	or	 %10189 XXX
%10191:	trunc	 %10190
%10192:	store	 %10191 %10187
%10193:	br	 if.end966

BASIC BLOCK if.end966
%10194:	br	 for.cond967

BASIC BLOCK for.cond967
%10195:	phi	 XXX %10195 %10604
%10196:	load	 %8851
%10197:	icmp	 %10196 %8854
%10198:	br	 %10197 if.end972 if.then970

BASIC BLOCK if.then970
%10199:	getelementptr	 %8850 XXX XXX
%10200:	load	 %10199
%10201:	bitcast	 %10200
%10202:	call	 %10201 free
%10203:	br	 return

BASIC BLOCK if.end972
%10204:	br	 do.body973

BASIC BLOCK do.body973
%10205:	load	 %8851
%10206:	icmp	 %10205 %8854
%10207:	br	 %10206 if.end977 if.then976

BASIC BLOCK if.then976
%10208:	br	 return

BASIC BLOCK if.end977
%10209:	load	 %8851
%10210:	getelementptr	 %10209 XXX
%10211:	store	 %10210 %8851
%10212:	load	 %10209
%10213:	icmp	 %8856 XXX
%10214:	br	 %10213 if.end983 if.then980

BASIC BLOCK if.then980
%10215:	zext	 %10212
%10216:	getelementptr	 %8856 %10215
%10217:	load	 %10216
%10218:	br	 if.end983

BASIC BLOCK if.end983
%10219:	phi	 %10217 %10212
%10220:	br	 do.end984

BASIC BLOCK do.end984
%10221:	and	 syntax XXX
%10222:	icmp	 %10221 XXX
%10223:	br	 %10222 if.end1017 land.lhs.true987

BASIC BLOCK land.lhs.true987
%10224:	zext	 %10219
%10225:	icmp	 %10224 XXX
%10226:	br	 %10225 if.end1017 if.then991

BASIC BLOCK if.then991
%10227:	load	 %8851
%10228:	icmp	 %10227 %8854
%10229:	br	 %10228 if.end996 if.then994

BASIC BLOCK if.then994
%10230:	getelementptr	 %8850 XXX XXX
%10231:	load	 %10230
%10232:	bitcast	 %10231
%10233:	call	 %10232 free
%10234:	br	 return

BASIC BLOCK if.end996
%10235:	br	 do.body997

BASIC BLOCK do.body997
%10236:	load	 %8851
%10237:	icmp	 %10236 %8854
%10238:	br	 %10237 if.end1001 if.then1000

BASIC BLOCK if.then1000
%10239:	br	 return

BASIC BLOCK if.end1001
%10240:	load	 %8851
%10241:	getelementptr	 %10240 XXX
%10242:	store	 %10241 %8851
%10243:	load	 %10240
%10244:	icmp	 %8856 XXX
%10245:	br	 %10244 if.end1007 if.then1004

BASIC BLOCK if.then1004
%10246:	zext	 %10243
%10247:	getelementptr	 %8856 %10246
%10248:	load	 %10247
%10249:	br	 if.end1007

BASIC BLOCK if.end1007
%10250:	phi	 %10248 %10243
%10251:	br	 do.end1008

BASIC BLOCK do.end1008
%10252:	zext	 %10250
%10253:	srem	 %10252 XXX
%10254:	shl	 XXX %10253
%10255:	zext	 %10250
%10256:	sdiv	 %10255 XXX
%10257:	sext	 %10256
%10258:	getelementptr	 %10175 %10257
%10259:	load	 %10258
%10260:	zext	 %10259
%10261:	or	 %10260 %10254
%10262:	trunc	 %10261
%10263:	store	 %10262 %10258
%10264:	br	 for.cond967

BASIC BLOCK if.end1017
%10265:	zext	 %10219
%10266:	icmp	 %10265 XXX
%10267:	br	 %10266 if.end1026 land.lhs.true1021

BASIC BLOCK land.lhs.true1021
%10268:	load	 %8851
%10269:	getelementptr	 %10072 XXX
%10270:	icmp	 %10268 %10269
%10271:	br	 %10270 if.end1026 if.then1025

BASIC BLOCK if.then1025
%10272:	br	 for.end1298

BASIC BLOCK if.end1026
%10273:	sext	 %10195
%10274:	icmp	 %10273 XXX
%10275:	br	 %10274 if.end1039 land.lhs.true1029

BASIC BLOCK land.lhs.true1029
%10276:	zext	 %10219
%10277:	icmp	 %10276 XXX
%10278:	br	 %10277 if.end1039 land.lhs.true1033

BASIC BLOCK land.lhs.true1033
%10279:	load	 %8851
%10280:	load	 %10279
%10281:	sext	 %10280
%10282:	icmp	 %10281 XXX
%10283:	br	 %10282 if.end1039 if.then1037

BASIC BLOCK if.then1037
%10284:	getelementptr	 %8850 XXX XXX
%10285:	load	 %10284
%10286:	bitcast	 %10285
%10287:	call	 %10286 free
%10288:	br	 return

BASIC BLOCK if.end1039
%10289:	zext	 %10219
%10290:	icmp	 %10289 XXX
%10291:	br	 %10290 if.else1077 land.lhs.true1043

BASIC BLOCK land.lhs.true1043
%10292:	load	 %8851
%10293:	getelementptr	 %10292 XXX
%10294:	icmp	 %10293 pattern
%10295:	br	 %10294 land.lhs.true1052 land.lhs.true1047

BASIC BLOCK land.lhs.true1047
%10296:	load	 %8851
%10297:	getelementptr	 %10296 XXX
%10298:	load	 %10297
%10299:	sext	 %10298
%10300:	icmp	 %10299 XXX
%10301:	br	 %10300 land.lhs.true1052 if.else1077

BASIC BLOCK land.lhs.true1052
%10302:	load	 %8851
%10303:	getelementptr	 %10302 XXX
%10304:	icmp	 %10303 pattern
%10305:	br	 %10304 land.lhs.true1066 land.lhs.true1056

BASIC BLOCK land.lhs.true1056
%10306:	load	 %8851
%10307:	getelementptr	 %10306 XXX
%10308:	load	 %10307
%10309:	sext	 %10308
%10310:	icmp	 %10309 XXX
%10311:	br	 %10310 land.lhs.true1066 land.lhs.true1061

BASIC BLOCK land.lhs.true1061
%10312:	load	 %8851
%10313:	getelementptr	 %10312 XXX
%10314:	load	 %10313
%10315:	sext	 %10314
%10316:	icmp	 %10315 XXX
%10317:	br	 %10316 land.lhs.true1066 if.else1077

BASIC BLOCK land.lhs.true1066
%10318:	load	 %8851
%10319:	load	 %10318
%10320:	sext	 %10319
%10321:	icmp	 %10320 XXX
%10322:	br	 %10321 if.else1077 if.then1070

BASIC BLOCK if.then1070
%10323:	call	 %8851 %8854 %8856 syntax %10175 compile_range
%10324:	icmp	 %10323 XXX
%10325:	br	 %10324 if.end1076 if.then1074

BASIC BLOCK if.then1074
%10326:	getelementptr	 %8850 XXX XXX
%10327:	load	 %10326
%10328:	bitcast	 %10327
%10329:	call	 %10328 free
%10330:	br	 return

BASIC BLOCK if.end1076
%10331:	br	 if.end1297

BASIC BLOCK if.else1077
%10332:	load	 %8851
%10333:	getelementptr	 %10332 XXX
%10334:	load	 %10333
%10335:	sext	 %10334
%10336:	icmp	 %10335 XXX
%10337:	br	 %10336 if.else1107 land.lhs.true1082

BASIC BLOCK land.lhs.true1082
%10338:	load	 %8851
%10339:	getelementptr	 %10338 XXX
%10340:	load	 %10339
%10341:	sext	 %10340
%10342:	icmp	 %10341 XXX
%10343:	br	 %10342 if.else1107 if.then1087

BASIC BLOCK if.then1087
%10344:	br	 do.body1089

BASIC BLOCK do.body1089
%10345:	load	 %8851
%10346:	icmp	 %10345 %8854
%10347:	br	 %10346 if.end1093 if.then1092

BASIC BLOCK if.then1092
%10348:	br	 return

BASIC BLOCK if.end1093
%10349:	load	 %8851
%10350:	getelementptr	 %10349 XXX
%10351:	store	 %10350 %8851
%10352:	load	 %10349
%10353:	icmp	 %8856 XXX
%10354:	br	 %10353 if.end1099 if.then1096

BASIC BLOCK if.then1096
%10355:	zext	 %10352
%10356:	getelementptr	 %8856 %10355
%10357:	br	 if.end1099

BASIC BLOCK if.end1099
%10358:	br	 do.end1100

BASIC BLOCK do.end1100
%10359:	call	 %8851 %8854 %8856 syntax %10175 compile_range
%10360:	icmp	 %10359 XXX
%10361:	br	 %10360 if.end1106 if.then1104

BASIC BLOCK if.then1104
%10362:	getelementptr	 %8850 XXX XXX
%10363:	load	 %10362
%10364:	bitcast	 %10363
%10365:	call	 %10364 free
%10366:	br	 return

BASIC BLOCK if.end1106
%10367:	br	 if.end1296

BASIC BLOCK if.else1107
%10368:	and	 syntax XXX
%10369:	icmp	 %10368 XXX
%10370:	br	 %10369 if.else1284 land.lhs.true1110

BASIC BLOCK land.lhs.true1110
%10371:	zext	 %10219
%10372:	icmp	 %10371 XXX
%10373:	br	 %10372 if.else1284 land.lhs.true1114

BASIC BLOCK land.lhs.true1114
%10374:	load	 %8851
%10375:	load	 %10374
%10376:	sext	 %10375
%10377:	icmp	 %10376 XXX
%10378:	br	 %10377 if.else1284 if.then1118

BASIC BLOCK if.then1118
%10379:	br	 do.body1119

BASIC BLOCK do.body1119
%10380:	load	 %8851
%10381:	icmp	 %10380 %8854
%10382:	br	 %10381 if.end1123 if.then1122

BASIC BLOCK if.then1122
%10383:	br	 return

BASIC BLOCK if.end1123
%10384:	load	 %8851
%10385:	getelementptr	 %10384 XXX
%10386:	store	 %10385 %8851
%10387:	load	 %10384
%10388:	icmp	 %8856 XXX
%10389:	br	 %10388 if.end1129 if.then1126

BASIC BLOCK if.then1126
%10390:	zext	 %10387
%10391:	getelementptr	 %8856 %10390
%10392:	br	 if.end1129

BASIC BLOCK if.end1129
%10393:	br	 do.end1130

BASIC BLOCK do.end1130
%10394:	load	 %8851
%10395:	icmp	 %10394 %8854
%10396:	br	 %10395 if.end1135 if.then1133

BASIC BLOCK if.then1133
%10397:	getelementptr	 %8850 XXX XXX
%10398:	load	 %10397
%10399:	bitcast	 %10398
%10400:	call	 %10399 free
%10401:	br	 return

BASIC BLOCK if.end1135
%10402:	br	 for.cond1136

BASIC BLOCK for.cond1136
%10403:	phi	 XXX %10436
%10404:	br	 do.body1137

BASIC BLOCK do.body1137
%10405:	load	 %8851
%10406:	icmp	 %10405 %8854
%10407:	br	 %10406 if.end1141 if.then1140

BASIC BLOCK if.then1140
%10408:	br	 return

BASIC BLOCK if.end1141
%10409:	load	 %8851
%10410:	getelementptr	 %10409 XXX
%10411:	store	 %10410 %8851
%10412:	load	 %10409
%10413:	icmp	 %8856 XXX
%10414:	br	 %10413 if.end1147 if.then1144

BASIC BLOCK if.then1144
%10415:	zext	 %10412
%10416:	getelementptr	 %8856 %10415
%10417:	load	 %10416
%10418:	br	 if.end1147

BASIC BLOCK if.end1147
%10419:	phi	 %10417 %10412
%10420:	br	 do.end1148

BASIC BLOCK do.end1148
%10421:	zext	 %10419
%10422:	icmp	 %10421 XXX
%10423:	br	 %10422 lor.lhs.false1156 land.lhs.true1152

BASIC BLOCK land.lhs.true1152
%10424:	load	 %8851
%10425:	load	 %10424
%10426:	sext	 %10425
%10427:	icmp	 %10426 XXX
%10428:	br	 %10427 lor.lhs.false1156 if.then1163

BASIC BLOCK lor.lhs.false1156
%10429:	load	 %8851
%10430:	icmp	 %10429 %8854
%10431:	br	 %10430 lor.lhs.false1159 if.then1163

BASIC BLOCK lor.lhs.false1159
%10432:	zext	 %10403
%10433:	icmp	 %10432 XXX
%10434:	br	 %10433 if.end1164 if.then1163

BASIC BLOCK if.then1163
%10435:	br	 for.end1167

BASIC BLOCK if.end1164
%10436:	add	 %10403 XXX
%10437:	zext	 %10403
%10438:	getelementptr	 %8852 XXX %10437
%10439:	store	 %10419 %10438
%10440:	br	 for.cond1136

BASIC BLOCK for.end1167
%10441:	zext	 %10403
%10442:	getelementptr	 %8852 XXX %10441
%10443:	store	 XXX %10442
%10444:	zext	 %10419
%10445:	icmp	 %10444 XXX
%10446:	br	 %10445 if.else1268 land.lhs.true1173

BASIC BLOCK land.lhs.true1173
%10447:	load	 %8851
%10448:	load	 %10447
%10449:	sext	 %10448
%10450:	icmp	 %10449 XXX
%10451:	br	 %10450 if.else1268 if.then1177

BASIC BLOCK if.then1177
%10452:	getelementptr	 %8852 XXX XXX
%10453:	call	 %10452 XXX strcmp
%10454:	icmp	 %10453 XXX
%10455:	zext	 %10454
%10456:	trunc	 %10455
%10457:	getelementptr	 %8852 XXX XXX
%10458:	call	 %10457 XXX strcmp
%10459:	icmp	 %10458 XXX
%10460:	zext	 %10459
%10461:	trunc	 %10460
%10462:	getelementptr	 %8852 XXX XXX
%10463:	call	 %10462 wctype
%10464:	icmp	 %10463 XXX
%10465:	br	 %10464 if.end1193 if.then1191

BASIC BLOCK if.then1191
%10466:	getelementptr	 %8850 XXX XXX
%10467:	load	 %10466
%10468:	bitcast	 %10467
%10469:	call	 %10468 free
%10470:	br	 return

BASIC BLOCK if.end1193
%10471:	br	 do.body1194

BASIC BLOCK do.body1194
%10472:	load	 %8851
%10473:	icmp	 %10472 %8854
%10474:	br	 %10473 if.end1198 if.then1197

BASIC BLOCK if.then1197
%10475:	br	 return

BASIC BLOCK if.end1198
%10476:	load	 %8851
%10477:	getelementptr	 %10476 XXX
%10478:	store	 %10477 %8851
%10479:	load	 %10476
%10480:	icmp	 %8856 XXX
%10481:	br	 %10480 if.end1204 if.then1201

BASIC BLOCK if.then1201
%10482:	zext	 %10479
%10483:	getelementptr	 %8856 %10482
%10484:	br	 if.end1204

BASIC BLOCK if.end1204
%10485:	br	 do.end1205

BASIC BLOCK do.end1205
%10486:	load	 %8851
%10487:	icmp	 %10486 %8854
%10488:	br	 %10487 if.end1210 if.then1208

BASIC BLOCK if.then1208
%10489:	getelementptr	 %8850 XXX XXX
%10490:	load	 %10489
%10491:	bitcast	 %10490
%10492:	call	 %10491 free
%10493:	br	 return

BASIC BLOCK if.end1210
%10494:	br	 for.cond1211

BASIC BLOCK for.cond1211
%10495:	phi	 XXX %10559
%10496:	icmp	 %10495 XXX
%10497:	br	 %10496 for.end1267 for.body

BASIC BLOCK for.body
%10498:	call	 %10495 btowc
%10499:	call	 %10498 %10463 iswctype
%10500:	icmp	 %10499 XXX
%10501:	br	 %10500 if.end1230 if.then1217

BASIC BLOCK if.then1217
%10502:	trunc	 %10495
%10503:	zext	 %10502
%10504:	srem	 %10503 XXX
%10505:	shl	 XXX %10504
%10506:	trunc	 %10495
%10507:	zext	 %10506
%10508:	sdiv	 %10507 XXX
%10509:	sext	 %10508
%10510:	getelementptr	 %10175 %10509
%10511:	load	 %10510
%10512:	zext	 %10511
%10513:	or	 %10512 %10505
%10514:	trunc	 %10513
%10515:	store	 %10514 %10510
%10516:	br	 if.end1230

BASIC BLOCK if.end1230
%10517:	icmp	 %8856 XXX
%10518:	br	 %10517 if.end1265 land.lhs.true1232

BASIC BLOCK land.lhs.true1232
%10519:	sext	 %10461
%10520:	icmp	 %10519 XXX
%10521:	br	 %10520 lor.lhs.false1235 land.lhs.true1238

BASIC BLOCK lor.lhs.false1235
%10522:	sext	 %10456
%10523:	icmp	 %10522 XXX
%10524:	br	 %10523 if.end1265 land.lhs.true1238

BASIC BLOCK land.lhs.true1238
%10525:	sext	 %10495
%10526:	call	 __ctype_b_loc
%10527:	load	 %10526
%10528:	getelementptr	 %10527 %10525
%10529:	load	 %10528
%10530:	zext	 %10529
%10531:	and	 %10530 XXX
%10532:	icmp	 %10531 XXX
%10533:	br	 %10532 lor.lhs.false1245 if.then1252

BASIC BLOCK lor.lhs.false1245
%10534:	sext	 %10495
%10535:	call	 __ctype_b_loc
%10536:	load	 %10535
%10537:	getelementptr	 %10536 %10534
%10538:	load	 %10537
%10539:	zext	 %10538
%10540:	and	 %10539 XXX
%10541:	icmp	 %10540 XXX
%10542:	br	 %10541 if.end1265 if.then1252

BASIC BLOCK if.then1252
%10543:	trunc	 %10495
%10544:	zext	 %10543
%10545:	srem	 %10544 XXX
%10546:	shl	 XXX %10545
%10547:	trunc	 %10495
%10548:	zext	 %10547
%10549:	sdiv	 %10548 XXX
%10550:	sext	 %10549
%10551:	getelementptr	 %10175 %10550
%10552:	load	 %10551
%10553:	zext	 %10552
%10554:	or	 %10553 %10546
%10555:	trunc	 %10554
%10556:	store	 %10555 %10551
%10557:	br	 if.end1265

BASIC BLOCK if.end1265
%10558:	br	 for.inc

BASIC BLOCK for.inc
%10559:	add	 %10495 XXX
%10560:	br	 for.cond1211

BASIC BLOCK for.end1267
%10561:	br	 if.end1283

BASIC BLOCK if.else1268
%10562:	add	 %10403 XXX
%10563:	br	 while.cond1270

BASIC BLOCK while.cond1270
%10564:	phi	 %10562 %10565
%10565:	add	 %10564 XXX
%10566:	icmp	 %10564 XXX
%10567:	br	 %10566 while.end1274 while.body1272

BASIC BLOCK while.body1272
%10568:	load	 %8851
%10569:	getelementptr	 %10568 XXX
%10570:	store	 %10569 %8851
%10571:	br	 while.cond1270

BASIC BLOCK while.end1274
%10572:	getelementptr	 %10175 XXX
%10573:	load	 %10572
%10574:	zext	 %10573
%10575:	or	 %10574 XXX
%10576:	trunc	 %10575
%10577:	store	 %10576 %10572
%10578:	getelementptr	 %10175 XXX
%10579:	load	 %10578
%10580:	zext	 %10579
%10581:	or	 %10580 XXX
%10582:	trunc	 %10581
%10583:	store	 %10582 %10578
%10584:	br	 if.end1283

BASIC BLOCK if.end1283
%10585:	phi	 XXX XXX
%10586:	br	 if.end1295

BASIC BLOCK if.else1284
%10587:	zext	 %10219
%10588:	srem	 %10587 XXX
%10589:	shl	 XXX %10588
%10590:	zext	 %10219
%10591:	sdiv	 %10590 XXX
%10592:	sext	 %10591
%10593:	getelementptr	 %10175 %10592
%10594:	load	 %10593
%10595:	zext	 %10594
%10596:	or	 %10595 %10589
%10597:	trunc	 %10596
%10598:	store	 %10597 %10593
%10599:	br	 if.end1295

BASIC BLOCK if.end1295
%10600:	phi	 %10585 XXX
%10601:	br	 if.end1296

BASIC BLOCK if.end1296
%10602:	phi	 %10195 %10600
%10603:	br	 if.end1297

BASIC BLOCK if.end1297
%10604:	phi	 %10602 %10195
%10605:	br	 for.cond967

BASIC BLOCK for.end1298
%10606:	br	 while.cond1299

BASIC BLOCK while.cond1299
%10607:	getelementptr	 %10175 XXX
%10608:	load	 %10607
%10609:	zext	 %10608
%10610:	icmp	 %10609 XXX
%10611:	br	 %10610 land.end land.rhs

BASIC BLOCK land.rhs
%10612:	getelementptr	 %10175 XXX
%10613:	load	 %10612
%10614:	zext	 %10613
%10615:	sub	 %10614 XXX
%10616:	sext	 %10615
%10617:	getelementptr	 %10175 %10616
%10618:	load	 %10617
%10619:	zext	 %10618
%10620:	icmp	 %10619 XXX
%10621:	br	 land.end

BASIC BLOCK land.end
%10622:	phi	 XXX %10620
%10623:	br	 %10622 while.end1315 while.body1312

BASIC BLOCK while.body1312
%10624:	getelementptr	 %10175 XXX
%10625:	load	 %10624
%10626:	add	 %10625 XXX
%10627:	store	 %10626 %10624
%10628:	br	 while.cond1299

BASIC BLOCK while.end1315
%10629:	getelementptr	 %10175 XXX
%10630:	load	 %10629
%10631:	zext	 %10630
%10632:	sext	 %10631
%10633:	getelementptr	 %10175 %10632
%10634:	br	 sw.epilog3389

BASIC BLOCK sw.bb1319
%10635:	and	 syntax XXX
%10636:	icmp	 %10635 XXX
%10637:	br	 %10636 if.else1323 if.then1322

BASIC BLOCK if.then1322
%10638:	br	 handle_open

BASIC BLOCK if.else1323
%10639:	br	 normal_char

BASIC BLOCK sw.bb1324
%10640:	and	 syntax XXX
%10641:	icmp	 %10640 XXX
%10642:	br	 %10641 if.else1328 if.then1327

BASIC BLOCK if.then1327
%10643:	br	 handle_close

BASIC BLOCK if.else1328
%10644:	br	 normal_char

BASIC BLOCK sw.bb1329
%10645:	and	 syntax XXX
%10646:	icmp	 %10645 XXX
%10647:	br	 %10646 if.else1333 if.then1332

BASIC BLOCK if.then1332
%10648:	br	 handle_alt

BASIC BLOCK if.else1333
%10649:	br	 normal_char

BASIC BLOCK sw.bb1334
%10650:	and	 syntax XXX
%10651:	icmp	 %10650 XXX
%10652:	br	 %10651 if.else1338 if.then1337

BASIC BLOCK if.then1337
%10653:	br	 handle_alt

BASIC BLOCK if.else1338
%10654:	br	 normal_char

BASIC BLOCK sw.bb1339
%10655:	and	 syntax XXX
%10656:	icmp	 %10655 XXX
%10657:	br	 %10656 if.else1346 land.lhs.true1342

BASIC BLOCK land.lhs.true1342
%10658:	and	 syntax XXX
%10659:	icmp	 %10658 XXX
%10660:	br	 %10659 if.else1346 if.then1345

BASIC BLOCK if.then1345
%10661:	br	 handle_interval

BASIC BLOCK if.else1346
%10662:	br	 normal_char

BASIC BLOCK sw.bb1347
%10663:	load	 %8851
%10664:	icmp	 %10663 %8854
%10665:	br	 %10664 if.end1352 if.then1350

BASIC BLOCK if.then1350
%10666:	getelementptr	 %8850 XXX XXX
%10667:	load	 %10666
%10668:	bitcast	 %10667
%10669:	call	 %10668 free
%10670:	br	 return

BASIC BLOCK if.end1352
%10671:	br	 do.body1353

BASIC BLOCK do.body1353
%10672:	load	 %8851
%10673:	icmp	 %10672 %8854
%10674:	br	 %10673 if.end1357 if.then1356

BASIC BLOCK if.then1356
%10675:	br	 return

BASIC BLOCK if.end1357
%10676:	load	 %8851
%10677:	getelementptr	 %10676 XXX
%10678:	store	 %10677 %8851
%10679:	load	 %10676
%10680:	br	 do.end1359

BASIC BLOCK do.end1359
%10681:	zext	 %10679
%10682:	switch	 %10681 sw.default XXX sw.bb1361 XXX sw.bb1521 XXX sw.bb1770 XXX sw.bb1950 XXX sw.bb2374 XXX sw.bb2458 XXX sw.bb2542 XXX sw.bb2626 XXX sw.bb2710 XXX sw.bb2794 XXX sw.bb2878 XXX sw.bb2962 XXX sw.bb3046 XXX sw.bb3046 XXX sw.bb3046 XXX sw.bb3046 XXX sw.bb3046 XXX sw.bb3046 XXX sw.bb3046 XXX sw.bb3046 XXX sw.bb3046 XXX sw.bb3145 XXX sw.bb3145

BASIC BLOCK sw.bb1361
%10683:	and	 syntax XXX
%10684:	icmp	 %10683 XXX
%10685:	br	 %10684 if.end1365 if.then1364

BASIC BLOCK if.then1364
%10686:	br	 normal_backslash

BASIC BLOCK if.end1365
%10687:	br	 handle_open

BASIC BLOCK handle_open
%10688:	getelementptr	 bufp XXX XXX
%10689:	load	 %10688
%10690:	add	 %10689 XXX
%10691:	store	 %10690 %10688
%10692:	add	 %8922 XXX
%10693:	getelementptr	 %8850 XXX XXX
%10694:	load	 %10693
%10695:	getelementptr	 %8850 XXX XXX
%10696:	load	 %10695
%10697:	icmp	 %10694 %10696
%10698:	br	 %10697 if.end1387 if.then1373

BASIC BLOCK if.then1373
%10699:	getelementptr	 %8850 XXX XXX
%10700:	load	 %10699
%10701:	bitcast	 %10700
%10702:	getelementptr	 %8850 XXX XXX
%10703:	load	 %10702
%10704:	shl	 %10703 XXX
%10705:	zext	 %10704
%10706:	mul	 %10705 XXX
%10707:	call	 %10701 %10706 realloc
%10708:	bitcast	 %10707
%10709:	getelementptr	 %8850 XXX XXX
%10710:	store	 %10708 %10709
%10711:	getelementptr	 %8850 XXX XXX
%10712:	load	 %10711
%10713:	icmp	 %10712 XXX
%10714:	br	 %10713 if.end1384 if.then1383

BASIC BLOCK if.then1383
%10715:	br	 return

BASIC BLOCK if.end1384
%10716:	getelementptr	 %8850 XXX XXX
%10717:	load	 %10716
%10718:	shl	 %10717 XXX
%10719:	store	 %10718 %10716
%10720:	br	 if.end1387

BASIC BLOCK if.end1387
%10721:	getelementptr	 bufp XXX XXX
%10722:	load	 %10721
%10723:	ptrtoint	 %8924
%10724:	ptrtoint	 %10722
%10725:	sub	 %10723 %10724
%10726:	getelementptr	 %8850 XXX XXX
%10727:	load	 %10726
%10728:	zext	 %10727
%10729:	getelementptr	 %8850 XXX XXX
%10730:	load	 %10729
%10731:	getelementptr	 %10730 %10728
%10732:	getelementptr	 %10731 XXX XXX
%10733:	store	 %10725 %10732
%10734:	icmp	 %8923 XXX
%10735:	br	 %10734 cond.false1403 cond.true1397

BASIC BLOCK cond.true1397
%10736:	getelementptr	 bufp XXX XXX
%10737:	load	 %10736
%10738:	ptrtoint	 %8923
%10739:	ptrtoint	 %10737
%10740:	sub	 %10738 %10739
%10741:	add	 %10740 XXX
%10742:	br	 cond.end1404

BASIC BLOCK cond.false1403
%10743:	br	 cond.end1404

BASIC BLOCK cond.end1404
%10744:	phi	 %10741 XXX
%10745:	getelementptr	 %8850 XXX XXX
%10746:	load	 %10745
%10747:	zext	 %10746
%10748:	getelementptr	 %8850 XXX XXX
%10749:	load	 %10748
%10750:	getelementptr	 %10749 %10747
%10751:	getelementptr	 %10750 XXX XXX
%10752:	store	 %10744 %10751
%10753:	getelementptr	 bufp XXX XXX
%10754:	load	 %10753
%10755:	ptrtoint	 %8927
%10756:	ptrtoint	 %10754
%10757:	sub	 %10755 %10756
%10758:	getelementptr	 %8850 XXX XXX
%10759:	load	 %10758
%10760:	zext	 %10759
%10761:	getelementptr	 %8850 XXX XXX
%10762:	load	 %10761
%10763:	getelementptr	 %10762 %10760
%10764:	getelementptr	 %10763 XXX XXX
%10765:	store	 %10757 %10764
%10766:	getelementptr	 %8850 XXX XXX
%10767:	load	 %10766
%10768:	zext	 %10767
%10769:	getelementptr	 %8850 XXX XXX
%10770:	load	 %10769
%10771:	getelementptr	 %10770 %10768
%10772:	getelementptr	 %10771 XXX XXX
%10773:	store	 %10692 %10772
%10774:	icmp	 %10692 XXX
%10775:	br	 %10774 if.end1518 if.then1426

BASIC BLOCK if.then1426
%10776:	getelementptr	 bufp XXX XXX
%10777:	load	 %10776
%10778:	ptrtoint	 %8927
%10779:	ptrtoint	 %10777
%10780:	sub	 %10778 %10779
%10781:	add	 %10780 XXX
%10782:	getelementptr	 %8850 XXX XXX
%10783:	load	 %10782
%10784:	zext	 %10783
%10785:	getelementptr	 %8850 XXX XXX
%10786:	load	 %10785
%10787:	getelementptr	 %10786 %10784
%10788:	getelementptr	 %10787 XXX XXX
%10789:	store	 %10781 %10788
%10790:	br	 do.body1436

BASIC BLOCK do.body1436
%10791:	br	 while.cond1437

BASIC BLOCK while.cond1437
%10792:	phi	 %8923 %10885
%10793:	phi	 %8924 %10886
%10794:	phi	 %8925 %10887
%10795:	phi	 %8926 %10888
%10796:	phi	 %8927 %10889
%10797:	getelementptr	 bufp XXX XXX
%10798:	load	 %10797
%10799:	ptrtoint	 %10796
%10800:	ptrtoint	 %10798
%10801:	sub	 %10799 %10800
%10802:	add	 %10801 XXX
%10803:	getelementptr	 bufp XXX XXX
%10804:	load	 %10803
%10805:	icmp	 %10802 %10804
%10806:	br	 %10805 while.end1512 while.body1446

BASIC BLOCK while.body1446
%10807:	br	 do.body1447

BASIC BLOCK do.body1447
%10808:	getelementptr	 bufp XXX XXX
%10809:	load	 %10808
%10810:	getelementptr	 bufp XXX XXX
%10811:	load	 %10810
%10812:	icmp	 %10811 XXX
%10813:	br	 %10812 if.end1454 if.then1453

BASIC BLOCK if.then1453
%10814:	br	 return

BASIC BLOCK if.end1454
%10815:	getelementptr	 bufp XXX XXX
%10816:	load	 %10815
%10817:	shl	 %10816 XXX
%10818:	store	 %10817 %10815
%10819:	getelementptr	 bufp XXX XXX
%10820:	load	 %10819
%10821:	icmp	 %10820 XXX
%10822:	br	 %10821 if.end1462 if.then1460

BASIC BLOCK if.then1460
%10823:	getelementptr	 bufp XXX XXX
%10824:	store	 XXX %10823
%10825:	br	 if.end1462

BASIC BLOCK if.end1462
%10826:	getelementptr	 bufp XXX XXX
%10827:	load	 %10826
%10828:	getelementptr	 bufp XXX XXX
%10829:	load	 %10828
%10830:	call	 %10827 %10829 realloc
%10831:	getelementptr	 bufp XXX XXX
%10832:	store	 %10830 %10831
%10833:	getelementptr	 bufp XXX XXX
%10834:	load	 %10833
%10835:	icmp	 %10834 XXX
%10836:	br	 %10835 if.end1471 if.then1470

BASIC BLOCK if.then1470
%10837:	br	 return

BASIC BLOCK if.end1471
%10838:	getelementptr	 bufp XXX XXX
%10839:	load	 %10838
%10840:	icmp	 %10809 %10839
%10841:	br	 %10840 if.end1510 if.then1475

BASIC BLOCK if.then1475
%10842:	ptrtoint	 %10796
%10843:	ptrtoint	 %10809
%10844:	sub	 %10842 %10843
%10845:	getelementptr	 bufp XXX XXX
%10846:	load	 %10845
%10847:	getelementptr	 %10846 %10844
%10848:	ptrtoint	 %10793
%10849:	ptrtoint	 %10809
%10850:	sub	 %10848 %10849
%10851:	getelementptr	 bufp XXX XXX
%10852:	load	 %10851
%10853:	getelementptr	 %10852 %10850
%10854:	icmp	 %10792 XXX
%10855:	br	 %10854 if.end1493 if.then1487

BASIC BLOCK if.then1487
%10856:	ptrtoint	 %10792
%10857:	ptrtoint	 %10809
%10858:	sub	 %10856 %10857
%10859:	getelementptr	 bufp XXX XXX
%10860:	load	 %10859
%10861:	getelementptr	 %10860 %10858
%10862:	br	 if.end1493

BASIC BLOCK if.end1493
%10863:	phi	 %10861 %10792
%10864:	icmp	 %10794 XXX
%10865:	br	 %10864 if.end1501 if.then1495

BASIC BLOCK if.then1495
%10866:	ptrtoint	 %10794
%10867:	ptrtoint	 %10809
%10868:	sub	 %10866 %10867
%10869:	getelementptr	 bufp XXX XXX
%10870:	load	 %10869
%10871:	getelementptr	 %10870 %10868
%10872:	br	 if.end1501

BASIC BLOCK if.end1501
%10873:	phi	 %10871 %10794
%10874:	icmp	 %10795 XXX
%10875:	br	 %10874 if.end1509 if.then1503

BASIC BLOCK if.then1503
%10876:	ptrtoint	 %10795
%10877:	ptrtoint	 %10809
%10878:	sub	 %10876 %10877
%10879:	getelementptr	 bufp XXX XXX
%10880:	load	 %10879
%10881:	getelementptr	 %10880 %10878
%10882:	br	 if.end1509

BASIC BLOCK if.end1509
%10883:	phi	 %10881 %10795
%10884:	br	 if.end1510

BASIC BLOCK if.end1510
%10885:	phi	 %10863 %10792
%10886:	phi	 %10853 %10793
%10887:	phi	 %10873 %10794
%10888:	phi	 %10883 %10795
%10889:	phi	 %10847 %10796
%10890:	br	 do.end1511

BASIC BLOCK do.end1511
%10891:	br	 while.cond1437

BASIC BLOCK while.end1512
%10892:	getelementptr	 %10796 XXX
%10893:	store	 XXX %10796
%10894:	trunc	 %10692
%10895:	getelementptr	 %10892 XXX
%10896:	store	 %10894 %10892
%10897:	getelementptr	 %10895 XXX
%10898:	store	 XXX %10895
%10899:	br	 do.end1517

BASIC BLOCK do.end1517
%10900:	br	 if.end1518

BASIC BLOCK if.end1518
%10901:	phi	 %10897 %8927
%10902:	getelementptr	 %8850 XXX XXX
%10903:	load	 %10902
%10904:	add	 %10903 XXX
%10905:	store	 %10904 %10902
%10906:	br	 sw.epilog

BASIC BLOCK sw.bb1521
%10907:	and	 syntax XXX
%10908:	icmp	 %10907 XXX
%10909:	br	 %10908 if.end1525 if.then1524

BASIC BLOCK if.then1524
%10910:	br	 normal_backslash

BASIC BLOCK if.end1525
%10911:	getelementptr	 %8850 XXX XXX
%10912:	load	 %10911
%10913:	icmp	 %10912 XXX
%10914:	br	 %10913 if.end1535 if.then1529

BASIC BLOCK if.then1529
%10915:	and	 syntax XXX
%10916:	icmp	 %10915 XXX
%10917:	br	 %10916 if.else1533 if.then1532

BASIC BLOCK if.then1532
%10918:	br	 normal_backslash

BASIC BLOCK if.else1533
%10919:	getelementptr	 %8850 XXX XXX
%10920:	load	 %10919
%10921:	bitcast	 %10920
%10922:	call	 %10921 free
%10923:	br	 return

BASIC BLOCK if.end1535
%10924:	br	 handle_close

BASIC BLOCK handle_close
%10925:	phi	 %10679 %8946
%10926:	icmp	 %8923 XXX
%10927:	br	 %10926 if.end1623 if.then1537

BASIC BLOCK if.then1537
%10928:	br	 do.body1538

BASIC BLOCK do.body1538
%10929:	br	 while.cond1539

BASIC BLOCK while.cond1539
%10930:	phi	 %8923 %11023
%10931:	phi	 %8924 %11024
%10932:	phi	 %8925 %11025
%10933:	phi	 %8926 %11026
%10934:	phi	 %8927 %11027
%10935:	getelementptr	 bufp XXX XXX
%10936:	load	 %10935
%10937:	ptrtoint	 %10934
%10938:	ptrtoint	 %10936
%10939:	sub	 %10937 %10938
%10940:	add	 %10939 XXX
%10941:	getelementptr	 bufp XXX XXX
%10942:	load	 %10941
%10943:	icmp	 %10940 %10942
%10944:	br	 %10943 while.end1614 while.body1548

BASIC BLOCK while.body1548
%10945:	br	 do.body1549

BASIC BLOCK do.body1549
%10946:	getelementptr	 bufp XXX XXX
%10947:	load	 %10946
%10948:	getelementptr	 bufp XXX XXX
%10949:	load	 %10948
%10950:	icmp	 %10949 XXX
%10951:	br	 %10950 if.end1556 if.then1555

BASIC BLOCK if.then1555
%10952:	br	 return

BASIC BLOCK if.end1556
%10953:	getelementptr	 bufp XXX XXX
%10954:	load	 %10953
%10955:	shl	 %10954 XXX
%10956:	store	 %10955 %10953
%10957:	getelementptr	 bufp XXX XXX
%10958:	load	 %10957
%10959:	icmp	 %10958 XXX
%10960:	br	 %10959 if.end1564 if.then1562

BASIC BLOCK if.then1562
%10961:	getelementptr	 bufp XXX XXX
%10962:	store	 XXX %10961
%10963:	br	 if.end1564

BASIC BLOCK if.end1564
%10964:	getelementptr	 bufp XXX XXX
%10965:	load	 %10964
%10966:	getelementptr	 bufp XXX XXX
%10967:	load	 %10966
%10968:	call	 %10965 %10967 realloc
%10969:	getelementptr	 bufp XXX XXX
%10970:	store	 %10968 %10969
%10971:	getelementptr	 bufp XXX XXX
%10972:	load	 %10971
%10973:	icmp	 %10972 XXX
%10974:	br	 %10973 if.end1573 if.then1572

BASIC BLOCK if.then1572
%10975:	br	 return

BASIC BLOCK if.end1573
%10976:	getelementptr	 bufp XXX XXX
%10977:	load	 %10976
%10978:	icmp	 %10947 %10977
%10979:	br	 %10978 if.end1612 if.then1577

BASIC BLOCK if.then1577
%10980:	ptrtoint	 %10934
%10981:	ptrtoint	 %10947
%10982:	sub	 %10980 %10981
%10983:	getelementptr	 bufp XXX XXX
%10984:	load	 %10983
%10985:	getelementptr	 %10984 %10982
%10986:	ptrtoint	 %10931
%10987:	ptrtoint	 %10947
%10988:	sub	 %10986 %10987
%10989:	getelementptr	 bufp XXX XXX
%10990:	load	 %10989
%10991:	getelementptr	 %10990 %10988
%10992:	icmp	 %10930 XXX
%10993:	br	 %10992 if.end1595 if.then1589

BASIC BLOCK if.then1589
%10994:	ptrtoint	 %10930
%10995:	ptrtoint	 %10947
%10996:	sub	 %10994 %10995
%10997:	getelementptr	 bufp XXX XXX
%10998:	load	 %10997
%10999:	getelementptr	 %10998 %10996
%11000:	br	 if.end1595

BASIC BLOCK if.end1595
%11001:	phi	 %10999 %10930
%11002:	icmp	 %10932 XXX
%11003:	br	 %11002 if.end1603 if.then1597

BASIC BLOCK if.then1597
%11004:	ptrtoint	 %10932
%11005:	ptrtoint	 %10947
%11006:	sub	 %11004 %11005
%11007:	getelementptr	 bufp XXX XXX
%11008:	load	 %11007
%11009:	getelementptr	 %11008 %11006
%11010:	br	 if.end1603

BASIC BLOCK if.end1603
%11011:	phi	 %11009 %10932
%11012:	icmp	 %10933 XXX
%11013:	br	 %11012 if.end1611 if.then1605

BASIC BLOCK if.then1605
%11014:	ptrtoint	 %10933
%11015:	ptrtoint	 %10947
%11016:	sub	 %11014 %11015
%11017:	getelementptr	 bufp XXX XXX
%11018:	load	 %11017
%11019:	getelementptr	 %11018 %11016
%11020:	br	 if.end1611

BASIC BLOCK if.end1611
%11021:	phi	 %11019 %10933
%11022:	br	 if.end1612

BASIC BLOCK if.end1612
%11023:	phi	 %11001 %10930
%11024:	phi	 %10991 %10931
%11025:	phi	 %11011 %10932
%11026:	phi	 %11021 %10933
%11027:	phi	 %10985 %10934
%11028:	br	 do.end1613

BASIC BLOCK do.end1613
%11029:	br	 while.cond1539

BASIC BLOCK while.end1614
%11030:	getelementptr	 %10934 XXX
%11031:	store	 XXX %10934
%11032:	br	 do.end1616

BASIC BLOCK do.end1616
%11033:	getelementptr	 %11030 XXX
%11034:	ptrtoint	 %11033
%11035:	ptrtoint	 %10930
%11036:	sub	 %11034 %11035
%11037:	sub	 %11036 XXX
%11038:	trunc	 %11037
%11039:	call	 XXX %10930 %11038 store_op1
%11040:	br	 if.end1623

BASIC BLOCK if.end1623
%11041:	phi	 %10930 %8923
%11042:	phi	 %10931 %8924
%11043:	phi	 %10932 %8925
%11044:	phi	 %10933 %8926
%11045:	phi	 %11030 %8927
%11046:	getelementptr	 %8850 XXX XXX
%11047:	load	 %11046
%11048:	icmp	 %11047 XXX
%11049:	br	 %11048 if.end1633 if.then1627

BASIC BLOCK if.then1627
%11050:	and	 syntax XXX
%11051:	icmp	 %11050 XXX
%11052:	br	 %11051 if.else1631 if.then1630

BASIC BLOCK if.then1630
%11053:	br	 normal_char

BASIC BLOCK if.else1631
%11054:	getelementptr	 %8850 XXX XXX
%11055:	load	 %11054
%11056:	bitcast	 %11055
%11057:	call	 %11056 free
%11058:	br	 return

BASIC BLOCK if.end1633
%11059:	getelementptr	 %8850 XXX XXX
%11060:	load	 %11059
%11061:	add	 %11060 XXX
%11062:	store	 %11061 %11059
%11063:	getelementptr	 bufp XXX XXX
%11064:	load	 %11063
%11065:	getelementptr	 %8850 XXX XXX
%11066:	load	 %11065
%11067:	zext	 %11066
%11068:	getelementptr	 %8850 XXX XXX
%11069:	load	 %11068
%11070:	getelementptr	 %11069 %11067
%11071:	getelementptr	 %11070 XXX XXX
%11072:	load	 %11071
%11073:	getelementptr	 %11064 %11072
%11074:	getelementptr	 %8850 XXX XXX
%11075:	load	 %11074
%11076:	zext	 %11075
%11077:	getelementptr	 %8850 XXX XXX
%11078:	load	 %11077
%11079:	getelementptr	 %11078 %11076
%11080:	getelementptr	 %11079 XXX XXX
%11081:	load	 %11080
%11082:	icmp	 %11081 XXX
%11083:	br	 %11082 cond.false1658 cond.true1649

BASIC BLOCK cond.true1649
%11084:	getelementptr	 bufp XXX XXX
%11085:	load	 %11084
%11086:	getelementptr	 %8850 XXX XXX
%11087:	load	 %11086
%11088:	zext	 %11087
%11089:	getelementptr	 %8850 XXX XXX
%11090:	load	 %11089
%11091:	getelementptr	 %11090 %11088
%11092:	getelementptr	 %11091 XXX XXX
%11093:	load	 %11092
%11094:	getelementptr	 %11085 %11093
%11095:	getelementptr	 %11094 XXX
%11096:	br	 cond.end1659

BASIC BLOCK cond.false1658
%11097:	br	 cond.end1659

BASIC BLOCK cond.end1659
%11098:	phi	 %11095 XXX
%11099:	getelementptr	 bufp XXX XXX
%11100:	load	 %11099
%11101:	getelementptr	 %8850 XXX XXX
%11102:	load	 %11101
%11103:	zext	 %11102
%11104:	getelementptr	 %8850 XXX XXX
%11105:	load	 %11104
%11106:	getelementptr	 %11105 %11103
%11107:	getelementptr	 %11106 XXX XXX
%11108:	load	 %11107
%11109:	getelementptr	 %11100 %11108
%11110:	getelementptr	 %8850 XXX XXX
%11111:	load	 %11110
%11112:	zext	 %11111
%11113:	getelementptr	 %8850 XXX XXX
%11114:	load	 %11113
%11115:	getelementptr	 %11114 %11112
%11116:	getelementptr	 %11115 XXX XXX
%11117:	load	 %11116
%11118:	icmp	 %11117 XXX
%11119:	br	 %11118 if.end1769 if.then1675

BASIC BLOCK if.then1675
%11120:	getelementptr	 bufp XXX XXX
%11121:	load	 %11120
%11122:	getelementptr	 %8850 XXX XXX
%11123:	load	 %11122
%11124:	zext	 %11123
%11125:	getelementptr	 %8850 XXX XXX
%11126:	load	 %11125
%11127:	getelementptr	 %11126 %11124
%11128:	getelementptr	 %11127 XXX XXX
%11129:	load	 %11128
%11130:	getelementptr	 %11121 %11129
%11131:	sub	 %8922 %11117
%11132:	trunc	 %11131
%11133:	store	 %11132 %11130
%11134:	br	 do.body1685

BASIC BLOCK do.body1685
%11135:	br	 while.cond1686

BASIC BLOCK while.cond1686
%11136:	phi	 %11098 %11229
%11137:	phi	 %11073 %11230
%11138:	phi	 %11109 %11231
%11139:	phi	 XXX %11232
%11140:	phi	 %11045 %11233
%11141:	getelementptr	 bufp XXX XXX
%11142:	load	 %11141
%11143:	ptrtoint	 %11140
%11144:	ptrtoint	 %11142
%11145:	sub	 %11143 %11144
%11146:	add	 %11145 XXX
%11147:	getelementptr	 bufp XXX XXX
%11148:	load	 %11147
%11149:	icmp	 %11146 %11148
%11150:	br	 %11149 while.end1761 while.body1695

BASIC BLOCK while.body1695
%11151:	br	 do.body1696

BASIC BLOCK do.body1696
%11152:	getelementptr	 bufp XXX XXX
%11153:	load	 %11152
%11154:	getelementptr	 bufp XXX XXX
%11155:	load	 %11154
%11156:	icmp	 %11155 XXX
%11157:	br	 %11156 if.end1703 if.then1702

BASIC BLOCK if.then1702
%11158:	br	 return

BASIC BLOCK if.end1703
%11159:	getelementptr	 bufp XXX XXX
%11160:	load	 %11159
%11161:	shl	 %11160 XXX
%11162:	store	 %11161 %11159
%11163:	getelementptr	 bufp XXX XXX
%11164:	load	 %11163
%11165:	icmp	 %11164 XXX
%11166:	br	 %11165 if.end1711 if.then1709

BASIC BLOCK if.then1709
%11167:	getelementptr	 bufp XXX XXX
%11168:	store	 XXX %11167
%11169:	br	 if.end1711

BASIC BLOCK if.end1711
%11170:	getelementptr	 bufp XXX XXX
%11171:	load	 %11170
%11172:	getelementptr	 bufp XXX XXX
%11173:	load	 %11172
%11174:	call	 %11171 %11173 realloc
%11175:	getelementptr	 bufp XXX XXX
%11176:	store	 %11174 %11175
%11177:	getelementptr	 bufp XXX XXX
%11178:	load	 %11177
%11179:	icmp	 %11178 XXX
%11180:	br	 %11179 if.end1720 if.then1719

BASIC BLOCK if.then1719
%11181:	br	 return

BASIC BLOCK if.end1720
%11182:	getelementptr	 bufp XXX XXX
%11183:	load	 %11182
%11184:	icmp	 %11153 %11183
%11185:	br	 %11184 if.end1759 if.then1724

BASIC BLOCK if.then1724
%11186:	ptrtoint	 %11140
%11187:	ptrtoint	 %11153
%11188:	sub	 %11186 %11187
%11189:	getelementptr	 bufp XXX XXX
%11190:	load	 %11189
%11191:	getelementptr	 %11190 %11188
%11192:	ptrtoint	 %11137
%11193:	ptrtoint	 %11153
%11194:	sub	 %11192 %11193
%11195:	getelementptr	 bufp XXX XXX
%11196:	load	 %11195
%11197:	getelementptr	 %11196 %11194
%11198:	icmp	 %11136 XXX
%11199:	br	 %11198 if.end1742 if.then1736

BASIC BLOCK if.then1736
%11200:	ptrtoint	 %11136
%11201:	ptrtoint	 %11153
%11202:	sub	 %11200 %11201
%11203:	getelementptr	 bufp XXX XXX
%11204:	load	 %11203
%11205:	getelementptr	 %11204 %11202
%11206:	br	 if.end1742

BASIC BLOCK if.end1742
%11207:	phi	 %11205 %11136
%11208:	icmp	 %11138 XXX
%11209:	br	 %11208 if.end1750 if.then1744

BASIC BLOCK if.then1744
%11210:	ptrtoint	 %11138
%11211:	ptrtoint	 %11153
%11212:	sub	 %11210 %11211
%11213:	getelementptr	 bufp XXX XXX
%11214:	load	 %11213
%11215:	getelementptr	 %11214 %11212
%11216:	br	 if.end1750

BASIC BLOCK if.end1750
%11217:	phi	 %11215 %11138
%11218:	icmp	 %11139 XXX
%11219:	br	 %11218 if.end1758 if.then1752

BASIC BLOCK if.then1752
%11220:	ptrtoint	 %11139
%11221:	ptrtoint	 %11153
%11222:	sub	 %11220 %11221
%11223:	getelementptr	 bufp XXX XXX
%11224:	load	 %11223
%11225:	getelementptr	 %11224 %11222
%11226:	br	 if.end1758

BASIC BLOCK if.end1758
%11227:	phi	 %11225 %11139
%11228:	br	 if.end1759

BASIC BLOCK if.end1759
%11229:	phi	 %11207 %11136
%11230:	phi	 %11197 %11137
%11231:	phi	 %11217 %11138
%11232:	phi	 %11227 %11139
%11233:	phi	 %11191 %11140
%11234:	br	 do.end1760

BASIC BLOCK do.end1760
%11235:	br	 while.cond1686

BASIC BLOCK while.end1761
%11236:	getelementptr	 %11140 XXX
%11237:	store	 XXX %11140
%11238:	trunc	 %11117
%11239:	getelementptr	 %11236 XXX
%11240:	store	 %11238 %11236
%11241:	sub	 %8922 %11117
%11242:	trunc	 %11241
%11243:	getelementptr	 %11239 XXX
%11244:	store	 %11242 %11239
%11245:	br	 do.end1768

BASIC BLOCK do.end1768
%11246:	br	 if.end1769

BASIC BLOCK if.end1769
%11247:	phi	 %11136 %11098
%11248:	phi	 %11137 %11073
%11249:	phi	 %11138 %11109
%11250:	phi	 %11139 XXX
%11251:	phi	 %11243 %11045
%11252:	br	 sw.epilog

BASIC BLOCK sw.bb1770
%11253:	and	 syntax XXX
%11254:	icmp	 %11253 XXX
%11255:	br	 %11254 lor.lhs.false1773 if.then1776

BASIC BLOCK lor.lhs.false1773
%11256:	and	 syntax XXX
%11257:	icmp	 %11256 XXX
%11258:	br	 %11257 if.end1777 if.then1776

BASIC BLOCK if.then1776
%11259:	br	 normal_backslash

BASIC BLOCK if.end1777
%11260:	br	 handle_alt

BASIC BLOCK handle_alt
%11261:	phi	 %10679 %8946 %8946
%11262:	and	 syntax XXX
%11263:	icmp	 %11262 XXX
%11264:	br	 %11263 if.end1781 if.then1780

BASIC BLOCK if.then1780
%11265:	br	 normal_char

BASIC BLOCK if.end1781
%11266:	br	 while.cond1782

BASIC BLOCK while.cond1782
%11267:	phi	 %8923 %11360
%11268:	phi	 %8924 %11361
%11269:	phi	 %8925 %11362
%11270:	phi	 %8926 %11363
%11271:	phi	 %8927 %11364
%11272:	getelementptr	 bufp XXX XXX
%11273:	load	 %11272
%11274:	ptrtoint	 %11271
%11275:	ptrtoint	 %11273
%11276:	sub	 %11274 %11275
%11277:	add	 %11276 XXX
%11278:	getelementptr	 bufp XXX XXX
%11279:	load	 %11278
%11280:	icmp	 %11277 %11279
%11281:	br	 %11280 while.end1857 while.body1791

BASIC BLOCK while.body1791
%11282:	br	 do.body1792

BASIC BLOCK do.body1792
%11283:	getelementptr	 bufp XXX XXX
%11284:	load	 %11283
%11285:	getelementptr	 bufp XXX XXX
%11286:	load	 %11285
%11287:	icmp	 %11286 XXX
%11288:	br	 %11287 if.end1799 if.then1798

BASIC BLOCK if.then1798
%11289:	br	 return

BASIC BLOCK if.end1799
%11290:	getelementptr	 bufp XXX XXX
%11291:	load	 %11290
%11292:	shl	 %11291 XXX
%11293:	store	 %11292 %11290
%11294:	getelementptr	 bufp XXX XXX
%11295:	load	 %11294
%11296:	icmp	 %11295 XXX
%11297:	br	 %11296 if.end1807 if.then1805

BASIC BLOCK if.then1805
%11298:	getelementptr	 bufp XXX XXX
%11299:	store	 XXX %11298
%11300:	br	 if.end1807

BASIC BLOCK if.end1807
%11301:	getelementptr	 bufp XXX XXX
%11302:	load	 %11301
%11303:	getelementptr	 bufp XXX XXX
%11304:	load	 %11303
%11305:	call	 %11302 %11304 realloc
%11306:	getelementptr	 bufp XXX XXX
%11307:	store	 %11305 %11306
%11308:	getelementptr	 bufp XXX XXX
%11309:	load	 %11308
%11310:	icmp	 %11309 XXX
%11311:	br	 %11310 if.end1816 if.then1815

BASIC BLOCK if.then1815
%11312:	br	 return

BASIC BLOCK if.end1816
%11313:	getelementptr	 bufp XXX XXX
%11314:	load	 %11313
%11315:	icmp	 %11284 %11314
%11316:	br	 %11315 if.end1855 if.then1820

BASIC BLOCK if.then1820
%11317:	ptrtoint	 %11271
%11318:	ptrtoint	 %11284
%11319:	sub	 %11317 %11318
%11320:	getelementptr	 bufp XXX XXX
%11321:	load	 %11320
%11322:	getelementptr	 %11321 %11319
%11323:	ptrtoint	 %11268
%11324:	ptrtoint	 %11284
%11325:	sub	 %11323 %11324
%11326:	getelementptr	 bufp XXX XXX
%11327:	load	 %11326
%11328:	getelementptr	 %11327 %11325
%11329:	icmp	 %11267 XXX
%11330:	br	 %11329 if.end1838 if.then1832

BASIC BLOCK if.then1832
%11331:	ptrtoint	 %11267
%11332:	ptrtoint	 %11284
%11333:	sub	 %11331 %11332
%11334:	getelementptr	 bufp XXX XXX
%11335:	load	 %11334
%11336:	getelementptr	 %11335 %11333
%11337:	br	 if.end1838

BASIC BLOCK if.end1838
%11338:	phi	 %11336 %11267
%11339:	icmp	 %11269 XXX
%11340:	br	 %11339 if.end1846 if.then1840

BASIC BLOCK if.then1840
%11341:	ptrtoint	 %11269
%11342:	ptrtoint	 %11284
%11343:	sub	 %11341 %11342
%11344:	getelementptr	 bufp XXX XXX
%11345:	load	 %11344
%11346:	getelementptr	 %11345 %11343
%11347:	br	 if.end1846

BASIC BLOCK if.end1846
%11348:	phi	 %11346 %11269
%11349:	icmp	 %11270 XXX
%11350:	br	 %11349 if.end1854 if.then1848

BASIC BLOCK if.then1848
%11351:	ptrtoint	 %11270
%11352:	ptrtoint	 %11284
%11353:	sub	 %11351 %11352
%11354:	getelementptr	 bufp XXX XXX
%11355:	load	 %11354
%11356:	getelementptr	 %11355 %11353
%11357:	br	 if.end1854

BASIC BLOCK if.end1854
%11358:	phi	 %11356 %11270
%11359:	br	 if.end1855

BASIC BLOCK if.end1855
%11360:	phi	 %11338 %11267
%11361:	phi	 %11328 %11268
%11362:	phi	 %11348 %11269
%11363:	phi	 %11358 %11270
%11364:	phi	 %11322 %11271
%11365:	br	 do.end1856

BASIC BLOCK do.end1856
%11366:	br	 while.cond1782

BASIC BLOCK while.end1857
%11367:	getelementptr	 %11271 XXX
%11368:	ptrtoint	 %11367
%11369:	ptrtoint	 %11268
%11370:	sub	 %11368 %11369
%11371:	sub	 %11370 XXX
%11372:	trunc	 %11371
%11373:	call	 XXX %11268 %11372 %11271 insert_op1
%11374:	getelementptr	 %11271 XXX
%11375:	icmp	 %11267 XXX
%11376:	br	 %11375 if.end1872 if.then1866

BASIC BLOCK if.then1866
%11377:	ptrtoint	 %11374
%11378:	ptrtoint	 %11267
%11379:	sub	 %11377 %11378
%11380:	sub	 %11379 XXX
%11381:	trunc	 %11380
%11382:	call	 XXX %11267 %11381 store_op1
%11383:	br	 if.end1872

BASIC BLOCK if.end1872
%11384:	br	 while.cond1873

BASIC BLOCK while.cond1873
%11385:	phi	 %11374 %11478
%11386:	phi	 %11268 %11479
%11387:	phi	 %11269 %11480
%11388:	phi	 XXX %11481
%11389:	phi	 %11374 %11482
%11390:	getelementptr	 bufp XXX XXX
%11391:	load	 %11390
%11392:	ptrtoint	 %11389
%11393:	ptrtoint	 %11391
%11394:	sub	 %11392 %11393
%11395:	add	 %11394 XXX
%11396:	getelementptr	 bufp XXX XXX
%11397:	load	 %11396
%11398:	icmp	 %11395 %11397
%11399:	br	 %11398 while.end1948 while.body1882

BASIC BLOCK while.body1882
%11400:	br	 do.body1883

BASIC BLOCK do.body1883
%11401:	getelementptr	 bufp XXX XXX
%11402:	load	 %11401
%11403:	getelementptr	 bufp XXX XXX
%11404:	load	 %11403
%11405:	icmp	 %11404 XXX
%11406:	br	 %11405 if.end1890 if.then1889

BASIC BLOCK if.then1889
%11407:	br	 return

BASIC BLOCK if.end1890
%11408:	getelementptr	 bufp XXX XXX
%11409:	load	 %11408
%11410:	shl	 %11409 XXX
%11411:	store	 %11410 %11408
%11412:	getelementptr	 bufp XXX XXX
%11413:	load	 %11412
%11414:	icmp	 %11413 XXX
%11415:	br	 %11414 if.end1898 if.then1896

BASIC BLOCK if.then1896
%11416:	getelementptr	 bufp XXX XXX
%11417:	store	 XXX %11416
%11418:	br	 if.end1898

BASIC BLOCK if.end1898
%11419:	getelementptr	 bufp XXX XXX
%11420:	load	 %11419
%11421:	getelementptr	 bufp XXX XXX
%11422:	load	 %11421
%11423:	call	 %11420 %11422 realloc
%11424:	getelementptr	 bufp XXX XXX
%11425:	store	 %11423 %11424
%11426:	getelementptr	 bufp XXX XXX
%11427:	load	 %11426
%11428:	icmp	 %11427 XXX
%11429:	br	 %11428 if.end1907 if.then1906

BASIC BLOCK if.then1906
%11430:	br	 return

BASIC BLOCK if.end1907
%11431:	getelementptr	 bufp XXX XXX
%11432:	load	 %11431
%11433:	icmp	 %11402 %11432
%11434:	br	 %11433 if.end1946 if.then1911

BASIC BLOCK if.then1911
%11435:	ptrtoint	 %11389
%11436:	ptrtoint	 %11402
%11437:	sub	 %11435 %11436
%11438:	getelementptr	 bufp XXX XXX
%11439:	load	 %11438
%11440:	getelementptr	 %11439 %11437
%11441:	ptrtoint	 %11386
%11442:	ptrtoint	 %11402
%11443:	sub	 %11441 %11442
%11444:	getelementptr	 bufp XXX XXX
%11445:	load	 %11444
%11446:	getelementptr	 %11445 %11443
%11447:	icmp	 %11385 XXX
%11448:	br	 %11447 if.end1929 if.then1923

BASIC BLOCK if.then1923
%11449:	ptrtoint	 %11385
%11450:	ptrtoint	 %11402
%11451:	sub	 %11449 %11450
%11452:	getelementptr	 bufp XXX XXX
%11453:	load	 %11452
%11454:	getelementptr	 %11453 %11451
%11455:	br	 if.end1929

BASIC BLOCK if.end1929
%11456:	phi	 %11454 %11385
%11457:	icmp	 %11387 XXX
%11458:	br	 %11457 if.end1937 if.then1931

BASIC BLOCK if.then1931
%11459:	ptrtoint	 %11387
%11460:	ptrtoint	 %11402
%11461:	sub	 %11459 %11460
%11462:	getelementptr	 bufp XXX XXX
%11463:	load	 %11462
%11464:	getelementptr	 %11463 %11461
%11465:	br	 if.end1937

BASIC BLOCK if.end1937
%11466:	phi	 %11464 %11387
%11467:	icmp	 %11388 XXX
%11468:	br	 %11467 if.end1945 if.then1939

BASIC BLOCK if.then1939
%11469:	ptrtoint	 %11388
%11470:	ptrtoint	 %11402
%11471:	sub	 %11469 %11470
%11472:	getelementptr	 bufp XXX XXX
%11473:	load	 %11472
%11474:	getelementptr	 %11473 %11471
%11475:	br	 if.end1945

BASIC BLOCK if.end1945
%11476:	phi	 %11474 %11388
%11477:	br	 if.end1946

BASIC BLOCK if.end1946
%11478:	phi	 %11456 %11385
%11479:	phi	 %11446 %11386
%11480:	phi	 %11466 %11387
%11481:	phi	 %11476 %11388
%11482:	phi	 %11440 %11389
%11483:	br	 do.end1947

BASIC BLOCK do.end1947
%11484:	br	 while.cond1873

BASIC BLOCK while.end1948
%11485:	getelementptr	 %11389 XXX
%11486:	br	 sw.epilog

BASIC BLOCK sw.bb1950
%11487:	and	 syntax XXX
%11488:	icmp	 %11487 XXX
%11489:	br	 %11488 if.then1966 lor.lhs.false1953

BASIC BLOCK lor.lhs.false1953
%11490:	and	 syntax XXX
%11491:	icmp	 %11490 XXX
%11492:	br	 %11491 lor.lhs.false1959 land.lhs.true1956

BASIC BLOCK land.lhs.true1956
%11493:	and	 syntax XXX
%11494:	icmp	 %11493 XXX
%11495:	br	 %11494 lor.lhs.false1959 if.then1966

BASIC BLOCK lor.lhs.false1959
%11496:	load	 %8851
%11497:	getelementptr	 %11496 XXX
%11498:	icmp	 %11497 pattern
%11499:	br	 %11498 if.end1967 land.lhs.true1963

BASIC BLOCK land.lhs.true1963
%11500:	load	 %8851
%11501:	icmp	 %11500 %8854
%11502:	br	 %11501 if.end1967 if.then1966

BASIC BLOCK if.then1966
%11503:	br	 normal_backslash

BASIC BLOCK if.end1967
%11504:	br	 handle_interval

BASIC BLOCK handle_interval
%11505:	phi	 %10679 %8946
%11506:	load	 %8851
%11507:	getelementptr	 %11506 XXX
%11508:	load	 %8851
%11509:	icmp	 %11508 %8854
%11510:	br	 %11509 if.end1977 if.then1971

BASIC BLOCK if.then1971
%11511:	and	 syntax XXX
%11512:	icmp	 %11511 XXX
%11513:	br	 %11512 if.else1975 if.then1974

BASIC BLOCK if.then1974
%11514:	br	 unfetch_interval

BASIC BLOCK if.else1975
%11515:	getelementptr	 %8850 XXX XXX
%11516:	load	 %11515
%11517:	bitcast	 %11516
%11518:	call	 %11517 free
%11519:	br	 return

BASIC BLOCK if.end1977
%11520:	load	 %8851
%11521:	icmp	 %11520 %8854
%11522:	br	 %11521 if.end2027 if.then1980

BASIC BLOCK if.then1980
%11523:	br	 do.body1981

BASIC BLOCK do.body1981
%11524:	load	 %8851
%11525:	icmp	 %11524 %8854
%11526:	br	 %11525 if.end1985 if.then1984

BASIC BLOCK if.then1984
%11527:	br	 return

BASIC BLOCK if.end1985
%11528:	load	 %8851
%11529:	getelementptr	 %11528 XXX
%11530:	store	 %11529 %8851
%11531:	load	 %11528
%11532:	icmp	 %8856 XXX
%11533:	br	 %11532 if.end1991 if.then1988

BASIC BLOCK if.then1988
%11534:	zext	 %11531
%11535:	getelementptr	 %8856 %11534
%11536:	load	 %11535
%11537:	br	 if.end1991

BASIC BLOCK if.end1991
%11538:	phi	 %11536 %11531
%11539:	br	 do.end1992

BASIC BLOCK do.end1992
%11540:	br	 while.cond1993

BASIC BLOCK while.cond1993
%11541:	phi	 %11538 %11580
%11542:	phi	 XXX %11560
%11543:	zext	 %11541
%11544:	sext	 %11543
%11545:	call	 __ctype_b_loc
%11546:	load	 %11545
%11547:	getelementptr	 %11546 %11544
%11548:	load	 %11547
%11549:	zext	 %11548
%11550:	and	 %11549 XXX
%11551:	icmp	 %11550 XXX
%11552:	br	 %11551 while.end2026 while.body2001

BASIC BLOCK while.body2001
%11553:	icmp	 %11542 XXX
%11554:	br	 %11553 if.end2005 if.then2004

BASIC BLOCK if.then2004
%11555:	br	 if.end2005

BASIC BLOCK if.end2005
%11556:	phi	 XXX %11542
%11557:	mul	 %11556 XXX
%11558:	zext	 %11541
%11559:	add	 %11557 %11558
%11560:	sub	 %11559 XXX
%11561:	load	 %8851
%11562:	icmp	 %11561 %8854
%11563:	br	 %11562 if.end2013 if.then2012

BASIC BLOCK if.then2012
%11564:	br	 while.end2026

BASIC BLOCK if.end2013
%11565:	br	 do.body2014

BASIC BLOCK do.body2014
%11566:	load	 %8851
%11567:	icmp	 %11566 %8854
%11568:	br	 %11567 if.end2018 if.then2017

BASIC BLOCK if.then2017
%11569:	br	 return

BASIC BLOCK if.end2018
%11570:	load	 %8851
%11571:	getelementptr	 %11570 XXX
%11572:	store	 %11571 %8851
%11573:	load	 %11570
%11574:	icmp	 %8856 XXX
%11575:	br	 %11574 if.end2024 if.then2021

BASIC BLOCK if.then2021
%11576:	zext	 %11573
%11577:	getelementptr	 %8856 %11576
%11578:	load	 %11577
%11579:	br	 if.end2024

BASIC BLOCK if.end2024
%11580:	phi	 %11578 %11573
%11581:	br	 do.end2025

BASIC BLOCK do.end2025
%11582:	br	 while.cond1993

BASIC BLOCK while.end2026
%11583:	phi	 %11560 %11542
%11584:	br	 if.end2027

BASIC BLOCK if.end2027
%11585:	phi	 %11541 %11505
%11586:	phi	 %11583 XXX
%11587:	zext	 %11585
%11588:	icmp	 %11587 XXX
%11589:	br	 %11588 if.else2086 if.then2031

BASIC BLOCK if.then2031
%11590:	load	 %8851
%11591:	icmp	 %11590 %8854
%11592:	br	 %11591 if.end2081 if.then2034

BASIC BLOCK if.then2034
%11593:	br	 do.body2035

BASIC BLOCK do.body2035
%11594:	load	 %8851
%11595:	icmp	 %11594 %8854
%11596:	br	 %11595 if.end2039 if.then2038

BASIC BLOCK if.then2038
%11597:	br	 return

BASIC BLOCK if.end2039
%11598:	load	 %8851
%11599:	getelementptr	 %11598 XXX
%11600:	store	 %11599 %8851
%11601:	load	 %11598
%11602:	icmp	 %8856 XXX
%11603:	br	 %11602 if.end2045 if.then2042

BASIC BLOCK if.then2042
%11604:	zext	 %11601
%11605:	getelementptr	 %8856 %11604
%11606:	load	 %11605
%11607:	br	 if.end2045

BASIC BLOCK if.end2045
%11608:	phi	 %11606 %11601
%11609:	br	 do.end2046

BASIC BLOCK do.end2046
%11610:	br	 while.cond2047

BASIC BLOCK while.cond2047
%11611:	phi	 %11608 %11650
%11612:	phi	 XXX %11630
%11613:	zext	 %11611
%11614:	sext	 %11613
%11615:	call	 __ctype_b_loc
%11616:	load	 %11615
%11617:	getelementptr	 %11616 %11614
%11618:	load	 %11617
%11619:	zext	 %11618
%11620:	and	 %11619 XXX
%11621:	icmp	 %11620 XXX
%11622:	br	 %11621 while.end2080 while.body2055

BASIC BLOCK while.body2055
%11623:	icmp	 %11612 XXX
%11624:	br	 %11623 if.end2059 if.then2058

BASIC BLOCK if.then2058
%11625:	br	 if.end2059

BASIC BLOCK if.end2059
%11626:	phi	 XXX %11612
%11627:	mul	 %11626 XXX
%11628:	zext	 %11611
%11629:	add	 %11627 %11628
%11630:	sub	 %11629 XXX
%11631:	load	 %8851
%11632:	icmp	 %11631 %8854
%11633:	br	 %11632 if.end2067 if.then2066

BASIC BLOCK if.then2066
%11634:	br	 while.end2080

BASIC BLOCK if.end2067
%11635:	br	 do.body2068

BASIC BLOCK do.body2068
%11636:	load	 %8851
%11637:	icmp	 %11636 %8854
%11638:	br	 %11637 if.end2072 if.then2071

BASIC BLOCK if.then2071
%11639:	br	 return

BASIC BLOCK if.end2072
%11640:	load	 %8851
%11641:	getelementptr	 %11640 XXX
%11642:	store	 %11641 %8851
%11643:	load	 %11640
%11644:	icmp	 %8856 XXX
%11645:	br	 %11644 if.end2078 if.then2075

BASIC BLOCK if.then2075
%11646:	zext	 %11643
%11647:	getelementptr	 %8856 %11646
%11648:	load	 %11647
%11649:	br	 if.end2078

BASIC BLOCK if.end2078
%11650:	phi	 %11648 %11643
%11651:	br	 do.end2079

BASIC BLOCK do.end2079
%11652:	br	 while.cond2047

BASIC BLOCK while.end2080
%11653:	phi	 %11630 %11612
%11654:	br	 if.end2081

BASIC BLOCK if.end2081
%11655:	phi	 %11611 %11585
%11656:	phi	 %11653 XXX
%11657:	icmp	 %11656 XXX
%11658:	br	 %11657 if.end2085 if.then2084

BASIC BLOCK if.then2084
%11659:	br	 if.end2085

BASIC BLOCK if.end2085
%11660:	phi	 XXX %11656
%11661:	br	 if.end2087

BASIC BLOCK if.else2086
%11662:	br	 if.end2087

BASIC BLOCK if.end2087
%11663:	phi	 %11655 %11585
%11664:	phi	 %11660 %11586
%11665:	icmp	 %11586 XXX
%11666:	br	 %11665 lor.lhs.false2090 if.then2096

BASIC BLOCK lor.lhs.false2090
%11667:	icmp	 %11664 XXX
%11668:	br	 %11667 lor.lhs.false2093 if.then2096

BASIC BLOCK lor.lhs.false2093
%11669:	icmp	 %11586 %11664
%11670:	br	 %11669 if.end2102 if.then2096

BASIC BLOCK if.then2096
%11671:	and	 syntax XXX
%11672:	icmp	 %11671 XXX
%11673:	br	 %11672 if.else2100 if.then2099

BASIC BLOCK if.then2099
%11674:	br	 unfetch_interval

BASIC BLOCK if.else2100
%11675:	getelementptr	 %8850 XXX XXX
%11676:	load	 %11675
%11677:	bitcast	 %11676
%11678:	call	 %11677 free
%11679:	br	 return

BASIC BLOCK if.end2102
%11680:	and	 syntax XXX
%11681:	icmp	 %11680 XXX
%11682:	br	 %11681 if.then2105 if.end2124

BASIC BLOCK if.then2105
%11683:	zext	 %11663
%11684:	icmp	 %11683 XXX
%11685:	br	 %11684 if.end2111 if.then2109

BASIC BLOCK if.then2109
%11686:	getelementptr	 %8850 XXX XXX
%11687:	load	 %11686
%11688:	bitcast	 %11687
%11689:	call	 %11688 free
%11690:	br	 return

BASIC BLOCK if.end2111
%11691:	br	 do.body2112

BASIC BLOCK do.body2112
%11692:	load	 %8851
%11693:	icmp	 %11692 %8854
%11694:	br	 %11693 if.end2116 if.then2115

BASIC BLOCK if.then2115
%11695:	br	 return

BASIC BLOCK if.end2116
%11696:	load	 %8851
%11697:	getelementptr	 %11696 XXX
%11698:	store	 %11697 %8851
%11699:	load	 %11696
%11700:	icmp	 %8856 XXX
%11701:	br	 %11700 if.end2122 if.then2119

BASIC BLOCK if.then2119
%11702:	zext	 %11699
%11703:	getelementptr	 %8856 %11702
%11704:	load	 %11703
%11705:	br	 if.end2122

BASIC BLOCK if.end2122
%11706:	phi	 %11704 %11699
%11707:	br	 do.end2123

BASIC BLOCK do.end2123
%11708:	br	 if.end2124

BASIC BLOCK if.end2124
%11709:	phi	 %11663 %11706
%11710:	zext	 %11709
%11711:	icmp	 %11710 XXX
%11712:	br	 %11711 if.end2134 if.then2128

BASIC BLOCK if.then2128
%11713:	and	 syntax XXX
%11714:	icmp	 %11713 XXX
%11715:	br	 %11714 if.else2132 if.then2131

BASIC BLOCK if.then2131
%11716:	br	 unfetch_interval

BASIC BLOCK if.else2132
%11717:	getelementptr	 %8850 XXX XXX
%11718:	load	 %11717
%11719:	bitcast	 %11718
%11720:	call	 %11719 free
%11721:	br	 return

BASIC BLOCK if.end2134
%11722:	icmp	 %8925 XXX
%11723:	br	 %11722 if.then2136 if.end2148

BASIC BLOCK if.then2136
%11724:	and	 syntax XXX
%11725:	icmp	 %11724 XXX
%11726:	br	 %11725 if.else2141 if.then2139

BASIC BLOCK if.then2139
%11727:	getelementptr	 %8850 XXX XXX
%11728:	load	 %11727
%11729:	bitcast	 %11728
%11730:	call	 %11729 free
%11731:	br	 return

BASIC BLOCK if.else2141
%11732:	and	 syntax XXX
%11733:	icmp	 %11732 XXX
%11734:	br	 %11733 if.else2145 if.then2144

BASIC BLOCK if.then2144
%11735:	br	 if.end2146

BASIC BLOCK if.else2145
%11736:	br	 unfetch_interval

BASIC BLOCK if.end2146
%11737:	br	 if.end2147

BASIC BLOCK if.end2147
%11738:	br	 if.end2148

BASIC BLOCK if.end2148
%11739:	phi	 %8925 %8927
%11740:	icmp	 %11664 XXX
%11741:	br	 %11740 if.else2235 if.then2151

BASIC BLOCK if.then2151
%11742:	br	 while.cond2152

BASIC BLOCK while.cond2152
%11743:	phi	 %8923 %11836
%11744:	phi	 %8924 %11837
%11745:	phi	 %11739 %11838
%11746:	phi	 %8926 %11839
%11747:	phi	 %8927 %11840
%11748:	getelementptr	 bufp XXX XXX
%11749:	load	 %11748
%11750:	ptrtoint	 %11747
%11751:	ptrtoint	 %11749
%11752:	sub	 %11750 %11751
%11753:	add	 %11752 XXX
%11754:	getelementptr	 bufp XXX XXX
%11755:	load	 %11754
%11756:	icmp	 %11753 %11755
%11757:	br	 %11756 while.end2227 while.body2161

BASIC BLOCK while.body2161
%11758:	br	 do.body2162

BASIC BLOCK do.body2162
%11759:	getelementptr	 bufp XXX XXX
%11760:	load	 %11759
%11761:	getelementptr	 bufp XXX XXX
%11762:	load	 %11761
%11763:	icmp	 %11762 XXX
%11764:	br	 %11763 if.end2169 if.then2168

BASIC BLOCK if.then2168
%11765:	br	 return

BASIC BLOCK if.end2169
%11766:	getelementptr	 bufp XXX XXX
%11767:	load	 %11766
%11768:	shl	 %11767 XXX
%11769:	store	 %11768 %11766
%11770:	getelementptr	 bufp XXX XXX
%11771:	load	 %11770
%11772:	icmp	 %11771 XXX
%11773:	br	 %11772 if.end2177 if.then2175

BASIC BLOCK if.then2175
%11774:	getelementptr	 bufp XXX XXX
%11775:	store	 XXX %11774
%11776:	br	 if.end2177

BASIC BLOCK if.end2177
%11777:	getelementptr	 bufp XXX XXX
%11778:	load	 %11777
%11779:	getelementptr	 bufp XXX XXX
%11780:	load	 %11779
%11781:	call	 %11778 %11780 realloc
%11782:	getelementptr	 bufp XXX XXX
%11783:	store	 %11781 %11782
%11784:	getelementptr	 bufp XXX XXX
%11785:	load	 %11784
%11786:	icmp	 %11785 XXX
%11787:	br	 %11786 if.end2186 if.then2185

BASIC BLOCK if.then2185
%11788:	br	 return

BASIC BLOCK if.end2186
%11789:	getelementptr	 bufp XXX XXX
%11790:	load	 %11789
%11791:	icmp	 %11760 %11790
%11792:	br	 %11791 if.end2225 if.then2190

BASIC BLOCK if.then2190
%11793:	ptrtoint	 %11747
%11794:	ptrtoint	 %11760
%11795:	sub	 %11793 %11794
%11796:	getelementptr	 bufp XXX XXX
%11797:	load	 %11796
%11798:	getelementptr	 %11797 %11795
%11799:	ptrtoint	 %11744
%11800:	ptrtoint	 %11760
%11801:	sub	 %11799 %11800
%11802:	getelementptr	 bufp XXX XXX
%11803:	load	 %11802
%11804:	getelementptr	 %11803 %11801
%11805:	icmp	 %11743 XXX
%11806:	br	 %11805 if.end2208 if.then2202

BASIC BLOCK if.then2202
%11807:	ptrtoint	 %11743
%11808:	ptrtoint	 %11760
%11809:	sub	 %11807 %11808
%11810:	getelementptr	 bufp XXX XXX
%11811:	load	 %11810
%11812:	getelementptr	 %11811 %11809
%11813:	br	 if.end2208

BASIC BLOCK if.end2208
%11814:	phi	 %11812 %11743
%11815:	icmp	 %11745 XXX
%11816:	br	 %11815 if.end2216 if.then2210

BASIC BLOCK if.then2210
%11817:	ptrtoint	 %11745
%11818:	ptrtoint	 %11760
%11819:	sub	 %11817 %11818
%11820:	getelementptr	 bufp XXX XXX
%11821:	load	 %11820
%11822:	getelementptr	 %11821 %11819
%11823:	br	 if.end2216

BASIC BLOCK if.end2216
%11824:	phi	 %11822 %11745
%11825:	icmp	 %11746 XXX
%11826:	br	 %11825 if.end2224 if.then2218

BASIC BLOCK if.then2218
%11827:	ptrtoint	 %11746
%11828:	ptrtoint	 %11760
%11829:	sub	 %11827 %11828
%11830:	getelementptr	 bufp XXX XXX
%11831:	load	 %11830
%11832:	getelementptr	 %11831 %11829
%11833:	br	 if.end2224

BASIC BLOCK if.end2224
%11834:	phi	 %11832 %11746
%11835:	br	 if.end2225

BASIC BLOCK if.end2225
%11836:	phi	 %11814 %11743
%11837:	phi	 %11804 %11744
%11838:	phi	 %11824 %11745
%11839:	phi	 %11834 %11746
%11840:	phi	 %11798 %11747
%11841:	br	 do.end2226

BASIC BLOCK do.end2226
%11842:	br	 while.cond2152

BASIC BLOCK while.end2227
%11843:	getelementptr	 %11747 XXX
%11844:	ptrtoint	 %11843
%11845:	ptrtoint	 %11745
%11846:	sub	 %11844 %11845
%11847:	sub	 %11846 XXX
%11848:	trunc	 %11847
%11849:	call	 XXX %11745 %11848 %11747 insert_op1
%11850:	getelementptr	 %11747 XXX
%11851:	br	 if.end2348

BASIC BLOCK if.else2235
%11852:	icmp	 %11664 XXX
%11853:	zext	 %11852
%11854:	mul	 %11853 XXX
%11855:	add	 XXX %11854
%11856:	br	 while.cond2240

BASIC BLOCK while.cond2240
%11857:	phi	 %8923 %11951
%11858:	phi	 %8924 %11952
%11859:	phi	 %11739 %11953
%11860:	phi	 %8926 %11954
%11861:	phi	 %8927 %11955
%11862:	getelementptr	 bufp XXX XXX
%11863:	load	 %11862
%11864:	ptrtoint	 %11861
%11865:	ptrtoint	 %11863
%11866:	sub	 %11864 %11865
%11867:	zext	 %11855
%11868:	add	 %11866 %11867
%11869:	getelementptr	 bufp XXX XXX
%11870:	load	 %11869
%11871:	icmp	 %11868 %11870
%11872:	br	 %11871 while.end2316 while.body2250

BASIC BLOCK while.body2250
%11873:	br	 do.body2251

BASIC BLOCK do.body2251
%11874:	getelementptr	 bufp XXX XXX
%11875:	load	 %11874
%11876:	getelementptr	 bufp XXX XXX
%11877:	load	 %11876
%11878:	icmp	 %11877 XXX
%11879:	br	 %11878 if.end2258 if.then2257

BASIC BLOCK if.then2257
%11880:	br	 return

BASIC BLOCK if.end2258
%11881:	getelementptr	 bufp XXX XXX
%11882:	load	 %11881
%11883:	shl	 %11882 XXX
%11884:	store	 %11883 %11881
%11885:	getelementptr	 bufp XXX XXX
%11886:	load	 %11885
%11887:	icmp	 %11886 XXX
%11888:	br	 %11887 if.end2266 if.then2264

BASIC BLOCK if.then2264
%11889:	getelementptr	 bufp XXX XXX
%11890:	store	 XXX %11889
%11891:	br	 if.end2266

BASIC BLOCK if.end2266
%11892:	getelementptr	 bufp XXX XXX
%11893:	load	 %11892
%11894:	getelementptr	 bufp XXX XXX
%11895:	load	 %11894
%11896:	call	 %11893 %11895 realloc
%11897:	getelementptr	 bufp XXX XXX
%11898:	store	 %11896 %11897
%11899:	getelementptr	 bufp XXX XXX
%11900:	load	 %11899
%11901:	icmp	 %11900 XXX
%11902:	br	 %11901 if.end2275 if.then2274

BASIC BLOCK if.then2274
%11903:	br	 return

BASIC BLOCK if.end2275
%11904:	getelementptr	 bufp XXX XXX
%11905:	load	 %11904
%11906:	icmp	 %11875 %11905
%11907:	br	 %11906 if.end2314 if.then2279

BASIC BLOCK if.then2279
%11908:	ptrtoint	 %11861
%11909:	ptrtoint	 %11875
%11910:	sub	 %11908 %11909
%11911:	getelementptr	 bufp XXX XXX
%11912:	load	 %11911
%11913:	getelementptr	 %11912 %11910
%11914:	ptrtoint	 %11858
%11915:	ptrtoint	 %11875
%11916:	sub	 %11914 %11915
%11917:	getelementptr	 bufp XXX XXX
%11918:	load	 %11917
%11919:	getelementptr	 %11918 %11916
%11920:	icmp	 %11857 XXX
%11921:	br	 %11920 if.end2297 if.then2291

BASIC BLOCK if.then2291
%11922:	ptrtoint	 %11857
%11923:	ptrtoint	 %11875
%11924:	sub	 %11922 %11923
%11925:	getelementptr	 bufp XXX XXX
%11926:	load	 %11925
%11927:	getelementptr	 %11926 %11924
%11928:	br	 if.end2297

BASIC BLOCK if.end2297
%11929:	phi	 %11927 %11857
%11930:	icmp	 %11859 XXX
%11931:	br	 %11930 if.end2305 if.then2299

BASIC BLOCK if.then2299
%11932:	ptrtoint	 %11859
%11933:	ptrtoint	 %11875
%11934:	sub	 %11932 %11933
%11935:	getelementptr	 bufp XXX XXX
%11936:	load	 %11935
%11937:	getelementptr	 %11936 %11934
%11938:	br	 if.end2305

BASIC BLOCK if.end2305
%11939:	phi	 %11937 %11859
%11940:	icmp	 %11860 XXX
%11941:	br	 %11940 if.end2313 if.then2307

BASIC BLOCK if.then2307
%11942:	ptrtoint	 %11860
%11943:	ptrtoint	 %11875
%11944:	sub	 %11942 %11943
%11945:	getelementptr	 bufp XXX XXX
%11946:	load	 %11945
%11947:	getelementptr	 %11946 %11944
%11948:	br	 if.end2313

BASIC BLOCK if.end2313
%11949:	phi	 %11947 %11860
%11950:	br	 if.end2314

BASIC BLOCK if.end2314
%11951:	phi	 %11929 %11857
%11952:	phi	 %11919 %11858
%11953:	phi	 %11939 %11859
%11954:	phi	 %11949 %11860
%11955:	phi	 %11913 %11861
%11956:	br	 do.end2315

BASIC BLOCK do.end2315
%11957:	br	 while.cond2240

BASIC BLOCK while.end2316
%11958:	getelementptr	 %11861 XXX
%11959:	icmp	 %11664 XXX
%11960:	zext	 %11959
%11961:	mul	 %11960 XXX
%11962:	sext	 %11961
%11963:	getelementptr	 %11958 %11962
%11964:	ptrtoint	 %11963
%11965:	ptrtoint	 %11859
%11966:	sub	 %11964 %11965
%11967:	sub	 %11966 XXX
%11968:	trunc	 %11967
%11969:	call	 XXX %11859 %11968 %11586 %11861 insert_op2
%11970:	getelementptr	 %11861 XXX
%11971:	call	 XXX %11859 XXX %11586 %11970 insert_op2
%11972:	getelementptr	 %11970 XXX
%11973:	icmp	 %11664 XXX
%11974:	br	 %11973 if.end2347 if.then2332

BASIC BLOCK if.then2332
%11975:	getelementptr	 %11859 XXX
%11976:	ptrtoint	 %11975
%11977:	ptrtoint	 %11972
%11978:	sub	 %11976 %11977
%11979:	sub	 %11978 XXX
%11980:	trunc	 %11979
%11981:	sub	 %11664 XXX
%11982:	call	 XXX %11972 %11980 %11981 store_op2
%11983:	getelementptr	 %11972 XXX
%11984:	ptrtoint	 %11983
%11985:	ptrtoint	 %11859
%11986:	sub	 %11984 %11985
%11987:	trunc	 %11986
%11988:	sub	 %11664 XXX
%11989:	call	 XXX %11859 %11987 %11988 %11983 insert_op2
%11990:	getelementptr	 %11983 XXX
%11991:	br	 if.end2347

BASIC BLOCK if.end2347
%11992:	phi	 %11990 %11972
%11993:	br	 if.end2348

BASIC BLOCK if.end2348
%11994:	phi	 %11743 %11857
%11995:	phi	 %11744 %11858
%11996:	phi	 %11745 %11859
%11997:	phi	 %11850 %11992
%11998:	br	 sw.epilog

BASIC BLOCK unfetch_interval
%11999:	store	 %11507 %8851
%12000:	br	 do.body2349

BASIC BLOCK do.body2349
%12001:	load	 %8851
%12002:	icmp	 %12001 %8854
%12003:	br	 %12002 if.end2353 if.then2352

BASIC BLOCK if.then2352
%12004:	br	 return

BASIC BLOCK if.end2353
%12005:	load	 %8851
%12006:	getelementptr	 %12005 XXX
%12007:	store	 %12006 %8851
%12008:	load	 %12005
%12009:	icmp	 %8856 XXX
%12010:	br	 %12009 if.end2359 if.then2356

BASIC BLOCK if.then2356
%12011:	zext	 %12008
%12012:	getelementptr	 %8856 %12011
%12013:	load	 %12012
%12014:	br	 if.end2359

BASIC BLOCK if.end2359
%12015:	phi	 %12013 %12008
%12016:	br	 do.end2360

BASIC BLOCK do.end2360
%12017:	and	 syntax XXX
%12018:	icmp	 %12017 XXX
%12019:	br	 %12018 if.then2363 if.end2373

BASIC BLOCK if.then2363
%12020:	load	 %8851
%12021:	icmp	 %12020 pattern
%12022:	br	 %12021 if.end2372 land.lhs.true2366

BASIC BLOCK land.lhs.true2366
%12023:	load	 %8851
%12024:	getelementptr	 %12023 XXX
%12025:	load	 %12024
%12026:	sext	 %12025
%12027:	icmp	 %12026 XXX
%12028:	br	 %12027 if.end2372 if.then2371

BASIC BLOCK if.then2371
%12029:	br	 normal_backslash

BASIC BLOCK if.end2372
%12030:	br	 if.end2373

BASIC BLOCK if.end2373
%12031:	br	 normal_char

BASIC BLOCK sw.bb2374
%12032:	load	 re_syntax_options
%12033:	and	 %12032 XXX
%12034:	icmp	 %12033 XXX
%12035:	br	 %12034 if.end2378 if.then2377

BASIC BLOCK if.then2377
%12036:	br	 normal_char

BASIC BLOCK if.end2378
%12037:	br	 do.body2379

BASIC BLOCK do.body2379
%12038:	br	 while.cond2380

BASIC BLOCK while.cond2380
%12039:	phi	 %8923 %12132
%12040:	phi	 %8924 %12133
%12041:	phi	 %8927 %12134
%12042:	phi	 %8926 %12135
%12043:	phi	 %8927 %12136
%12044:	getelementptr	 bufp XXX XXX
%12045:	load	 %12044
%12046:	ptrtoint	 %12043
%12047:	ptrtoint	 %12045
%12048:	sub	 %12046 %12047
%12049:	add	 %12048 XXX
%12050:	getelementptr	 bufp XXX XXX
%12051:	load	 %12050
%12052:	icmp	 %12049 %12051
%12053:	br	 %12052 while.end2455 while.body2389

BASIC BLOCK while.body2389
%12054:	br	 do.body2390

BASIC BLOCK do.body2390
%12055:	getelementptr	 bufp XXX XXX
%12056:	load	 %12055
%12057:	getelementptr	 bufp XXX XXX
%12058:	load	 %12057
%12059:	icmp	 %12058 XXX
%12060:	br	 %12059 if.end2397 if.then2396

BASIC BLOCK if.then2396
%12061:	br	 return

BASIC BLOCK if.end2397
%12062:	getelementptr	 bufp XXX XXX
%12063:	load	 %12062
%12064:	shl	 %12063 XXX
%12065:	store	 %12064 %12062
%12066:	getelementptr	 bufp XXX XXX
%12067:	load	 %12066
%12068:	icmp	 %12067 XXX
%12069:	br	 %12068 if.end2405 if.then2403

BASIC BLOCK if.then2403
%12070:	getelementptr	 bufp XXX XXX
%12071:	store	 XXX %12070
%12072:	br	 if.end2405

BASIC BLOCK if.end2405
%12073:	getelementptr	 bufp XXX XXX
%12074:	load	 %12073
%12075:	getelementptr	 bufp XXX XXX
%12076:	load	 %12075
%12077:	call	 %12074 %12076 realloc
%12078:	getelementptr	 bufp XXX XXX
%12079:	store	 %12077 %12078
%12080:	getelementptr	 bufp XXX XXX
%12081:	load	 %12080
%12082:	icmp	 %12081 XXX
%12083:	br	 %12082 if.end2414 if.then2413

BASIC BLOCK if.then2413
%12084:	br	 return

BASIC BLOCK if.end2414
%12085:	getelementptr	 bufp XXX XXX
%12086:	load	 %12085
%12087:	icmp	 %12056 %12086
%12088:	br	 %12087 if.end2453 if.then2418

BASIC BLOCK if.then2418
%12089:	ptrtoint	 %12043
%12090:	ptrtoint	 %12056
%12091:	sub	 %12089 %12090
%12092:	getelementptr	 bufp XXX XXX
%12093:	load	 %12092
%12094:	getelementptr	 %12093 %12091
%12095:	ptrtoint	 %12040
%12096:	ptrtoint	 %12056
%12097:	sub	 %12095 %12096
%12098:	getelementptr	 bufp XXX XXX
%12099:	load	 %12098
%12100:	getelementptr	 %12099 %12097
%12101:	icmp	 %12039 XXX
%12102:	br	 %12101 if.end2436 if.then2430

BASIC BLOCK if.then2430
%12103:	ptrtoint	 %12039
%12104:	ptrtoint	 %12056
%12105:	sub	 %12103 %12104
%12106:	getelementptr	 bufp XXX XXX
%12107:	load	 %12106
%12108:	getelementptr	 %12107 %12105
%12109:	br	 if.end2436

BASIC BLOCK if.end2436
%12110:	phi	 %12108 %12039
%12111:	icmp	 %12041 XXX
%12112:	br	 %12111 if.end2444 if.then2438

BASIC BLOCK if.then2438
%12113:	ptrtoint	 %12041
%12114:	ptrtoint	 %12056
%12115:	sub	 %12113 %12114
%12116:	getelementptr	 bufp XXX XXX
%12117:	load	 %12116
%12118:	getelementptr	 %12117 %12115
%12119:	br	 if.end2444

BASIC BLOCK if.end2444
%12120:	phi	 %12118 %12041
%12121:	icmp	 %12042 XXX
%12122:	br	 %12121 if.end2452 if.then2446

BASIC BLOCK if.then2446
%12123:	ptrtoint	 %12042
%12124:	ptrtoint	 %12056
%12125:	sub	 %12123 %12124
%12126:	getelementptr	 bufp XXX XXX
%12127:	load	 %12126
%12128:	getelementptr	 %12127 %12125
%12129:	br	 if.end2452

BASIC BLOCK if.end2452
%12130:	phi	 %12128 %12042
%12131:	br	 if.end2453

BASIC BLOCK if.end2453
%12132:	phi	 %12110 %12039
%12133:	phi	 %12100 %12040
%12134:	phi	 %12120 %12041
%12135:	phi	 %12130 %12042
%12136:	phi	 %12094 %12043
%12137:	br	 do.end2454

BASIC BLOCK do.end2454
%12138:	br	 while.cond2380

BASIC BLOCK while.end2455
%12139:	getelementptr	 %12043 XXX
%12140:	store	 XXX %12043
%12141:	br	 do.end2457

BASIC BLOCK do.end2457
%12142:	br	 sw.epilog

BASIC BLOCK sw.bb2458
%12143:	load	 re_syntax_options
%12144:	and	 %12143 XXX
%12145:	icmp	 %12144 XXX
%12146:	br	 %12145 if.end2462 if.then2461

BASIC BLOCK if.then2461
%12147:	br	 normal_char

BASIC BLOCK if.end2462
%12148:	br	 do.body2463

BASIC BLOCK do.body2463
%12149:	br	 while.cond2464

BASIC BLOCK while.cond2464
%12150:	phi	 %8923 %12243
%12151:	phi	 %8924 %12244
%12152:	phi	 %8927 %12245
%12153:	phi	 %8926 %12246
%12154:	phi	 %8927 %12247
%12155:	getelementptr	 bufp XXX XXX
%12156:	load	 %12155
%12157:	ptrtoint	 %12154
%12158:	ptrtoint	 %12156
%12159:	sub	 %12157 %12158
%12160:	add	 %12159 XXX
%12161:	getelementptr	 bufp XXX XXX
%12162:	load	 %12161
%12163:	icmp	 %12160 %12162
%12164:	br	 %12163 while.end2539 while.body2473

BASIC BLOCK while.body2473
%12165:	br	 do.body2474

BASIC BLOCK do.body2474
%12166:	getelementptr	 bufp XXX XXX
%12167:	load	 %12166
%12168:	getelementptr	 bufp XXX XXX
%12169:	load	 %12168
%12170:	icmp	 %12169 XXX
%12171:	br	 %12170 if.end2481 if.then2480

BASIC BLOCK if.then2480
%12172:	br	 return

BASIC BLOCK if.end2481
%12173:	getelementptr	 bufp XXX XXX
%12174:	load	 %12173
%12175:	shl	 %12174 XXX
%12176:	store	 %12175 %12173
%12177:	getelementptr	 bufp XXX XXX
%12178:	load	 %12177
%12179:	icmp	 %12178 XXX
%12180:	br	 %12179 if.end2489 if.then2487

BASIC BLOCK if.then2487
%12181:	getelementptr	 bufp XXX XXX
%12182:	store	 XXX %12181
%12183:	br	 if.end2489

BASIC BLOCK if.end2489
%12184:	getelementptr	 bufp XXX XXX
%12185:	load	 %12184
%12186:	getelementptr	 bufp XXX XXX
%12187:	load	 %12186
%12188:	call	 %12185 %12187 realloc
%12189:	getelementptr	 bufp XXX XXX
%12190:	store	 %12188 %12189
%12191:	getelementptr	 bufp XXX XXX
%12192:	load	 %12191
%12193:	icmp	 %12192 XXX
%12194:	br	 %12193 if.end2498 if.then2497

BASIC BLOCK if.then2497
%12195:	br	 return

BASIC BLOCK if.end2498
%12196:	getelementptr	 bufp XXX XXX
%12197:	load	 %12196
%12198:	icmp	 %12167 %12197
%12199:	br	 %12198 if.end2537 if.then2502

BASIC BLOCK if.then2502
%12200:	ptrtoint	 %12154
%12201:	ptrtoint	 %12167
%12202:	sub	 %12200 %12201
%12203:	getelementptr	 bufp XXX XXX
%12204:	load	 %12203
%12205:	getelementptr	 %12204 %12202
%12206:	ptrtoint	 %12151
%12207:	ptrtoint	 %12167
%12208:	sub	 %12206 %12207
%12209:	getelementptr	 bufp XXX XXX
%12210:	load	 %12209
%12211:	getelementptr	 %12210 %12208
%12212:	icmp	 %12150 XXX
%12213:	br	 %12212 if.end2520 if.then2514

BASIC BLOCK if.then2514
%12214:	ptrtoint	 %12150
%12215:	ptrtoint	 %12167
%12216:	sub	 %12214 %12215
%12217:	getelementptr	 bufp XXX XXX
%12218:	load	 %12217
%12219:	getelementptr	 %12218 %12216
%12220:	br	 if.end2520

BASIC BLOCK if.end2520
%12221:	phi	 %12219 %12150
%12222:	icmp	 %12152 XXX
%12223:	br	 %12222 if.end2528 if.then2522

BASIC BLOCK if.then2522
%12224:	ptrtoint	 %12152
%12225:	ptrtoint	 %12167
%12226:	sub	 %12224 %12225
%12227:	getelementptr	 bufp XXX XXX
%12228:	load	 %12227
%12229:	getelementptr	 %12228 %12226
%12230:	br	 if.end2528

BASIC BLOCK if.end2528
%12231:	phi	 %12229 %12152
%12232:	icmp	 %12153 XXX
%12233:	br	 %12232 if.end2536 if.then2530

BASIC BLOCK if.then2530
%12234:	ptrtoint	 %12153
%12235:	ptrtoint	 %12167
%12236:	sub	 %12234 %12235
%12237:	getelementptr	 bufp XXX XXX
%12238:	load	 %12237
%12239:	getelementptr	 %12238 %12236
%12240:	br	 if.end2536

BASIC BLOCK if.end2536
%12241:	phi	 %12239 %12153
%12242:	br	 if.end2537

BASIC BLOCK if.end2537
%12243:	phi	 %12221 %12150
%12244:	phi	 %12211 %12151
%12245:	phi	 %12231 %12152
%12246:	phi	 %12241 %12153
%12247:	phi	 %12205 %12154
%12248:	br	 do.end2538

BASIC BLOCK do.end2538
%12249:	br	 while.cond2464

BASIC BLOCK while.end2539
%12250:	getelementptr	 %12154 XXX
%12251:	store	 XXX %12154
%12252:	br	 do.end2541

BASIC BLOCK do.end2541
%12253:	br	 sw.epilog

BASIC BLOCK sw.bb2542
%12254:	load	 re_syntax_options
%12255:	and	 %12254 XXX
%12256:	icmp	 %12255 XXX
%12257:	br	 %12256 if.end2546 if.then2545

BASIC BLOCK if.then2545
%12258:	br	 normal_char

BASIC BLOCK if.end2546
%12259:	br	 do.body2547

BASIC BLOCK do.body2547
%12260:	br	 while.cond2548

BASIC BLOCK while.cond2548
%12261:	phi	 %8923 %12354
%12262:	phi	 %8924 %12355
%12263:	phi	 %8925 %12356
%12264:	phi	 %8926 %12357
%12265:	phi	 %8927 %12358
%12266:	getelementptr	 bufp XXX XXX
%12267:	load	 %12266
%12268:	ptrtoint	 %12265
%12269:	ptrtoint	 %12267
%12270:	sub	 %12268 %12269
%12271:	add	 %12270 XXX
%12272:	getelementptr	 bufp XXX XXX
%12273:	load	 %12272
%12274:	icmp	 %12271 %12273
%12275:	br	 %12274 while.end2623 while.body2557

BASIC BLOCK while.body2557
%12276:	br	 do.body2558

BASIC BLOCK do.body2558
%12277:	getelementptr	 bufp XXX XXX
%12278:	load	 %12277
%12279:	getelementptr	 bufp XXX XXX
%12280:	load	 %12279
%12281:	icmp	 %12280 XXX
%12282:	br	 %12281 if.end2565 if.then2564

BASIC BLOCK if.then2564
%12283:	br	 return

BASIC BLOCK if.end2565
%12284:	getelementptr	 bufp XXX XXX
%12285:	load	 %12284
%12286:	shl	 %12285 XXX
%12287:	store	 %12286 %12284
%12288:	getelementptr	 bufp XXX XXX
%12289:	load	 %12288
%12290:	icmp	 %12289 XXX
%12291:	br	 %12290 if.end2573 if.then2571

BASIC BLOCK if.then2571
%12292:	getelementptr	 bufp XXX XXX
%12293:	store	 XXX %12292
%12294:	br	 if.end2573

BASIC BLOCK if.end2573
%12295:	getelementptr	 bufp XXX XXX
%12296:	load	 %12295
%12297:	getelementptr	 bufp XXX XXX
%12298:	load	 %12297
%12299:	call	 %12296 %12298 realloc
%12300:	getelementptr	 bufp XXX XXX
%12301:	store	 %12299 %12300
%12302:	getelementptr	 bufp XXX XXX
%12303:	load	 %12302
%12304:	icmp	 %12303 XXX
%12305:	br	 %12304 if.end2582 if.then2581

BASIC BLOCK if.then2581
%12306:	br	 return

BASIC BLOCK if.end2582
%12307:	getelementptr	 bufp XXX XXX
%12308:	load	 %12307
%12309:	icmp	 %12278 %12308
%12310:	br	 %12309 if.end2621 if.then2586

BASIC BLOCK if.then2586
%12311:	ptrtoint	 %12265
%12312:	ptrtoint	 %12278
%12313:	sub	 %12311 %12312
%12314:	getelementptr	 bufp XXX XXX
%12315:	load	 %12314
%12316:	getelementptr	 %12315 %12313
%12317:	ptrtoint	 %12262
%12318:	ptrtoint	 %12278
%12319:	sub	 %12317 %12318
%12320:	getelementptr	 bufp XXX XXX
%12321:	load	 %12320
%12322:	getelementptr	 %12321 %12319
%12323:	icmp	 %12261 XXX
%12324:	br	 %12323 if.end2604 if.then2598

BASIC BLOCK if.then2598
%12325:	ptrtoint	 %12261
%12326:	ptrtoint	 %12278
%12327:	sub	 %12325 %12326
%12328:	getelementptr	 bufp XXX XXX
%12329:	load	 %12328
%12330:	getelementptr	 %12329 %12327
%12331:	br	 if.end2604

BASIC BLOCK if.end2604
%12332:	phi	 %12330 %12261
%12333:	icmp	 %12263 XXX
%12334:	br	 %12333 if.end2612 if.then2606

BASIC BLOCK if.then2606
%12335:	ptrtoint	 %12263
%12336:	ptrtoint	 %12278
%12337:	sub	 %12335 %12336
%12338:	getelementptr	 bufp XXX XXX
%12339:	load	 %12338
%12340:	getelementptr	 %12339 %12337
%12341:	br	 if.end2612

BASIC BLOCK if.end2612
%12342:	phi	 %12340 %12263
%12343:	icmp	 %12264 XXX
%12344:	br	 %12343 if.end2620 if.then2614

BASIC BLOCK if.then2614
%12345:	ptrtoint	 %12264
%12346:	ptrtoint	 %12278
%12347:	sub	 %12345 %12346
%12348:	getelementptr	 bufp XXX XXX
%12349:	load	 %12348
%12350:	getelementptr	 %12349 %12347
%12351:	br	 if.end2620

BASIC BLOCK if.end2620
%12352:	phi	 %12350 %12264
%12353:	br	 if.end2621

BASIC BLOCK if.end2621
%12354:	phi	 %12332 %12261
%12355:	phi	 %12322 %12262
%12356:	phi	 %12342 %12263
%12357:	phi	 %12352 %12264
%12358:	phi	 %12316 %12265
%12359:	br	 do.end2622

BASIC BLOCK do.end2622
%12360:	br	 while.cond2548

BASIC BLOCK while.end2623
%12361:	getelementptr	 %12265 XXX
%12362:	store	 XXX %12265
%12363:	br	 do.end2625

BASIC BLOCK do.end2625
%12364:	br	 sw.epilog

BASIC BLOCK sw.bb2626
%12365:	load	 re_syntax_options
%12366:	and	 %12365 XXX
%12367:	icmp	 %12366 XXX
%12368:	br	 %12367 if.end2630 if.then2629

BASIC BLOCK if.then2629
%12369:	br	 normal_char

BASIC BLOCK if.end2630
%12370:	br	 do.body2631

BASIC BLOCK do.body2631
%12371:	br	 while.cond2632

BASIC BLOCK while.cond2632
%12372:	phi	 %8923 %12465
%12373:	phi	 %8924 %12466
%12374:	phi	 %8925 %12467
%12375:	phi	 %8926 %12468
%12376:	phi	 %8927 %12469
%12377:	getelementptr	 bufp XXX XXX
%12378:	load	 %12377
%12379:	ptrtoint	 %12376
%12380:	ptrtoint	 %12378
%12381:	sub	 %12379 %12380
%12382:	add	 %12381 XXX
%12383:	getelementptr	 bufp XXX XXX
%12384:	load	 %12383
%12385:	icmp	 %12382 %12384
%12386:	br	 %12385 while.end2707 while.body2641

BASIC BLOCK while.body2641
%12387:	br	 do.body2642

BASIC BLOCK do.body2642
%12388:	getelementptr	 bufp XXX XXX
%12389:	load	 %12388
%12390:	getelementptr	 bufp XXX XXX
%12391:	load	 %12390
%12392:	icmp	 %12391 XXX
%12393:	br	 %12392 if.end2649 if.then2648

BASIC BLOCK if.then2648
%12394:	br	 return

BASIC BLOCK if.end2649
%12395:	getelementptr	 bufp XXX XXX
%12396:	load	 %12395
%12397:	shl	 %12396 XXX
%12398:	store	 %12397 %12395
%12399:	getelementptr	 bufp XXX XXX
%12400:	load	 %12399
%12401:	icmp	 %12400 XXX
%12402:	br	 %12401 if.end2657 if.then2655

BASIC BLOCK if.then2655
%12403:	getelementptr	 bufp XXX XXX
%12404:	store	 XXX %12403
%12405:	br	 if.end2657

BASIC BLOCK if.end2657
%12406:	getelementptr	 bufp XXX XXX
%12407:	load	 %12406
%12408:	getelementptr	 bufp XXX XXX
%12409:	load	 %12408
%12410:	call	 %12407 %12409 realloc
%12411:	getelementptr	 bufp XXX XXX
%12412:	store	 %12410 %12411
%12413:	getelementptr	 bufp XXX XXX
%12414:	load	 %12413
%12415:	icmp	 %12414 XXX
%12416:	br	 %12415 if.end2666 if.then2665

BASIC BLOCK if.then2665
%12417:	br	 return

BASIC BLOCK if.end2666
%12418:	getelementptr	 bufp XXX XXX
%12419:	load	 %12418
%12420:	icmp	 %12389 %12419
%12421:	br	 %12420 if.end2705 if.then2670

BASIC BLOCK if.then2670
%12422:	ptrtoint	 %12376
%12423:	ptrtoint	 %12389
%12424:	sub	 %12422 %12423
%12425:	getelementptr	 bufp XXX XXX
%12426:	load	 %12425
%12427:	getelementptr	 %12426 %12424
%12428:	ptrtoint	 %12373
%12429:	ptrtoint	 %12389
%12430:	sub	 %12428 %12429
%12431:	getelementptr	 bufp XXX XXX
%12432:	load	 %12431
%12433:	getelementptr	 %12432 %12430
%12434:	icmp	 %12372 XXX
%12435:	br	 %12434 if.end2688 if.then2682

BASIC BLOCK if.then2682
%12436:	ptrtoint	 %12372
%12437:	ptrtoint	 %12389
%12438:	sub	 %12436 %12437
%12439:	getelementptr	 bufp XXX XXX
%12440:	load	 %12439
%12441:	getelementptr	 %12440 %12438
%12442:	br	 if.end2688

BASIC BLOCK if.end2688
%12443:	phi	 %12441 %12372
%12444:	icmp	 %12374 XXX
%12445:	br	 %12444 if.end2696 if.then2690

BASIC BLOCK if.then2690
%12446:	ptrtoint	 %12374
%12447:	ptrtoint	 %12389
%12448:	sub	 %12446 %12447
%12449:	getelementptr	 bufp XXX XXX
%12450:	load	 %12449
%12451:	getelementptr	 %12450 %12448
%12452:	br	 if.end2696

BASIC BLOCK if.end2696
%12453:	phi	 %12451 %12374
%12454:	icmp	 %12375 XXX
%12455:	br	 %12454 if.end2704 if.then2698

BASIC BLOCK if.then2698
%12456:	ptrtoint	 %12375
%12457:	ptrtoint	 %12389
%12458:	sub	 %12456 %12457
%12459:	getelementptr	 bufp XXX XXX
%12460:	load	 %12459
%12461:	getelementptr	 %12460 %12458
%12462:	br	 if.end2704

BASIC BLOCK if.end2704
%12463:	phi	 %12461 %12375
%12464:	br	 if.end2705

BASIC BLOCK if.end2705
%12465:	phi	 %12443 %12372
%12466:	phi	 %12433 %12373
%12467:	phi	 %12453 %12374
%12468:	phi	 %12463 %12375
%12469:	phi	 %12427 %12376
%12470:	br	 do.end2706

BASIC BLOCK do.end2706
%12471:	br	 while.cond2632

BASIC BLOCK while.end2707
%12472:	getelementptr	 %12376 XXX
%12473:	store	 XXX %12376
%12474:	br	 do.end2709

BASIC BLOCK do.end2709
%12475:	br	 sw.epilog

BASIC BLOCK sw.bb2710
%12476:	load	 re_syntax_options
%12477:	and	 %12476 XXX
%12478:	icmp	 %12477 XXX
%12479:	br	 %12478 if.end2714 if.then2713

BASIC BLOCK if.then2713
%12480:	br	 normal_char

BASIC BLOCK if.end2714
%12481:	br	 do.body2715

BASIC BLOCK do.body2715
%12482:	br	 while.cond2716

BASIC BLOCK while.cond2716
%12483:	phi	 %8923 %12576
%12484:	phi	 %8924 %12577
%12485:	phi	 %8925 %12578
%12486:	phi	 %8926 %12579
%12487:	phi	 %8927 %12580
%12488:	getelementptr	 bufp XXX XXX
%12489:	load	 %12488
%12490:	ptrtoint	 %12487
%12491:	ptrtoint	 %12489
%12492:	sub	 %12490 %12491
%12493:	add	 %12492 XXX
%12494:	getelementptr	 bufp XXX XXX
%12495:	load	 %12494
%12496:	icmp	 %12493 %12495
%12497:	br	 %12496 while.end2791 while.body2725

BASIC BLOCK while.body2725
%12498:	br	 do.body2726

BASIC BLOCK do.body2726
%12499:	getelementptr	 bufp XXX XXX
%12500:	load	 %12499
%12501:	getelementptr	 bufp XXX XXX
%12502:	load	 %12501
%12503:	icmp	 %12502 XXX
%12504:	br	 %12503 if.end2733 if.then2732

BASIC BLOCK if.then2732
%12505:	br	 return

BASIC BLOCK if.end2733
%12506:	getelementptr	 bufp XXX XXX
%12507:	load	 %12506
%12508:	shl	 %12507 XXX
%12509:	store	 %12508 %12506
%12510:	getelementptr	 bufp XXX XXX
%12511:	load	 %12510
%12512:	icmp	 %12511 XXX
%12513:	br	 %12512 if.end2741 if.then2739

BASIC BLOCK if.then2739
%12514:	getelementptr	 bufp XXX XXX
%12515:	store	 XXX %12514
%12516:	br	 if.end2741

BASIC BLOCK if.end2741
%12517:	getelementptr	 bufp XXX XXX
%12518:	load	 %12517
%12519:	getelementptr	 bufp XXX XXX
%12520:	load	 %12519
%12521:	call	 %12518 %12520 realloc
%12522:	getelementptr	 bufp XXX XXX
%12523:	store	 %12521 %12522
%12524:	getelementptr	 bufp XXX XXX
%12525:	load	 %12524
%12526:	icmp	 %12525 XXX
%12527:	br	 %12526 if.end2750 if.then2749

BASIC BLOCK if.then2749
%12528:	br	 return

BASIC BLOCK if.end2750
%12529:	getelementptr	 bufp XXX XXX
%12530:	load	 %12529
%12531:	icmp	 %12500 %12530
%12532:	br	 %12531 if.end2789 if.then2754

BASIC BLOCK if.then2754
%12533:	ptrtoint	 %12487
%12534:	ptrtoint	 %12500
%12535:	sub	 %12533 %12534
%12536:	getelementptr	 bufp XXX XXX
%12537:	load	 %12536
%12538:	getelementptr	 %12537 %12535
%12539:	ptrtoint	 %12484
%12540:	ptrtoint	 %12500
%12541:	sub	 %12539 %12540
%12542:	getelementptr	 bufp XXX XXX
%12543:	load	 %12542
%12544:	getelementptr	 %12543 %12541
%12545:	icmp	 %12483 XXX
%12546:	br	 %12545 if.end2772 if.then2766

BASIC BLOCK if.then2766
%12547:	ptrtoint	 %12483
%12548:	ptrtoint	 %12500
%12549:	sub	 %12547 %12548
%12550:	getelementptr	 bufp XXX XXX
%12551:	load	 %12550
%12552:	getelementptr	 %12551 %12549
%12553:	br	 if.end2772

BASIC BLOCK if.end2772
%12554:	phi	 %12552 %12483
%12555:	icmp	 %12485 XXX
%12556:	br	 %12555 if.end2780 if.then2774

BASIC BLOCK if.then2774
%12557:	ptrtoint	 %12485
%12558:	ptrtoint	 %12500
%12559:	sub	 %12557 %12558
%12560:	getelementptr	 bufp XXX XXX
%12561:	load	 %12560
%12562:	getelementptr	 %12561 %12559
%12563:	br	 if.end2780

BASIC BLOCK if.end2780
%12564:	phi	 %12562 %12485
%12565:	icmp	 %12486 XXX
%12566:	br	 %12565 if.end2788 if.then2782

BASIC BLOCK if.then2782
%12567:	ptrtoint	 %12486
%12568:	ptrtoint	 %12500
%12569:	sub	 %12567 %12568
%12570:	getelementptr	 bufp XXX XXX
%12571:	load	 %12570
%12572:	getelementptr	 %12571 %12569
%12573:	br	 if.end2788

BASIC BLOCK if.end2788
%12574:	phi	 %12572 %12486
%12575:	br	 if.end2789

BASIC BLOCK if.end2789
%12576:	phi	 %12554 %12483
%12577:	phi	 %12544 %12484
%12578:	phi	 %12564 %12485
%12579:	phi	 %12574 %12486
%12580:	phi	 %12538 %12487
%12581:	br	 do.end2790

BASIC BLOCK do.end2790
%12582:	br	 while.cond2716

BASIC BLOCK while.end2791
%12583:	getelementptr	 %12487 XXX
%12584:	store	 XXX %12487
%12585:	br	 do.end2793

BASIC BLOCK do.end2793
%12586:	br	 sw.epilog

BASIC BLOCK sw.bb2794
%12587:	load	 re_syntax_options
%12588:	and	 %12587 XXX
%12589:	icmp	 %12588 XXX
%12590:	br	 %12589 if.end2798 if.then2797

BASIC BLOCK if.then2797
%12591:	br	 normal_char

BASIC BLOCK if.end2798
%12592:	br	 do.body2799

BASIC BLOCK do.body2799
%12593:	br	 while.cond2800

BASIC BLOCK while.cond2800
%12594:	phi	 %8923 %12687
%12595:	phi	 %8924 %12688
%12596:	phi	 %8925 %12689
%12597:	phi	 %8926 %12690
%12598:	phi	 %8927 %12691
%12599:	getelementptr	 bufp XXX XXX
%12600:	load	 %12599
%12601:	ptrtoint	 %12598
%12602:	ptrtoint	 %12600
%12603:	sub	 %12601 %12602
%12604:	add	 %12603 XXX
%12605:	getelementptr	 bufp XXX XXX
%12606:	load	 %12605
%12607:	icmp	 %12604 %12606
%12608:	br	 %12607 while.end2875 while.body2809

BASIC BLOCK while.body2809
%12609:	br	 do.body2810

BASIC BLOCK do.body2810
%12610:	getelementptr	 bufp XXX XXX
%12611:	load	 %12610
%12612:	getelementptr	 bufp XXX XXX
%12613:	load	 %12612
%12614:	icmp	 %12613 XXX
%12615:	br	 %12614 if.end2817 if.then2816

BASIC BLOCK if.then2816
%12616:	br	 return

BASIC BLOCK if.end2817
%12617:	getelementptr	 bufp XXX XXX
%12618:	load	 %12617
%12619:	shl	 %12618 XXX
%12620:	store	 %12619 %12617
%12621:	getelementptr	 bufp XXX XXX
%12622:	load	 %12621
%12623:	icmp	 %12622 XXX
%12624:	br	 %12623 if.end2825 if.then2823

BASIC BLOCK if.then2823
%12625:	getelementptr	 bufp XXX XXX
%12626:	store	 XXX %12625
%12627:	br	 if.end2825

BASIC BLOCK if.end2825
%12628:	getelementptr	 bufp XXX XXX
%12629:	load	 %12628
%12630:	getelementptr	 bufp XXX XXX
%12631:	load	 %12630
%12632:	call	 %12629 %12631 realloc
%12633:	getelementptr	 bufp XXX XXX
%12634:	store	 %12632 %12633
%12635:	getelementptr	 bufp XXX XXX
%12636:	load	 %12635
%12637:	icmp	 %12636 XXX
%12638:	br	 %12637 if.end2834 if.then2833

BASIC BLOCK if.then2833
%12639:	br	 return

BASIC BLOCK if.end2834
%12640:	getelementptr	 bufp XXX XXX
%12641:	load	 %12640
%12642:	icmp	 %12611 %12641
%12643:	br	 %12642 if.end2873 if.then2838

BASIC BLOCK if.then2838
%12644:	ptrtoint	 %12598
%12645:	ptrtoint	 %12611
%12646:	sub	 %12644 %12645
%12647:	getelementptr	 bufp XXX XXX
%12648:	load	 %12647
%12649:	getelementptr	 %12648 %12646
%12650:	ptrtoint	 %12595
%12651:	ptrtoint	 %12611
%12652:	sub	 %12650 %12651
%12653:	getelementptr	 bufp XXX XXX
%12654:	load	 %12653
%12655:	getelementptr	 %12654 %12652
%12656:	icmp	 %12594 XXX
%12657:	br	 %12656 if.end2856 if.then2850

BASIC BLOCK if.then2850
%12658:	ptrtoint	 %12594
%12659:	ptrtoint	 %12611
%12660:	sub	 %12658 %12659
%12661:	getelementptr	 bufp XXX XXX
%12662:	load	 %12661
%12663:	getelementptr	 %12662 %12660
%12664:	br	 if.end2856

BASIC BLOCK if.end2856
%12665:	phi	 %12663 %12594
%12666:	icmp	 %12596 XXX
%12667:	br	 %12666 if.end2864 if.then2858

BASIC BLOCK if.then2858
%12668:	ptrtoint	 %12596
%12669:	ptrtoint	 %12611
%12670:	sub	 %12668 %12669
%12671:	getelementptr	 bufp XXX XXX
%12672:	load	 %12671
%12673:	getelementptr	 %12672 %12670
%12674:	br	 if.end2864

BASIC BLOCK if.end2864
%12675:	phi	 %12673 %12596
%12676:	icmp	 %12597 XXX
%12677:	br	 %12676 if.end2872 if.then2866

BASIC BLOCK if.then2866
%12678:	ptrtoint	 %12597
%12679:	ptrtoint	 %12611
%12680:	sub	 %12678 %12679
%12681:	getelementptr	 bufp XXX XXX
%12682:	load	 %12681
%12683:	getelementptr	 %12682 %12680
%12684:	br	 if.end2872

BASIC BLOCK if.end2872
%12685:	phi	 %12683 %12597
%12686:	br	 if.end2873

BASIC BLOCK if.end2873
%12687:	phi	 %12665 %12594
%12688:	phi	 %12655 %12595
%12689:	phi	 %12675 %12596
%12690:	phi	 %12685 %12597
%12691:	phi	 %12649 %12598
%12692:	br	 do.end2874

BASIC BLOCK do.end2874
%12693:	br	 while.cond2800

BASIC BLOCK while.end2875
%12694:	getelementptr	 %12598 XXX
%12695:	store	 XXX %12598
%12696:	br	 do.end2877

BASIC BLOCK do.end2877
%12697:	br	 sw.epilog

BASIC BLOCK sw.bb2878
%12698:	load	 re_syntax_options
%12699:	and	 %12698 XXX
%12700:	icmp	 %12699 XXX
%12701:	br	 %12700 if.end2882 if.then2881

BASIC BLOCK if.then2881
%12702:	br	 normal_char

BASIC BLOCK if.end2882
%12703:	br	 do.body2883

BASIC BLOCK do.body2883
%12704:	br	 while.cond2884

BASIC BLOCK while.cond2884
%12705:	phi	 %8923 %12798
%12706:	phi	 %8924 %12799
%12707:	phi	 %8925 %12800
%12708:	phi	 %8926 %12801
%12709:	phi	 %8927 %12802
%12710:	getelementptr	 bufp XXX XXX
%12711:	load	 %12710
%12712:	ptrtoint	 %12709
%12713:	ptrtoint	 %12711
%12714:	sub	 %12712 %12713
%12715:	add	 %12714 XXX
%12716:	getelementptr	 bufp XXX XXX
%12717:	load	 %12716
%12718:	icmp	 %12715 %12717
%12719:	br	 %12718 while.end2959 while.body2893

BASIC BLOCK while.body2893
%12720:	br	 do.body2894

BASIC BLOCK do.body2894
%12721:	getelementptr	 bufp XXX XXX
%12722:	load	 %12721
%12723:	getelementptr	 bufp XXX XXX
%12724:	load	 %12723
%12725:	icmp	 %12724 XXX
%12726:	br	 %12725 if.end2901 if.then2900

BASIC BLOCK if.then2900
%12727:	br	 return

BASIC BLOCK if.end2901
%12728:	getelementptr	 bufp XXX XXX
%12729:	load	 %12728
%12730:	shl	 %12729 XXX
%12731:	store	 %12730 %12728
%12732:	getelementptr	 bufp XXX XXX
%12733:	load	 %12732
%12734:	icmp	 %12733 XXX
%12735:	br	 %12734 if.end2909 if.then2907

BASIC BLOCK if.then2907
%12736:	getelementptr	 bufp XXX XXX
%12737:	store	 XXX %12736
%12738:	br	 if.end2909

BASIC BLOCK if.end2909
%12739:	getelementptr	 bufp XXX XXX
%12740:	load	 %12739
%12741:	getelementptr	 bufp XXX XXX
%12742:	load	 %12741
%12743:	call	 %12740 %12742 realloc
%12744:	getelementptr	 bufp XXX XXX
%12745:	store	 %12743 %12744
%12746:	getelementptr	 bufp XXX XXX
%12747:	load	 %12746
%12748:	icmp	 %12747 XXX
%12749:	br	 %12748 if.end2918 if.then2917

BASIC BLOCK if.then2917
%12750:	br	 return

BASIC BLOCK if.end2918
%12751:	getelementptr	 bufp XXX XXX
%12752:	load	 %12751
%12753:	icmp	 %12722 %12752
%12754:	br	 %12753 if.end2957 if.then2922

BASIC BLOCK if.then2922
%12755:	ptrtoint	 %12709
%12756:	ptrtoint	 %12722
%12757:	sub	 %12755 %12756
%12758:	getelementptr	 bufp XXX XXX
%12759:	load	 %12758
%12760:	getelementptr	 %12759 %12757
%12761:	ptrtoint	 %12706
%12762:	ptrtoint	 %12722
%12763:	sub	 %12761 %12762
%12764:	getelementptr	 bufp XXX XXX
%12765:	load	 %12764
%12766:	getelementptr	 %12765 %12763
%12767:	icmp	 %12705 XXX
%12768:	br	 %12767 if.end2940 if.then2934

BASIC BLOCK if.then2934
%12769:	ptrtoint	 %12705
%12770:	ptrtoint	 %12722
%12771:	sub	 %12769 %12770
%12772:	getelementptr	 bufp XXX XXX
%12773:	load	 %12772
%12774:	getelementptr	 %12773 %12771
%12775:	br	 if.end2940

BASIC BLOCK if.end2940
%12776:	phi	 %12774 %12705
%12777:	icmp	 %12707 XXX
%12778:	br	 %12777 if.end2948 if.then2942

BASIC BLOCK if.then2942
%12779:	ptrtoint	 %12707
%12780:	ptrtoint	 %12722
%12781:	sub	 %12779 %12780
%12782:	getelementptr	 bufp XXX XXX
%12783:	load	 %12782
%12784:	getelementptr	 %12783 %12781
%12785:	br	 if.end2948

BASIC BLOCK if.end2948
%12786:	phi	 %12784 %12707
%12787:	icmp	 %12708 XXX
%12788:	br	 %12787 if.end2956 if.then2950

BASIC BLOCK if.then2950
%12789:	ptrtoint	 %12708
%12790:	ptrtoint	 %12722
%12791:	sub	 %12789 %12790
%12792:	getelementptr	 bufp XXX XXX
%12793:	load	 %12792
%12794:	getelementptr	 %12793 %12791
%12795:	br	 if.end2956

BASIC BLOCK if.end2956
%12796:	phi	 %12794 %12708
%12797:	br	 if.end2957

BASIC BLOCK if.end2957
%12798:	phi	 %12776 %12705
%12799:	phi	 %12766 %12706
%12800:	phi	 %12786 %12707
%12801:	phi	 %12796 %12708
%12802:	phi	 %12760 %12709
%12803:	br	 do.end2958

BASIC BLOCK do.end2958
%12804:	br	 while.cond2884

BASIC BLOCK while.end2959
%12805:	getelementptr	 %12709 XXX
%12806:	store	 XXX %12709
%12807:	br	 do.end2961

BASIC BLOCK do.end2961
%12808:	br	 sw.epilog

BASIC BLOCK sw.bb2962
%12809:	load	 re_syntax_options
%12810:	and	 %12809 XXX
%12811:	icmp	 %12810 XXX
%12812:	br	 %12811 if.end2966 if.then2965

BASIC BLOCK if.then2965
%12813:	br	 normal_char

BASIC BLOCK if.end2966
%12814:	br	 do.body2967

BASIC BLOCK do.body2967
%12815:	br	 while.cond2968

BASIC BLOCK while.cond2968
%12816:	phi	 %8923 %12909
%12817:	phi	 %8924 %12910
%12818:	phi	 %8925 %12911
%12819:	phi	 %8926 %12912
%12820:	phi	 %8927 %12913
%12821:	getelementptr	 bufp XXX XXX
%12822:	load	 %12821
%12823:	ptrtoint	 %12820
%12824:	ptrtoint	 %12822
%12825:	sub	 %12823 %12824
%12826:	add	 %12825 XXX
%12827:	getelementptr	 bufp XXX XXX
%12828:	load	 %12827
%12829:	icmp	 %12826 %12828
%12830:	br	 %12829 while.end3043 while.body2977

BASIC BLOCK while.body2977
%12831:	br	 do.body2978

BASIC BLOCK do.body2978
%12832:	getelementptr	 bufp XXX XXX
%12833:	load	 %12832
%12834:	getelementptr	 bufp XXX XXX
%12835:	load	 %12834
%12836:	icmp	 %12835 XXX
%12837:	br	 %12836 if.end2985 if.then2984

BASIC BLOCK if.then2984
%12838:	br	 return

BASIC BLOCK if.end2985
%12839:	getelementptr	 bufp XXX XXX
%12840:	load	 %12839
%12841:	shl	 %12840 XXX
%12842:	store	 %12841 %12839
%12843:	getelementptr	 bufp XXX XXX
%12844:	load	 %12843
%12845:	icmp	 %12844 XXX
%12846:	br	 %12845 if.end2993 if.then2991

BASIC BLOCK if.then2991
%12847:	getelementptr	 bufp XXX XXX
%12848:	store	 XXX %12847
%12849:	br	 if.end2993

BASIC BLOCK if.end2993
%12850:	getelementptr	 bufp XXX XXX
%12851:	load	 %12850
%12852:	getelementptr	 bufp XXX XXX
%12853:	load	 %12852
%12854:	call	 %12851 %12853 realloc
%12855:	getelementptr	 bufp XXX XXX
%12856:	store	 %12854 %12855
%12857:	getelementptr	 bufp XXX XXX
%12858:	load	 %12857
%12859:	icmp	 %12858 XXX
%12860:	br	 %12859 if.end3002 if.then3001

BASIC BLOCK if.then3001
%12861:	br	 return

BASIC BLOCK if.end3002
%12862:	getelementptr	 bufp XXX XXX
%12863:	load	 %12862
%12864:	icmp	 %12833 %12863
%12865:	br	 %12864 if.end3041 if.then3006

BASIC BLOCK if.then3006
%12866:	ptrtoint	 %12820
%12867:	ptrtoint	 %12833
%12868:	sub	 %12866 %12867
%12869:	getelementptr	 bufp XXX XXX
%12870:	load	 %12869
%12871:	getelementptr	 %12870 %12868
%12872:	ptrtoint	 %12817
%12873:	ptrtoint	 %12833
%12874:	sub	 %12872 %12873
%12875:	getelementptr	 bufp XXX XXX
%12876:	load	 %12875
%12877:	getelementptr	 %12876 %12874
%12878:	icmp	 %12816 XXX
%12879:	br	 %12878 if.end3024 if.then3018

BASIC BLOCK if.then3018
%12880:	ptrtoint	 %12816
%12881:	ptrtoint	 %12833
%12882:	sub	 %12880 %12881
%12883:	getelementptr	 bufp XXX XXX
%12884:	load	 %12883
%12885:	getelementptr	 %12884 %12882
%12886:	br	 if.end3024

BASIC BLOCK if.end3024
%12887:	phi	 %12885 %12816
%12888:	icmp	 %12818 XXX
%12889:	br	 %12888 if.end3032 if.then3026

BASIC BLOCK if.then3026
%12890:	ptrtoint	 %12818
%12891:	ptrtoint	 %12833
%12892:	sub	 %12890 %12891
%12893:	getelementptr	 bufp XXX XXX
%12894:	load	 %12893
%12895:	getelementptr	 %12894 %12892
%12896:	br	 if.end3032

BASIC BLOCK if.end3032
%12897:	phi	 %12895 %12818
%12898:	icmp	 %12819 XXX
%12899:	br	 %12898 if.end3040 if.then3034

BASIC BLOCK if.then3034
%12900:	ptrtoint	 %12819
%12901:	ptrtoint	 %12833
%12902:	sub	 %12900 %12901
%12903:	getelementptr	 bufp XXX XXX
%12904:	load	 %12903
%12905:	getelementptr	 %12904 %12902
%12906:	br	 if.end3040

BASIC BLOCK if.end3040
%12907:	phi	 %12905 %12819
%12908:	br	 if.end3041

BASIC BLOCK if.end3041
%12909:	phi	 %12887 %12816
%12910:	phi	 %12877 %12817
%12911:	phi	 %12897 %12818
%12912:	phi	 %12907 %12819
%12913:	phi	 %12871 %12820
%12914:	br	 do.end3042

BASIC BLOCK do.end3042
%12915:	br	 while.cond2968

BASIC BLOCK while.end3043
%12916:	getelementptr	 %12820 XXX
%12917:	store	 XXX %12820
%12918:	br	 do.end3045

BASIC BLOCK do.end3045
%12919:	br	 sw.epilog

BASIC BLOCK sw.bb3046
%12920:	and	 syntax XXX
%12921:	icmp	 %12920 XXX
%12922:	br	 %12921 if.end3050 if.then3049

BASIC BLOCK if.then3049
%12923:	br	 normal_char

BASIC BLOCK if.end3050
%12924:	zext	 %10679
%12925:	sub	 %12924 XXX
%12926:	trunc	 %12925
%12927:	zext	 %12926
%12928:	icmp	 %12927 %8922
%12929:	br	 %12928 if.end3059 if.then3057

BASIC BLOCK if.then3057
%12930:	getelementptr	 %8850 XXX XXX
%12931:	load	 %12930
%12932:	bitcast	 %12931
%12933:	call	 %12932 free
%12934:	br	 return

BASIC BLOCK if.end3059
%12935:	zext	 %12926
%12936:	bitcast	 %8850
%12937:	getelementptr	 %12936 XXX XXX
%12938:	load	 %12937
%12939:	getelementptr	 %12936 XXX XXX
%12940:	load	 %12939
%12941:	call	 %12938 %12940 %12935 group_in_compile_stack
%12942:	icmp	 %12941 XXX
%12943:	br	 %12942 if.end3064 if.then3063

BASIC BLOCK if.then3063
%12944:	br	 normal_char

BASIC BLOCK if.end3064
%12945:	br	 do.body3065

BASIC BLOCK do.body3065
%12946:	br	 while.cond3066

BASIC BLOCK while.cond3066
%12947:	phi	 %8923 %13040
%12948:	phi	 %8924 %13041
%12949:	phi	 %8927 %13042
%12950:	phi	 %8926 %13043
%12951:	phi	 %8927 %13044
%12952:	getelementptr	 bufp XXX XXX
%12953:	load	 %12952
%12954:	ptrtoint	 %12951
%12955:	ptrtoint	 %12953
%12956:	sub	 %12954 %12955
%12957:	add	 %12956 XXX
%12958:	getelementptr	 bufp XXX XXX
%12959:	load	 %12958
%12960:	icmp	 %12957 %12959
%12961:	br	 %12960 while.end3141 while.body3075

BASIC BLOCK while.body3075
%12962:	br	 do.body3076

BASIC BLOCK do.body3076
%12963:	getelementptr	 bufp XXX XXX
%12964:	load	 %12963
%12965:	getelementptr	 bufp XXX XXX
%12966:	load	 %12965
%12967:	icmp	 %12966 XXX
%12968:	br	 %12967 if.end3083 if.then3082

BASIC BLOCK if.then3082
%12969:	br	 return

BASIC BLOCK if.end3083
%12970:	getelementptr	 bufp XXX XXX
%12971:	load	 %12970
%12972:	shl	 %12971 XXX
%12973:	store	 %12972 %12970
%12974:	getelementptr	 bufp XXX XXX
%12975:	load	 %12974
%12976:	icmp	 %12975 XXX
%12977:	br	 %12976 if.end3091 if.then3089

BASIC BLOCK if.then3089
%12978:	getelementptr	 bufp XXX XXX
%12979:	store	 XXX %12978
%12980:	br	 if.end3091

BASIC BLOCK if.end3091
%12981:	getelementptr	 bufp XXX XXX
%12982:	load	 %12981
%12983:	getelementptr	 bufp XXX XXX
%12984:	load	 %12983
%12985:	call	 %12982 %12984 realloc
%12986:	getelementptr	 bufp XXX XXX
%12987:	store	 %12985 %12986
%12988:	getelementptr	 bufp XXX XXX
%12989:	load	 %12988
%12990:	icmp	 %12989 XXX
%12991:	br	 %12990 if.end3100 if.then3099

BASIC BLOCK if.then3099
%12992:	br	 return

BASIC BLOCK if.end3100
%12993:	getelementptr	 bufp XXX XXX
%12994:	load	 %12993
%12995:	icmp	 %12964 %12994
%12996:	br	 %12995 if.end3139 if.then3104

BASIC BLOCK if.then3104
%12997:	ptrtoint	 %12951
%12998:	ptrtoint	 %12964
%12999:	sub	 %12997 %12998
%13000:	getelementptr	 bufp XXX XXX
%13001:	load	 %13000
%13002:	getelementptr	 %13001 %12999
%13003:	ptrtoint	 %12948
%13004:	ptrtoint	 %12964
%13005:	sub	 %13003 %13004
%13006:	getelementptr	 bufp XXX XXX
%13007:	load	 %13006
%13008:	getelementptr	 %13007 %13005
%13009:	icmp	 %12947 XXX
%13010:	br	 %13009 if.end3122 if.then3116

BASIC BLOCK if.then3116
%13011:	ptrtoint	 %12947
%13012:	ptrtoint	 %12964
%13013:	sub	 %13011 %13012
%13014:	getelementptr	 bufp XXX XXX
%13015:	load	 %13014
%13016:	getelementptr	 %13015 %13013
%13017:	br	 if.end3122

BASIC BLOCK if.end3122
%13018:	phi	 %13016 %12947
%13019:	icmp	 %12949 XXX
%13020:	br	 %13019 if.end3130 if.then3124

BASIC BLOCK if.then3124
%13021:	ptrtoint	 %12949
%13022:	ptrtoint	 %12964
%13023:	sub	 %13021 %13022
%13024:	getelementptr	 bufp XXX XXX
%13025:	load	 %13024
%13026:	getelementptr	 %13025 %13023
%13027:	br	 if.end3130

BASIC BLOCK if.end3130
%13028:	phi	 %13026 %12949
%13029:	icmp	 %12950 XXX
%13030:	br	 %13029 if.end3138 if.then3132

BASIC BLOCK if.then3132
%13031:	ptrtoint	 %12950
%13032:	ptrtoint	 %12964
%13033:	sub	 %13031 %13032
%13034:	getelementptr	 bufp XXX XXX
%13035:	load	 %13034
%13036:	getelementptr	 %13035 %13033
%13037:	br	 if.end3138

BASIC BLOCK if.end3138
%13038:	phi	 %13036 %12950
%13039:	br	 if.end3139

BASIC BLOCK if.end3139
%13040:	phi	 %13018 %12947
%13041:	phi	 %13008 %12948
%13042:	phi	 %13028 %12949
%13043:	phi	 %13038 %12950
%13044:	phi	 %13002 %12951
%13045:	br	 do.end3140

BASIC BLOCK do.end3140
%13046:	br	 while.cond3066

BASIC BLOCK while.end3141
%13047:	getelementptr	 %12951 XXX
%13048:	store	 XXX %12951
%13049:	getelementptr	 %13047 XXX
%13050:	store	 %12926 %13047
%13051:	br	 do.end3144

BASIC BLOCK do.end3144
%13052:	br	 sw.epilog

BASIC BLOCK sw.bb3145
%13053:	and	 syntax XXX
%13054:	icmp	 %13053 XXX
%13055:	br	 %13054 if.else3149 if.then3148

BASIC BLOCK if.then3148
%13056:	br	 handle_plus

BASIC BLOCK if.else3149
%13057:	br	 normal_backslash

BASIC BLOCK sw.default
%13058:	br	 normal_backslash

BASIC BLOCK normal_backslash
%13059:	phi	 %10679 %10679 %10679 %12015 %10679 %10679 %10679 %10679
%13060:	icmp	 %8856 XXX
%13061:	br	 %13060 cond.false3155 cond.true3151

BASIC BLOCK cond.true3151
%13062:	zext	 %13059
%13063:	getelementptr	 %8856 %13062
%13064:	load	 %13063
%13065:	sext	 %13064
%13066:	br	 cond.end3157

BASIC BLOCK cond.false3155
%13067:	zext	 %13059
%13068:	br	 cond.end3157

BASIC BLOCK cond.end3157
%13069:	phi	 %13065 %13067
%13070:	trunc	 %13069
%13071:	br	 normal_char

BASIC BLOCK sw.epilog
%13072:	phi	 %8922 %8922 %8922 %8922 %8922 %8922 %8922 %8922 %8922 %8922 %8922 %8922 %10692
%13073:	phi	 %12947 %12816 %12705 %12594 %12483 %12372 %12261 %12150 %12039 %11994 %11385 %11247 XXX
%13074:	phi	 %12948 %12817 %12706 %12595 %12484 %12373 %12262 %12151 %12040 %11995 %11485 %11248 %10901
%13075:	phi	 %12949 %12818 %12707 %12596 %12485 %12374 %12263 %12152 %12041 %11996 XXX %11249 XXX
%13076:	phi	 %12950 %12819 %12708 %12597 %12486 %12375 %12264 %12153 %12042 XXX %11388 %11250 XXX
%13077:	phi	 %13049 %12916 %12805 %12694 %12583 %12472 %12361 %12250 %12139 %11997 %11485 %11251 %10901
%13078:	br	 sw.epilog3389

BASIC BLOCK sw.default3160
%13079:	br	 normal_char

BASIC BLOCK normal_char
%13080:	phi	 %8923 %8923 %8923 %8923 %8923 %8923 %8923 %8923 %8923 %8923 %8923 %8923 %8923 %8923 %8923 %11041 %8923 %8923 %8923 %8923 %8923 %8923 %8923 %8923
%13081:	phi	 %8924 %8924 %8924 %8924 %8924 %8924 %8924 %8924 %8924 %8924 %8924 %8924 %8924 %8924 %8924 %11042 %8924 %8924 %8924 %8924 %8924 %8924 %8924 %8924
%13082:	phi	 %8925 %8925 %8925 %8925 %8925 %8925 %8925 %8925 %8925 %8925 %8925 %8925 %8925 %8925 %8925 %11043 %8925 %8925 %8925 %8925 %8925 %8925 %8925 %8925
%13083:	phi	 %8926 %8926 %8926 %8926 %8926 %8926 %8926 %8926 %8926 %8926 %8926 %8926 %8926 %8926 %8926 %11044 %8926 %8926 %8926 %8926 %8926 %8926 %8926 %8926
%13084:	phi	 %8927 %8927 %8927 %8927 %8927 %8927 %8927 %8927 %8927 %8927 %8927 %8927 %8927 %8927 %8927 %11045 %8927 %8927 %8927 %8927 %8927 %8927 %8927 %8927
%13085:	phi	 %8946 %13070 %9199 %10679 %10679 %10679 %10679 %10679 %10679 %10679 %10679 %10679 %10679 %12015 %11261 %10925 %8946 %8946 %8946 %8946 %8946 %8946 %8946 %8946
%13086:	icmp	 %13083 XXX
%13087:	br	 %13086 if.then3226 lor.lhs.false3162

BASIC BLOCK lor.lhs.false3162
%13088:	load	 %13083
%13089:	zext	 %13088
%13090:	sext	 %13089
%13091:	getelementptr	 %13083 %13090
%13092:	getelementptr	 %13091 XXX
%13093:	icmp	 %13092 %13084
%13094:	br	 %13093 lor.lhs.false3169 if.then3226

BASIC BLOCK lor.lhs.false3169
%13095:	load	 %13083
%13096:	zext	 %13095
%13097:	icmp	 %13096 XXX
%13098:	br	 %13097 lor.lhs.false3173 if.then3226

BASIC BLOCK lor.lhs.false3173
%13099:	load	 %8851
%13100:	load	 %13099
%13101:	sext	 %13100
%13102:	icmp	 %13101 XXX
%13103:	br	 %13102 lor.lhs.false3177 if.then3226

BASIC BLOCK lor.lhs.false3177
%13104:	load	 %8851
%13105:	load	 %13104
%13106:	sext	 %13105
%13107:	icmp	 %13106 XXX
%13108:	br	 %13107 lor.lhs.false3181 if.then3226

BASIC BLOCK lor.lhs.false3181
%13109:	and	 syntax XXX
%13110:	icmp	 %13109 XXX
%13111:	br	 %13110 cond.false3198 cond.true3184

BASIC BLOCK cond.true3184
%13112:	load	 %8851
%13113:	load	 %13112
%13114:	sext	 %13113
%13115:	icmp	 %13114 XXX
%13116:	br	 %13115 lor.lhs.false3206 land.lhs.true3188

BASIC BLOCK land.lhs.true3188
%13117:	load	 %8851
%13118:	getelementptr	 %13117 XXX
%13119:	load	 %13118
%13120:	sext	 %13119
%13121:	icmp	 %13120 XXX
%13122:	br	 %13121 lor.lhs.false3193 if.then3226

BASIC BLOCK lor.lhs.false3193
%13123:	load	 %8851
%13124:	getelementptr	 %13123 XXX
%13125:	load	 %13124
%13126:	sext	 %13125
%13127:	icmp	 %13126 XXX
%13128:	br	 %13127 lor.lhs.false3206 if.then3226

BASIC BLOCK cond.false3198
%13129:	load	 %8851
%13130:	load	 %13129
%13131:	sext	 %13130
%13132:	icmp	 %13131 XXX
%13133:	br	 %13132 lor.lhs.false3202 if.then3226

BASIC BLOCK lor.lhs.false3202
%13134:	load	 %8851
%13135:	load	 %13134
%13136:	sext	 %13135
%13137:	icmp	 %13136 XXX
%13138:	br	 %13137 lor.lhs.false3206 if.then3226

BASIC BLOCK lor.lhs.false3206
%13139:	and	 syntax XXX
%13140:	icmp	 %13139 XXX
%13141:	br	 %13140 if.end3308 land.lhs.true3209

BASIC BLOCK land.lhs.true3209
%13142:	and	 syntax XXX
%13143:	icmp	 %13142 XXX
%13144:	br	 %13143 cond.false3216 cond.true3212

BASIC BLOCK cond.true3212
%13145:	load	 %8851
%13146:	load	 %13145
%13147:	sext	 %13146
%13148:	icmp	 %13147 XXX
%13149:	br	 %13148 if.end3308 if.then3226

BASIC BLOCK cond.false3216
%13150:	load	 %8851
%13151:	getelementptr	 %13150 XXX
%13152:	load	 %13151
%13153:	sext	 %13152
%13154:	icmp	 %13153 XXX
%13155:	br	 %13154 if.end3308 land.lhs.true3221

BASIC BLOCK land.lhs.true3221
%13156:	load	 %8851
%13157:	getelementptr	 %13156 XXX
%13158:	load	 %13157
%13159:	sext	 %13158
%13160:	icmp	 %13159 XXX
%13161:	br	 %13160 if.end3308 if.then3226

BASIC BLOCK if.then3226
%13162:	br	 do.body3227

BASIC BLOCK do.body3227
%13163:	br	 while.cond3228

BASIC BLOCK while.cond3228
%13164:	phi	 %13080 %13257
%13165:	phi	 %13081 %13258
%13166:	phi	 %13084 %13259
%13167:	phi	 %13083 %13260
%13168:	phi	 %13084 %13261
%13169:	getelementptr	 bufp XXX XXX
%13170:	load	 %13169
%13171:	ptrtoint	 %13168
%13172:	ptrtoint	 %13170
%13173:	sub	 %13171 %13172
%13174:	add	 %13173 XXX
%13175:	getelementptr	 bufp XXX XXX
%13176:	load	 %13175
%13177:	icmp	 %13174 %13176
%13178:	br	 %13177 while.end3303 while.body3237

BASIC BLOCK while.body3237
%13179:	br	 do.body3238

BASIC BLOCK do.body3238
%13180:	getelementptr	 bufp XXX XXX
%13181:	load	 %13180
%13182:	getelementptr	 bufp XXX XXX
%13183:	load	 %13182
%13184:	icmp	 %13183 XXX
%13185:	br	 %13184 if.end3245 if.then3244

BASIC BLOCK if.then3244
%13186:	br	 return

BASIC BLOCK if.end3245
%13187:	getelementptr	 bufp XXX XXX
%13188:	load	 %13187
%13189:	shl	 %13188 XXX
%13190:	store	 %13189 %13187
%13191:	getelementptr	 bufp XXX XXX
%13192:	load	 %13191
%13193:	icmp	 %13192 XXX
%13194:	br	 %13193 if.end3253 if.then3251

BASIC BLOCK if.then3251
%13195:	getelementptr	 bufp XXX XXX
%13196:	store	 XXX %13195
%13197:	br	 if.end3253

BASIC BLOCK if.end3253
%13198:	getelementptr	 bufp XXX XXX
%13199:	load	 %13198
%13200:	getelementptr	 bufp XXX XXX
%13201:	load	 %13200
%13202:	call	 %13199 %13201 realloc
%13203:	getelementptr	 bufp XXX XXX
%13204:	store	 %13202 %13203
%13205:	getelementptr	 bufp XXX XXX
%13206:	load	 %13205
%13207:	icmp	 %13206 XXX
%13208:	br	 %13207 if.end3262 if.then3261

BASIC BLOCK if.then3261
%13209:	br	 return

BASIC BLOCK if.end3262
%13210:	getelementptr	 bufp XXX XXX
%13211:	load	 %13210
%13212:	icmp	 %13181 %13211
%13213:	br	 %13212 if.end3301 if.then3266

BASIC BLOCK if.then3266
%13214:	ptrtoint	 %13168
%13215:	ptrtoint	 %13181
%13216:	sub	 %13214 %13215
%13217:	getelementptr	 bufp XXX XXX
%13218:	load	 %13217
%13219:	getelementptr	 %13218 %13216
%13220:	ptrtoint	 %13165
%13221:	ptrtoint	 %13181
%13222:	sub	 %13220 %13221
%13223:	getelementptr	 bufp XXX XXX
%13224:	load	 %13223
%13225:	getelementptr	 %13224 %13222
%13226:	icmp	 %13164 XXX
%13227:	br	 %13226 if.end3284 if.then3278

BASIC BLOCK if.then3278
%13228:	ptrtoint	 %13164
%13229:	ptrtoint	 %13181
%13230:	sub	 %13228 %13229
%13231:	getelementptr	 bufp XXX XXX
%13232:	load	 %13231
%13233:	getelementptr	 %13232 %13230
%13234:	br	 if.end3284

BASIC BLOCK if.end3284
%13235:	phi	 %13233 %13164
%13236:	icmp	 %13166 XXX
%13237:	br	 %13236 if.end3292 if.then3286

BASIC BLOCK if.then3286
%13238:	ptrtoint	 %13166
%13239:	ptrtoint	 %13181
%13240:	sub	 %13238 %13239
%13241:	getelementptr	 bufp XXX XXX
%13242:	load	 %13241
%13243:	getelementptr	 %13242 %13240
%13244:	br	 if.end3292

BASIC BLOCK if.end3292
%13245:	phi	 %13243 %13166
%13246:	icmp	 %13167 XXX
%13247:	br	 %13246 if.end3300 if.then3294

BASIC BLOCK if.then3294
%13248:	ptrtoint	 %13167
%13249:	ptrtoint	 %13181
%13250:	sub	 %13248 %13249
%13251:	getelementptr	 bufp XXX XXX
%13252:	load	 %13251
%13253:	getelementptr	 %13252 %13250
%13254:	br	 if.end3300

BASIC BLOCK if.end3300
%13255:	phi	 %13253 %13167
%13256:	br	 if.end3301

BASIC BLOCK if.end3301
%13257:	phi	 %13235 %13164
%13258:	phi	 %13225 %13165
%13259:	phi	 %13245 %13166
%13260:	phi	 %13255 %13167
%13261:	phi	 %13219 %13168
%13262:	br	 do.end3302

BASIC BLOCK do.end3302
%13263:	br	 while.cond3228

BASIC BLOCK while.end3303
%13264:	getelementptr	 %13168 XXX
%13265:	store	 XXX %13168
%13266:	getelementptr	 %13264 XXX
%13267:	store	 XXX %13264
%13268:	br	 do.end3306

BASIC BLOCK do.end3306
%13269:	getelementptr	 %13266 XXX
%13270:	br	 if.end3308

BASIC BLOCK if.end3308
%13271:	phi	 %13164 %13080 %13080 %13080 %13080
%13272:	phi	 %13165 %13081 %13081 %13081 %13081
%13273:	phi	 %13166 %13082 %13082 %13082 %13082
%13274:	phi	 %13269 %13083 %13083 %13083 %13083
%13275:	phi	 %13266 %13084 %13084 %13084 %13084
%13276:	br	 do.body3309

BASIC BLOCK do.body3309
%13277:	br	 while.cond3310

BASIC BLOCK while.cond3310
%13278:	phi	 %13271 %13371
%13279:	phi	 %13272 %13372
%13280:	phi	 %13273 %13373
%13281:	phi	 %13274 %13374
%13282:	phi	 %13275 %13375
%13283:	getelementptr	 bufp XXX XXX
%13284:	load	 %13283
%13285:	ptrtoint	 %13282
%13286:	ptrtoint	 %13284
%13287:	sub	 %13285 %13286
%13288:	add	 %13287 XXX
%13289:	getelementptr	 bufp XXX XXX
%13290:	load	 %13289
%13291:	icmp	 %13288 %13290
%13292:	br	 %13291 while.end3385 while.body3319

BASIC BLOCK while.body3319
%13293:	br	 do.body3320

BASIC BLOCK do.body3320
%13294:	getelementptr	 bufp XXX XXX
%13295:	load	 %13294
%13296:	getelementptr	 bufp XXX XXX
%13297:	load	 %13296
%13298:	icmp	 %13297 XXX
%13299:	br	 %13298 if.end3327 if.then3326

BASIC BLOCK if.then3326
%13300:	br	 return

BASIC BLOCK if.end3327
%13301:	getelementptr	 bufp XXX XXX
%13302:	load	 %13301
%13303:	shl	 %13302 XXX
%13304:	store	 %13303 %13301
%13305:	getelementptr	 bufp XXX XXX
%13306:	load	 %13305
%13307:	icmp	 %13306 XXX
%13308:	br	 %13307 if.end3335 if.then3333

BASIC BLOCK if.then3333
%13309:	getelementptr	 bufp XXX XXX
%13310:	store	 XXX %13309
%13311:	br	 if.end3335

BASIC BLOCK if.end3335
%13312:	getelementptr	 bufp XXX XXX
%13313:	load	 %13312
%13314:	getelementptr	 bufp XXX XXX
%13315:	load	 %13314
%13316:	call	 %13313 %13315 realloc
%13317:	getelementptr	 bufp XXX XXX
%13318:	store	 %13316 %13317
%13319:	getelementptr	 bufp XXX XXX
%13320:	load	 %13319
%13321:	icmp	 %13320 XXX
%13322:	br	 %13321 if.end3344 if.then3343

BASIC BLOCK if.then3343
%13323:	br	 return

BASIC BLOCK if.end3344
%13324:	getelementptr	 bufp XXX XXX
%13325:	load	 %13324
%13326:	icmp	 %13295 %13325
%13327:	br	 %13326 if.end3383 if.then3348

BASIC BLOCK if.then3348
%13328:	ptrtoint	 %13282
%13329:	ptrtoint	 %13295
%13330:	sub	 %13328 %13329
%13331:	getelementptr	 bufp XXX XXX
%13332:	load	 %13331
%13333:	getelementptr	 %13332 %13330
%13334:	ptrtoint	 %13279
%13335:	ptrtoint	 %13295
%13336:	sub	 %13334 %13335
%13337:	getelementptr	 bufp XXX XXX
%13338:	load	 %13337
%13339:	getelementptr	 %13338 %13336
%13340:	icmp	 %13278 XXX
%13341:	br	 %13340 if.end3366 if.then3360

BASIC BLOCK if.then3360
%13342:	ptrtoint	 %13278
%13343:	ptrtoint	 %13295
%13344:	sub	 %13342 %13343
%13345:	getelementptr	 bufp XXX XXX
%13346:	load	 %13345
%13347:	getelementptr	 %13346 %13344
%13348:	br	 if.end3366

BASIC BLOCK if.end3366
%13349:	phi	 %13347 %13278
%13350:	icmp	 %13280 XXX
%13351:	br	 %13350 if.end3374 if.then3368

BASIC BLOCK if.then3368
%13352:	ptrtoint	 %13280
%13353:	ptrtoint	 %13295
%13354:	sub	 %13352 %13353
%13355:	getelementptr	 bufp XXX XXX
%13356:	load	 %13355
%13357:	getelementptr	 %13356 %13354
%13358:	br	 if.end3374

BASIC BLOCK if.end3374
%13359:	phi	 %13357 %13280
%13360:	icmp	 %13281 XXX
%13361:	br	 %13360 if.end3382 if.then3376

BASIC BLOCK if.then3376
%13362:	ptrtoint	 %13281
%13363:	ptrtoint	 %13295
%13364:	sub	 %13362 %13363
%13365:	getelementptr	 bufp XXX XXX
%13366:	load	 %13365
%13367:	getelementptr	 %13366 %13364
%13368:	br	 if.end3382

BASIC BLOCK if.end3382
%13369:	phi	 %13367 %13281
%13370:	br	 if.end3383

BASIC BLOCK if.end3383
%13371:	phi	 %13349 %13278
%13372:	phi	 %13339 %13279
%13373:	phi	 %13359 %13280
%13374:	phi	 %13369 %13281
%13375:	phi	 %13333 %13282
%13376:	br	 do.end3384

BASIC BLOCK do.end3384
%13377:	br	 while.cond3310

BASIC BLOCK while.end3385
%13378:	getelementptr	 %13282 XXX
%13379:	store	 %13085 %13282
%13380:	br	 do.end3387

BASIC BLOCK do.end3387
%13381:	load	 %13281
%13382:	add	 %13381 XXX
%13383:	store	 %13382 %13281
%13384:	br	 sw.epilog3389

BASIC BLOCK sw.epilog3389
%13385:	phi	 %8922 %8922 %8922 %13072 %8922 %8922 %8922 %8922
%13386:	phi	 %13278 %9731 %8923 %13073 %10075 %9739 %9083 %8964
%13387:	phi	 %13279 %9732 %8924 %13074 %10076 %9740 %9084 %8965
%13388:	phi	 %13280 %9733 %8925 %13075 %10077 %9741 %9085 %8966
%13389:	phi	 %13281 %9734 %8926 %13076 %10078 %9742 %9086 %8967
%13390:	phi	 %13378 %9735 %8927 %13077 %10633 %9839 %9183 %9064
%13391:	br	 while.cond

BASIC BLOCK while.end3390
%13392:	icmp	 %8923 XXX
%13393:	br	 %13392 if.end3398 if.then3392

BASIC BLOCK if.then3392
%13394:	ptrtoint	 %8927
%13395:	ptrtoint	 %8923
%13396:	sub	 %13394 %13395
%13397:	sub	 %13396 XXX
%13398:	trunc	 %13397
%13399:	call	 XXX %8923 %13398 store_op1
%13400:	br	 if.end3398

BASIC BLOCK if.end3398
%13401:	getelementptr	 %8850 XXX XXX
%13402:	load	 %13401
%13403:	icmp	 %13402 XXX
%13404:	br	 %13403 if.then3402 if.end3404

BASIC BLOCK if.then3402
%13405:	getelementptr	 %8850 XXX XXX
%13406:	load	 %13405
%13407:	bitcast	 %13406
%13408:	call	 %13407 free
%13409:	br	 return

BASIC BLOCK if.end3404
%13410:	and	 syntax XXX
%13411:	icmp	 %13410 XXX
%13412:	br	 %13411 if.end3487 if.then3407

BASIC BLOCK if.then3407
%13413:	br	 do.body3408

BASIC BLOCK do.body3408
%13414:	br	 while.cond3409

BASIC BLOCK while.cond3409
%13415:	phi	 %8923 %13508
%13416:	phi	 %8924 %13509
%13417:	phi	 %8925 %13510
%13418:	phi	 %8926 %13511
%13419:	phi	 %8927 %13512
%13420:	getelementptr	 bufp XXX XXX
%13421:	load	 %13420
%13422:	ptrtoint	 %13419
%13423:	ptrtoint	 %13421
%13424:	sub	 %13422 %13423
%13425:	add	 %13424 XXX
%13426:	getelementptr	 bufp XXX XXX
%13427:	load	 %13426
%13428:	icmp	 %13425 %13427
%13429:	br	 %13428 while.end3484 while.body3418

BASIC BLOCK while.body3418
%13430:	br	 do.body3419

BASIC BLOCK do.body3419
%13431:	getelementptr	 bufp XXX XXX
%13432:	load	 %13431
%13433:	getelementptr	 bufp XXX XXX
%13434:	load	 %13433
%13435:	icmp	 %13434 XXX
%13436:	br	 %13435 if.end3426 if.then3425

BASIC BLOCK if.then3425
%13437:	br	 return

BASIC BLOCK if.end3426
%13438:	getelementptr	 bufp XXX XXX
%13439:	load	 %13438
%13440:	shl	 %13439 XXX
%13441:	store	 %13440 %13438
%13442:	getelementptr	 bufp XXX XXX
%13443:	load	 %13442
%13444:	icmp	 %13443 XXX
%13445:	br	 %13444 if.end3434 if.then3432

BASIC BLOCK if.then3432
%13446:	getelementptr	 bufp XXX XXX
%13447:	store	 XXX %13446
%13448:	br	 if.end3434

BASIC BLOCK if.end3434
%13449:	getelementptr	 bufp XXX XXX
%13450:	load	 %13449
%13451:	getelementptr	 bufp XXX XXX
%13452:	load	 %13451
%13453:	call	 %13450 %13452 realloc
%13454:	getelementptr	 bufp XXX XXX
%13455:	store	 %13453 %13454
%13456:	getelementptr	 bufp XXX XXX
%13457:	load	 %13456
%13458:	icmp	 %13457 XXX
%13459:	br	 %13458 if.end3443 if.then3442

BASIC BLOCK if.then3442
%13460:	br	 return

BASIC BLOCK if.end3443
%13461:	getelementptr	 bufp XXX XXX
%13462:	load	 %13461
%13463:	icmp	 %13432 %13462
%13464:	br	 %13463 if.end3482 if.then3447

BASIC BLOCK if.then3447
%13465:	ptrtoint	 %13419
%13466:	ptrtoint	 %13432
%13467:	sub	 %13465 %13466
%13468:	getelementptr	 bufp XXX XXX
%13469:	load	 %13468
%13470:	getelementptr	 %13469 %13467
%13471:	ptrtoint	 %13416
%13472:	ptrtoint	 %13432
%13473:	sub	 %13471 %13472
%13474:	getelementptr	 bufp XXX XXX
%13475:	load	 %13474
%13476:	getelementptr	 %13475 %13473
%13477:	icmp	 %13415 XXX
%13478:	br	 %13477 if.end3465 if.then3459

BASIC BLOCK if.then3459
%13479:	ptrtoint	 %13415
%13480:	ptrtoint	 %13432
%13481:	sub	 %13479 %13480
%13482:	getelementptr	 bufp XXX XXX
%13483:	load	 %13482
%13484:	getelementptr	 %13483 %13481
%13485:	br	 if.end3465

BASIC BLOCK if.end3465
%13486:	phi	 %13484 %13415
%13487:	icmp	 %13417 XXX
%13488:	br	 %13487 if.end3473 if.then3467

BASIC BLOCK if.then3467
%13489:	ptrtoint	 %13417
%13490:	ptrtoint	 %13432
%13491:	sub	 %13489 %13490
%13492:	getelementptr	 bufp XXX XXX
%13493:	load	 %13492
%13494:	getelementptr	 %13493 %13491
%13495:	br	 if.end3473

BASIC BLOCK if.end3473
%13496:	phi	 %13494 %13417
%13497:	icmp	 %13418 XXX
%13498:	br	 %13497 if.end3481 if.then3475

BASIC BLOCK if.then3475
%13499:	ptrtoint	 %13418
%13500:	ptrtoint	 %13432
%13501:	sub	 %13499 %13500
%13502:	getelementptr	 bufp XXX XXX
%13503:	load	 %13502
%13504:	getelementptr	 %13503 %13501
%13505:	br	 if.end3481

BASIC BLOCK if.end3481
%13506:	phi	 %13504 %13418
%13507:	br	 if.end3482

BASIC BLOCK if.end3482
%13508:	phi	 %13486 %13415
%13509:	phi	 %13476 %13416
%13510:	phi	 %13496 %13417
%13511:	phi	 %13506 %13418
%13512:	phi	 %13470 %13419
%13513:	br	 do.end3483

BASIC BLOCK do.end3483
%13514:	br	 while.cond3409

BASIC BLOCK while.end3484
%13515:	getelementptr	 %13419 XXX
%13516:	store	 XXX %13419
%13517:	br	 do.end3486

BASIC BLOCK do.end3486
%13518:	br	 if.end3487

BASIC BLOCK if.end3487
%13519:	phi	 %13515 %8927
%13520:	getelementptr	 %8850 XXX XXX
%13521:	load	 %13520
%13522:	bitcast	 %13521
%13523:	call	 %13522 free
%13524:	getelementptr	 bufp XXX XXX
%13525:	load	 %13524
%13526:	ptrtoint	 %13519
%13527:	ptrtoint	 %13525
%13528:	sub	 %13526 %13527
%13529:	getelementptr	 bufp XXX XXX
%13530:	store	 %13528 %13529
%13531:	br	 return

BASIC BLOCK return
%13532:	phi	 XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX %10359 XXX XXX XXX XXX XXX XXX %10323 XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX XXX
%13533:	ret	 %13532

FUNCTION regcomp

BASIC BLOCK entry
%13534:	and	 cflags XXX
%13535:	icmp	 %13534 XXX
%13536:	select	 %13535 XXX XXX
%13537:	getelementptr	 preg XXX XXX
%13538:	store	 XXX %13537
%13539:	getelementptr	 preg XXX XXX
%13540:	store	 XXX %13539
%13541:	getelementptr	 preg XXX XXX
%13542:	store	 XXX %13541
%13543:	getelementptr	 preg XXX XXX
%13544:	store	 XXX %13543
%13545:	and	 cflags XXX
%13546:	icmp	 %13545 XXX
%13547:	br	 %13546 if.else if.then

BASIC BLOCK if.then
%13548:	call	 XXX xmalloc
%13549:	getelementptr	 preg XXX XXX
%13550:	store	 %13548 %13549
%13551:	getelementptr	 preg XXX XXX
%13552:	load	 %13551
%13553:	icmp	 %13552 XXX
%13554:	br	 %13553 if.end if.then4

BASIC BLOCK if.then4
%13555:	br	 return

BASIC BLOCK if.end
%13556:	br	 for.cond

BASIC BLOCK for.cond
%13557:	phi	 XXX %13580
%13558:	icmp	 %13557 XXX
%13559:	br	 %13558 for.end for.body

BASIC BLOCK for.body
%13560:	sext	 %13557
%13561:	call	 __ctype_b_loc
%13562:	load	 %13561
%13563:	getelementptr	 %13562 %13560
%13564:	load	 %13563
%13565:	zext	 %13564
%13566:	and	 %13565 XXX
%13567:	icmp	 %13566 XXX
%13568:	br	 %13567 cond.false cond.true

BASIC BLOCK cond.true
%13569:	call	 %13557 tolower
%13570:	br	 cond.end

BASIC BLOCK cond.false
%13571:	br	 cond.end

BASIC BLOCK cond.end
%13572:	phi	 %13569 %13557
%13573:	trunc	 %13572
%13574:	zext	 %13557
%13575:	getelementptr	 preg XXX XXX
%13576:	load	 %13575
%13577:	getelementptr	 %13576 %13574
%13578:	store	 %13573 %13577
%13579:	br	 for.inc

BASIC BLOCK for.inc
%13580:	add	 %13557 XXX
%13581:	br	 for.cond

BASIC BLOCK for.end
%13582:	br	 if.end16

BASIC BLOCK if.else
%13583:	getelementptr	 preg XXX XXX
%13584:	store	 XXX %13583
%13585:	br	 if.end16

BASIC BLOCK if.end16
%13586:	and	 cflags XXX
%13587:	icmp	 %13586 XXX
%13588:	br	 %13587 if.else21 if.then19

BASIC BLOCK if.then19
%13589:	and	 %13536 XXX
%13590:	or	 %13589 XXX
%13591:	getelementptr	 preg XXX XXX
%13592:	load	 %13591
%13593:	and	 %13592 XXX
%13594:	or	 %13593 XXX
%13595:	store	 %13594 %13591
%13596:	br	 if.end25

BASIC BLOCK if.else21
%13597:	getelementptr	 preg XXX XXX
%13598:	load	 %13597
%13599:	and	 %13598 XXX
%13600:	store	 %13599 %13597
%13601:	br	 if.end25

BASIC BLOCK if.end25
%13602:	phi	 %13590 %13536
%13603:	and	 cflags XXX
%13604:	icmp	 %13603 XXX
%13605:	xor	 %13604 XXX
%13606:	xor	 %13605 XXX
%13607:	zext	 %13606
%13608:	getelementptr	 preg XXX XXX
%13609:	trunc	 %13607
%13610:	load	 %13608
%13611:	and	 %13609 XXX
%13612:	shl	 %13611 XXX
%13613:	and	 %13610 XXX
%13614:	or	 %13613 %13612
%13615:	store	 %13614 %13608
%13616:	call	 pattern strlen
%13617:	call	 pattern %13616 %13602 preg regex_compile
%13618:	icmp	 %13617 XXX
%13619:	br	 %13618 if.end37 if.then36

BASIC BLOCK if.then36
%13620:	br	 if.end37

BASIC BLOCK if.end37
%13621:	phi	 XXX %13617
%13622:	br	 return

BASIC BLOCK return
%13623:	phi	 XXX %13621
%13624:	ret	 %13623

FUNCTION regexec

BASIC BLOCK entry
%13625:	alloca	 XXX
%13626:	alloca	 XXX
%13627:	call	 string strlen
%13628:	trunc	 %13627
%13629:	getelementptr	 preg XXX XXX
%13630:	load	 %13629
%13631:	lshr	 %13630 XXX
%13632:	and	 %13631 XXX
%13633:	zext	 %13632
%13634:	icmp	 %13633 XXX
%13635:	br	 %13634 land.rhs land.end

BASIC BLOCK land.rhs
%13636:	icmp	 nmatch XXX
%13637:	br	 land.end

BASIC BLOCK land.end
%13638:	phi	 XXX %13636
%13639:	zext	 %13638
%13640:	trunc	 %13639
%13641:	bitcast	 %13626
%13642:	bitcast	 preg
%13643:	call	 %13641 %13642 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%13644:	and	 eflags XXX
%13645:	icmp	 %13644 XXX
%13646:	xor	 %13645 XXX
%13647:	xor	 %13646 XXX
%13648:	zext	 %13647
%13649:	getelementptr	 %13626 XXX XXX
%13650:	trunc	 %13648
%13651:	load	 %13649
%13652:	and	 %13650 XXX
%13653:	shl	 %13652 XXX
%13654:	and	 %13651 XXX
%13655:	or	 %13654 %13653
%13656:	store	 %13655 %13649
%13657:	and	 eflags XXX
%13658:	icmp	 %13657 XXX
%13659:	xor	 %13658 XXX
%13660:	xor	 %13659 XXX
%13661:	zext	 %13660
%13662:	getelementptr	 %13626 XXX XXX
%13663:	trunc	 %13661
%13664:	load	 %13662
%13665:	and	 %13663 XXX
%13666:	shl	 %13665 XXX
%13667:	and	 %13664 XXX
%13668:	or	 %13667 %13666
%13669:	store	 %13668 %13662
%13670:	getelementptr	 %13626 XXX XXX
%13671:	load	 %13670
%13672:	and	 %13671 XXX
%13673:	or	 %13672 XXX
%13674:	store	 %13673 %13670
%13675:	icmp	 %13640 XXX
%13676:	br	 %13675 if.end34 if.then

BASIC BLOCK if.then
%13677:	trunc	 nmatch
%13678:	getelementptr	 %13625 XXX XXX
%13679:	store	 %13677 %13678
%13680:	mul	 nmatch XXX
%13681:	call	 %13680 xmalloc
%13682:	bitcast	 %13681
%13683:	getelementptr	 %13625 XXX XXX
%13684:	store	 %13682 %13683
%13685:	mul	 nmatch XXX
%13686:	call	 %13685 xmalloc
%13687:	bitcast	 %13686
%13688:	getelementptr	 %13625 XXX XXX
%13689:	store	 %13687 %13688
%13690:	getelementptr	 %13625 XXX XXX
%13691:	load	 %13690
%13692:	icmp	 %13691 XXX
%13693:	br	 %13692 lor.lhs.false if.then33

BASIC BLOCK lor.lhs.false
%13694:	getelementptr	 %13625 XXX XXX
%13695:	load	 %13694
%13696:	icmp	 %13695 XXX
%13697:	br	 %13696 if.end if.then33

BASIC BLOCK if.then33
%13698:	br	 return

BASIC BLOCK if.end
%13699:	br	 if.end34

BASIC BLOCK if.end34
%13700:	sext	 %13640
%13701:	icmp	 %13700 XXX
%13702:	br	 %13701 cond.false cond.true

BASIC BLOCK cond.true
%13703:	br	 cond.end

BASIC BLOCK cond.false
%13704:	br	 cond.end

BASIC BLOCK cond.end
%13705:	phi	 %13625 XXX
%13706:	call	 %13626 string %13628 XXX %13628 %13705 re_search
%13707:	icmp	 %13640 XXX
%13708:	br	 %13707 if.end57 if.then39

BASIC BLOCK if.then39
%13709:	icmp	 %13706 XXX
%13710:	br	 %13709 if.end54 if.then42

BASIC BLOCK if.then42
%13711:	br	 for.cond

BASIC BLOCK for.cond
%13712:	phi	 XXX %13735
%13713:	zext	 %13712
%13714:	icmp	 %13713 nmatch
%13715:	br	 %13714 for.end for.body

BASIC BLOCK for.body
%13716:	zext	 %13712
%13717:	getelementptr	 %13625 XXX XXX
%13718:	load	 %13717
%13719:	getelementptr	 %13718 %13716
%13720:	load	 %13719
%13721:	zext	 %13712
%13722:	getelementptr	 pmatch %13721
%13723:	getelementptr	 %13722 XXX XXX
%13724:	store	 %13720 %13723
%13725:	zext	 %13712
%13726:	getelementptr	 %13625 XXX XXX
%13727:	load	 %13726
%13728:	getelementptr	 %13727 %13725
%13729:	load	 %13728
%13730:	zext	 %13712
%13731:	getelementptr	 pmatch %13730
%13732:	getelementptr	 %13731 XXX XXX
%13733:	store	 %13729 %13732
%13734:	br	 for.inc

BASIC BLOCK for.inc
%13735:	add	 %13712 XXX
%13736:	br	 for.cond

BASIC BLOCK for.end
%13737:	br	 if.end54

BASIC BLOCK if.end54
%13738:	getelementptr	 %13625 XXX XXX
%13739:	load	 %13738
%13740:	bitcast	 %13739
%13741:	call	 %13740 free
%13742:	getelementptr	 %13625 XXX XXX
%13743:	load	 %13742
%13744:	bitcast	 %13743
%13745:	call	 %13744 free
%13746:	br	 if.end57

BASIC BLOCK if.end57
%13747:	icmp	 %13706 XXX
%13748:	select	 %13747 XXX XXX
%13749:	br	 return

BASIC BLOCK return
%13750:	phi	 XXX %13748
%13751:	ret	 %13750

FUNCTION regerror

BASIC BLOCK entry
%13752:	icmp	 errcode XXX
%13753:	br	 %13752 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%13754:	icmp	 errcode XXX
%13755:	br	 %13754 if.end if.then

BASIC BLOCK if.then
%13756:	call	 abort
%13757:	unreachable	

BASIC BLOCK if.end
%13758:	sext	 errcode
%13759:	getelementptr	 re_error_msgid XXX %13758
%13760:	load	 %13759
%13761:	call	 %13760 gettext
%13762:	call	 %13761 strlen
%13763:	add	 %13762 XXX
%13764:	icmp	 errbuf_size XXX
%13765:	br	 %13764 if.end12 if.then4

BASIC BLOCK if.then4
%13766:	icmp	 %13763 errbuf_size
%13767:	br	 %13766 if.else if.then6

BASIC BLOCK if.then6
%13768:	sub	 errbuf_size XXX
%13769:	call	 errbuf %13761 %13768 strncpy
%13770:	sub	 errbuf_size XXX
%13771:	getelementptr	 errbuf %13770
%13772:	store	 XXX %13771
%13773:	br	 if.end11

BASIC BLOCK if.else
%13774:	call	 errbuf %13761 strcpy
%13775:	br	 if.end11

BASIC BLOCK if.end11
%13776:	br	 if.end12

BASIC BLOCK if.end12
%13777:	ret	 %13763

FUNCTION regfree

BASIC BLOCK entry
%13778:	getelementptr	 preg XXX XXX
%13779:	load	 %13778
%13780:	icmp	 %13779 XXX
%13781:	br	 %13780 if.end if.then

BASIC BLOCK if.then
%13782:	getelementptr	 preg XXX XXX
%13783:	load	 %13782
%13784:	call	 %13783 free
%13785:	br	 if.end

BASIC BLOCK if.end
%13786:	getelementptr	 preg XXX XXX
%13787:	store	 XXX %13786
%13788:	getelementptr	 preg XXX XXX
%13789:	store	 XXX %13788
%13790:	getelementptr	 preg XXX XXX
%13791:	store	 XXX %13790
%13792:	getelementptr	 preg XXX XXX
%13793:	load	 %13792
%13794:	icmp	 %13793 XXX
%13795:	br	 %13794 if.end6 if.then4

BASIC BLOCK if.then4
%13796:	getelementptr	 preg XXX XXX
%13797:	load	 %13796
%13798:	call	 %13797 free
%13799:	br	 if.end6

BASIC BLOCK if.end6
%13800:	getelementptr	 preg XXX XXX
%13801:	store	 XXX %13800
%13802:	getelementptr	 preg XXX XXX
%13803:	load	 %13802
%13804:	and	 %13803 XXX
%13805:	store	 %13804 %13802
%13806:	getelementptr	 preg XXX XXX
%13807:	load	 %13806
%13808:	icmp	 %13807 XXX
%13809:	br	 %13808 if.end11 if.then9

BASIC BLOCK if.then9
%13810:	getelementptr	 preg XXX XXX
%13811:	load	 %13810
%13812:	call	 %13811 free
%13813:	br	 if.end11

BASIC BLOCK if.end11
%13814:	getelementptr	 preg XXX XXX
%13815:	store	 XXX %13814
%13816:	ret	

FUNCTION at_begline_loc_p

BASIC BLOCK entry
%13817:	getelementptr	 p XXX
%13818:	icmp	 %13817 pattern
%13819:	br	 %13818 land.end land.rhs

BASIC BLOCK land.rhs
%13820:	getelementptr	 %13817 XXX
%13821:	load	 %13820
%13822:	sext	 %13821
%13823:	icmp	 %13822 XXX
%13824:	br	 land.end

BASIC BLOCK land.end
%13825:	phi	 XXX %13823
%13826:	zext	 %13825
%13827:	trunc	 %13826
%13828:	load	 %13817
%13829:	sext	 %13828
%13830:	icmp	 %13829 XXX
%13831:	br	 %13830 lor.rhs land.lhs.true

BASIC BLOCK land.lhs.true
%13832:	and	 syntax XXX
%13833:	icmp	 %13832 XXX
%13834:	br	 %13833 lor.lhs.false lor.end20

BASIC BLOCK lor.lhs.false
%13835:	sext	 %13827
%13836:	icmp	 %13835 XXX
%13837:	br	 %13836 lor.rhs lor.end20

BASIC BLOCK lor.rhs
%13838:	load	 %13817
%13839:	sext	 %13838
%13840:	icmp	 %13839 XXX
%13841:	br	 %13840 land.end18 land.rhs12

BASIC BLOCK land.rhs12
%13842:	and	 syntax XXX
%13843:	icmp	 %13842 XXX
%13844:	br	 %13843 lor.rhs15 lor.end

BASIC BLOCK lor.rhs15
%13845:	sext	 %13827
%13846:	icmp	 %13845 XXX
%13847:	br	 lor.end

BASIC BLOCK lor.end
%13848:	phi	 XXX %13846
%13849:	br	 land.end18

BASIC BLOCK land.end18
%13850:	phi	 XXX %13848
%13851:	br	 lor.end20

BASIC BLOCK lor.end20
%13852:	phi	 XXX XXX %13850
%13853:	zext	 %13852
%13854:	trunc	 %13853
%13855:	ret	 %13854

FUNCTION at_endline_loc_p

BASIC BLOCK entry
%13856:	load	 p
%13857:	sext	 %13856
%13858:	icmp	 %13857 XXX
%13859:	zext	 %13858
%13860:	trunc	 %13859
%13861:	getelementptr	 p XXX
%13862:	icmp	 %13861 pend
%13863:	br	 %13862 cond.false cond.true

BASIC BLOCK cond.true
%13864:	getelementptr	 p XXX
%13865:	br	 cond.end

BASIC BLOCK cond.false
%13866:	br	 cond.end

BASIC BLOCK cond.end
%13867:	phi	 %13864 XXX
%13868:	and	 syntax XXX
%13869:	icmp	 %13868 XXX
%13870:	br	 %13869 cond.false10 cond.true6

BASIC BLOCK cond.true6
%13871:	load	 p
%13872:	sext	 %13871
%13873:	icmp	 %13872 XXX
%13874:	br	 %13873 lor.rhs lor.end

BASIC BLOCK cond.false10
%13875:	sext	 %13860
%13876:	icmp	 %13875 XXX
%13877:	br	 %13876 lor.rhs land.lhs.true

BASIC BLOCK land.lhs.true
%13878:	icmp	 %13867 XXX
%13879:	br	 %13878 lor.rhs land.lhs.true14

BASIC BLOCK land.lhs.true14
%13880:	load	 %13867
%13881:	sext	 %13880
%13882:	icmp	 %13881 XXX
%13883:	br	 %13882 lor.rhs lor.end

BASIC BLOCK lor.rhs
%13884:	and	 syntax XXX
%13885:	icmp	 %13884 XXX
%13886:	br	 %13885 cond.false24 cond.true20

BASIC BLOCK cond.true20
%13887:	load	 p
%13888:	sext	 %13887
%13889:	icmp	 %13888 XXX
%13890:	zext	 %13889
%13891:	br	 cond.end32

BASIC BLOCK cond.false24
%13892:	sext	 %13860
%13893:	icmp	 %13892 XXX
%13894:	br	 %13893 land.end land.lhs.true27

BASIC BLOCK land.lhs.true27
%13895:	icmp	 %13867 XXX
%13896:	br	 %13895 land.end land.rhs

BASIC BLOCK land.rhs
%13897:	load	 %13867
%13898:	sext	 %13897
%13899:	icmp	 %13898 XXX
%13900:	br	 land.end

BASIC BLOCK land.end
%13901:	phi	 XXX XXX %13899
%13902:	zext	 %13901
%13903:	br	 cond.end32

BASIC BLOCK cond.end32
%13904:	phi	 %13890 %13902
%13905:	icmp	 %13904 XXX
%13906:	br	 lor.end

BASIC BLOCK lor.end
%13907:	phi	 XXX XXX %13905
%13908:	zext	 %13907
%13909:	trunc	 %13908
%13910:	ret	 %13909

FUNCTION store_op1

BASIC BLOCK entry
%13911:	trunc	 op
%13912:	store	 %13911 loc
%13913:	br	 do.body

BASIC BLOCK do.body
%13914:	and	 arg XXX
%13915:	trunc	 %13914
%13916:	getelementptr	 loc XXX
%13917:	getelementptr	 %13916 XXX
%13918:	store	 %13915 %13917
%13919:	ashr	 arg XXX
%13920:	trunc	 %13919
%13921:	getelementptr	 loc XXX
%13922:	getelementptr	 %13921 XXX
%13923:	store	 %13920 %13922
%13924:	br	 do.end

BASIC BLOCK do.end
%13925:	ret	

FUNCTION insert_op1

BASIC BLOCK entry
%13926:	getelementptr	 end XXX
%13927:	br	 while.cond

BASIC BLOCK while.cond
%13928:	phi	 end %13932
%13929:	phi	 %13926 %13934
%13930:	icmp	 %13928 loc
%13931:	br	 %13930 while.end while.body

BASIC BLOCK while.body
%13932:	getelementptr	 %13928 XXX
%13933:	load	 %13932
%13934:	getelementptr	 %13929 XXX
%13935:	store	 %13933 %13934
%13936:	br	 while.cond

BASIC BLOCK while.end
%13937:	call	 op loc arg store_op1
%13938:	ret	

FUNCTION compile_range

BASIC BLOCK entry
%13939:	load	 p_ptr
%13940:	icmp	 %13939 pend
%13941:	br	 %13940 if.end if.then

BASIC BLOCK if.then
%13942:	br	 return

BASIC BLOCK if.end
%13943:	getelementptr	 %13939 XXX
%13944:	load	 %13943
%13945:	zext	 %13944
%13946:	getelementptr	 %13939 XXX
%13947:	load	 %13946
%13948:	zext	 %13947
%13949:	load	 p_ptr
%13950:	getelementptr	 %13949 XXX
%13951:	store	 %13950 p_ptr
%13952:	icmp	 %13945 %13948
%13953:	br	 %13952 if.end6 if.then5

BASIC BLOCK if.then5
%13954:	and	 syntax XXX
%13955:	icmp	 %13954 XXX
%13956:	select	 %13955 XXX XXX
%13957:	br	 return

BASIC BLOCK if.end6
%13958:	br	 for.cond

BASIC BLOCK for.cond
%13959:	phi	 %13945 %13997
%13960:	icmp	 %13959 %13948
%13961:	br	 %13960 for.end for.body

BASIC BLOCK for.body
%13962:	icmp	 translate XXX
%13963:	br	 %13962 cond.false cond.true

BASIC BLOCK cond.true
%13964:	trunc	 %13959
%13965:	zext	 %13964
%13966:	getelementptr	 translate %13965
%13967:	load	 %13966
%13968:	sext	 %13967
%13969:	br	 cond.end

BASIC BLOCK cond.false
%13970:	br	 cond.end

BASIC BLOCK cond.end
%13971:	phi	 %13968 %13959
%13972:	trunc	 %13971
%13973:	zext	 %13972
%13974:	srem	 %13973 XXX
%13975:	shl	 XXX %13974
%13976:	icmp	 translate XXX
%13977:	br	 %13976 cond.false22 cond.true17

BASIC BLOCK cond.true17
%13978:	trunc	 %13959
%13979:	zext	 %13978
%13980:	getelementptr	 translate %13979
%13981:	load	 %13980
%13982:	sext	 %13981
%13983:	br	 cond.end23

BASIC BLOCK cond.false22
%13984:	br	 cond.end23

BASIC BLOCK cond.end23
%13985:	phi	 %13982 %13959
%13986:	trunc	 %13985
%13987:	zext	 %13986
%13988:	sdiv	 %13987 XXX
%13989:	sext	 %13988
%13990:	getelementptr	 b %13989
%13991:	load	 %13990
%13992:	zext	 %13991
%13993:	or	 %13992 %13975
%13994:	trunc	 %13993
%13995:	store	 %13994 %13990
%13996:	br	 for.inc

BASIC BLOCK for.inc
%13997:	add	 %13959 XXX
%13998:	br	 for.cond

BASIC BLOCK for.end
%13999:	br	 return

BASIC BLOCK return
%14000:	phi	 XXX %13956 XXX
%14001:	ret	 %14000

FUNCTION insert_op2

BASIC BLOCK entry
%14002:	getelementptr	 end XXX
%14003:	br	 while.cond

BASIC BLOCK while.cond
%14004:	phi	 end %14008
%14005:	phi	 %14002 %14010
%14006:	icmp	 %14004 loc
%14007:	br	 %14006 while.end while.body

BASIC BLOCK while.body
%14008:	getelementptr	 %14004 XXX
%14009:	load	 %14008
%14010:	getelementptr	 %14005 XXX
%14011:	store	 %14009 %14010
%14012:	br	 while.cond

BASIC BLOCK while.end
%14013:	call	 op loc arg1 arg2 store_op2
%14014:	ret	

FUNCTION store_op2

BASIC BLOCK entry
%14015:	trunc	 op
%14016:	store	 %14015 loc
%14017:	br	 do.body

BASIC BLOCK do.body
%14018:	and	 arg1 XXX
%14019:	trunc	 %14018
%14020:	getelementptr	 loc XXX
%14021:	getelementptr	 %14020 XXX
%14022:	store	 %14019 %14021
%14023:	ashr	 arg1 XXX
%14024:	trunc	 %14023
%14025:	getelementptr	 loc XXX
%14026:	getelementptr	 %14025 XXX
%14027:	store	 %14024 %14026
%14028:	br	 do.end

BASIC BLOCK do.end
%14029:	br	 do.body5

BASIC BLOCK do.body5
%14030:	and	 arg2 XXX
%14031:	trunc	 %14030
%14032:	getelementptr	 loc XXX
%14033:	getelementptr	 %14032 XXX
%14034:	store	 %14031 %14033
%14035:	ashr	 arg2 XXX
%14036:	trunc	 %14035
%14037:	getelementptr	 loc XXX
%14038:	getelementptr	 %14037 XXX
%14039:	store	 %14036 %14038
%14040:	br	 do.end14

BASIC BLOCK do.end14
%14041:	ret	

FUNCTION group_in_compile_stack

BASIC BLOCK entry
%14042:	alloca	 XXX
%14043:	bitcast	 %14042
%14044:	getelementptr	 %14043 XXX XXX
%14045:	store	 compile_stack.coerce0 %14044
%14046:	getelementptr	 %14043 XXX XXX
%14047:	store	 compile_stack.coerce1 %14046
%14048:	getelementptr	 %14042 XXX XXX
%14049:	load	 %14048
%14050:	sub	 %14049 XXX
%14051:	br	 for.cond

BASIC BLOCK for.cond
%14052:	phi	 %14050 %14065
%14053:	icmp	 %14052 XXX
%14054:	br	 %14053 for.end for.body

BASIC BLOCK for.body
%14055:	sext	 %14052
%14056:	getelementptr	 %14042 XXX XXX
%14057:	load	 %14056
%14058:	getelementptr	 %14057 %14055
%14059:	getelementptr	 %14058 XXX XXX
%14060:	load	 %14059
%14061:	icmp	 %14060 regnum
%14062:	br	 %14061 if.end if.then

BASIC BLOCK if.then
%14063:	br	 return

BASIC BLOCK if.end
%14064:	br	 for.inc

BASIC BLOCK for.inc
%14065:	add	 %14052 XXX
%14066:	br	 for.cond

BASIC BLOCK for.end
%14067:	br	 return

BASIC BLOCK return
%14068:	phi	 XXX XXX
%14069:	ret	 %14068

FUNCTION init_syntax_once

BASIC BLOCK entry
%14070:	load	 init_syntax_once.done
%14071:	icmp	 %14070 XXX
%14072:	br	 %14071 if.end if.then

BASIC BLOCK if.then
%14073:	br	 return

BASIC BLOCK if.end
%14074:	call	 XXX XXX XXX XXX XXX llvm.memset.p0i8.i64
%14075:	br	 for.cond

BASIC BLOCK for.cond
%14076:	phi	 XXX %14083
%14077:	icmp	 %14076 XXX
%14078:	br	 %14077 for.end for.body

BASIC BLOCK for.body
%14079:	sext	 %14076
%14080:	getelementptr	 re_syntax_table XXX %14079
%14081:	store	 XXX %14080
%14082:	br	 for.inc

BASIC BLOCK for.inc
%14083:	add	 %14076 XXX
%14084:	br	 for.cond

BASIC BLOCK for.end
%14085:	br	 for.cond1

BASIC BLOCK for.cond1
%14086:	phi	 XXX %14093
%14087:	icmp	 %14086 XXX
%14088:	br	 %14087 for.end8 for.body3

BASIC BLOCK for.body3
%14089:	sext	 %14086
%14090:	getelementptr	 re_syntax_table XXX %14089
%14091:	store	 XXX %14090
%14092:	br	 for.inc6

BASIC BLOCK for.inc6
%14093:	add	 %14086 XXX
%14094:	br	 for.cond1

BASIC BLOCK for.end8
%14095:	br	 for.cond9

BASIC BLOCK for.cond9
%14096:	phi	 XXX %14103
%14097:	icmp	 %14096 XXX
%14098:	br	 %14097 for.end16 for.body11

BASIC BLOCK for.body11
%14099:	sext	 %14096
%14100:	getelementptr	 re_syntax_table XXX %14099
%14101:	store	 XXX %14100
%14102:	br	 for.inc14

BASIC BLOCK for.inc14
%14103:	add	 %14096 XXX
%14104:	br	 for.cond9

BASIC BLOCK for.end16
%14105:	store	 XXX XXX
%14106:	store	 XXX init_syntax_once.done
%14107:	br	 return

BASIC BLOCK return
%14108:	ret	

FUNCTION re_match_2_internal

BASIC BLOCK entry
%14109:	alloca	 XXX
%14110:	alloca	 XXX
%14111:	getelementptr	 bufp XXX XXX
%14112:	load	 %14111
%14113:	getelementptr	 bufp XXX XXX
%14114:	load	 %14113
%14115:	getelementptr	 %14112 %14114
%14116:	getelementptr	 bufp XXX XXX
%14117:	load	 %14116
%14118:	getelementptr	 bufp XXX XXX
%14119:	load	 %14118
%14120:	add	 %14119 XXX
%14121:	br	 do.body

BASIC BLOCK do.body
%14122:	alloca	 XXX
%14123:	bitcast	 %14122
%14124:	getelementptr	 %14110 XXX XXX
%14125:	store	 %14123 %14124
%14126:	getelementptr	 %14110 XXX XXX
%14127:	load	 %14126
%14128:	icmp	 %14127 XXX
%14129:	br	 %14128 if.end if.then

BASIC BLOCK if.then
%14130:	br	 return

BASIC BLOCK if.end
%14131:	getelementptr	 %14110 XXX XXX
%14132:	store	 XXX %14131
%14133:	getelementptr	 %14110 XXX XXX
%14134:	store	 XXX %14133
%14135:	br	 do.end

BASIC BLOCK do.end
%14136:	getelementptr	 bufp XXX XXX
%14137:	load	 %14136
%14138:	icmp	 %14137 XXX
%14139:	br	 %14138 if.else if.then4

BASIC BLOCK if.then4
%14140:	mul	 %14120 XXX
%14141:	alloca	 %14140
%14142:	bitcast	 %14141
%14143:	mul	 %14120 XXX
%14144:	alloca	 %14143
%14145:	bitcast	 %14144
%14146:	mul	 %14120 XXX
%14147:	alloca	 %14146
%14148:	bitcast	 %14147
%14149:	mul	 %14120 XXX
%14150:	alloca	 %14149
%14151:	bitcast	 %14150
%14152:	mul	 %14120 XXX
%14153:	alloca	 %14152
%14154:	bitcast	 %14153
%14155:	mul	 %14120 XXX
%14156:	alloca	 %14155
%14157:	bitcast	 %14156
%14158:	mul	 %14120 XXX
%14159:	alloca	 %14158
%14160:	bitcast	 %14159
%14161:	mul	 %14120 XXX
%14162:	alloca	 %14161
%14163:	bitcast	 %14162
%14164:	mul	 %14120 XXX
%14165:	alloca	 %14164
%14166:	bitcast	 %14165
%14167:	icmp	 %14142 XXX
%14168:	br	 %14167 if.then29 land.lhs.true

BASIC BLOCK land.lhs.true
%14169:	icmp	 %14145 XXX
%14170:	br	 %14169 if.then29 land.lhs.true15

BASIC BLOCK land.lhs.true15
%14171:	icmp	 %14148 XXX
%14172:	br	 %14171 if.then29 land.lhs.true17

BASIC BLOCK land.lhs.true17
%14173:	icmp	 %14151 XXX
%14174:	br	 %14173 if.then29 land.lhs.true19

BASIC BLOCK land.lhs.true19
%14175:	icmp	 %14160 XXX
%14176:	br	 %14175 if.then29 land.lhs.true21

BASIC BLOCK land.lhs.true21
%14177:	icmp	 %14154 XXX
%14178:	br	 %14177 if.then29 land.lhs.true23

BASIC BLOCK land.lhs.true23
%14179:	icmp	 %14157 XXX
%14180:	br	 %14179 if.then29 land.lhs.true25

BASIC BLOCK land.lhs.true25
%14181:	icmp	 %14163 XXX
%14182:	br	 %14181 if.then29 land.lhs.true27

BASIC BLOCK land.lhs.true27
%14183:	icmp	 %14166 XXX
%14184:	br	 %14183 if.then29 if.end59

BASIC BLOCK if.then29
%14185:	br	 do.body30

BASIC BLOCK do.body30
%14186:	icmp	 %14142 XXX
%14187:	br	 %14186 if.end33 if.then32

BASIC BLOCK if.then32
%14188:	br	 if.end33

BASIC BLOCK if.end33
%14189:	icmp	 %14145 XXX
%14190:	br	 %14189 if.end36 if.then35

BASIC BLOCK if.then35
%14191:	br	 if.end36

BASIC BLOCK if.end36
%14192:	icmp	 %14148 XXX
%14193:	br	 %14192 if.end39 if.then38

BASIC BLOCK if.then38
%14194:	br	 if.end39

BASIC BLOCK if.end39
%14195:	icmp	 %14151 XXX
%14196:	br	 %14195 if.end42 if.then41

BASIC BLOCK if.then41
%14197:	br	 if.end42

BASIC BLOCK if.end42
%14198:	icmp	 %14154 XXX
%14199:	br	 %14198 if.end45 if.then44

BASIC BLOCK if.then44
%14200:	br	 if.end45

BASIC BLOCK if.end45
%14201:	icmp	 %14157 XXX
%14202:	br	 %14201 if.end48 if.then47

BASIC BLOCK if.then47
%14203:	br	 if.end48

BASIC BLOCK if.end48
%14204:	icmp	 %14160 XXX
%14205:	br	 %14204 if.end51 if.then50

BASIC BLOCK if.then50
%14206:	br	 if.end51

BASIC BLOCK if.end51
%14207:	icmp	 %14163 XXX
%14208:	br	 %14207 if.end54 if.then53

BASIC BLOCK if.then53
%14209:	br	 if.end54

BASIC BLOCK if.end54
%14210:	icmp	 %14166 XXX
%14211:	br	 %14210 if.end57 if.then56

BASIC BLOCK if.then56
%14212:	br	 if.end57

BASIC BLOCK if.end57
%14213:	br	 do.end58

BASIC BLOCK do.end58
%14214:	br	 return

BASIC BLOCK if.end59
%14215:	br	 if.end60

BASIC BLOCK if.else
%14216:	br	 if.end60

BASIC BLOCK if.end60
%14217:	phi	 %14166 XXX
%14218:	phi	 %14163 XXX
%14219:	phi	 %14157 XXX
%14220:	phi	 %14154 XXX
%14221:	phi	 %14160 XXX
%14222:	phi	 %14151 XXX
%14223:	phi	 %14148 XXX
%14224:	phi	 %14145 XXX
%14225:	phi	 %14142 XXX
%14226:	icmp	 pos XXX
%14227:	br	 %14226 lor.lhs.false if.then64

BASIC BLOCK lor.lhs.false
%14228:	add	 size1 size2
%14229:	icmp	 pos %14228
%14230:	br	 %14229 if.end94 if.then64

BASIC BLOCK if.then64
%14231:	br	 do.body65

BASIC BLOCK do.body65
%14232:	icmp	 %14225 XXX
%14233:	br	 %14232 if.end68 if.then67

BASIC BLOCK if.then67
%14234:	br	 if.end68

BASIC BLOCK if.end68
%14235:	icmp	 %14224 XXX
%14236:	br	 %14235 if.end71 if.then70

BASIC BLOCK if.then70
%14237:	br	 if.end71

BASIC BLOCK if.end71
%14238:	icmp	 %14223 XXX
%14239:	br	 %14238 if.end74 if.then73

BASIC BLOCK if.then73
%14240:	br	 if.end74

BASIC BLOCK if.end74
%14241:	icmp	 %14222 XXX
%14242:	br	 %14241 if.end77 if.then76

BASIC BLOCK if.then76
%14243:	br	 if.end77

BASIC BLOCK if.end77
%14244:	icmp	 %14220 XXX
%14245:	br	 %14244 if.end80 if.then79

BASIC BLOCK if.then79
%14246:	br	 if.end80

BASIC BLOCK if.end80
%14247:	icmp	 %14219 XXX
%14248:	br	 %14247 if.end83 if.then82

BASIC BLOCK if.then82
%14249:	br	 if.end83

BASIC BLOCK if.end83
%14250:	icmp	 %14221 XXX
%14251:	br	 %14250 if.end86 if.then85

BASIC BLOCK if.then85
%14252:	br	 if.end86

BASIC BLOCK if.end86
%14253:	icmp	 %14218 XXX
%14254:	br	 %14253 if.end89 if.then88

BASIC BLOCK if.then88
%14255:	br	 if.end89

BASIC BLOCK if.end89
%14256:	icmp	 %14217 XXX
%14257:	br	 %14256 if.end92 if.then91

BASIC BLOCK if.then91
%14258:	br	 if.end92

BASIC BLOCK if.end92
%14259:	br	 do.end93

BASIC BLOCK do.end93
%14260:	br	 return

BASIC BLOCK if.end94
%14261:	br	 for.cond

BASIC BLOCK for.cond
%14262:	phi	 XXX %14308
%14263:	zext	 %14262
%14264:	icmp	 %14263 %14120
%14265:	br	 %14264 for.end for.body

BASIC BLOCK for.body
%14266:	sext	 %14262
%14267:	getelementptr	 %14222 %14266
%14268:	store	 reg_unset_dummy %14267
%14269:	sext	 %14262
%14270:	getelementptr	 %14223 %14269
%14271:	store	 reg_unset_dummy %14270
%14272:	sext	 %14262
%14273:	getelementptr	 %14224 %14272
%14274:	store	 reg_unset_dummy %14273
%14275:	sext	 %14262
%14276:	getelementptr	 %14225 %14275
%14277:	store	 reg_unset_dummy %14276
%14278:	sext	 %14262
%14279:	getelementptr	 %14221 %14278
%14280:	bitcast	 %14279
%14281:	bitcast	 %14280
%14282:	load	 %14281
%14283:	and	 %14282 XXX
%14284:	or	 %14283 XXX
%14285:	store	 %14284 %14281
%14286:	sext	 %14262
%14287:	getelementptr	 %14221 %14286
%14288:	bitcast	 %14287
%14289:	bitcast	 %14288
%14290:	load	 %14289
%14291:	and	 %14290 XXX
%14292:	store	 %14291 %14289
%14293:	sext	 %14262
%14294:	getelementptr	 %14221 %14293
%14295:	bitcast	 %14294
%14296:	bitcast	 %14295
%14297:	load	 %14296
%14298:	and	 %14297 XXX
%14299:	store	 %14298 %14296
%14300:	sext	 %14262
%14301:	getelementptr	 %14221 %14300
%14302:	bitcast	 %14301
%14303:	bitcast	 %14302
%14304:	load	 %14303
%14305:	and	 %14304 XXX
%14306:	store	 %14305 %14303
%14307:	br	 for.inc

BASIC BLOCK for.inc
%14308:	add	 %14262 XXX
%14309:	br	 for.cond

BASIC BLOCK for.end
%14310:	icmp	 size2 XXX
%14311:	br	 %14310 if.end126 land.lhs.true122

BASIC BLOCK land.lhs.true122
%14312:	icmp	 string1 XXX
%14313:	br	 %14312 if.end126 if.then125

BASIC BLOCK if.then125
%14314:	br	 if.end126

BASIC BLOCK if.end126
%14315:	phi	 size1 size2 size2
%14316:	phi	 string1 string2 string2
%14317:	phi	 XXX size1 size1
%14318:	phi	 XXX string1 string1
%14319:	sext	 %14317
%14320:	getelementptr	 %14318 %14319
%14321:	sext	 %14315
%14322:	getelementptr	 %14316 %14321
%14323:	icmp	 stop %14317
%14324:	br	 %14323 if.else135 if.then132

BASIC BLOCK if.then132
%14325:	sext	 stop
%14326:	getelementptr	 %14318 %14325
%14327:	br	 if.end140

BASIC BLOCK if.else135
%14328:	sext	 stop
%14329:	getelementptr	 %14316 %14328
%14330:	sext	 %14317
%14331:	sub	 XXX %14330
%14332:	getelementptr	 %14329 %14331
%14333:	br	 if.end140

BASIC BLOCK if.end140
%14334:	phi	 %14316 %14332
%14335:	phi	 %14326 %14320
%14336:	icmp	 %14317 XXX
%14337:	br	 %14336 if.else149 land.lhs.true143

BASIC BLOCK land.lhs.true143
%14338:	icmp	 pos %14317
%14339:	br	 %14338 if.else149 if.then146

BASIC BLOCK if.then146
%14340:	sext	 pos
%14341:	getelementptr	 %14318 %14340
%14342:	br	 if.end155

BASIC BLOCK if.else149
%14343:	sext	 pos
%14344:	getelementptr	 %14316 %14343
%14345:	sext	 %14317
%14346:	sub	 XXX %14345
%14347:	getelementptr	 %14344 %14346
%14348:	br	 if.end155

BASIC BLOCK if.end155
%14349:	phi	 %14335 %14334
%14350:	phi	 %14341 %14347
%14351:	br	 for.cond156

BASIC BLOCK for.cond156
%14352:	phi	 XXX XXX %17390
%14353:	phi	 XXX %17398 %14353
%14354:	phi	 XXX %17399 %14354
%14355:	phi	 XXX %17440 %17391
%14356:	phi	 XXX %17451 %17392
%14357:	phi	 XXX %14357 %17393
%14358:	phi	 %14112 %17429 %17394
%14359:	phi	 %14349 %17553 %17395
%14360:	phi	 %14350 %17419 %17396
%14361:	icmp	 %14358 %14115
%14362:	br	 %14361 if.end572 if.then159

BASIC BLOCK if.then159
%14363:	icmp	 %14360 %14334
%14364:	br	 %14363 if.end240 if.then162

BASIC BLOCK if.then162
%14365:	icmp	 %14317 XXX
%14366:	br	 %14365 land.end land.lhs.true164

BASIC BLOCK land.lhs.true164
%14367:	icmp	 %14318 %14353
%14368:	br	 %14367 land.end land.rhs

BASIC BLOCK land.rhs
%14369:	sext	 %14317
%14370:	getelementptr	 %14318 %14369
%14371:	icmp	 %14353 %14370
%14372:	br	 land.end

BASIC BLOCK land.end
%14373:	phi	 XXX XXX %14371
%14374:	zext	 %14373
%14375:	icmp	 %14359 %14335
%14376:	zext	 %14375
%14377:	icmp	 %14374 %14376
%14378:	zext	 %14377
%14379:	trunc	 %14378
%14380:	icmp	 %14379 XXX
%14381:	br	 %14380 if.else181 if.then177

BASIC BLOCK if.then177
%14382:	icmp	 %14360 %14353
%14383:	zext	 %14382
%14384:	trunc	 %14383
%14385:	br	 if.end185

BASIC BLOCK if.else181
%14386:	icmp	 %14359 %14335
%14387:	xor	 %14386 XXX
%14388:	zext	 %14387
%14389:	trunc	 %14388
%14390:	br	 if.end185

BASIC BLOCK if.end185
%14391:	phi	 %14384 %14389
%14392:	getelementptr	 %14110 XXX XXX
%14393:	load	 %14392
%14394:	icmp	 %14393 XXX
%14395:	br	 %14394 if.then189 if.else212

BASIC BLOCK if.then189
%14396:	icmp	 %14354 XXX
%14397:	br	 %14396 if.then194 lor.lhs.false191

BASIC BLOCK lor.lhs.false191
%14398:	sext	 %14391
%14399:	icmp	 %14398 XXX
%14400:	br	 %14399 if.end211 if.then194

BASIC BLOCK if.then194
%14401:	br	 for.cond195

BASIC BLOCK for.cond195
%14402:	phi	 XXX %14419
%14403:	zext	 %14402
%14404:	icmp	 %14403 %14120
%14405:	br	 %14404 for.end210 for.body199

BASIC BLOCK for.body199
%14406:	sext	 %14402
%14407:	getelementptr	 %14225 %14406
%14408:	load	 %14407
%14409:	sext	 %14402
%14410:	getelementptr	 %14220 %14409
%14411:	store	 %14408 %14410
%14412:	sext	 %14402
%14413:	getelementptr	 %14224 %14412
%14414:	load	 %14413
%14415:	sext	 %14402
%14416:	getelementptr	 %14219 %14415
%14417:	store	 %14414 %14416
%14418:	br	 for.inc208

BASIC BLOCK for.inc208
%14419:	add	 %14402 XXX
%14420:	br	 for.cond195

BASIC BLOCK for.end210
%14421:	br	 if.end211

BASIC BLOCK if.end211
%14422:	phi	 %14360 %14353
%14423:	phi	 XXX %14354
%14424:	br	 fail

BASIC BLOCK if.else212
%14425:	icmp	 %14354 XXX
%14426:	br	 %14425 if.end238 land.lhs.true214

BASIC BLOCK land.lhs.true214
%14427:	icmp	 %14391 XXX
%14428:	br	 %14427 if.then216 if.end238

BASIC BLOCK if.then216
%14429:	br	 restore_best_regs

BASIC BLOCK restore_best_regs
%14430:	phi	 %14353 %17398
%14431:	icmp	 %14430 %14318
%14432:	br	 %14431 cond.false land.lhs.true219

BASIC BLOCK land.lhs.true219
%14433:	icmp	 %14430 %14320
%14434:	br	 %14433 cond.false cond.true

BASIC BLOCK cond.true
%14435:	br	 cond.end

BASIC BLOCK cond.false
%14436:	br	 cond.end

BASIC BLOCK cond.end
%14437:	phi	 %14335 %14334
%14438:	br	 for.cond222

BASIC BLOCK for.cond222
%14439:	phi	 XXX %14456
%14440:	zext	 %14439
%14441:	icmp	 %14440 %14120
%14442:	br	 %14441 for.end237 for.body226

BASIC BLOCK for.body226
%14443:	sext	 %14439
%14444:	getelementptr	 %14220 %14443
%14445:	load	 %14444
%14446:	sext	 %14439
%14447:	getelementptr	 %14225 %14446
%14448:	store	 %14445 %14447
%14449:	sext	 %14439
%14450:	getelementptr	 %14219 %14449
%14451:	load	 %14450
%14452:	sext	 %14439
%14453:	getelementptr	 %14224 %14452
%14454:	store	 %14451 %14453
%14455:	br	 for.inc235

BASIC BLOCK for.inc235
%14456:	add	 %14439 XXX
%14457:	br	 for.cond222

BASIC BLOCK for.end237
%14458:	br	 if.end238

BASIC BLOCK if.end238
%14459:	phi	 %14359 %14437 %14359
%14460:	phi	 %14360 %14430 %14360
%14461:	br	 if.end239

BASIC BLOCK if.end239
%14462:	br	 if.end240

BASIC BLOCK if.end240
%14463:	phi	 %14459 %14359
%14464:	phi	 %14460 %14360
%14465:	br	 succeed_label

BASIC BLOCK succeed_label
%14466:	phi	 %14463 %14359
%14467:	phi	 %14464 %14360
%14468:	icmp	 regs XXX
%14469:	br	 %14468 if.end526 land.lhs.true242

BASIC BLOCK land.lhs.true242
%14470:	getelementptr	 bufp XXX XXX
%14471:	load	 %14470
%14472:	lshr	 %14471 XXX
%14473:	and	 %14472 XXX
%14474:	zext	 %14473
%14475:	icmp	 %14474 XXX
%14476:	br	 %14475 if.then246 if.end526

BASIC BLOCK if.then246
%14477:	getelementptr	 bufp XXX XXX
%14478:	load	 %14477
%14479:	lshr	 %14478 XXX
%14480:	and	 %14479 XXX
%14481:	zext	 %14480
%14482:	icmp	 %14481 XXX
%14483:	br	 %14482 if.else313 if.then253

BASIC BLOCK if.then253
%14484:	add	 %14120 XXX
%14485:	icmp	 XXX %14484
%14486:	br	 %14485 cond.false258 cond.true257

BASIC BLOCK cond.true257
%14487:	br	 cond.end260

BASIC BLOCK cond.false258
%14488:	add	 %14120 XXX
%14489:	br	 cond.end260

BASIC BLOCK cond.end260
%14490:	phi	 XXX %14488
%14491:	trunc	 %14490
%14492:	getelementptr	 regs XXX XXX
%14493:	store	 %14491 %14492
%14494:	getelementptr	 regs XXX XXX
%14495:	load	 %14494
%14496:	zext	 %14495
%14497:	mul	 %14496 XXX
%14498:	call	 %14497 xmalloc
%14499:	bitcast	 %14498
%14500:	getelementptr	 regs XXX XXX
%14501:	store	 %14499 %14500
%14502:	getelementptr	 regs XXX XXX
%14503:	load	 %14502
%14504:	zext	 %14503
%14505:	mul	 %14504 XXX
%14506:	call	 %14505 xmalloc
%14507:	bitcast	 %14506
%14508:	getelementptr	 regs XXX XXX
%14509:	store	 %14507 %14508
%14510:	getelementptr	 regs XXX XXX
%14511:	load	 %14510
%14512:	icmp	 %14511 XXX
%14513:	br	 %14512 lor.lhs.false274 if.then278

BASIC BLOCK lor.lhs.false274
%14514:	getelementptr	 regs XXX XXX
%14515:	load	 %14514
%14516:	icmp	 %14515 XXX
%14517:	br	 %14516 if.end308 if.then278

BASIC BLOCK if.then278
%14518:	br	 do.body279

BASIC BLOCK do.body279
%14519:	icmp	 %14225 XXX
%14520:	br	 %14519 if.end282 if.then281

BASIC BLOCK if.then281
%14521:	br	 if.end282

BASIC BLOCK if.end282
%14522:	icmp	 %14224 XXX
%14523:	br	 %14522 if.end285 if.then284

BASIC BLOCK if.then284
%14524:	br	 if.end285

BASIC BLOCK if.end285
%14525:	icmp	 %14223 XXX
%14526:	br	 %14525 if.end288 if.then287

BASIC BLOCK if.then287
%14527:	br	 if.end288

BASIC BLOCK if.end288
%14528:	icmp	 %14222 XXX
%14529:	br	 %14528 if.end291 if.then290

BASIC BLOCK if.then290
%14530:	br	 if.end291

BASIC BLOCK if.end291
%14531:	icmp	 %14220 XXX
%14532:	br	 %14531 if.end294 if.then293

BASIC BLOCK if.then293
%14533:	br	 if.end294

BASIC BLOCK if.end294
%14534:	icmp	 %14219 XXX
%14535:	br	 %14534 if.end297 if.then296

BASIC BLOCK if.then296
%14536:	br	 if.end297

BASIC BLOCK if.end297
%14537:	icmp	 %14221 XXX
%14538:	br	 %14537 if.end300 if.then299

BASIC BLOCK if.then299
%14539:	br	 if.end300

BASIC BLOCK if.end300
%14540:	icmp	 %14218 XXX
%14541:	br	 %14540 if.end303 if.then302

BASIC BLOCK if.then302
%14542:	br	 if.end303

BASIC BLOCK if.end303
%14543:	icmp	 %14217 XXX
%14544:	br	 %14543 if.end306 if.then305

BASIC BLOCK if.then305
%14545:	br	 if.end306

BASIC BLOCK if.end306
%14546:	br	 do.end307

BASIC BLOCK do.end307
%14547:	br	 return

BASIC BLOCK if.end308
%14548:	getelementptr	 bufp XXX XXX
%14549:	load	 %14548
%14550:	and	 %14549 XXX
%14551:	or	 %14550 XXX
%14552:	store	 %14551 %14548
%14553:	br	 if.end384

BASIC BLOCK if.else313
%14554:	getelementptr	 bufp XXX XXX
%14555:	load	 %14554
%14556:	lshr	 %14555 XXX
%14557:	and	 %14556 XXX
%14558:	zext	 %14557
%14559:	icmp	 %14558 XXX
%14560:	br	 %14559 if.else382 if.then321

BASIC BLOCK if.then321
%14561:	getelementptr	 regs XXX XXX
%14562:	load	 %14561
%14563:	zext	 %14562
%14564:	add	 %14120 XXX
%14565:	icmp	 %14563 %14564
%14566:	br	 %14565 if.end381 if.then327

BASIC BLOCK if.then327
%14567:	add	 %14120 XXX
%14568:	trunc	 %14567
%14569:	getelementptr	 regs XXX XXX
%14570:	store	 %14568 %14569
%14571:	getelementptr	 regs XXX XXX
%14572:	load	 %14571
%14573:	bitcast	 %14572
%14574:	getelementptr	 regs XXX XXX
%14575:	load	 %14574
%14576:	zext	 %14575
%14577:	mul	 %14576 XXX
%14578:	call	 %14573 %14577 realloc
%14579:	bitcast	 %14578
%14580:	getelementptr	 regs XXX XXX
%14581:	store	 %14579 %14580
%14582:	getelementptr	 regs XXX XXX
%14583:	load	 %14582
%14584:	bitcast	 %14583
%14585:	getelementptr	 regs XXX XXX
%14586:	load	 %14585
%14587:	zext	 %14586
%14588:	mul	 %14587 XXX
%14589:	call	 %14584 %14588 realloc
%14590:	bitcast	 %14589
%14591:	getelementptr	 regs XXX XXX
%14592:	store	 %14590 %14591
%14593:	getelementptr	 regs XXX XXX
%14594:	load	 %14593
%14595:	icmp	 %14594 XXX
%14596:	br	 %14595 lor.lhs.false346 if.then350

BASIC BLOCK lor.lhs.false346
%14597:	getelementptr	 regs XXX XXX
%14598:	load	 %14597
%14599:	icmp	 %14598 XXX
%14600:	br	 %14599 if.end380 if.then350

BASIC BLOCK if.then350
%14601:	br	 do.body351

BASIC BLOCK do.body351
%14602:	icmp	 %14225 XXX
%14603:	br	 %14602 if.end354 if.then353

BASIC BLOCK if.then353
%14604:	br	 if.end354

BASIC BLOCK if.end354
%14605:	icmp	 %14224 XXX
%14606:	br	 %14605 if.end357 if.then356

BASIC BLOCK if.then356
%14607:	br	 if.end357

BASIC BLOCK if.end357
%14608:	icmp	 %14223 XXX
%14609:	br	 %14608 if.end360 if.then359

BASIC BLOCK if.then359
%14610:	br	 if.end360

BASIC BLOCK if.end360
%14611:	icmp	 %14222 XXX
%14612:	br	 %14611 if.end363 if.then362

BASIC BLOCK if.then362
%14613:	br	 if.end363

BASIC BLOCK if.end363
%14614:	icmp	 %14220 XXX
%14615:	br	 %14614 if.end366 if.then365

BASIC BLOCK if.then365
%14616:	br	 if.end366

BASIC BLOCK if.end366
%14617:	icmp	 %14219 XXX
%14618:	br	 %14617 if.end369 if.then368

BASIC BLOCK if.then368
%14619:	br	 if.end369

BASIC BLOCK if.end369
%14620:	icmp	 %14221 XXX
%14621:	br	 %14620 if.end372 if.then371

BASIC BLOCK if.then371
%14622:	br	 if.end372

BASIC BLOCK if.end372
%14623:	icmp	 %14218 XXX
%14624:	br	 %14623 if.end375 if.then374

BASIC BLOCK if.then374
%14625:	br	 if.end375

BASIC BLOCK if.end375
%14626:	icmp	 %14217 XXX
%14627:	br	 %14626 if.end378 if.then377

BASIC BLOCK if.then377
%14628:	br	 if.end378

BASIC BLOCK if.end378
%14629:	br	 do.end379

BASIC BLOCK do.end379
%14630:	br	 return

BASIC BLOCK if.end380
%14631:	br	 if.end381

BASIC BLOCK if.end381
%14632:	br	 if.end383

BASIC BLOCK if.else382
%14633:	br	 if.end383

BASIC BLOCK if.end383
%14634:	br	 if.end384

BASIC BLOCK if.end384
%14635:	getelementptr	 regs XXX XXX
%14636:	load	 %14635
%14637:	icmp	 %14636 XXX
%14638:	br	 %14637 if.end406 if.then388

BASIC BLOCK if.then388
%14639:	getelementptr	 regs XXX XXX
%14640:	load	 %14639
%14641:	getelementptr	 %14640 XXX
%14642:	store	 pos %14641
%14643:	icmp	 %14466 %14335
%14644:	br	 %14643 cond.false395 cond.true393

BASIC BLOCK cond.true393
%14645:	ptrtoint	 %14467
%14646:	ptrtoint	 %14318
%14647:	sub	 %14645 %14646
%14648:	trunc	 %14647
%14649:	br	 cond.end402

BASIC BLOCK cond.false395
%14650:	ptrtoint	 %14467
%14651:	ptrtoint	 %14316
%14652:	sub	 %14650 %14651
%14653:	sext	 %14317
%14654:	add	 %14652 %14653
%14655:	trunc	 %14654
%14656:	br	 cond.end402

BASIC BLOCK cond.end402
%14657:	phi	 %14648 %14655
%14658:	getelementptr	 regs XXX XXX
%14659:	load	 %14658
%14660:	getelementptr	 %14659 XXX
%14661:	store	 %14657 %14660
%14662:	br	 if.end406

BASIC BLOCK if.end406
%14663:	br	 for.cond407

BASIC BLOCK for.cond407
%14664:	phi	 XXX %14778
%14665:	zext	 %14664
%14666:	getelementptr	 regs XXX XXX
%14667:	load	 %14666
%14668:	zext	 %14667
%14669:	icmp	 %14120 %14668
%14670:	br	 %14669 cond.false414 cond.true413

BASIC BLOCK cond.true413
%14671:	br	 cond.end417

BASIC BLOCK cond.false414
%14672:	getelementptr	 regs XXX XXX
%14673:	load	 %14672
%14674:	zext	 %14673
%14675:	br	 cond.end417

BASIC BLOCK cond.end417
%14676:	phi	 %14120 %14674
%14677:	icmp	 %14665 %14676
%14678:	br	 %14677 for.end510 for.body421

BASIC BLOCK for.body421
%14679:	sext	 %14664
%14680:	getelementptr	 %14225 %14679
%14681:	load	 %14680
%14682:	icmp	 %14681 reg_unset_dummy
%14683:	br	 %14682 lor.lhs.false426 if.then431

BASIC BLOCK lor.lhs.false426
%14684:	sext	 %14664
%14685:	getelementptr	 %14224 %14684
%14686:	load	 %14685
%14687:	icmp	 %14686 reg_unset_dummy
%14688:	br	 %14687 if.else438 if.then431

BASIC BLOCK if.then431
%14689:	sext	 %14664
%14690:	getelementptr	 regs XXX XXX
%14691:	load	 %14690
%14692:	getelementptr	 %14691 %14689
%14693:	store	 XXX %14692
%14694:	sext	 %14664
%14695:	getelementptr	 regs XXX XXX
%14696:	load	 %14695
%14697:	getelementptr	 %14696 %14694
%14698:	store	 XXX %14697
%14699:	br	 if.end507

BASIC BLOCK if.else438
%14700:	icmp	 %14317 XXX
%14701:	br	 %14700 cond.false459 land.lhs.true440

BASIC BLOCK land.lhs.true440
%14702:	sext	 %14664
%14703:	getelementptr	 %14225 %14702
%14704:	load	 %14703
%14705:	icmp	 %14318 %14704
%14706:	br	 %14705 cond.false459 land.lhs.true445

BASIC BLOCK land.lhs.true445
%14707:	sext	 %14664
%14708:	getelementptr	 %14225 %14707
%14709:	load	 %14708
%14710:	sext	 %14317
%14711:	getelementptr	 %14318 %14710
%14712:	icmp	 %14709 %14711
%14713:	br	 %14712 cond.false459 cond.true452

BASIC BLOCK cond.true452
%14714:	sext	 %14664
%14715:	getelementptr	 %14225 %14714
%14716:	load	 %14715
%14717:	ptrtoint	 %14716
%14718:	ptrtoint	 %14318
%14719:	sub	 %14717 %14718
%14720:	trunc	 %14719
%14721:	br	 cond.end468

BASIC BLOCK cond.false459
%14722:	sext	 %14664
%14723:	getelementptr	 %14225 %14722
%14724:	load	 %14723
%14725:	ptrtoint	 %14724
%14726:	ptrtoint	 %14316
%14727:	sub	 %14725 %14726
%14728:	sext	 %14317
%14729:	add	 %14727 %14728
%14730:	trunc	 %14729
%14731:	br	 cond.end468

BASIC BLOCK cond.end468
%14732:	phi	 %14720 %14730
%14733:	sext	 %14664
%14734:	getelementptr	 regs XXX XXX
%14735:	load	 %14734
%14736:	getelementptr	 %14735 %14733
%14737:	store	 %14732 %14736
%14738:	icmp	 %14317 XXX
%14739:	br	 %14738 cond.false493 land.lhs.true474

BASIC BLOCK land.lhs.true474
%14740:	sext	 %14664
%14741:	getelementptr	 %14224 %14740
%14742:	load	 %14741
%14743:	icmp	 %14318 %14742
%14744:	br	 %14743 cond.false493 land.lhs.true479

BASIC BLOCK land.lhs.true479
%14745:	sext	 %14664
%14746:	getelementptr	 %14224 %14745
%14747:	load	 %14746
%14748:	sext	 %14317
%14749:	getelementptr	 %14318 %14748
%14750:	icmp	 %14747 %14749
%14751:	br	 %14750 cond.false493 cond.true486

BASIC BLOCK cond.true486
%14752:	sext	 %14664
%14753:	getelementptr	 %14224 %14752
%14754:	load	 %14753
%14755:	ptrtoint	 %14754
%14756:	ptrtoint	 %14318
%14757:	sub	 %14755 %14756
%14758:	trunc	 %14757
%14759:	br	 cond.end502

BASIC BLOCK cond.false493
%14760:	sext	 %14664
%14761:	getelementptr	 %14224 %14760
%14762:	load	 %14761
%14763:	ptrtoint	 %14762
%14764:	ptrtoint	 %14316
%14765:	sub	 %14763 %14764
%14766:	sext	 %14317
%14767:	add	 %14765 %14766
%14768:	trunc	 %14767
%14769:	br	 cond.end502

BASIC BLOCK cond.end502
%14770:	phi	 %14758 %14768
%14771:	sext	 %14664
%14772:	getelementptr	 regs XXX XXX
%14773:	load	 %14772
%14774:	getelementptr	 %14773 %14771
%14775:	store	 %14770 %14774
%14776:	br	 if.end507

BASIC BLOCK if.end507
%14777:	br	 for.inc508

BASIC BLOCK for.inc508
%14778:	add	 %14664 XXX
%14779:	br	 for.cond407

BASIC BLOCK for.end510
%14780:	trunc	 %14120
%14781:	br	 for.cond512

BASIC BLOCK for.cond512
%14782:	phi	 %14780 %14798
%14783:	getelementptr	 regs XXX XXX
%14784:	load	 %14783
%14785:	icmp	 %14782 %14784
%14786:	br	 %14785 for.end525 for.body516

BASIC BLOCK for.body516
%14787:	sext	 %14782
%14788:	getelementptr	 regs XXX XXX
%14789:	load	 %14788
%14790:	getelementptr	 %14789 %14787
%14791:	store	 XXX %14790
%14792:	sext	 %14782
%14793:	getelementptr	 regs XXX XXX
%14794:	load	 %14793
%14795:	getelementptr	 %14794 %14792
%14796:	store	 XXX %14795
%14797:	br	 for.inc523

BASIC BLOCK for.inc523
%14798:	add	 %14782 XXX
%14799:	br	 for.cond512

BASIC BLOCK for.end525
%14800:	br	 if.end526

BASIC BLOCK if.end526
%14801:	sext	 pos
%14802:	sub	 XXX %14801
%14803:	getelementptr	 %14467 %14802
%14804:	icmp	 %14466 %14335
%14805:	br	 %14804 cond.false533 cond.true532

BASIC BLOCK cond.true532
%14806:	br	 cond.end537

BASIC BLOCK cond.false533
%14807:	sext	 %14317
%14808:	sub	 XXX %14807
%14809:	getelementptr	 %14316 %14808
%14810:	br	 cond.end537

BASIC BLOCK cond.end537
%14811:	phi	 %14318 %14809
%14812:	ptrtoint	 %14803
%14813:	ptrtoint	 %14811
%14814:	sub	 %14812 %14813
%14815:	trunc	 %14814
%14816:	br	 do.body543

BASIC BLOCK do.body543
%14817:	icmp	 %14225 XXX
%14818:	br	 %14817 if.end546 if.then545

BASIC BLOCK if.then545
%14819:	br	 if.end546

BASIC BLOCK if.end546
%14820:	icmp	 %14224 XXX
%14821:	br	 %14820 if.end549 if.then548

BASIC BLOCK if.then548
%14822:	br	 if.end549

BASIC BLOCK if.end549
%14823:	icmp	 %14223 XXX
%14824:	br	 %14823 if.end552 if.then551

BASIC BLOCK if.then551
%14825:	br	 if.end552

BASIC BLOCK if.end552
%14826:	icmp	 %14222 XXX
%14827:	br	 %14826 if.end555 if.then554

BASIC BLOCK if.then554
%14828:	br	 if.end555

BASIC BLOCK if.end555
%14829:	icmp	 %14220 XXX
%14830:	br	 %14829 if.end558 if.then557

BASIC BLOCK if.then557
%14831:	br	 if.end558

BASIC BLOCK if.end558
%14832:	icmp	 %14219 XXX
%14833:	br	 %14832 if.end561 if.then560

BASIC BLOCK if.then560
%14834:	br	 if.end561

BASIC BLOCK if.end561
%14835:	icmp	 %14221 XXX
%14836:	br	 %14835 if.end564 if.then563

BASIC BLOCK if.then563
%14837:	br	 if.end564

BASIC BLOCK if.end564
%14838:	icmp	 %14218 XXX
%14839:	br	 %14838 if.end567 if.then566

BASIC BLOCK if.then566
%14840:	br	 if.end567

BASIC BLOCK if.end567
%14841:	icmp	 %14217 XXX
%14842:	br	 %14841 if.end570 if.then569

BASIC BLOCK if.then569
%14843:	br	 if.end570

BASIC BLOCK if.end570
%14844:	br	 do.end571

BASIC BLOCK do.end571
%14845:	br	 return

BASIC BLOCK if.end572
%14846:	getelementptr	 %14358 XXX
%14847:	load	 %14358
%14848:	zext	 %14847
%14849:	switch	 %14848 sw.default2660 XXX sw.bb XXX sw.bb574 XXX sw.bb575 XXX sw.bb646 XXX sw.bb712 XXX sw.bb712 XXX sw.bb789 XXX sw.bb853 XXX sw.bb1137 XXX sw.bb1277 XXX sw.bb1308 XXX sw.bb1339 XXX sw.bb1351 XXX sw.bb1356 XXX sw.bb1471 XXX sw.bb1618 XXX sw.bb1894 XXX sw.bb1954 XXX sw.bb1970 XXX sw.bb1971 XXX sw.bb2071 XXX sw.bb2171 XXX sw.bb2208 XXX sw.bb2237 XXX sw.bb2275 XXX sw.bb2345 XXX sw.bb2417 XXX sw.bb2478 XXX sw.bb2542 XXX sw.bb2601

BASIC BLOCK sw.bb
%14850:	br	 sw.epilog2661

BASIC BLOCK sw.bb574
%14851:	br	 succeed_label

BASIC BLOCK sw.bb575
%14852:	getelementptr	 %14846 XXX
%14853:	load	 %14846
%14854:	zext	 %14853
%14855:	icmp	 %14117 XXX
%14856:	br	 %14855 if.else599 if.then579

BASIC BLOCK if.then579
%14857:	br	 do.body580

BASIC BLOCK do.body580
%14858:	phi	 %14852 %14877
%14859:	phi	 %14359 %14863
%14860:	phi	 %14360 %14871
%14861:	phi	 %14854 %14884
%14862:	br	 while.cond

BASIC BLOCK while.cond
%14863:	phi	 %14859 %14334
%14864:	phi	 %14860 %14316
%14865:	icmp	 %14864 %14863
%14866:	br	 %14865 while.end while.body

BASIC BLOCK while.body
%14867:	icmp	 %14863 %14334
%14868:	br	 %14867 if.end586 if.then585

BASIC BLOCK if.then585
%14869:	br	 fail

BASIC BLOCK if.end586
%14870:	br	 while.cond

BASIC BLOCK while.end
%14871:	getelementptr	 %14864 XXX
%14872:	load	 %14864
%14873:	zext	 %14872
%14874:	getelementptr	 %14117 %14873
%14875:	load	 %14874
%14876:	zext	 %14875
%14877:	getelementptr	 %14858 XXX
%14878:	load	 %14858
%14879:	zext	 %14878
%14880:	icmp	 %14876 %14879
%14881:	br	 %14880 if.end596 if.then595

BASIC BLOCK if.then595
%14882:	br	 fail

BASIC BLOCK if.end596
%14883:	br	 do.cond

BASIC BLOCK do.cond
%14884:	add	 %14861 XXX
%14885:	icmp	 %14884 XXX
%14886:	br	 %14885 do.end598 do.body580

BASIC BLOCK do.end598
%14887:	br	 if.end622

BASIC BLOCK if.else599
%14888:	br	 do.body600

BASIC BLOCK do.body600
%14889:	phi	 %14852 %14905
%14890:	phi	 %14359 %14894
%14891:	phi	 %14360 %14902
%14892:	phi	 %14854 %14912
%14893:	br	 while.cond601

BASIC BLOCK while.cond601
%14894:	phi	 %14890 %14334
%14895:	phi	 %14891 %14316
%14896:	icmp	 %14895 %14894
%14897:	br	 %14896 while.end609 while.body604

BASIC BLOCK while.body604
%14898:	icmp	 %14894 %14334
%14899:	br	 %14898 if.end608 if.then607

BASIC BLOCK if.then607
%14900:	br	 fail

BASIC BLOCK if.end608
%14901:	br	 while.cond601

BASIC BLOCK while.end609
%14902:	getelementptr	 %14895 XXX
%14903:	load	 %14895
%14904:	sext	 %14903
%14905:	getelementptr	 %14889 XXX
%14906:	load	 %14889
%14907:	sext	 %14906
%14908:	icmp	 %14904 %14907
%14909:	br	 %14908 if.end617 if.then616

BASIC BLOCK if.then616
%14910:	br	 fail

BASIC BLOCK if.end617
%14911:	br	 do.cond618

BASIC BLOCK do.cond618
%14912:	add	 %14892 XXX
%14913:	icmp	 %14912 XXX
%14914:	br	 %14913 do.end621 do.body600

BASIC BLOCK do.end621
%14915:	br	 if.end622

BASIC BLOCK if.end622
%14916:	phi	 %14877 %14905
%14917:	phi	 %14863 %14894
%14918:	phi	 %14871 %14902
%14919:	br	 do.body623

BASIC BLOCK do.body623
%14920:	icmp	 %14352 XXX
%14921:	br	 %14920 if.then625 if.end643

BASIC BLOCK if.then625
%14922:	br	 for.cond626

BASIC BLOCK for.cond626
%14923:	phi	 %14356 %14941
%14924:	icmp	 %14923 %14355
%14925:	br	 %14924 for.end642 for.body629

BASIC BLOCK for.body629
%14926:	getelementptr	 %14221 %14923
%14927:	bitcast	 %14926
%14928:	bitcast	 %14927
%14929:	load	 %14928
%14930:	and	 %14929 XXX
%14931:	or	 %14930 XXX
%14932:	store	 %14931 %14928
%14933:	getelementptr	 %14221 %14923
%14934:	bitcast	 %14933
%14935:	bitcast	 %14934
%14936:	load	 %14935
%14937:	and	 %14936 XXX
%14938:	or	 %14937 XXX
%14939:	store	 %14938 %14935
%14940:	br	 for.inc640

BASIC BLOCK for.inc640
%14941:	add	 %14923 XXX
%14942:	br	 for.cond626

BASIC BLOCK for.end642
%14943:	br	 if.end643

BASIC BLOCK if.end643
%14944:	phi	 %14352 XXX
%14945:	br	 do.end645

BASIC BLOCK do.end645
%14946:	br	 sw.epilog2661

BASIC BLOCK sw.bb646
%14947:	br	 while.cond647

BASIC BLOCK while.cond647
%14948:	phi	 %14359 %14334
%14949:	phi	 %14360 %14316
%14950:	icmp	 %14949 %14948
%14951:	br	 %14950 while.end655 while.body650

BASIC BLOCK while.body650
%14952:	icmp	 %14948 %14334
%14953:	br	 %14952 if.end654 if.then653

BASIC BLOCK if.then653
%14954:	br	 fail

BASIC BLOCK if.end654
%14955:	br	 while.cond647

BASIC BLOCK while.end655
%14956:	getelementptr	 bufp XXX XXX
%14957:	load	 %14956
%14958:	and	 %14957 XXX
%14959:	icmp	 %14958 XXX
%14960:	br	 %14959 land.lhs.true657 lor.lhs.false669

BASIC BLOCK land.lhs.true657
%14961:	icmp	 %14117 XXX
%14962:	br	 %14961 cond.false663 cond.true659

BASIC BLOCK cond.true659
%14963:	load	 %14949
%14964:	zext	 %14963
%14965:	getelementptr	 %14117 %14964
%14966:	load	 %14965
%14967:	sext	 %14966
%14968:	br	 cond.end665

BASIC BLOCK cond.false663
%14969:	load	 %14949
%14970:	sext	 %14969
%14971:	br	 cond.end665

BASIC BLOCK cond.end665
%14972:	phi	 %14967 %14970
%14973:	icmp	 %14972 XXX
%14974:	br	 %14973 lor.lhs.false669 if.then685

BASIC BLOCK lor.lhs.false669
%14975:	getelementptr	 bufp XXX XXX
%14976:	load	 %14975
%14977:	and	 %14976 XXX
%14978:	icmp	 %14977 XXX
%14979:	br	 %14978 if.end686 land.lhs.true673

BASIC BLOCK land.lhs.true673
%14980:	icmp	 %14117 XXX
%14981:	br	 %14980 cond.false679 cond.true675

BASIC BLOCK cond.true675
%14982:	load	 %14949
%14983:	zext	 %14982
%14984:	getelementptr	 %14117 %14983
%14985:	load	 %14984
%14986:	sext	 %14985
%14987:	br	 cond.end681

BASIC BLOCK cond.false679
%14988:	load	 %14949
%14989:	sext	 %14988
%14990:	br	 cond.end681

BASIC BLOCK cond.end681
%14991:	phi	 %14986 %14989
%14992:	icmp	 %14991 XXX
%14993:	br	 %14992 if.end686 if.then685

BASIC BLOCK if.then685
%14994:	br	 fail

BASIC BLOCK if.end686
%14995:	br	 do.body687

BASIC BLOCK do.body687
%14996:	icmp	 %14352 XXX
%14997:	br	 %14996 if.then689 if.end708

BASIC BLOCK if.then689
%14998:	br	 for.cond691

BASIC BLOCK for.cond691
%14999:	phi	 %14356 %15017
%15000:	icmp	 %14999 %14355
%15001:	br	 %15000 for.end707 for.body694

BASIC BLOCK for.body694
%15002:	getelementptr	 %14221 %14999
%15003:	bitcast	 %15002
%15004:	bitcast	 %15003
%15005:	load	 %15004
%15006:	and	 %15005 XXX
%15007:	or	 %15006 XXX
%15008:	store	 %15007 %15004
%15009:	getelementptr	 %14221 %14999
%15010:	bitcast	 %15009
%15011:	bitcast	 %15010
%15012:	load	 %15011
%15013:	and	 %15012 XXX
%15014:	or	 %15013 XXX
%15015:	store	 %15014 %15011
%15016:	br	 for.inc705

BASIC BLOCK for.inc705
%15017:	add	 %14999 XXX
%15018:	br	 for.cond691

BASIC BLOCK for.end707
%15019:	br	 if.end708

BASIC BLOCK if.end708
%15020:	phi	 %14352 XXX
%15021:	br	 do.end710

BASIC BLOCK do.end710
%15022:	getelementptr	 %14949 XXX
%15023:	br	 sw.epilog2661

BASIC BLOCK sw.bb712
%15024:	getelementptr	 %14846 XXX
%15025:	load	 %15024
%15026:	zext	 %15025
%15027:	icmp	 %15026 XXX
%15028:	zext	 %15027
%15029:	trunc	 %15028
%15030:	br	 while.cond718

BASIC BLOCK while.cond718
%15031:	phi	 %14359 %14334
%15032:	phi	 %14360 %14316
%15033:	icmp	 %15032 %15031
%15034:	br	 %15033 while.end726 while.body721

BASIC BLOCK while.body721
%15035:	icmp	 %15031 %14334
%15036:	br	 %15035 if.end725 if.then724

BASIC BLOCK if.then724
%15037:	br	 fail

BASIC BLOCK if.end725
%15038:	br	 while.cond718

BASIC BLOCK while.end726
%15039:	icmp	 %14117 XXX
%15040:	br	 %15039 cond.false732 cond.true728

BASIC BLOCK cond.true728
%15041:	load	 %15032
%15042:	zext	 %15041
%15043:	getelementptr	 %14117 %15042
%15044:	load	 %15043
%15045:	sext	 %15044
%15046:	br	 cond.end734

BASIC BLOCK cond.false732
%15047:	load	 %15032
%15048:	sext	 %15047
%15049:	br	 cond.end734

BASIC BLOCK cond.end734
%15050:	phi	 %15045 %15048
%15051:	trunc	 %15050
%15052:	zext	 %15051
%15053:	load	 %14846
%15054:	zext	 %15053
%15055:	mul	 %15054 XXX
%15056:	icmp	 %15052 %15055
%15057:	br	 %15056 if.end756 land.lhs.true742

BASIC BLOCK land.lhs.true742
%15058:	zext	 %15051
%15059:	sdiv	 %15058 XXX
%15060:	add	 XXX %15059
%15061:	sext	 %15060
%15062:	getelementptr	 %14846 %15061
%15063:	load	 %15062
%15064:	zext	 %15063
%15065:	zext	 %15051
%15066:	srem	 %15065 XXX
%15067:	shl	 XXX %15066
%15068:	and	 %15064 %15067
%15069:	icmp	 %15068 XXX
%15070:	br	 %15069 if.end756 if.then751

BASIC BLOCK if.then751
%15071:	icmp	 %15029 XXX
%15072:	xor	 %15071 XXX
%15073:	zext	 %15072
%15074:	trunc	 %15073
%15075:	br	 if.end756

BASIC BLOCK if.end756
%15076:	phi	 %15074 %15029 %15029
%15077:	load	 %14846
%15078:	zext	 %15077
%15079:	add	 XXX %15078
%15080:	sext	 %15079
%15081:	getelementptr	 %14846 %15080
%15082:	icmp	 %15076 XXX
%15083:	br	 %15082 if.then762 if.end763

BASIC BLOCK if.then762
%15084:	br	 fail

BASIC BLOCK if.end763
%15085:	br	 do.body764

BASIC BLOCK do.body764
%15086:	icmp	 %14352 XXX
%15087:	br	 %15086 if.then766 if.end785

BASIC BLOCK if.then766
%15088:	br	 for.cond768

BASIC BLOCK for.cond768
%15089:	phi	 %14356 %15107
%15090:	icmp	 %15089 %14355
%15091:	br	 %15090 for.end784 for.body771

BASIC BLOCK for.body771
%15092:	getelementptr	 %14221 %15089
%15093:	bitcast	 %15092
%15094:	bitcast	 %15093
%15095:	load	 %15094
%15096:	and	 %15095 XXX
%15097:	or	 %15096 XXX
%15098:	store	 %15097 %15094
%15099:	getelementptr	 %14221 %15089
%15100:	bitcast	 %15099
%15101:	bitcast	 %15100
%15102:	load	 %15101
%15103:	and	 %15102 XXX
%15104:	or	 %15103 XXX
%15105:	store	 %15104 %15101
%15106:	br	 for.inc782

BASIC BLOCK for.inc782
%15107:	add	 %15089 XXX
%15108:	br	 for.cond768

BASIC BLOCK for.end784
%15109:	br	 if.end785

BASIC BLOCK if.end785
%15110:	phi	 %14352 XXX
%15111:	br	 do.end787

BASIC BLOCK do.end787
%15112:	getelementptr	 %15032 XXX
%15113:	br	 sw.epilog2661

BASIC BLOCK sw.bb789
%15114:	store	 %14846 %14109
%15115:	load	 %14846
%15116:	zext	 %15115
%15117:	getelementptr	 %14221 %15116
%15118:	bitcast	 %15117
%15119:	bitcast	 %15118
%15120:	load	 %15119
%15121:	and	 %15120 XXX
%15122:	zext	 %15121
%15123:	icmp	 %15122 XXX
%15124:	br	 %15123 if.end807 if.then798

BASIC BLOCK if.then798
%15125:	call	 %14109 %14115 %14221 group_match_null_string_p
%15126:	sext	 %15125
%15127:	load	 %14846
%15128:	zext	 %15127
%15129:	getelementptr	 %14221 %15128
%15130:	bitcast	 %15129
%15131:	bitcast	 %15130
%15132:	trunc	 %15126
%15133:	load	 %15131
%15134:	and	 %15132 XXX
%15135:	and	 %15133 XXX
%15136:	or	 %15135 %15134
%15137:	store	 %15136 %15131
%15138:	br	 if.end807

BASIC BLOCK if.end807
%15139:	load	 %14846
%15140:	zext	 %15139
%15141:	getelementptr	 %14221 %15140
%15142:	bitcast	 %15141
%15143:	bitcast	 %15142
%15144:	load	 %15143
%15145:	and	 %15144 XXX
%15146:	zext	 %15145
%15147:	icmp	 %15146 XXX
%15148:	br	 %15147 cond.false826 cond.true815

BASIC BLOCK cond.true815
%15149:	load	 %14846
%15150:	zext	 %15149
%15151:	getelementptr	 %14225 %15150
%15152:	load	 %15151
%15153:	icmp	 %15152 reg_unset_dummy
%15154:	br	 %15153 cond.false821 cond.true820

BASIC BLOCK cond.true820
%15155:	br	 cond.end824

BASIC BLOCK cond.false821
%15156:	load	 %14846
%15157:	zext	 %15156
%15158:	getelementptr	 %14225 %15157
%15159:	load	 %15158
%15160:	br	 cond.end824

BASIC BLOCK cond.end824
%15161:	phi	 %14360 %15159
%15162:	br	 cond.end829

BASIC BLOCK cond.false826
%15163:	load	 %14846
%15164:	zext	 %15163
%15165:	getelementptr	 %14225 %15164
%15166:	load	 %15165
%15167:	br	 cond.end829

BASIC BLOCK cond.end829
%15168:	phi	 %15161 %15166
%15169:	load	 %14846
%15170:	zext	 %15169
%15171:	getelementptr	 %14223 %15170
%15172:	store	 %15168 %15171
%15173:	load	 %14846
%15174:	zext	 %15173
%15175:	getelementptr	 %14225 %15174
%15176:	store	 %14360 %15175
%15177:	load	 %14846
%15178:	zext	 %15177
%15179:	getelementptr	 %14221 %15178
%15180:	bitcast	 %15179
%15181:	bitcast	 %15180
%15182:	load	 %15181
%15183:	and	 %15182 XXX
%15184:	or	 %15183 XXX
%15185:	store	 %15184 %15181
%15186:	load	 %14846
%15187:	zext	 %15186
%15188:	getelementptr	 %14221 %15187
%15189:	bitcast	 %15188
%15190:	bitcast	 %15189
%15191:	load	 %15190
%15192:	and	 %15191 XXX
%15193:	store	 %15192 %15190
%15194:	load	 %14846
%15195:	zext	 %15194
%15196:	icmp	 %14356 XXX
%15197:	br	 %15196 if.end851 if.then849

BASIC BLOCK if.then849
%15198:	load	 %14846
%15199:	zext	 %15198
%15200:	br	 if.end851

BASIC BLOCK if.end851
%15201:	phi	 %15199 %14356
%15202:	getelementptr	 %14846 XXX
%15203:	br	 sw.epilog2661

BASIC BLOCK sw.bb853
%15204:	load	 %14846
%15205:	zext	 %15204
%15206:	getelementptr	 %14221 %15205
%15207:	bitcast	 %15206
%15208:	bitcast	 %15207
%15209:	load	 %15208
%15210:	and	 %15209 XXX
%15211:	zext	 %15210
%15212:	icmp	 %15211 XXX
%15213:	br	 %15212 cond.false872 cond.true861

BASIC BLOCK cond.true861
%15214:	load	 %14846
%15215:	zext	 %15214
%15216:	getelementptr	 %14224 %15215
%15217:	load	 %15216
%15218:	icmp	 %15217 reg_unset_dummy
%15219:	br	 %15218 cond.false867 cond.true866

BASIC BLOCK cond.true866
%15220:	br	 cond.end870

BASIC BLOCK cond.false867
%15221:	load	 %14846
%15222:	zext	 %15221
%15223:	getelementptr	 %14224 %15222
%15224:	load	 %15223
%15225:	br	 cond.end870

BASIC BLOCK cond.end870
%15226:	phi	 %14360 %15224
%15227:	br	 cond.end875

BASIC BLOCK cond.false872
%15228:	load	 %14846
%15229:	zext	 %15228
%15230:	getelementptr	 %14224 %15229
%15231:	load	 %15230
%15232:	br	 cond.end875

BASIC BLOCK cond.end875
%15233:	phi	 %15226 %15231
%15234:	load	 %14846
%15235:	zext	 %15234
%15236:	getelementptr	 %14222 %15235
%15237:	store	 %15233 %15236
%15238:	load	 %14846
%15239:	zext	 %15238
%15240:	getelementptr	 %14224 %15239
%15241:	store	 %14360 %15240
%15242:	load	 %14846
%15243:	zext	 %15242
%15244:	getelementptr	 %14221 %15243
%15245:	bitcast	 %15244
%15246:	bitcast	 %15245
%15247:	load	 %15246
%15248:	and	 %15247 XXX
%15249:	store	 %15248 %15246
%15250:	icmp	 %14356 %14355
%15251:	br	 %15250 if.else889 if.then888

BASIC BLOCK if.then888
%15252:	br	 if.end920

BASIC BLOCK if.else889
%15253:	load	 %14846
%15254:	zext	 %15253
%15255:	sub	 %15254 XXX
%15256:	trunc	 %15255
%15257:	br	 while.cond893

BASIC BLOCK while.cond893
%15258:	phi	 %15256 %15275
%15259:	zext	 %15258
%15260:	icmp	 %15259 XXX
%15261:	br	 %15260 land.end908 land.rhs897

BASIC BLOCK land.rhs897
%15262:	zext	 %15258
%15263:	getelementptr	 %14221 %15262
%15264:	bitcast	 %15263
%15265:	bitcast	 %15264
%15266:	load	 %15265
%15267:	lshr	 %15266 XXX
%15268:	and	 %15267 XXX
%15269:	zext	 %15268
%15270:	icmp	 %15269 XXX
%15271:	xor	 %15270 XXX
%15272:	br	 land.end908

BASIC BLOCK land.end908
%15273:	phi	 XXX %15271
%15274:	br	 %15273 while.end912 while.body910

BASIC BLOCK while.body910
%15275:	add	 %15258 XXX
%15276:	br	 while.cond893

BASIC BLOCK while.end912
%15277:	zext	 %15258
%15278:	icmp	 %15277 XXX
%15279:	br	 %15278 if.else917 if.then916

BASIC BLOCK if.then916
%15280:	br	 if.end919

BASIC BLOCK if.else917
%15281:	zext	 %15258
%15282:	br	 if.end919

BASIC BLOCK if.end919
%15283:	phi	 XXX %15281
%15284:	phi	 XXX %14356
%15285:	br	 if.end920

BASIC BLOCK if.end920
%15286:	phi	 XXX %15283
%15287:	phi	 XXX %15284
%15288:	load	 %14846
%15289:	zext	 %15288
%15290:	getelementptr	 %14221 %15289
%15291:	bitcast	 %15290
%15292:	bitcast	 %15291
%15293:	load	 %15292
%15294:	lshr	 %15293 XXX
%15295:	and	 %15294 XXX
%15296:	zext	 %15295
%15297:	icmp	 %15296 XXX
%15298:	br	 %15297 land.lhs.true933 lor.lhs.false929

BASIC BLOCK lor.lhs.false929
%15299:	getelementptr	 %14846 XXX
%15300:	icmp	 %14357 %15299
%15301:	br	 %15300 if.end1135 land.lhs.true933

BASIC BLOCK land.lhs.true933
%15302:	getelementptr	 %14846 XXX
%15303:	icmp	 %15302 %14115
%15304:	br	 %15303 if.end1135 if.then937

BASIC BLOCK if.then937
%15305:	getelementptr	 %14846 XXX
%15306:	store	 %15305 %14109
%15307:	load	 %14109
%15308:	getelementptr	 %15307 XXX
%15309:	store	 %15308 %14109
%15310:	load	 %15307
%15311:	zext	 %15310
%15312:	switch	 %15311 sw.default XXX sw.bb941 XXX sw.bb942 XXX sw.bb942 XXX sw.bb942 XXX sw.bb942

BASIC BLOCK sw.bb941
%15313:	br	 sw.bb942

BASIC BLOCK sw.bb942
%15314:	phi	 XXX XXX XXX XXX XXX
%15315:	br	 do.body943

BASIC BLOCK do.body943
%15316:	br	 do.body944

BASIC BLOCK do.body944
%15317:	load	 %14109
%15318:	load	 %15317
%15319:	zext	 %15318
%15320:	and	 %15319 XXX
%15321:	load	 %14109
%15322:	getelementptr	 %15321 XXX
%15323:	load	 %15322
%15324:	sext	 %15323
%15325:	shl	 %15324 XXX
%15326:	add	 %15320 %15325
%15327:	br	 do.end952

BASIC BLOCK do.end952
%15328:	load	 %14109
%15329:	getelementptr	 %15328 XXX
%15330:	store	 %15329 %14109
%15331:	br	 do.end955

BASIC BLOCK do.end955
%15332:	icmp	 %15314 XXX
%15333:	br	 %15332 if.end959 if.then957

BASIC BLOCK if.then957
%15334:	load	 %14109
%15335:	getelementptr	 %15334 XXX
%15336:	store	 %15335 %14109
%15337:	br	 if.end959

BASIC BLOCK if.end959
%15338:	br	 sw.epilog

BASIC BLOCK sw.default
%15339:	br	 sw.epilog

BASIC BLOCK sw.epilog
%15340:	phi	 XXX %15326
%15341:	load	 %14109
%15342:	sext	 %15340
%15343:	getelementptr	 %15341 %15342
%15344:	store	 %15343 %14109
%15345:	icmp	 %15340 XXX
%15346:	br	 %15345 if.end1134 land.lhs.true964

BASIC BLOCK land.lhs.true964
%15347:	load	 %14109
%15348:	load	 %15347
%15349:	zext	 %15348
%15350:	icmp	 %15349 XXX
%15351:	br	 %15350 if.end1134 land.lhs.true968

BASIC BLOCK land.lhs.true968
%15352:	load	 %14109
%15353:	getelementptr	 %15352 XXX
%15354:	load	 %15353
%15355:	zext	 %15354
%15356:	icmp	 %15355 XXX
%15357:	br	 %15356 if.end1134 land.lhs.true973

BASIC BLOCK land.lhs.true973
%15358:	load	 %14109
%15359:	getelementptr	 %15358 XXX
%15360:	load	 %15359
%15361:	zext	 %15360
%15362:	load	 %14846
%15363:	zext	 %15362
%15364:	icmp	 %15361 %15363
%15365:	br	 %15364 if.end1134 if.then979

BASIC BLOCK if.then979
%15366:	load	 %14846
%15367:	zext	 %15366
%15368:	getelementptr	 %14221 %15367
%15369:	bitcast	 %15368
%15370:	bitcast	 %15369
%15371:	load	 %15370
%15372:	lshr	 %15371 XXX
%15373:	and	 %15372 XXX
%15374:	zext	 %15373
%15375:	icmp	 %15374 XXX
%15376:	br	 %15375 if.end1023 if.then988

BASIC BLOCK if.then988
%15377:	load	 %14846
%15378:	zext	 %15377
%15379:	getelementptr	 %14221 %15378
%15380:	bitcast	 %15379
%15381:	bitcast	 %15380
%15382:	load	 %15381
%15383:	and	 %15382 XXX
%15384:	store	 %15383 %15381
%15385:	load	 %14846
%15386:	zext	 %15385
%15387:	br	 for.cond996

BASIC BLOCK for.cond996
%15388:	phi	 %15386 %15419
%15389:	load	 %14846
%15390:	zext	 %15389
%15391:	getelementptr	 %14846 XXX
%15392:	load	 %15391
%15393:	zext	 %15392
%15394:	add	 %15390 %15393
%15395:	icmp	 %15388 %15394
%15396:	br	 %15395 for.end1022 for.body1003

BASIC BLOCK for.body1003
%15397:	zext	 %15388
%15398:	getelementptr	 %14223 %15397
%15399:	load	 %15398
%15400:	zext	 %15388
%15401:	getelementptr	 %14225 %15400
%15402:	store	 %15399 %15401
%15403:	zext	 %15388
%15404:	getelementptr	 %14222 %15403
%15405:	load	 %15404
%15406:	zext	 %15388
%15407:	getelementptr	 %14225 %15406
%15408:	load	 %15407
%15409:	icmp	 %15405 %15408
%15410:	br	 %15409 if.end1019 if.then1014

BASIC BLOCK if.then1014
%15411:	zext	 %15388
%15412:	getelementptr	 %14222 %15411
%15413:	load	 %15412
%15414:	zext	 %15388
%15415:	getelementptr	 %14224 %15414
%15416:	store	 %15413 %15415
%15417:	br	 if.end1019

BASIC BLOCK if.end1019
%15418:	br	 for.inc1020

BASIC BLOCK for.inc1020
%15419:	add	 %15388 XXX
%15420:	br	 for.cond996

BASIC BLOCK for.end1022
%15421:	br	 if.end1023

BASIC BLOCK if.end1023
%15422:	load	 %14109
%15423:	getelementptr	 %15422 XXX
%15424:	store	 %15423 %14109
%15425:	br	 do.body1025

BASIC BLOCK do.body1025
%15426:	br	 do.body1026

BASIC BLOCK do.body1026
%15427:	load	 %14109
%15428:	load	 %15427
%15429:	zext	 %15428
%15430:	and	 %15429 XXX
%15431:	load	 %14109
%15432:	getelementptr	 %15431 XXX
%15433:	load	 %15432
%15434:	sext	 %15433
%15435:	shl	 %15434 XXX
%15436:	add	 %15430 %15435
%15437:	br	 do.end1034

BASIC BLOCK do.end1034
%15438:	load	 %14109
%15439:	getelementptr	 %15438 XXX
%15440:	store	 %15439 %14109
%15441:	br	 do.end1037

BASIC BLOCK do.end1037
%15442:	br	 do.body1038

BASIC BLOCK do.body1038
%15443:	br	 while.cond1039

BASIC BLOCK while.cond1039
%15444:	getelementptr	 %14110 XXX XXX
%15445:	load	 %15444
%15446:	getelementptr	 %14110 XXX XXX
%15447:	load	 %15446
%15448:	sub	 %15445 %15447
%15449:	zext	 %15448
%15450:	sub	 %15286 %15287
%15451:	add	 %15450 XXX
%15452:	mul	 %15451 XXX
%15453:	add	 %15452 XXX
%15454:	icmp	 %15449 %15453
%15455:	br	 %15454 while.end1078 while.body1050

BASIC BLOCK while.body1050
%15456:	getelementptr	 %14110 XXX XXX
%15457:	load	 %15456
%15458:	load	 re_max_failures
%15459:	mul	 %15458 XXX
%15460:	icmp	 %15457 %15459
%15461:	br	 %15460 cond.false1056 cond.true1055

BASIC BLOCK cond.true1055
%15462:	br	 XXX if.then1076 if.end1077

BASIC BLOCK cond.false1056
%15463:	getelementptr	 %14110 XXX XXX
%15464:	load	 %15463
%15465:	shl	 %15464 XXX
%15466:	zext	 %15465
%15467:	mul	 %15466 XXX
%15468:	alloca	 %15467
%15469:	getelementptr	 %14110 XXX XXX
%15470:	load	 %15469
%15471:	bitcast	 %15470
%15472:	getelementptr	 %14110 XXX XXX
%15473:	load	 %15472
%15474:	zext	 %15473
%15475:	mul	 %15474 XXX
%15476:	call	 %15468 %15471 %15475 XXX XXX llvm.memcpy.p0i8.p0i8.i64
%15477:	bitcast	 %15468
%15478:	getelementptr	 %14110 XXX XXX
%15479:	store	 %15477 %15478
%15480:	getelementptr	 %14110 XXX XXX
%15481:	load	 %15480
%15482:	icmp	 %15481 XXX
%15483:	br	 %15482 cond.false1070 cond.true1069

BASIC BLOCK cond.true1069
%15484:	br	 cond.end1073

BASIC BLOCK cond.false1070
%15485:	getelementptr	 %14110 XXX XXX
%15486:	load	 %15485
%15487:	shl	 %15486 XXX
%15488:	store	 %15487 %15485
%15489:	br	 cond.end1073

BASIC BLOCK cond.end1073
%15490:	phi	 XXX XXX
%15491:	icmp	 %15490 XXX
%15492:	br	 %15491 if.then1076 if.end1077

BASIC BLOCK if.then1076
%15493:	br	 return

BASIC BLOCK if.end1077
%15494:	br	 while.cond1039

BASIC BLOCK while.end1078
%15495:	br	 for.cond1079

BASIC BLOCK for.cond1079
%15496:	phi	 %15287 %15537
%15497:	icmp	 %15496 %15286
%15498:	br	 %15497 for.end1104 for.body1082

BASIC BLOCK for.body1082
%15499:	getelementptr	 %14225 %15496
%15500:	load	 %15499
%15501:	getelementptr	 %14110 XXX XXX
%15502:	load	 %15501
%15503:	add	 %15502 XXX
%15504:	store	 %15503 %15501
%15505:	zext	 %15502
%15506:	getelementptr	 %14110 XXX XXX
%15507:	load	 %15506
%15508:	getelementptr	 %15507 %15505
%15509:	bitcast	 %15508
%15510:	store	 %15500 %15509
%15511:	getelementptr	 %14224 %15496
%15512:	load	 %15511
%15513:	getelementptr	 %14110 XXX XXX
%15514:	load	 %15513
%15515:	add	 %15514 XXX
%15516:	store	 %15515 %15513
%15517:	zext	 %15514
%15518:	getelementptr	 %14110 XXX XXX
%15519:	load	 %15518
%15520:	getelementptr	 %15519 %15517
%15521:	bitcast	 %15520
%15522:	store	 %15512 %15521
%15523:	getelementptr	 %14110 XXX XXX
%15524:	load	 %15523
%15525:	add	 %15524 XXX
%15526:	store	 %15525 %15523
%15527:	zext	 %15524
%15528:	getelementptr	 %14110 XXX XXX
%15529:	load	 %15528
%15530:	getelementptr	 %15529 %15527
%15531:	getelementptr	 %14221 %15496
%15532:	bitcast	 %15531
%15533:	bitcast	 %15530
%15534:	bitcast	 %15532
%15535:	call	 %15533 %15534 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%15536:	br	 for.inc1102

BASIC BLOCK for.inc1102
%15537:	add	 %15496 XXX
%15538:	br	 for.cond1079

BASIC BLOCK for.end1104
%15539:	trunc	 %15287
%15540:	getelementptr	 %14110 XXX XXX
%15541:	load	 %15540
%15542:	add	 %15541 XXX
%15543:	store	 %15542 %15540
%15544:	zext	 %15541
%15545:	getelementptr	 %14110 XXX XXX
%15546:	load	 %15545
%15547:	getelementptr	 %15546 %15544
%15548:	bitcast	 %15547
%15549:	store	 %15539 %15548
%15550:	trunc	 %15286
%15551:	getelementptr	 %14110 XXX XXX
%15552:	load	 %15551
%15553:	add	 %15552 XXX
%15554:	store	 %15553 %15551
%15555:	zext	 %15552
%15556:	getelementptr	 %14110 XXX XXX
%15557:	load	 %15556
%15558:	getelementptr	 %15557 %15555
%15559:	bitcast	 %15558
%15560:	store	 %15550 %15559
%15561:	load	 %14109
%15562:	sext	 %15436
%15563:	getelementptr	 %15561 %15562
%15564:	getelementptr	 %14110 XXX XXX
%15565:	load	 %15564
%15566:	add	 %15565 XXX
%15567:	store	 %15566 %15564
%15568:	zext	 %15565
%15569:	getelementptr	 %14110 XXX XXX
%15570:	load	 %15569
%15571:	getelementptr	 %15570 %15568
%15572:	bitcast	 %15571
%15573:	store	 %15563 %15572
%15574:	getelementptr	 %14110 XXX XXX
%15575:	load	 %15574
%15576:	add	 %15575 XXX
%15577:	store	 %15576 %15574
%15578:	zext	 %15575
%15579:	getelementptr	 %14110 XXX XXX
%15580:	load	 %15579
%15581:	getelementptr	 %15580 %15578
%15582:	bitcast	 %15581
%15583:	store	 %14360 %15582
%15584:	br	 do.end1133

BASIC BLOCK do.end1133
%15585:	br	 fail

BASIC BLOCK if.end1134
%15586:	br	 if.end1135

BASIC BLOCK if.end1135
%15587:	getelementptr	 %14846 XXX
%15588:	br	 sw.epilog2661

BASIC BLOCK sw.bb1137
%15589:	getelementptr	 %14846 XXX
%15590:	load	 %14846
%15591:	zext	 %15590
%15592:	sext	 %15591
%15593:	getelementptr	 %14225 %15592
%15594:	load	 %15593
%15595:	icmp	 %15594 reg_unset_dummy
%15596:	br	 %15595 lor.lhs.false1144 if.then1149

BASIC BLOCK lor.lhs.false1144
%15597:	sext	 %15591
%15598:	getelementptr	 %14224 %15597
%15599:	load	 %15598
%15600:	icmp	 %15599 reg_unset_dummy
%15601:	br	 %15600 if.end1150 if.then1149

BASIC BLOCK if.then1149
%15602:	br	 fail

BASIC BLOCK if.end1150
%15603:	sext	 %15591
%15604:	getelementptr	 %14225 %15603
%15605:	load	 %15604
%15606:	icmp	 %14317 XXX
%15607:	br	 %15606 land.end1166 land.lhs.true1154

BASIC BLOCK land.lhs.true1154
%15608:	sext	 %15591
%15609:	getelementptr	 %14225 %15608
%15610:	load	 %15609
%15611:	icmp	 %14318 %15610
%15612:	br	 %15611 land.end1166 land.rhs1159

BASIC BLOCK land.rhs1159
%15613:	sext	 %15591
%15614:	getelementptr	 %14225 %15613
%15615:	load	 %15614
%15616:	sext	 %14317
%15617:	getelementptr	 %14318 %15616
%15618:	icmp	 %15615 %15617
%15619:	br	 land.end1166

BASIC BLOCK land.end1166
%15620:	phi	 XXX XXX %15618
%15621:	zext	 %15620
%15622:	icmp	 %14317 XXX
%15623:	br	 %15622 land.end1181 land.lhs.true1169

BASIC BLOCK land.lhs.true1169
%15624:	sext	 %15591
%15625:	getelementptr	 %14224 %15624
%15626:	load	 %15625
%15627:	icmp	 %14318 %15626
%15628:	br	 %15627 land.end1181 land.rhs1174

BASIC BLOCK land.rhs1174
%15629:	sext	 %15591
%15630:	getelementptr	 %14224 %15629
%15631:	load	 %15630
%15632:	sext	 %14317
%15633:	getelementptr	 %14318 %15632
%15634:	icmp	 %15631 %15633
%15635:	br	 land.end1181

BASIC BLOCK land.end1181
%15636:	phi	 XXX XXX %15634
%15637:	zext	 %15636
%15638:	icmp	 %15621 %15637
%15639:	br	 %15638 cond.false1188 cond.true1185

BASIC BLOCK cond.true1185
%15640:	sext	 %15591
%15641:	getelementptr	 %14224 %15640
%15642:	load	 %15641
%15643:	br	 cond.end1189

BASIC BLOCK cond.false1188
%15644:	br	 cond.end1189

BASIC BLOCK cond.end1189
%15645:	phi	 %15642 %14335
%15646:	br	 for.cond1191

BASIC BLOCK for.cond1191
%15647:	phi	 %15645 %15653
%15648:	phi	 %15605 %15711
%15649:	phi	 %14352 %15737
%15650:	phi	 %14359 %15674
%15651:	phi	 %14360 %15709
%15652:	br	 while.cond1192

BASIC BLOCK while.cond1192
%15653:	phi	 %15647 %15668
%15654:	phi	 %15648 %14316
%15655:	icmp	 %15654 %15653
%15656:	br	 %15655 while.end1208 while.body1195

BASIC BLOCK while.body1195
%15657:	icmp	 %15653 %14334
%15658:	br	 %15657 if.end1199 if.then1198

BASIC BLOCK if.then1198
%15659:	br	 while.end1208

BASIC BLOCK if.end1199
%15660:	sext	 %15591
%15661:	getelementptr	 %14224 %15660
%15662:	load	 %15661
%15663:	icmp	 %15653 %15662
%15664:	br	 %15663 if.end1205 if.then1204

BASIC BLOCK if.then1204
%15665:	br	 while.end1208

BASIC BLOCK if.end1205
%15666:	sext	 %15591
%15667:	getelementptr	 %14224 %15666
%15668:	load	 %15667
%15669:	br	 while.cond1192

BASIC BLOCK while.end1208
%15670:	icmp	 %15654 %15653
%15671:	br	 %15670 if.end1212 if.then1211

BASIC BLOCK if.then1211
%15672:	br	 for.end1276

BASIC BLOCK if.end1212
%15673:	br	 while.cond1213

BASIC BLOCK while.cond1213
%15674:	phi	 %15650 %14334
%15675:	phi	 %15651 %14316
%15676:	icmp	 %15675 %15674
%15677:	br	 %15676 while.end1221 while.body1216

BASIC BLOCK while.body1216
%15678:	icmp	 %15674 %14334
%15679:	br	 %15678 if.end1220 if.then1219

BASIC BLOCK if.then1219
%15680:	br	 fail

BASIC BLOCK if.end1220
%15681:	br	 while.cond1213

BASIC BLOCK while.end1221
%15682:	ptrtoint	 %15674
%15683:	ptrtoint	 %15675
%15684:	sub	 %15682 %15683
%15685:	trunc	 %15684
%15686:	sext	 %15685
%15687:	ptrtoint	 %15653
%15688:	ptrtoint	 %15654
%15689:	sub	 %15687 %15688
%15690:	icmp	 %15686 %15689
%15691:	br	 %15690 if.end1237 if.then1232

BASIC BLOCK if.then1232
%15692:	ptrtoint	 %15653
%15693:	ptrtoint	 %15654
%15694:	sub	 %15692 %15693
%15695:	trunc	 %15694
%15696:	br	 if.end1237

BASIC BLOCK if.end1237
%15697:	phi	 %15695 %15685
%15698:	icmp	 %14117 XXX
%15699:	br	 %15698 cond.false1242 cond.true1239

BASIC BLOCK cond.true1239
%15700:	call	 %15675 %15654 %15697 %14117 bcmp_translate
%15701:	icmp	 %15700 XXX
%15702:	br	 %15701 if.end1247 if.then1246

BASIC BLOCK cond.false1242
%15703:	sext	 %15697
%15704:	call	 %15675 %15654 %15703 memcmp
%15705:	icmp	 %15704 XXX
%15706:	br	 %15705 if.end1247 if.then1246

BASIC BLOCK if.then1246
%15707:	br	 fail

BASIC BLOCK if.end1247
%15708:	sext	 %15697
%15709:	getelementptr	 %15675 %15708
%15710:	sext	 %15697
%15711:	getelementptr	 %15654 %15710
%15712:	br	 do.body1252

BASIC BLOCK do.body1252
%15713:	icmp	 %15649 XXX
%15714:	br	 %15713 if.then1254 if.end1273

BASIC BLOCK if.then1254
%15715:	br	 for.cond1256

BASIC BLOCK for.cond1256
%15716:	phi	 %14356 %15734
%15717:	icmp	 %15716 %14355
%15718:	br	 %15717 for.end1272 for.body1259

BASIC BLOCK for.body1259
%15719:	getelementptr	 %14221 %15716
%15720:	bitcast	 %15719
%15721:	bitcast	 %15720
%15722:	load	 %15721
%15723:	and	 %15722 XXX
%15724:	or	 %15723 XXX
%15725:	store	 %15724 %15721
%15726:	getelementptr	 %14221 %15716
%15727:	bitcast	 %15726
%15728:	bitcast	 %15727
%15729:	load	 %15728
%15730:	and	 %15729 XXX
%15731:	or	 %15730 XXX
%15732:	store	 %15731 %15728
%15733:	br	 for.inc1270

BASIC BLOCK for.inc1270
%15734:	add	 %15716 XXX
%15735:	br	 for.cond1256

BASIC BLOCK for.end1272
%15736:	br	 if.end1273

BASIC BLOCK if.end1273
%15737:	phi	 %15649 XXX
%15738:	br	 do.end1275

BASIC BLOCK do.end1275
%15739:	br	 for.cond1191

BASIC BLOCK for.end1276
%15740:	br	 sw.epilog2661

BASIC BLOCK sw.bb1277
%15741:	icmp	 %14317 XXX
%15742:	br	 %15741 cond.false1280 cond.true1279

BASIC BLOCK cond.true1279
%15743:	br	 cond.end1281

BASIC BLOCK cond.false1280
%15744:	br	 cond.end1281

BASIC BLOCK cond.end1281
%15745:	phi	 %14318 %14316
%15746:	icmp	 %14360 %15745
%15747:	br	 %15746 lor.lhs.false1285 if.then1287

BASIC BLOCK lor.lhs.false1285
%15748:	icmp	 %14315 XXX
%15749:	br	 %15748 if.then1287 if.else1295

BASIC BLOCK if.then1287
%15750:	getelementptr	 bufp XXX XXX
%15751:	load	 %15750
%15752:	lshr	 %15751 XXX
%15753:	and	 %15752 XXX
%15754:	zext	 %15753
%15755:	icmp	 %15754 XXX
%15756:	br	 %15755 if.then1293 if.end1294

BASIC BLOCK if.then1293
%15757:	br	 sw.epilog2661

BASIC BLOCK if.end1294
%15758:	br	 if.end1307

BASIC BLOCK if.else1295
%15759:	getelementptr	 %14360 XXX
%15760:	load	 %15759
%15761:	sext	 %15760
%15762:	icmp	 %15761 XXX
%15763:	br	 %15762 if.end1306 land.lhs.true1300

BASIC BLOCK land.lhs.true1300
%15764:	getelementptr	 bufp XXX XXX
%15765:	load	 %15764
%15766:	lshr	 %15765 XXX
%15767:	zext	 %15766
%15768:	icmp	 %15767 XXX
%15769:	br	 %15768 if.end1306 if.then1305

BASIC BLOCK if.then1305
%15770:	br	 sw.epilog2661

BASIC BLOCK if.end1306
%15771:	br	 if.end1307

BASIC BLOCK if.end1307
%15772:	br	 fail

BASIC BLOCK sw.bb1308
%15773:	icmp	 %14360 %14322
%15774:	br	 %15773 if.else1319 if.then1311

BASIC BLOCK if.then1311
%15775:	getelementptr	 bufp XXX XXX
%15776:	load	 %15775
%15777:	lshr	 %15776 XXX
%15778:	and	 %15777 XXX
%15779:	zext	 %15778
%15780:	icmp	 %15779 XXX
%15781:	br	 %15780 if.then1317 if.end1318

BASIC BLOCK if.then1317
%15782:	br	 sw.epilog2661

BASIC BLOCK if.end1318
%15783:	br	 if.end1338

BASIC BLOCK if.else1319
%15784:	icmp	 %14360 %14320
%15785:	br	 %15784 cond.false1324 cond.true1322

BASIC BLOCK cond.true1322
%15786:	load	 %14316
%15787:	sext	 %15786
%15788:	br	 cond.end1326

BASIC BLOCK cond.false1324
%15789:	load	 %14360
%15790:	sext	 %15789
%15791:	br	 cond.end1326

BASIC BLOCK cond.end1326
%15792:	phi	 %15787 %15790
%15793:	icmp	 %15792 XXX
%15794:	br	 %15793 if.end1337 land.lhs.true1330

BASIC BLOCK land.lhs.true1330
%15795:	getelementptr	 bufp XXX XXX
%15796:	load	 %15795
%15797:	lshr	 %15796 XXX
%15798:	zext	 %15797
%15799:	icmp	 %15798 XXX
%15800:	br	 %15799 if.end1337 if.then1336

BASIC BLOCK if.then1336
%15801:	br	 sw.epilog2661

BASIC BLOCK if.end1337
%15802:	br	 if.end1338

BASIC BLOCK if.end1338
%15803:	br	 fail

BASIC BLOCK sw.bb1339
%15804:	icmp	 %14317 XXX
%15805:	br	 %15804 cond.false1342 cond.true1341

BASIC BLOCK cond.true1341
%15806:	br	 cond.end1343

BASIC BLOCK cond.false1342
%15807:	br	 cond.end1343

BASIC BLOCK cond.end1343
%15808:	phi	 %14318 %14316
%15809:	icmp	 %14360 %15808
%15810:	br	 %15809 lor.lhs.false1347 if.then1349

BASIC BLOCK lor.lhs.false1347
%15811:	icmp	 %14315 XXX
%15812:	br	 %15811 if.then1349 if.end1350

BASIC BLOCK if.then1349
%15813:	br	 sw.epilog2661

BASIC BLOCK if.end1350
%15814:	br	 fail

BASIC BLOCK sw.bb1351
%15815:	icmp	 %14360 %14322
%15816:	br	 %15815 if.end1355 if.then1354

BASIC BLOCK if.then1354
%15817:	br	 sw.epilog2661

BASIC BLOCK if.end1355
%15818:	br	 fail

BASIC BLOCK sw.bb1356
%15819:	br	 do.body1357

BASIC BLOCK do.body1357
%15820:	br	 do.body1358

BASIC BLOCK do.body1358
%15821:	load	 %14846
%15822:	zext	 %15821
%15823:	and	 %15822 XXX
%15824:	getelementptr	 %14846 XXX
%15825:	load	 %15824
%15826:	sext	 %15825
%15827:	shl	 %15826 XXX
%15828:	add	 %15823 %15827
%15829:	br	 do.end1366

BASIC BLOCK do.end1366
%15830:	getelementptr	 %14846 XXX
%15831:	br	 do.end1369

BASIC BLOCK do.end1369
%15832:	br	 do.body1370

BASIC BLOCK do.body1370
%15833:	br	 while.cond1373

BASIC BLOCK while.cond1373
%15834:	getelementptr	 %14110 XXX XXX
%15835:	load	 %15834
%15836:	getelementptr	 %14110 XXX XXX
%15837:	load	 %15836
%15838:	sub	 %15835 %15837
%15839:	zext	 %15838
%15840:	sub	 %14355 %14356
%15841:	add	 %15840 XXX
%15842:	mul	 %15841 XXX
%15843:	add	 %15842 XXX
%15844:	icmp	 %15839 %15843
%15845:	br	 %15844 while.end1412 while.body1384

BASIC BLOCK while.body1384
%15846:	getelementptr	 %14110 XXX XXX
%15847:	load	 %15846
%15848:	load	 re_max_failures
%15849:	mul	 %15848 XXX
%15850:	icmp	 %15847 %15849
%15851:	br	 %15850 cond.false1390 cond.true1389

BASIC BLOCK cond.true1389
%15852:	br	 XXX if.then1410 if.end1411

BASIC BLOCK cond.false1390
%15853:	getelementptr	 %14110 XXX XXX
%15854:	load	 %15853
%15855:	shl	 %15854 XXX
%15856:	zext	 %15855
%15857:	mul	 %15856 XXX
%15858:	alloca	 %15857
%15859:	getelementptr	 %14110 XXX XXX
%15860:	load	 %15859
%15861:	bitcast	 %15860
%15862:	getelementptr	 %14110 XXX XXX
%15863:	load	 %15862
%15864:	zext	 %15863
%15865:	mul	 %15864 XXX
%15866:	call	 %15858 %15861 %15865 XXX XXX llvm.memcpy.p0i8.p0i8.i64
%15867:	bitcast	 %15858
%15868:	getelementptr	 %14110 XXX XXX
%15869:	store	 %15867 %15868
%15870:	getelementptr	 %14110 XXX XXX
%15871:	load	 %15870
%15872:	icmp	 %15871 XXX
%15873:	br	 %15872 cond.false1404 cond.true1403

BASIC BLOCK cond.true1403
%15874:	br	 cond.end1407

BASIC BLOCK cond.false1404
%15875:	getelementptr	 %14110 XXX XXX
%15876:	load	 %15875
%15877:	shl	 %15876 XXX
%15878:	store	 %15877 %15875
%15879:	br	 cond.end1407

BASIC BLOCK cond.end1407
%15880:	phi	 XXX XXX
%15881:	icmp	 %15880 XXX
%15882:	br	 %15881 if.then1410 if.end1411

BASIC BLOCK if.then1410
%15883:	br	 return

BASIC BLOCK if.end1411
%15884:	br	 while.cond1373

BASIC BLOCK while.end1412
%15885:	br	 for.cond1413

BASIC BLOCK for.cond1413
%15886:	phi	 %14356 %15927
%15887:	icmp	 %15886 %14355
%15888:	br	 %15887 for.end1440 for.body1416

BASIC BLOCK for.body1416
%15889:	getelementptr	 %14225 %15886
%15890:	load	 %15889
%15891:	getelementptr	 %14110 XXX XXX
%15892:	load	 %15891
%15893:	add	 %15892 XXX
%15894:	store	 %15893 %15891
%15895:	zext	 %15892
%15896:	getelementptr	 %14110 XXX XXX
%15897:	load	 %15896
%15898:	getelementptr	 %15897 %15895
%15899:	bitcast	 %15898
%15900:	store	 %15890 %15899
%15901:	getelementptr	 %14224 %15886
%15902:	load	 %15901
%15903:	getelementptr	 %14110 XXX XXX
%15904:	load	 %15903
%15905:	add	 %15904 XXX
%15906:	store	 %15905 %15903
%15907:	zext	 %15904
%15908:	getelementptr	 %14110 XXX XXX
%15909:	load	 %15908
%15910:	getelementptr	 %15909 %15907
%15911:	bitcast	 %15910
%15912:	store	 %15902 %15911
%15913:	getelementptr	 %14110 XXX XXX
%15914:	load	 %15913
%15915:	add	 %15914 XXX
%15916:	store	 %15915 %15913
%15917:	zext	 %15914
%15918:	getelementptr	 %14110 XXX XXX
%15919:	load	 %15918
%15920:	getelementptr	 %15919 %15917
%15921:	getelementptr	 %14221 %15886
%15922:	bitcast	 %15921
%15923:	bitcast	 %15920
%15924:	bitcast	 %15922
%15925:	call	 %15923 %15924 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%15926:	br	 for.inc1438

BASIC BLOCK for.inc1438
%15927:	add	 %15886 XXX
%15928:	br	 for.cond1413

BASIC BLOCK for.end1440
%15929:	trunc	 %14356
%15930:	getelementptr	 %14110 XXX XXX
%15931:	load	 %15930
%15932:	add	 %15931 XXX
%15933:	store	 %15932 %15930
%15934:	zext	 %15931
%15935:	getelementptr	 %14110 XXX XXX
%15936:	load	 %15935
%15937:	getelementptr	 %15936 %15934
%15938:	bitcast	 %15937
%15939:	store	 %15929 %15938
%15940:	trunc	 %14355
%15941:	getelementptr	 %14110 XXX XXX
%15942:	load	 %15941
%15943:	add	 %15942 XXX
%15944:	store	 %15943 %15941
%15945:	zext	 %15942
%15946:	getelementptr	 %14110 XXX XXX
%15947:	load	 %15946
%15948:	getelementptr	 %15947 %15945
%15949:	bitcast	 %15948
%15950:	store	 %15940 %15949
%15951:	sext	 %15828
%15952:	getelementptr	 %15830 %15951
%15953:	getelementptr	 %14110 XXX XXX
%15954:	load	 %15953
%15955:	add	 %15954 XXX
%15956:	store	 %15955 %15953
%15957:	zext	 %15954
%15958:	getelementptr	 %14110 XXX XXX
%15959:	load	 %15958
%15960:	getelementptr	 %15959 %15957
%15961:	bitcast	 %15960
%15962:	store	 %15952 %15961
%15963:	getelementptr	 %14110 XXX XXX
%15964:	load	 %15963
%15965:	add	 %15964 XXX
%15966:	store	 %15965 %15963
%15967:	zext	 %15964
%15968:	getelementptr	 %14110 XXX XXX
%15969:	load	 %15968
%15970:	getelementptr	 %15969 %15967
%15971:	bitcast	 %15970
%15972:	store	 XXX %15971
%15973:	br	 do.end1470

BASIC BLOCK do.end1470
%15974:	br	 sw.epilog2661

BASIC BLOCK sw.bb1471
%15975:	br	 on_failure

BASIC BLOCK on_failure
%15976:	br	 do.body1472

BASIC BLOCK do.body1472
%15977:	br	 do.body1473

BASIC BLOCK do.body1473
%15978:	load	 %14846
%15979:	zext	 %15978
%15980:	and	 %15979 XXX
%15981:	getelementptr	 %14846 XXX
%15982:	load	 %15981
%15983:	sext	 %15982
%15984:	shl	 %15983 XXX
%15985:	add	 %15980 %15984
%15986:	br	 do.end1481

BASIC BLOCK do.end1481
%15987:	getelementptr	 %14846 XXX
%15988:	br	 do.end1484

BASIC BLOCK do.end1484
%15989:	store	 %15987 %14109
%15990:	br	 while.cond1485

BASIC BLOCK while.cond1485
%15991:	load	 %14109
%15992:	icmp	 %15991 %14115
%15993:	br	 %15992 land.end1492 land.rhs1488

BASIC BLOCK land.rhs1488
%15994:	load	 %14109
%15995:	load	 %15994
%15996:	zext	 %15995
%15997:	icmp	 %15996 XXX
%15998:	br	 land.end1492

BASIC BLOCK land.end1492
%15999:	phi	 XXX %15997
%16000:	br	 %15999 while.end1496 while.body1494

BASIC BLOCK while.body1494
%16001:	load	 %14109
%16002:	getelementptr	 %16001 XXX
%16003:	store	 %16002 %14109
%16004:	br	 while.cond1485

BASIC BLOCK while.end1496
%16005:	load	 %14109
%16006:	icmp	 %16005 %14115
%16007:	br	 %16006 if.end1516 land.lhs.true1499

BASIC BLOCK land.lhs.true1499
%16008:	load	 %14109
%16009:	load	 %16008
%16010:	zext	 %16009
%16011:	icmp	 %16010 XXX
%16012:	br	 %16011 if.end1516 if.then1503

BASIC BLOCK if.then1503
%16013:	load	 %14109
%16014:	getelementptr	 %16013 XXX
%16015:	load	 %16014
%16016:	zext	 %16015
%16017:	load	 %14109
%16018:	getelementptr	 %16017 XXX
%16019:	load	 %16018
%16020:	zext	 %16019
%16021:	add	 %16016 %16020
%16022:	sext	 %16021
%16023:	icmp	 %14356 XXX
%16024:	br	 %16023 if.end1515 if.then1512

BASIC BLOCK if.then1512
%16025:	load	 %14109
%16026:	getelementptr	 %16025 XXX
%16027:	load	 %16026
%16028:	zext	 %16027
%16029:	br	 if.end1515

BASIC BLOCK if.end1515
%16030:	phi	 %16028 %14356
%16031:	br	 if.end1516

BASIC BLOCK if.end1516
%16032:	phi	 %16022 %14355 %14355
%16033:	phi	 %16030 %14356 %14356
%16034:	br	 do.body1517

BASIC BLOCK do.body1517
%16035:	br	 while.cond1520

BASIC BLOCK while.cond1520
%16036:	getelementptr	 %14110 XXX XXX
%16037:	load	 %16036
%16038:	getelementptr	 %14110 XXX XXX
%16039:	load	 %16038
%16040:	sub	 %16037 %16039
%16041:	zext	 %16040
%16042:	sub	 %16032 %16033
%16043:	add	 %16042 XXX
%16044:	mul	 %16043 XXX
%16045:	add	 %16044 XXX
%16046:	icmp	 %16041 %16045
%16047:	br	 %16046 while.end1559 while.body1531

BASIC BLOCK while.body1531
%16048:	getelementptr	 %14110 XXX XXX
%16049:	load	 %16048
%16050:	load	 re_max_failures
%16051:	mul	 %16050 XXX
%16052:	icmp	 %16049 %16051
%16053:	br	 %16052 cond.false1537 cond.true1536

BASIC BLOCK cond.true1536
%16054:	br	 XXX if.then1557 if.end1558

BASIC BLOCK cond.false1537
%16055:	getelementptr	 %14110 XXX XXX
%16056:	load	 %16055
%16057:	shl	 %16056 XXX
%16058:	zext	 %16057
%16059:	mul	 %16058 XXX
%16060:	alloca	 %16059
%16061:	getelementptr	 %14110 XXX XXX
%16062:	load	 %16061
%16063:	bitcast	 %16062
%16064:	getelementptr	 %14110 XXX XXX
%16065:	load	 %16064
%16066:	zext	 %16065
%16067:	mul	 %16066 XXX
%16068:	call	 %16060 %16063 %16067 XXX XXX llvm.memcpy.p0i8.p0i8.i64
%16069:	bitcast	 %16060
%16070:	getelementptr	 %14110 XXX XXX
%16071:	store	 %16069 %16070
%16072:	getelementptr	 %14110 XXX XXX
%16073:	load	 %16072
%16074:	icmp	 %16073 XXX
%16075:	br	 %16074 cond.false1551 cond.true1550

BASIC BLOCK cond.true1550
%16076:	br	 cond.end1554

BASIC BLOCK cond.false1551
%16077:	getelementptr	 %14110 XXX XXX
%16078:	load	 %16077
%16079:	shl	 %16078 XXX
%16080:	store	 %16079 %16077
%16081:	br	 cond.end1554

BASIC BLOCK cond.end1554
%16082:	phi	 XXX XXX
%16083:	icmp	 %16082 XXX
%16084:	br	 %16083 if.then1557 if.end1558

BASIC BLOCK if.then1557
%16085:	br	 return

BASIC BLOCK if.end1558
%16086:	br	 while.cond1520

BASIC BLOCK while.end1559
%16087:	br	 for.cond1560

BASIC BLOCK for.cond1560
%16088:	phi	 %16033 %16129
%16089:	icmp	 %16088 %16032
%16090:	br	 %16089 for.end1587 for.body1563

BASIC BLOCK for.body1563
%16091:	getelementptr	 %14225 %16088
%16092:	load	 %16091
%16093:	getelementptr	 %14110 XXX XXX
%16094:	load	 %16093
%16095:	add	 %16094 XXX
%16096:	store	 %16095 %16093
%16097:	zext	 %16094
%16098:	getelementptr	 %14110 XXX XXX
%16099:	load	 %16098
%16100:	getelementptr	 %16099 %16097
%16101:	bitcast	 %16100
%16102:	store	 %16092 %16101
%16103:	getelementptr	 %14224 %16088
%16104:	load	 %16103
%16105:	getelementptr	 %14110 XXX XXX
%16106:	load	 %16105
%16107:	add	 %16106 XXX
%16108:	store	 %16107 %16105
%16109:	zext	 %16106
%16110:	getelementptr	 %14110 XXX XXX
%16111:	load	 %16110
%16112:	getelementptr	 %16111 %16109
%16113:	bitcast	 %16112
%16114:	store	 %16104 %16113
%16115:	getelementptr	 %14110 XXX XXX
%16116:	load	 %16115
%16117:	add	 %16116 XXX
%16118:	store	 %16117 %16115
%16119:	zext	 %16116
%16120:	getelementptr	 %14110 XXX XXX
%16121:	load	 %16120
%16122:	getelementptr	 %16121 %16119
%16123:	getelementptr	 %14221 %16088
%16124:	bitcast	 %16123
%16125:	bitcast	 %16122
%16126:	bitcast	 %16124
%16127:	call	 %16125 %16126 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%16128:	br	 for.inc1585

BASIC BLOCK for.inc1585
%16129:	add	 %16088 XXX
%16130:	br	 for.cond1560

BASIC BLOCK for.end1587
%16131:	trunc	 %16033
%16132:	getelementptr	 %14110 XXX XXX
%16133:	load	 %16132
%16134:	add	 %16133 XXX
%16135:	store	 %16134 %16132
%16136:	zext	 %16133
%16137:	getelementptr	 %14110 XXX XXX
%16138:	load	 %16137
%16139:	getelementptr	 %16138 %16136
%16140:	bitcast	 %16139
%16141:	store	 %16131 %16140
%16142:	trunc	 %16032
%16143:	getelementptr	 %14110 XXX XXX
%16144:	load	 %16143
%16145:	add	 %16144 XXX
%16146:	store	 %16145 %16143
%16147:	zext	 %16144
%16148:	getelementptr	 %14110 XXX XXX
%16149:	load	 %16148
%16150:	getelementptr	 %16149 %16147
%16151:	bitcast	 %16150
%16152:	store	 %16142 %16151
%16153:	sext	 %15985
%16154:	getelementptr	 %15987 %16153
%16155:	getelementptr	 %14110 XXX XXX
%16156:	load	 %16155
%16157:	add	 %16156 XXX
%16158:	store	 %16157 %16155
%16159:	zext	 %16156
%16160:	getelementptr	 %14110 XXX XXX
%16161:	load	 %16160
%16162:	getelementptr	 %16161 %16159
%16163:	bitcast	 %16162
%16164:	store	 %16154 %16163
%16165:	getelementptr	 %14110 XXX XXX
%16166:	load	 %16165
%16167:	add	 %16166 XXX
%16168:	store	 %16167 %16165
%16169:	zext	 %16166
%16170:	getelementptr	 %14110 XXX XXX
%16171:	load	 %16170
%16172:	getelementptr	 %16171 %16169
%16173:	bitcast	 %16172
%16174:	store	 %14360 %16173
%16175:	br	 do.end1617

BASIC BLOCK do.end1617
%16176:	br	 sw.epilog2661

BASIC BLOCK sw.bb1618
%16177:	br	 do.body1619

BASIC BLOCK do.body1619
%16178:	br	 do.body1620

BASIC BLOCK do.body1620
%16179:	load	 %14846
%16180:	zext	 %16179
%16181:	and	 %16180 XXX
%16182:	getelementptr	 %14846 XXX
%16183:	load	 %16182
%16184:	sext	 %16183
%16185:	shl	 %16184 XXX
%16186:	add	 %16181 %16185
%16187:	br	 do.end1628

BASIC BLOCK do.end1628
%16188:	getelementptr	 %14846 XXX
%16189:	br	 do.end1631

BASIC BLOCK do.end1631
%16190:	br	 while.body1633

BASIC BLOCK while.body1633
%16191:	phi	 %16188 %16216
%16192:	getelementptr	 %16191 XXX
%16193:	icmp	 %16192 %14115
%16194:	br	 %16193 if.else1647 land.lhs.true1637

BASIC BLOCK land.lhs.true1637
%16195:	load	 %16191
%16196:	zext	 %16195
%16197:	icmp	 %16196 XXX
%16198:	br	 %16197 lor.lhs.false1641 if.then1645

BASIC BLOCK lor.lhs.false1641
%16199:	load	 %16191
%16200:	zext	 %16199
%16201:	icmp	 %16200 XXX
%16202:	br	 %16201 if.else1647 if.then1645

BASIC BLOCK if.then1645
%16203:	getelementptr	 %16191 XXX
%16204:	br	 if.end1659

BASIC BLOCK if.else1647
%16205:	getelementptr	 %16191 XXX
%16206:	icmp	 %16205 %14115
%16207:	br	 %16206 if.else1657 land.lhs.true1651

BASIC BLOCK land.lhs.true1651
%16208:	load	 %16191
%16209:	zext	 %16208
%16210:	icmp	 %16209 XXX
%16211:	br	 %16210 if.else1657 if.then1655

BASIC BLOCK if.then1655
%16212:	getelementptr	 %16191 XXX
%16213:	br	 if.end1658

BASIC BLOCK if.else1657
%16214:	br	 while.end1660

BASIC BLOCK if.end1658
%16215:	br	 if.end1659

BASIC BLOCK if.end1659
%16216:	phi	 %16203 %16212
%16217:	br	 while.body1633

BASIC BLOCK while.end1660
%16218:	sext	 %16186
%16219:	getelementptr	 %16188 %16218
%16220:	store	 %16219 %14109
%16221:	icmp	 %16191 %14115
%16222:	br	 %16221 if.else1667 if.then1665

BASIC BLOCK if.then1665
%16223:	getelementptr	 %16188 XXX
%16224:	store	 XXX %16223
%16225:	br	 if.end1885

BASIC BLOCK if.else1667
%16226:	load	 %16191
%16227:	zext	 %16226
%16228:	icmp	 %16227 XXX
%16229:	br	 %16228 lor.lhs.false1671 if.then1681

BASIC BLOCK lor.lhs.false1671
%16230:	getelementptr	 bufp XXX XXX
%16231:	load	 %16230
%16232:	lshr	 %16231 XXX
%16233:	zext	 %16232
%16234:	icmp	 %16233 XXX
%16235:	br	 %16234 if.else1752 land.lhs.true1677

BASIC BLOCK land.lhs.true1677
%16236:	load	 %16191
%16237:	zext	 %16236
%16238:	icmp	 %16237 XXX
%16239:	br	 %16238 if.else1752 if.then1681

BASIC BLOCK if.then1681
%16240:	load	 %16191
%16241:	zext	 %16240
%16242:	icmp	 %16241 XXX
%16243:	br	 %16242 cond.false1687 cond.true1686

BASIC BLOCK cond.true1686
%16244:	br	 cond.end1690

BASIC BLOCK cond.false1687
%16245:	getelementptr	 %16191 XXX
%16246:	load	 %16245
%16247:	zext	 %16246
%16248:	br	 cond.end1690

BASIC BLOCK cond.end1690
%16249:	phi	 XXX %16247
%16250:	trunc	 %16249
%16251:	load	 %14109
%16252:	getelementptr	 %16251 XXX
%16253:	load	 %16252
%16254:	zext	 %16253
%16255:	icmp	 %16254 XXX
%16256:	br	 %16255 if.else1705 land.lhs.true1697

BASIC BLOCK land.lhs.true1697
%16257:	load	 %14109
%16258:	getelementptr	 %16257 XXX
%16259:	load	 %16258
%16260:	zext	 %16259
%16261:	zext	 %16250
%16262:	icmp	 %16260 %16261
%16263:	br	 %16262 if.else1705 if.then1703

BASIC BLOCK if.then1703
%16264:	getelementptr	 %16188 XXX
%16265:	store	 XXX %16264
%16266:	br	 if.end1751

BASIC BLOCK if.else1705
%16267:	load	 %14109
%16268:	getelementptr	 %16267 XXX
%16269:	load	 %16268
%16270:	zext	 %16269
%16271:	icmp	 %16270 XXX
%16272:	br	 %16271 lor.lhs.false1710 if.then1715

BASIC BLOCK lor.lhs.false1710
%16273:	load	 %14109
%16274:	getelementptr	 %16273 XXX
%16275:	load	 %16274
%16276:	zext	 %16275
%16277:	icmp	 %16276 XXX
%16278:	br	 %16277 if.end1750 if.then1715

BASIC BLOCK if.then1715
%16279:	load	 %14109
%16280:	getelementptr	 %16279 XXX
%16281:	load	 %16280
%16282:	zext	 %16281
%16283:	icmp	 %16282 XXX
%16284:	zext	 %16283
%16285:	zext	 %16250
%16286:	load	 %14109
%16287:	getelementptr	 %16286 XXX
%16288:	load	 %16287
%16289:	zext	 %16288
%16290:	mul	 %16289 XXX
%16291:	trunc	 %16290
%16292:	zext	 %16291
%16293:	icmp	 %16285 %16292
%16294:	br	 %16293 if.end1745 land.lhs.true1729

BASIC BLOCK land.lhs.true1729
%16295:	zext	 %16250
%16296:	sdiv	 %16295 XXX
%16297:	add	 XXX %16296
%16298:	sext	 %16297
%16299:	load	 %14109
%16300:	getelementptr	 %16299 %16298
%16301:	load	 %16300
%16302:	zext	 %16301
%16303:	zext	 %16250
%16304:	srem	 %16303 XXX
%16305:	shl	 XXX %16304
%16306:	and	 %16302 %16305
%16307:	icmp	 %16306 XXX
%16308:	br	 %16307 if.end1745 if.then1741

BASIC BLOCK if.then1741
%16309:	icmp	 %16284 XXX
%16310:	xor	 %16309 XXX
%16311:	zext	 %16310
%16312:	br	 if.end1745

BASIC BLOCK if.end1745
%16313:	phi	 %16311 %16284 %16284
%16314:	icmp	 %16313 XXX
%16315:	br	 %16314 if.then1747 if.end1749

BASIC BLOCK if.then1747
%16316:	getelementptr	 %16188 XXX
%16317:	store	 XXX %16316
%16318:	br	 if.end1749

BASIC BLOCK if.end1749
%16319:	br	 if.end1750

BASIC BLOCK if.end1750
%16320:	br	 if.end1751

BASIC BLOCK if.end1751
%16321:	br	 if.end1884

BASIC BLOCK if.else1752
%16322:	load	 %16191
%16323:	zext	 %16322
%16324:	icmp	 %16323 XXX
%16325:	br	 %16324 if.end1883 if.then1756

BASIC BLOCK if.then1756
%16326:	load	 %14109
%16327:	getelementptr	 %16326 XXX
%16328:	load	 %16327
%16329:	zext	 %16328
%16330:	icmp	 %16329 XXX
%16331:	br	 %16330 if.else1785 land.lhs.true1761

BASIC BLOCK land.lhs.true1761
%16332:	getelementptr	 %16191 XXX
%16333:	load	 %16332
%16334:	zext	 %16333
%16335:	mul	 %16334 XXX
%16336:	load	 %14109
%16337:	getelementptr	 %16336 XXX
%16338:	load	 %16337
%16339:	zext	 %16338
%16340:	icmp	 %16335 %16339
%16341:	br	 %16340 if.then1783 land.lhs.true1769

BASIC BLOCK land.lhs.true1769
%16342:	load	 %14109
%16343:	getelementptr	 %16342 XXX
%16344:	load	 %16343
%16345:	zext	 %16344
%16346:	sdiv	 %16345 XXX
%16347:	add	 XXX %16346
%16348:	sext	 %16347
%16349:	getelementptr	 %16191 %16348
%16350:	load	 %16349
%16351:	zext	 %16350
%16352:	load	 %14109
%16353:	getelementptr	 %16352 XXX
%16354:	load	 %16353
%16355:	zext	 %16354
%16356:	srem	 %16355 XXX
%16357:	shl	 XXX %16356
%16358:	and	 %16351 %16357
%16359:	icmp	 %16358 XXX
%16360:	br	 %16359 if.then1783 if.else1785

BASIC BLOCK if.then1783
%16361:	getelementptr	 %16188 XXX
%16362:	store	 XXX %16361
%16363:	br	 if.end1882

BASIC BLOCK if.else1785
%16364:	load	 %14109
%16365:	getelementptr	 %16364 XXX
%16366:	load	 %16365
%16367:	zext	 %16366
%16368:	icmp	 %16367 XXX
%16369:	br	 %16368 if.else1832 if.then1790

BASIC BLOCK if.then1790
%16370:	br	 for.cond1791

BASIC BLOCK for.cond1791
%16371:	phi	 XXX %16407
%16372:	getelementptr	 %16191 XXX
%16373:	load	 %16372
%16374:	zext	 %16373
%16375:	icmp	 %16371 %16374
%16376:	br	 %16375 for.end1824 for.body1796

BASIC BLOCK for.body1796
%16377:	add	 XXX %16371
%16378:	sext	 %16377
%16379:	getelementptr	 %16191 %16378
%16380:	load	 %16379
%16381:	zext	 %16380
%16382:	icmp	 %16381 XXX
%16383:	br	 %16382 lor.lhs.false1803 if.end1821

BASIC BLOCK lor.lhs.false1803
%16384:	load	 %14109
%16385:	getelementptr	 %16384 XXX
%16386:	load	 %16385
%16387:	zext	 %16386
%16388:	icmp	 %16371 %16387
%16389:	br	 %16388 if.then1820 land.lhs.true1808

BASIC BLOCK land.lhs.true1808
%16390:	add	 XXX %16371
%16391:	sext	 %16390
%16392:	getelementptr	 %16191 %16391
%16393:	load	 %16392
%16394:	zext	 %16393
%16395:	add	 XXX %16371
%16396:	sext	 %16395
%16397:	load	 %14109
%16398:	getelementptr	 %16397 %16396
%16399:	load	 %16398
%16400:	zext	 %16399
%16401:	xor	 %16400 XXX
%16402:	and	 %16394 %16401
%16403:	icmp	 %16402 XXX
%16404:	br	 %16403 if.then1820 if.end1821

BASIC BLOCK if.then1820
%16405:	br	 for.end1824

BASIC BLOCK if.end1821
%16406:	br	 for.inc1822

BASIC BLOCK for.inc1822
%16407:	add	 %16371 XXX
%16408:	br	 for.cond1791

BASIC BLOCK for.end1824
%16409:	getelementptr	 %16191 XXX
%16410:	load	 %16409
%16411:	zext	 %16410
%16412:	icmp	 %16371 %16411
%16413:	br	 %16412 if.end1831 if.then1829

BASIC BLOCK if.then1829
%16414:	getelementptr	 %16188 XXX
%16415:	store	 XXX %16414
%16416:	br	 if.end1831

BASIC BLOCK if.end1831
%16417:	br	 if.end1881

BASIC BLOCK if.else1832
%16418:	load	 %14109
%16419:	getelementptr	 %16418 XXX
%16420:	load	 %16419
%16421:	zext	 %16420
%16422:	icmp	 %16421 XXX
%16423:	br	 %16422 if.end1880 if.then1837

BASIC BLOCK if.then1837
%16424:	br	 for.cond1839

BASIC BLOCK for.cond1839
%16425:	phi	 XXX %16455
%16426:	getelementptr	 %16191 XXX
%16427:	load	 %16426
%16428:	zext	 %16427
%16429:	icmp	 %16425 %16428
%16430:	br	 %16429 land.end1849 land.rhs1844

BASIC BLOCK land.rhs1844
%16431:	load	 %14109
%16432:	getelementptr	 %16431 XXX
%16433:	load	 %16432
%16434:	zext	 %16433
%16435:	icmp	 %16425 %16434
%16436:	br	 land.end1849

BASIC BLOCK land.end1849
%16437:	phi	 XXX %16435
%16438:	br	 %16437 for.end1867 for.body1851

BASIC BLOCK for.body1851
%16439:	add	 XXX %16425
%16440:	sext	 %16439
%16441:	getelementptr	 %16191 %16440
%16442:	load	 %16441
%16443:	zext	 %16442
%16444:	add	 XXX %16425
%16445:	sext	 %16444
%16446:	load	 %14109
%16447:	getelementptr	 %16446 %16445
%16448:	load	 %16447
%16449:	zext	 %16448
%16450:	and	 %16443 %16449
%16451:	icmp	 %16450 XXX
%16452:	br	 %16451 if.end1864 if.then1863

BASIC BLOCK if.then1863
%16453:	br	 for.end1867

BASIC BLOCK if.end1864
%16454:	br	 for.inc1865

BASIC BLOCK for.inc1865
%16455:	add	 %16425 XXX
%16456:	br	 for.cond1839

BASIC BLOCK for.end1867
%16457:	getelementptr	 %16191 XXX
%16458:	load	 %16457
%16459:	zext	 %16458
%16460:	icmp	 %16425 %16459
%16461:	br	 %16460 lor.lhs.false1872 if.then1877

BASIC BLOCK lor.lhs.false1872
%16462:	load	 %14109
%16463:	getelementptr	 %16462 XXX
%16464:	load	 %16463
%16465:	zext	 %16464
%16466:	icmp	 %16425 %16465
%16467:	br	 %16466 if.end1879 if.then1877

BASIC BLOCK if.then1877
%16468:	getelementptr	 %16188 XXX
%16469:	store	 XXX %16468
%16470:	br	 if.end1879

BASIC BLOCK if.end1879
%16471:	br	 if.end1880

BASIC BLOCK if.end1880
%16472:	br	 if.end1881

BASIC BLOCK if.end1881
%16473:	br	 if.end1882

BASIC BLOCK if.end1882
%16474:	br	 if.end1883

BASIC BLOCK if.end1883
%16475:	br	 if.end1884

BASIC BLOCK if.end1884
%16476:	br	 if.end1885

BASIC BLOCK if.end1885
%16477:	getelementptr	 %16188 XXX
%16478:	getelementptr	 %16477 XXX
%16479:	load	 %16478
%16480:	zext	 %16479
%16481:	icmp	 %16480 XXX
%16482:	br	 %16481 if.end1893 if.then1891

BASIC BLOCK if.then1891
%16483:	getelementptr	 %16477 XXX
%16484:	store	 XXX %16483
%16485:	br	 unconditional_jump

BASIC BLOCK if.end1893
%16486:	br	 sw.bb1894

BASIC BLOCK sw.bb1894
%16487:	phi	 %14846 %16477
%16488:	getelementptr	 %14110 XXX XXX
%16489:	load	 %16488
%16490:	add	 %16489 XXX
%16491:	store	 %16490 %16488
%16492:	zext	 %16490
%16493:	getelementptr	 %14110 XXX XXX
%16494:	load	 %16493
%16495:	getelementptr	 %16494 %16492
%16496:	bitcast	 %16495
%16497:	load	 %16496
%16498:	icmp	 %16497 XXX
%16499:	br	 %16498 if.end1905 if.then1904

BASIC BLOCK if.then1904
%16500:	br	 if.end1905

BASIC BLOCK if.end1905
%16501:	getelementptr	 %14110 XXX XXX
%16502:	load	 %16501
%16503:	add	 %16502 XXX
%16504:	store	 %16503 %16501
%16505:	zext	 %16503
%16506:	getelementptr	 %14110 XXX XXX
%16507:	load	 %16506
%16508:	getelementptr	 %16507 %16505
%16509:	bitcast	 %16508
%16510:	getelementptr	 %14110 XXX XXX
%16511:	load	 %16510
%16512:	add	 %16511 XXX
%16513:	store	 %16512 %16510
%16514:	zext	 %16512
%16515:	getelementptr	 %14110 XXX XXX
%16516:	load	 %16515
%16517:	getelementptr	 %16516 %16514
%16518:	bitcast	 %16517
%16519:	load	 %16518
%16520:	sext	 %16519
%16521:	getelementptr	 %14110 XXX XXX
%16522:	load	 %16521
%16523:	add	 %16522 XXX
%16524:	store	 %16523 %16521
%16525:	zext	 %16523
%16526:	getelementptr	 %14110 XXX XXX
%16527:	load	 %16526
%16528:	getelementptr	 %16527 %16525
%16529:	bitcast	 %16528
%16530:	load	 %16529
%16531:	sext	 %16530
%16532:	br	 for.cond1926

BASIC BLOCK for.cond1926
%16533:	phi	 %16520 %16574
%16534:	icmp	 %16533 %16531
%16535:	br	 %16534 for.end1953 for.body1929

BASIC BLOCK for.body1929
%16536:	getelementptr	 %14217 %16533
%16537:	bitcast	 %16536
%16538:	getelementptr	 %14110 XXX XXX
%16539:	load	 %16538
%16540:	add	 %16539 XXX
%16541:	store	 %16540 %16538
%16542:	zext	 %16540
%16543:	getelementptr	 %14110 XXX XXX
%16544:	load	 %16543
%16545:	getelementptr	 %16544 %16542
%16546:	bitcast	 %16537
%16547:	bitcast	 %16545
%16548:	call	 %16546 %16547 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%16549:	getelementptr	 %14110 XXX XXX
%16550:	load	 %16549
%16551:	add	 %16550 XXX
%16552:	store	 %16551 %16549
%16553:	zext	 %16551
%16554:	getelementptr	 %14110 XXX XXX
%16555:	load	 %16554
%16556:	getelementptr	 %16555 %16553
%16557:	bitcast	 %16556
%16558:	load	 %16557
%16559:	getelementptr	 %14218 %16533
%16560:	store	 %16558 %16559
%16561:	getelementptr	 %14110 XXX XXX
%16562:	load	 %16561
%16563:	add	 %16562 XXX
%16564:	store	 %16563 %16561
%16565:	zext	 %16563
%16566:	getelementptr	 %14110 XXX XXX
%16567:	load	 %16566
%16568:	getelementptr	 %16567 %16565
%16569:	bitcast	 %16568
%16570:	load	 %16569
%16571:	getelementptr	 %14218 %16533
%16572:	store	 %16570 %16571
%16573:	br	 for.inc1951

BASIC BLOCK for.inc1951
%16574:	add	 %16533 XXX
%16575:	br	 for.cond1926

BASIC BLOCK for.end1953
%16576:	br	 unconditional_jump

BASIC BLOCK unconditional_jump
%16577:	phi	 %14352 %14352 %14352 XXX %14352
%16578:	phi	 %14846 %14846 %14846 %16487 %16477
%16579:	br	 sw.bb1954

BASIC BLOCK sw.bb1954
%16580:	phi	 %16577 %14352
%16581:	phi	 %16578 %14846
%16582:	br	 do.body1955

BASIC BLOCK do.body1955
%16583:	br	 do.body1956

BASIC BLOCK do.body1956
%16584:	load	 %16581
%16585:	zext	 %16584
%16586:	and	 %16585 XXX
%16587:	getelementptr	 %16581 XXX
%16588:	load	 %16587
%16589:	sext	 %16588
%16590:	shl	 %16589 XXX
%16591:	add	 %16586 %16590
%16592:	br	 do.end1964

BASIC BLOCK do.end1964
%16593:	getelementptr	 %16581 XXX
%16594:	br	 do.end1967

BASIC BLOCK do.end1967
%16595:	sext	 %16591
%16596:	getelementptr	 %16593 %16595
%16597:	br	 sw.epilog2661

BASIC BLOCK sw.bb1970
%16598:	br	 unconditional_jump

BASIC BLOCK sw.bb1971
%16599:	br	 do.body1972

BASIC BLOCK do.body1972
%16600:	br	 while.cond1975

BASIC BLOCK while.cond1975
%16601:	getelementptr	 %14110 XXX XXX
%16602:	load	 %16601
%16603:	getelementptr	 %14110 XXX XXX
%16604:	load	 %16603
%16605:	sub	 %16602 %16604
%16606:	zext	 %16605
%16607:	sub	 %14355 %14356
%16608:	add	 %16607 XXX
%16609:	mul	 %16608 XXX
%16610:	add	 %16609 XXX
%16611:	icmp	 %16606 %16610
%16612:	br	 %16611 while.end2014 while.body1986

BASIC BLOCK while.body1986
%16613:	getelementptr	 %14110 XXX XXX
%16614:	load	 %16613
%16615:	load	 re_max_failures
%16616:	mul	 %16615 XXX
%16617:	icmp	 %16614 %16616
%16618:	br	 %16617 cond.false1992 cond.true1991

BASIC BLOCK cond.true1991
%16619:	br	 XXX if.then2012 if.end2013

BASIC BLOCK cond.false1992
%16620:	getelementptr	 %14110 XXX XXX
%16621:	load	 %16620
%16622:	shl	 %16621 XXX
%16623:	zext	 %16622
%16624:	mul	 %16623 XXX
%16625:	alloca	 %16624
%16626:	getelementptr	 %14110 XXX XXX
%16627:	load	 %16626
%16628:	bitcast	 %16627
%16629:	getelementptr	 %14110 XXX XXX
%16630:	load	 %16629
%16631:	zext	 %16630
%16632:	mul	 %16631 XXX
%16633:	call	 %16625 %16628 %16632 XXX XXX llvm.memcpy.p0i8.p0i8.i64
%16634:	bitcast	 %16625
%16635:	getelementptr	 %14110 XXX XXX
%16636:	store	 %16634 %16635
%16637:	getelementptr	 %14110 XXX XXX
%16638:	load	 %16637
%16639:	icmp	 %16638 XXX
%16640:	br	 %16639 cond.false2006 cond.true2005

BASIC BLOCK cond.true2005
%16641:	br	 cond.end2009

BASIC BLOCK cond.false2006
%16642:	getelementptr	 %14110 XXX XXX
%16643:	load	 %16642
%16644:	shl	 %16643 XXX
%16645:	store	 %16644 %16642
%16646:	br	 cond.end2009

BASIC BLOCK cond.end2009
%16647:	phi	 XXX XXX
%16648:	icmp	 %16647 XXX
%16649:	br	 %16648 if.then2012 if.end2013

BASIC BLOCK if.then2012
%16650:	br	 return

BASIC BLOCK if.end2013
%16651:	br	 while.cond1975

BASIC BLOCK while.end2014
%16652:	br	 for.cond2015

BASIC BLOCK for.cond2015
%16653:	phi	 %14356 %16694
%16654:	icmp	 %16653 %14355
%16655:	br	 %16654 for.end2042 for.body2018

BASIC BLOCK for.body2018
%16656:	getelementptr	 %14225 %16653
%16657:	load	 %16656
%16658:	getelementptr	 %14110 XXX XXX
%16659:	load	 %16658
%16660:	add	 %16659 XXX
%16661:	store	 %16660 %16658
%16662:	zext	 %16659
%16663:	getelementptr	 %14110 XXX XXX
%16664:	load	 %16663
%16665:	getelementptr	 %16664 %16662
%16666:	bitcast	 %16665
%16667:	store	 %16657 %16666
%16668:	getelementptr	 %14224 %16653
%16669:	load	 %16668
%16670:	getelementptr	 %14110 XXX XXX
%16671:	load	 %16670
%16672:	add	 %16671 XXX
%16673:	store	 %16672 %16670
%16674:	zext	 %16671
%16675:	getelementptr	 %14110 XXX XXX
%16676:	load	 %16675
%16677:	getelementptr	 %16676 %16674
%16678:	bitcast	 %16677
%16679:	store	 %16669 %16678
%16680:	getelementptr	 %14110 XXX XXX
%16681:	load	 %16680
%16682:	add	 %16681 XXX
%16683:	store	 %16682 %16680
%16684:	zext	 %16681
%16685:	getelementptr	 %14110 XXX XXX
%16686:	load	 %16685
%16687:	getelementptr	 %16686 %16684
%16688:	getelementptr	 %14221 %16653
%16689:	bitcast	 %16688
%16690:	bitcast	 %16687
%16691:	bitcast	 %16689
%16692:	call	 %16690 %16691 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%16693:	br	 for.inc2040

BASIC BLOCK for.inc2040
%16694:	add	 %16653 XXX
%16695:	br	 for.cond2015

BASIC BLOCK for.end2042
%16696:	trunc	 %14356
%16697:	getelementptr	 %14110 XXX XXX
%16698:	load	 %16697
%16699:	add	 %16698 XXX
%16700:	store	 %16699 %16697
%16701:	zext	 %16698
%16702:	getelementptr	 %14110 XXX XXX
%16703:	load	 %16702
%16704:	getelementptr	 %16703 %16701
%16705:	bitcast	 %16704
%16706:	store	 %16696 %16705
%16707:	trunc	 %14355
%16708:	getelementptr	 %14110 XXX XXX
%16709:	load	 %16708
%16710:	add	 %16709 XXX
%16711:	store	 %16710 %16708
%16712:	zext	 %16709
%16713:	getelementptr	 %14110 XXX XXX
%16714:	load	 %16713
%16715:	getelementptr	 %16714 %16712
%16716:	bitcast	 %16715
%16717:	store	 %16707 %16716
%16718:	getelementptr	 %14110 XXX XXX
%16719:	load	 %16718
%16720:	add	 %16719 XXX
%16721:	store	 %16720 %16718
%16722:	zext	 %16719
%16723:	getelementptr	 %14110 XXX XXX
%16724:	load	 %16723
%16725:	getelementptr	 %16724 %16722
%16726:	bitcast	 %16725
%16727:	store	 XXX %16726
%16728:	getelementptr	 %14110 XXX XXX
%16729:	load	 %16728
%16730:	add	 %16729 XXX
%16731:	store	 %16730 %16728
%16732:	zext	 %16729
%16733:	getelementptr	 %14110 XXX XXX
%16734:	load	 %16733
%16735:	getelementptr	 %16734 %16732
%16736:	bitcast	 %16735
%16737:	store	 XXX %16736
%16738:	br	 do.end2070

BASIC BLOCK do.end2070
%16739:	br	 unconditional_jump

BASIC BLOCK sw.bb2071
%16740:	br	 do.body2072

BASIC BLOCK do.body2072
%16741:	br	 while.cond2075

BASIC BLOCK while.cond2075
%16742:	getelementptr	 %14110 XXX XXX
%16743:	load	 %16742
%16744:	getelementptr	 %14110 XXX XXX
%16745:	load	 %16744
%16746:	sub	 %16743 %16745
%16747:	zext	 %16746
%16748:	sub	 %14355 %14356
%16749:	add	 %16748 XXX
%16750:	mul	 %16749 XXX
%16751:	add	 %16750 XXX
%16752:	icmp	 %16747 %16751
%16753:	br	 %16752 while.end2114 while.body2086

BASIC BLOCK while.body2086
%16754:	getelementptr	 %14110 XXX XXX
%16755:	load	 %16754
%16756:	load	 re_max_failures
%16757:	mul	 %16756 XXX
%16758:	icmp	 %16755 %16757
%16759:	br	 %16758 cond.false2092 cond.true2091

BASIC BLOCK cond.true2091
%16760:	br	 XXX if.then2112 if.end2113

BASIC BLOCK cond.false2092
%16761:	getelementptr	 %14110 XXX XXX
%16762:	load	 %16761
%16763:	shl	 %16762 XXX
%16764:	zext	 %16763
%16765:	mul	 %16764 XXX
%16766:	alloca	 %16765
%16767:	getelementptr	 %14110 XXX XXX
%16768:	load	 %16767
%16769:	bitcast	 %16768
%16770:	getelementptr	 %14110 XXX XXX
%16771:	load	 %16770
%16772:	zext	 %16771
%16773:	mul	 %16772 XXX
%16774:	call	 %16766 %16769 %16773 XXX XXX llvm.memcpy.p0i8.p0i8.i64
%16775:	bitcast	 %16766
%16776:	getelementptr	 %14110 XXX XXX
%16777:	store	 %16775 %16776
%16778:	getelementptr	 %14110 XXX XXX
%16779:	load	 %16778
%16780:	icmp	 %16779 XXX
%16781:	br	 %16780 cond.false2106 cond.true2105

BASIC BLOCK cond.true2105
%16782:	br	 cond.end2109

BASIC BLOCK cond.false2106
%16783:	getelementptr	 %14110 XXX XXX
%16784:	load	 %16783
%16785:	shl	 %16784 XXX
%16786:	store	 %16785 %16783
%16787:	br	 cond.end2109

BASIC BLOCK cond.end2109
%16788:	phi	 XXX XXX
%16789:	icmp	 %16788 XXX
%16790:	br	 %16789 if.then2112 if.end2113

BASIC BLOCK if.then2112
%16791:	br	 return

BASIC BLOCK if.end2113
%16792:	br	 while.cond2075

BASIC BLOCK while.end2114
%16793:	br	 for.cond2115

BASIC BLOCK for.cond2115
%16794:	phi	 %14356 %16835
%16795:	icmp	 %16794 %14355
%16796:	br	 %16795 for.end2142 for.body2118

BASIC BLOCK for.body2118
%16797:	getelementptr	 %14225 %16794
%16798:	load	 %16797
%16799:	getelementptr	 %14110 XXX XXX
%16800:	load	 %16799
%16801:	add	 %16800 XXX
%16802:	store	 %16801 %16799
%16803:	zext	 %16800
%16804:	getelementptr	 %14110 XXX XXX
%16805:	load	 %16804
%16806:	getelementptr	 %16805 %16803
%16807:	bitcast	 %16806
%16808:	store	 %16798 %16807
%16809:	getelementptr	 %14224 %16794
%16810:	load	 %16809
%16811:	getelementptr	 %14110 XXX XXX
%16812:	load	 %16811
%16813:	add	 %16812 XXX
%16814:	store	 %16813 %16811
%16815:	zext	 %16812
%16816:	getelementptr	 %14110 XXX XXX
%16817:	load	 %16816
%16818:	getelementptr	 %16817 %16815
%16819:	bitcast	 %16818
%16820:	store	 %16810 %16819
%16821:	getelementptr	 %14110 XXX XXX
%16822:	load	 %16821
%16823:	add	 %16822 XXX
%16824:	store	 %16823 %16821
%16825:	zext	 %16822
%16826:	getelementptr	 %14110 XXX XXX
%16827:	load	 %16826
%16828:	getelementptr	 %16827 %16825
%16829:	getelementptr	 %14221 %16794
%16830:	bitcast	 %16829
%16831:	bitcast	 %16828
%16832:	bitcast	 %16830
%16833:	call	 %16831 %16832 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%16834:	br	 for.inc2140

BASIC BLOCK for.inc2140
%16835:	add	 %16794 XXX
%16836:	br	 for.cond2115

BASIC BLOCK for.end2142
%16837:	trunc	 %14356
%16838:	getelementptr	 %14110 XXX XXX
%16839:	load	 %16838
%16840:	add	 %16839 XXX
%16841:	store	 %16840 %16838
%16842:	zext	 %16839
%16843:	getelementptr	 %14110 XXX XXX
%16844:	load	 %16843
%16845:	getelementptr	 %16844 %16842
%16846:	bitcast	 %16845
%16847:	store	 %16837 %16846
%16848:	trunc	 %14355
%16849:	getelementptr	 %14110 XXX XXX
%16850:	load	 %16849
%16851:	add	 %16850 XXX
%16852:	store	 %16851 %16849
%16853:	zext	 %16850
%16854:	getelementptr	 %14110 XXX XXX
%16855:	load	 %16854
%16856:	getelementptr	 %16855 %16853
%16857:	bitcast	 %16856
%16858:	store	 %16848 %16857
%16859:	getelementptr	 %14110 XXX XXX
%16860:	load	 %16859
%16861:	add	 %16860 XXX
%16862:	store	 %16861 %16859
%16863:	zext	 %16860
%16864:	getelementptr	 %14110 XXX XXX
%16865:	load	 %16864
%16866:	getelementptr	 %16865 %16863
%16867:	bitcast	 %16866
%16868:	store	 XXX %16867
%16869:	getelementptr	 %14110 XXX XXX
%16870:	load	 %16869
%16871:	add	 %16870 XXX
%16872:	store	 %16871 %16869
%16873:	zext	 %16870
%16874:	getelementptr	 %14110 XXX XXX
%16875:	load	 %16874
%16876:	getelementptr	 %16875 %16873
%16877:	bitcast	 %16876
%16878:	store	 XXX %16877
%16879:	br	 do.end2170

BASIC BLOCK do.end2170
%16880:	br	 sw.epilog2661

BASIC BLOCK sw.bb2171
%16881:	br	 do.body2172

BASIC BLOCK do.body2172
%16882:	getelementptr	 %14846 XXX
%16883:	load	 %16882
%16884:	zext	 %16883
%16885:	and	 %16884 XXX
%16886:	getelementptr	 %14846 XXX
%16887:	getelementptr	 %16886 XXX
%16888:	load	 %16887
%16889:	sext	 %16888
%16890:	shl	 %16889 XXX
%16891:	add	 %16885 %16890
%16892:	br	 do.end2182

BASIC BLOCK do.end2182
%16893:	icmp	 %16891 XXX
%16894:	br	 %16893 if.else2200 if.then2185

BASIC BLOCK if.then2185
%16895:	add	 %16891 XXX
%16896:	getelementptr	 %14846 XXX
%16897:	br	 do.body2188

BASIC BLOCK do.body2188
%16898:	br	 do.body2189

BASIC BLOCK do.body2189
%16899:	and	 %16895 XXX
%16900:	trunc	 %16899
%16901:	getelementptr	 %16896 XXX
%16902:	store	 %16900 %16901
%16903:	ashr	 %16895 XXX
%16904:	trunc	 %16903
%16905:	getelementptr	 %16896 XXX
%16906:	store	 %16904 %16905
%16907:	br	 do.end2196

BASIC BLOCK do.end2196
%16908:	getelementptr	 %16896 XXX
%16909:	br	 do.end2199

BASIC BLOCK do.end2199
%16910:	br	 if.end2207

BASIC BLOCK if.else2200
%16911:	icmp	 %16891 XXX
%16912:	br	 %16911 if.end2206 if.then2203

BASIC BLOCK if.then2203
%16913:	getelementptr	 %14846 XXX
%16914:	store	 XXX %16913
%16915:	getelementptr	 %14846 XXX
%16916:	store	 XXX %16915
%16917:	br	 on_failure

BASIC BLOCK if.end2206
%16918:	br	 if.end2207

BASIC BLOCK if.end2207
%16919:	phi	 %16908 %14846
%16920:	br	 sw.epilog2661

BASIC BLOCK sw.bb2208
%16921:	br	 do.body2209

BASIC BLOCK do.body2209
%16922:	getelementptr	 %14846 XXX
%16923:	load	 %16922
%16924:	zext	 %16923
%16925:	and	 %16924 XXX
%16926:	getelementptr	 %14846 XXX
%16927:	getelementptr	 %16926 XXX
%16928:	load	 %16927
%16929:	sext	 %16928
%16930:	shl	 %16929 XXX
%16931:	add	 %16925 %16930
%16932:	br	 do.end2219

BASIC BLOCK do.end2219
%16933:	icmp	 %16931 XXX
%16934:	br	 %16933 if.else2234 if.then2221

BASIC BLOCK if.then2221
%16935:	add	 %16931 XXX
%16936:	br	 do.body2223

BASIC BLOCK do.body2223
%16937:	and	 %16935 XXX
%16938:	trunc	 %16937
%16939:	getelementptr	 %14846 XXX
%16940:	getelementptr	 %16939 XXX
%16941:	store	 %16938 %16940
%16942:	ashr	 %16935 XXX
%16943:	trunc	 %16942
%16944:	getelementptr	 %14846 XXX
%16945:	getelementptr	 %16944 XXX
%16946:	store	 %16943 %16945
%16947:	br	 do.end2233

BASIC BLOCK do.end2233
%16948:	br	 unconditional_jump

BASIC BLOCK if.else2234
%16949:	getelementptr	 %14846 XXX
%16950:	br	 if.end2236

BASIC BLOCK if.end2236
%16951:	br	 sw.epilog2661

BASIC BLOCK sw.bb2237
%16952:	br	 do.body2238

BASIC BLOCK do.body2238
%16953:	br	 do.body2239

BASIC BLOCK do.body2239
%16954:	load	 %14846
%16955:	zext	 %16954
%16956:	and	 %16955 XXX
%16957:	getelementptr	 %14846 XXX
%16958:	load	 %16957
%16959:	sext	 %16958
%16960:	shl	 %16959 XXX
%16961:	add	 %16956 %16960
%16962:	br	 do.end2247

BASIC BLOCK do.end2247
%16963:	getelementptr	 %14846 XXX
%16964:	br	 do.end2250

BASIC BLOCK do.end2250
%16965:	sext	 %16961
%16966:	getelementptr	 %16963 %16965
%16967:	store	 %16966 %14109
%16968:	br	 do.body2253

BASIC BLOCK do.body2253
%16969:	br	 do.body2254

BASIC BLOCK do.body2254
%16970:	load	 %16963
%16971:	zext	 %16970
%16972:	and	 %16971 XXX
%16973:	getelementptr	 %16963 XXX
%16974:	load	 %16973
%16975:	sext	 %16974
%16976:	shl	 %16975 XXX
%16977:	add	 %16972 %16976
%16978:	br	 do.end2262

BASIC BLOCK do.end2262
%16979:	getelementptr	 %16963 XXX
%16980:	br	 do.end2265

BASIC BLOCK do.end2265
%16981:	br	 do.body2266

BASIC BLOCK do.body2266
%16982:	and	 %16977 XXX
%16983:	trunc	 %16982
%16984:	load	 %14109
%16985:	getelementptr	 %16984 XXX
%16986:	store	 %16983 %16985
%16987:	ashr	 %16977 XXX
%16988:	trunc	 %16987
%16989:	load	 %14109
%16990:	getelementptr	 %16989 XXX
%16991:	store	 %16988 %16990
%16992:	br	 do.end2274

BASIC BLOCK do.end2274
%16993:	br	 sw.epilog2661

BASIC BLOCK sw.bb2275
%16994:	icmp	 %14317 XXX
%16995:	br	 %16994 cond.false2278 cond.true2277

BASIC BLOCK cond.true2277
%16996:	br	 cond.end2279

BASIC BLOCK cond.false2278
%16997:	br	 cond.end2279

BASIC BLOCK cond.end2279
%16998:	phi	 %14318 %14316
%16999:	icmp	 %14360 %16998
%17000:	br	 %16999 lor.lhs.false2283 if.then2288

BASIC BLOCK lor.lhs.false2283
%17001:	icmp	 %14315 XXX
%17002:	br	 %17001 if.then2288 lor.lhs.false2285

BASIC BLOCK lor.lhs.false2285
%17003:	icmp	 %14360 %14322
%17004:	br	 %17003 if.end2289 if.then2288

BASIC BLOCK if.then2288
%17005:	br	 sw.epilog2661

BASIC BLOCK if.end2289
%17006:	getelementptr	 %14360 XXX
%17007:	icmp	 %17006 %14320
%17008:	br	 %17007 cond.false2295 cond.true2293

BASIC BLOCK cond.true2293
%17009:	load	 %14316
%17010:	sext	 %17009
%17011:	br	 cond.end2308

BASIC BLOCK cond.false2295
%17012:	getelementptr	 %14360 XXX
%17013:	getelementptr	 %14316 XXX
%17014:	icmp	 %17012 %17013
%17015:	br	 %17014 cond.false2303 cond.true2300

BASIC BLOCK cond.true2300
%17016:	getelementptr	 %14320 XXX
%17017:	load	 %17016
%17018:	sext	 %17017
%17019:	br	 cond.end2306

BASIC BLOCK cond.false2303
%17020:	getelementptr	 %14360 XXX
%17021:	load	 %17020
%17022:	sext	 %17021
%17023:	br	 cond.end2306

BASIC BLOCK cond.end2306
%17024:	phi	 %17018 %17022
%17025:	br	 cond.end2308

BASIC BLOCK cond.end2308
%17026:	phi	 %17010 %17024
%17027:	sext	 %17026
%17028:	getelementptr	 re_syntax_table XXX %17027
%17029:	load	 %17028
%17030:	sext	 %17029
%17031:	icmp	 %17030 XXX
%17032:	zext	 %17031
%17033:	trunc	 %17032
%17034:	icmp	 %14360 %14320
%17035:	br	 %17034 cond.false2320 cond.true2318

BASIC BLOCK cond.true2318
%17036:	load	 %14316
%17037:	sext	 %17036
%17038:	br	 cond.end2331

BASIC BLOCK cond.false2320
%17039:	getelementptr	 %14316 XXX
%17040:	icmp	 %14360 %17039
%17041:	br	 %17040 cond.false2327 cond.true2324

BASIC BLOCK cond.true2324
%17042:	getelementptr	 %14320 XXX
%17043:	load	 %17042
%17044:	sext	 %17043
%17045:	br	 cond.end2329

BASIC BLOCK cond.false2327
%17046:	load	 %14360
%17047:	sext	 %17046
%17048:	br	 cond.end2329

BASIC BLOCK cond.end2329
%17049:	phi	 %17044 %17047
%17050:	br	 cond.end2331

BASIC BLOCK cond.end2331
%17051:	phi	 %17037 %17049
%17052:	sext	 %17051
%17053:	getelementptr	 re_syntax_table XXX %17052
%17054:	load	 %17053
%17055:	sext	 %17054
%17056:	icmp	 %17055 XXX
%17057:	zext	 %17056
%17058:	trunc	 %17057
%17059:	sext	 %17033
%17060:	sext	 %17058
%17061:	icmp	 %17059 %17060
%17062:	br	 %17061 if.end2344 if.then2343

BASIC BLOCK if.then2343
%17063:	br	 sw.epilog2661

BASIC BLOCK if.end2344
%17064:	br	 fail

BASIC BLOCK sw.bb2345
%17065:	icmp	 %14317 XXX
%17066:	br	 %17065 cond.false2350 cond.true2349

BASIC BLOCK cond.true2349
%17067:	br	 cond.end2351

BASIC BLOCK cond.false2350
%17068:	br	 cond.end2351

BASIC BLOCK cond.end2351
%17069:	phi	 %14318 %14316
%17070:	icmp	 %14360 %17069
%17071:	br	 %17070 lor.lhs.false2355 if.then2360

BASIC BLOCK lor.lhs.false2355
%17072:	icmp	 %14315 XXX
%17073:	br	 %17072 if.then2360 lor.lhs.false2357

BASIC BLOCK lor.lhs.false2357
%17074:	icmp	 %14360 %14322
%17075:	br	 %17074 if.end2361 if.then2360

BASIC BLOCK if.then2360
%17076:	br	 fail

BASIC BLOCK if.end2361
%17077:	getelementptr	 %14360 XXX
%17078:	icmp	 %17077 %14320
%17079:	br	 %17078 cond.false2367 cond.true2365

BASIC BLOCK cond.true2365
%17080:	load	 %14316
%17081:	sext	 %17080
%17082:	br	 cond.end2380

BASIC BLOCK cond.false2367
%17083:	getelementptr	 %14360 XXX
%17084:	getelementptr	 %14316 XXX
%17085:	icmp	 %17083 %17084
%17086:	br	 %17085 cond.false2375 cond.true2372

BASIC BLOCK cond.true2372
%17087:	getelementptr	 %14320 XXX
%17088:	load	 %17087
%17089:	sext	 %17088
%17090:	br	 cond.end2378

BASIC BLOCK cond.false2375
%17091:	getelementptr	 %14360 XXX
%17092:	load	 %17091
%17093:	sext	 %17092
%17094:	br	 cond.end2378

BASIC BLOCK cond.end2378
%17095:	phi	 %17089 %17093
%17096:	br	 cond.end2380

BASIC BLOCK cond.end2380
%17097:	phi	 %17081 %17095
%17098:	sext	 %17097
%17099:	getelementptr	 re_syntax_table XXX %17098
%17100:	load	 %17099
%17101:	sext	 %17100
%17102:	icmp	 %17101 XXX
%17103:	zext	 %17102
%17104:	trunc	 %17103
%17105:	icmp	 %14360 %14320
%17106:	br	 %17105 cond.false2392 cond.true2390

BASIC BLOCK cond.true2390
%17107:	load	 %14316
%17108:	sext	 %17107
%17109:	br	 cond.end2403

BASIC BLOCK cond.false2392
%17110:	getelementptr	 %14316 XXX
%17111:	icmp	 %14360 %17110
%17112:	br	 %17111 cond.false2399 cond.true2396

BASIC BLOCK cond.true2396
%17113:	getelementptr	 %14320 XXX
%17114:	load	 %17113
%17115:	sext	 %17114
%17116:	br	 cond.end2401

BASIC BLOCK cond.false2399
%17117:	load	 %14360
%17118:	sext	 %17117
%17119:	br	 cond.end2401

BASIC BLOCK cond.end2401
%17120:	phi	 %17115 %17118
%17121:	br	 cond.end2403

BASIC BLOCK cond.end2403
%17122:	phi	 %17108 %17120
%17123:	sext	 %17122
%17124:	getelementptr	 re_syntax_table XXX %17123
%17125:	load	 %17124
%17126:	sext	 %17125
%17127:	icmp	 %17126 XXX
%17128:	zext	 %17127
%17129:	trunc	 %17128
%17130:	sext	 %17104
%17131:	sext	 %17129
%17132:	icmp	 %17130 %17131
%17133:	br	 %17132 if.end2416 if.then2415

BASIC BLOCK if.then2415
%17134:	br	 fail

BASIC BLOCK if.end2416
%17135:	br	 sw.epilog2661

BASIC BLOCK sw.bb2417
%17136:	icmp	 %14360 %14320
%17137:	br	 %17136 cond.false2422 cond.true2420

BASIC BLOCK cond.true2420
%17138:	load	 %14316
%17139:	sext	 %17138
%17140:	br	 cond.end2433

BASIC BLOCK cond.false2422
%17141:	getelementptr	 %14316 XXX
%17142:	icmp	 %14360 %17141
%17143:	br	 %17142 cond.false2429 cond.true2426

BASIC BLOCK cond.true2426
%17144:	getelementptr	 %14320 XXX
%17145:	load	 %17144
%17146:	sext	 %17145
%17147:	br	 cond.end2431

BASIC BLOCK cond.false2429
%17148:	load	 %14360
%17149:	sext	 %17148
%17150:	br	 cond.end2431

BASIC BLOCK cond.end2431
%17151:	phi	 %17146 %17149
%17152:	br	 cond.end2433

BASIC BLOCK cond.end2433
%17153:	phi	 %17139 %17151
%17154:	sext	 %17153
%17155:	getelementptr	 re_syntax_table XXX %17154
%17156:	load	 %17155
%17157:	sext	 %17156
%17158:	icmp	 %17157 XXX
%17159:	br	 %17158 if.end2477 land.lhs.true2440

BASIC BLOCK land.lhs.true2440
%17160:	icmp	 %14317 XXX
%17161:	br	 %17160 cond.false2443 cond.true2442

BASIC BLOCK cond.true2442
%17162:	br	 cond.end2444

BASIC BLOCK cond.false2443
%17163:	br	 cond.end2444

BASIC BLOCK cond.end2444
%17164:	phi	 %14318 %14316
%17165:	icmp	 %14360 %17164
%17166:	br	 %17165 lor.lhs.false2448 if.then2476

BASIC BLOCK lor.lhs.false2448
%17167:	icmp	 %14315 XXX
%17168:	br	 %17167 if.then2476 lor.lhs.false2450

BASIC BLOCK lor.lhs.false2450
%17169:	getelementptr	 %14360 XXX
%17170:	icmp	 %17169 %14320
%17171:	br	 %17170 cond.false2456 cond.true2454

BASIC BLOCK cond.true2454
%17172:	load	 %14316
%17173:	sext	 %17172
%17174:	br	 cond.end2469

BASIC BLOCK cond.false2456
%17175:	getelementptr	 %14360 XXX
%17176:	getelementptr	 %14316 XXX
%17177:	icmp	 %17175 %17176
%17178:	br	 %17177 cond.false2464 cond.true2461

BASIC BLOCK cond.true2461
%17179:	getelementptr	 %14320 XXX
%17180:	load	 %17179
%17181:	sext	 %17180
%17182:	br	 cond.end2467

BASIC BLOCK cond.false2464
%17183:	getelementptr	 %14360 XXX
%17184:	load	 %17183
%17185:	sext	 %17184
%17186:	br	 cond.end2467

BASIC BLOCK cond.end2467
%17187:	phi	 %17181 %17185
%17188:	br	 cond.end2469

BASIC BLOCK cond.end2469
%17189:	phi	 %17173 %17187
%17190:	sext	 %17189
%17191:	getelementptr	 re_syntax_table XXX %17190
%17192:	load	 %17191
%17193:	sext	 %17192
%17194:	icmp	 %17193 XXX
%17195:	br	 %17194 if.then2476 if.end2477

BASIC BLOCK if.then2476
%17196:	br	 sw.epilog2661

BASIC BLOCK if.end2477
%17197:	br	 fail

BASIC BLOCK sw.bb2478
%17198:	icmp	 %14317 XXX
%17199:	br	 %17198 cond.false2481 cond.true2480

BASIC BLOCK cond.true2480
%17200:	br	 cond.end2482

BASIC BLOCK cond.false2481
%17201:	br	 cond.end2482

BASIC BLOCK cond.end2482
%17202:	phi	 %14318 %14316
%17203:	icmp	 %14360 %17202
%17204:	br	 %17203 lor.lhs.false2486 if.end2541

BASIC BLOCK lor.lhs.false2486
%17205:	icmp	 %14315 XXX
%17206:	br	 %17205 if.end2541 land.lhs.true2488

BASIC BLOCK land.lhs.true2488
%17207:	getelementptr	 %14360 XXX
%17208:	icmp	 %17207 %14320
%17209:	br	 %17208 cond.false2494 cond.true2492

BASIC BLOCK cond.true2492
%17210:	load	 %14316
%17211:	sext	 %17210
%17212:	br	 cond.end2507

BASIC BLOCK cond.false2494
%17213:	getelementptr	 %14360 XXX
%17214:	getelementptr	 %14316 XXX
%17215:	icmp	 %17213 %17214
%17216:	br	 %17215 cond.false2502 cond.true2499

BASIC BLOCK cond.true2499
%17217:	getelementptr	 %14320 XXX
%17218:	load	 %17217
%17219:	sext	 %17218
%17220:	br	 cond.end2505

BASIC BLOCK cond.false2502
%17221:	getelementptr	 %14360 XXX
%17222:	load	 %17221
%17223:	sext	 %17222
%17224:	br	 cond.end2505

BASIC BLOCK cond.end2505
%17225:	phi	 %17219 %17223
%17226:	br	 cond.end2507

BASIC BLOCK cond.end2507
%17227:	phi	 %17211 %17225
%17228:	sext	 %17227
%17229:	getelementptr	 re_syntax_table XXX %17228
%17230:	load	 %17229
%17231:	sext	 %17230
%17232:	icmp	 %17231 XXX
%17233:	br	 %17232 if.end2541 land.lhs.true2514

BASIC BLOCK land.lhs.true2514
%17234:	icmp	 %14360 %14320
%17235:	br	 %17234 cond.false2519 cond.true2517

BASIC BLOCK cond.true2517
%17236:	load	 %14316
%17237:	sext	 %17236
%17238:	br	 cond.end2530

BASIC BLOCK cond.false2519
%17239:	getelementptr	 %14316 XXX
%17240:	icmp	 %14360 %17239
%17241:	br	 %17240 cond.false2526 cond.true2523

BASIC BLOCK cond.true2523
%17242:	getelementptr	 %14320 XXX
%17243:	load	 %17242
%17244:	sext	 %17243
%17245:	br	 cond.end2528

BASIC BLOCK cond.false2526
%17246:	load	 %14360
%17247:	sext	 %17246
%17248:	br	 cond.end2528

BASIC BLOCK cond.end2528
%17249:	phi	 %17244 %17247
%17250:	br	 cond.end2530

BASIC BLOCK cond.end2530
%17251:	phi	 %17237 %17249
%17252:	sext	 %17251
%17253:	getelementptr	 re_syntax_table XXX %17252
%17254:	load	 %17253
%17255:	sext	 %17254
%17256:	icmp	 %17255 XXX
%17257:	br	 %17256 if.then2540 lor.lhs.false2537

BASIC BLOCK lor.lhs.false2537
%17258:	icmp	 %14360 %14322
%17259:	br	 %17258 if.end2541 if.then2540

BASIC BLOCK if.then2540
%17260:	br	 sw.epilog2661

BASIC BLOCK if.end2541
%17261:	br	 fail

BASIC BLOCK sw.bb2542
%17262:	br	 while.cond2543

BASIC BLOCK while.cond2543
%17263:	phi	 %14359 %14334
%17264:	phi	 %14360 %14316
%17265:	icmp	 %17264 %17263
%17266:	br	 %17265 while.end2551 while.body2546

BASIC BLOCK while.body2546
%17267:	icmp	 %17263 %14334
%17268:	br	 %17267 if.end2550 if.then2549

BASIC BLOCK if.then2549
%17269:	br	 fail

BASIC BLOCK if.end2550
%17270:	br	 while.cond2543

BASIC BLOCK while.end2551
%17271:	icmp	 %17264 %14320
%17272:	br	 %17271 cond.false2556 cond.true2554

BASIC BLOCK cond.true2554
%17273:	load	 %14316
%17274:	sext	 %17273
%17275:	br	 cond.end2567

BASIC BLOCK cond.false2556
%17276:	getelementptr	 %14316 XXX
%17277:	icmp	 %17264 %17276
%17278:	br	 %17277 cond.false2563 cond.true2560

BASIC BLOCK cond.true2560
%17279:	getelementptr	 %14320 XXX
%17280:	load	 %17279
%17281:	sext	 %17280
%17282:	br	 cond.end2565

BASIC BLOCK cond.false2563
%17283:	load	 %17264
%17284:	sext	 %17283
%17285:	br	 cond.end2565

BASIC BLOCK cond.end2565
%17286:	phi	 %17281 %17284
%17287:	br	 cond.end2567

BASIC BLOCK cond.end2567
%17288:	phi	 %17274 %17286
%17289:	sext	 %17288
%17290:	getelementptr	 re_syntax_table XXX %17289
%17291:	load	 %17290
%17292:	sext	 %17291
%17293:	icmp	 %17292 XXX
%17294:	br	 %17293 if.then2574 if.end2575

BASIC BLOCK if.then2574
%17295:	br	 fail

BASIC BLOCK if.end2575
%17296:	br	 do.body2576

BASIC BLOCK do.body2576
%17297:	icmp	 %14352 XXX
%17298:	br	 %17297 if.then2578 if.end2597

BASIC BLOCK if.then2578
%17299:	br	 for.cond2580

BASIC BLOCK for.cond2580
%17300:	phi	 %14356 %17318
%17301:	icmp	 %17300 %14355
%17302:	br	 %17301 for.end2596 for.body2583

BASIC BLOCK for.body2583
%17303:	getelementptr	 %14221 %17300
%17304:	bitcast	 %17303
%17305:	bitcast	 %17304
%17306:	load	 %17305
%17307:	and	 %17306 XXX
%17308:	or	 %17307 XXX
%17309:	store	 %17308 %17305
%17310:	getelementptr	 %14221 %17300
%17311:	bitcast	 %17310
%17312:	bitcast	 %17311
%17313:	load	 %17312
%17314:	and	 %17313 XXX
%17315:	or	 %17314 XXX
%17316:	store	 %17315 %17312
%17317:	br	 for.inc2594

BASIC BLOCK for.inc2594
%17318:	add	 %17300 XXX
%17319:	br	 for.cond2580

BASIC BLOCK for.end2596
%17320:	br	 if.end2597

BASIC BLOCK if.end2597
%17321:	phi	 %14352 XXX
%17322:	br	 do.end2599

BASIC BLOCK do.end2599
%17323:	getelementptr	 %17264 XXX
%17324:	br	 sw.epilog2661

BASIC BLOCK sw.bb2601
%17325:	br	 while.cond2602

BASIC BLOCK while.cond2602
%17326:	phi	 %14359 %14334
%17327:	phi	 %14360 %14316
%17328:	icmp	 %17327 %17326
%17329:	br	 %17328 while.end2610 while.body2605

BASIC BLOCK while.body2605
%17330:	icmp	 %17326 %14334
%17331:	br	 %17330 if.end2609 if.then2608

BASIC BLOCK if.then2608
%17332:	br	 fail

BASIC BLOCK if.end2609
%17333:	br	 while.cond2602

BASIC BLOCK while.end2610
%17334:	icmp	 %17327 %14320
%17335:	br	 %17334 cond.false2615 cond.true2613

BASIC BLOCK cond.true2613
%17336:	load	 %14316
%17337:	sext	 %17336
%17338:	br	 cond.end2626

BASIC BLOCK cond.false2615
%17339:	getelementptr	 %14316 XXX
%17340:	icmp	 %17327 %17339
%17341:	br	 %17340 cond.false2622 cond.true2619

BASIC BLOCK cond.true2619
%17342:	getelementptr	 %14320 XXX
%17343:	load	 %17342
%17344:	sext	 %17343
%17345:	br	 cond.end2624

BASIC BLOCK cond.false2622
%17346:	load	 %17327
%17347:	sext	 %17346
%17348:	br	 cond.end2624

BASIC BLOCK cond.end2624
%17349:	phi	 %17344 %17347
%17350:	br	 cond.end2626

BASIC BLOCK cond.end2626
%17351:	phi	 %17337 %17349
%17352:	sext	 %17351
%17353:	getelementptr	 re_syntax_table XXX %17352
%17354:	load	 %17353
%17355:	sext	 %17354
%17356:	icmp	 %17355 XXX
%17357:	br	 %17356 if.end2634 if.then2633

BASIC BLOCK if.then2633
%17358:	br	 fail

BASIC BLOCK if.end2634
%17359:	br	 do.body2635

BASIC BLOCK do.body2635
%17360:	icmp	 %14352 XXX
%17361:	br	 %17360 if.then2637 if.end2656

BASIC BLOCK if.then2637
%17362:	br	 for.cond2639

BASIC BLOCK for.cond2639
%17363:	phi	 %14356 %17381
%17364:	icmp	 %17363 %14355
%17365:	br	 %17364 for.end2655 for.body2642

BASIC BLOCK for.body2642
%17366:	getelementptr	 %14221 %17363
%17367:	bitcast	 %17366
%17368:	bitcast	 %17367
%17369:	load	 %17368
%17370:	and	 %17369 XXX
%17371:	or	 %17370 XXX
%17372:	store	 %17371 %17368
%17373:	getelementptr	 %14221 %17363
%17374:	bitcast	 %17373
%17375:	bitcast	 %17374
%17376:	load	 %17375
%17377:	and	 %17376 XXX
%17378:	or	 %17377 XXX
%17379:	store	 %17378 %17375
%17380:	br	 for.inc2653

BASIC BLOCK for.inc2653
%17381:	add	 %17363 XXX
%17382:	br	 for.cond2639

BASIC BLOCK for.end2655
%17383:	br	 if.end2656

BASIC BLOCK if.end2656
%17384:	phi	 %14352 XXX
%17385:	br	 do.end2658

BASIC BLOCK do.end2658
%17386:	getelementptr	 %17327 XXX
%17387:	br	 sw.epilog2661

BASIC BLOCK sw.default2660
%17388:	call	 abort
%17389:	unreachable	

BASIC BLOCK sw.epilog2661
%17390:	phi	 %17384 %17321 %14352 %14352 %14352 %14352 %14352 %14352 %16580 %14352 %14352 %14352 %14352 %14352 %14352 %14352 %14352 %14352 %14352 %14352 %15649 XXX XXX %15110 %15020 %14944 %14352
%17391:	phi	 %14355 %14355 %14355 %14355 %14355 %14355 %14355 %14355 %14355 %14355 %14355 %16032 %14355 %14355 %14355 %14355 %14355 %14355 %14355 %14355 %14355 %15286 %15195 %14355 %14355 %14355 %14355
%17392:	phi	 %14356 %14356 %14356 %14356 %14356 %14356 %14356 %14356 %14356 %14356 %14356 %16033 %14356 %14356 %14356 %14356 %14356 %14356 %14356 %14356 %14356 %15287 %15201 %14356 %14356 %14356 %14356
%17393:	phi	 %14357 %14357 %14357 %14357 %14357 %14357 %14357 %14357 %14357 %14357 %14357 %14357 %14357 %14357 %14357 %14357 %14357 %14357 %14357 %14357 %14357 %14357 %15202 %14357 %14357 %14357 %14357
%17394:	phi	 %14846 %14846 %14846 %14846 %14846 %14846 %14846 %16979 %16596 %16949 %16919 %15987 %14846 %15830 %14846 %14846 %14846 %14846 %14846 %14846 %15589 %15587 %15202 %15081 %14846 %14916 %14846
%17395:	phi	 %17326 %17263 %14359 %14359 %14359 %14359 %14359 %14359 %14359 %14359 %14359 %14359 %14359 %14359 %14359 %14359 %14359 %14359 %14359 %14359 %15650 %14359 %14359 %15031 %14948 %14917 %14359
%17396:	phi	 %17386 %17323 %14360 %14360 %14360 %14360 %14360 %14360 %14360 %14360 %14360 %14360 %14360 %14360 %14360 %14360 %14360 %14360 %14360 %14360 %15651 %14360 %14360 %15112 %15022 %14918 %14360
%17397:	br	 for.cond156

BASIC BLOCK fail
%17398:	phi	 %14422 %17398 %17398 %14353 %14353 %14353 %14353 %14353 %14353 %14353 %14353 %14353 %14353 %14353 %14353 %14353 %14353 %14353 %14353 %14353 %14353 %14353 %14353 %14353 %14353 %14353 %14353 %14353
%17399:	phi	 %14423 %17399 %17399 %14354 %14354 %14354 %14354 %14354 %14354 %14354 %14354 %14354 %14354 %14354 %14354 %14354 %14354 %14354 %14354 %14354 %14354 %14354 %14354 %14354 %14354 %14354 %14354 %14354
%17400:	phi	 %14359 %17400 %17400 %17326 %17326 %17263 %17263 %14359 %14359 %14359 %14359 %14359 %14359 %14359 %14359 %14359 %14359 %15674 %15674 %14359 %15031 %15031 %14948 %14948 %14863 %14863 %14894 %14894
%17401:	phi	 %14360 %17419 %17419 %17327 %17327 %17264 %17264 %14360 %14360 %14360 %14360 %14360 %14360 %14360 %14360 %14360 %14360 %15675 %15675 %14360 %15032 %15032 %14949 %14949 %14864 %14871 %14895 %14902
%17402:	getelementptr	 %14110 XXX XXX
%17403:	load	 %17402
%17404:	icmp	 %17403 XXX
%17405:	br	 %17404 if.then2665 if.else2776

BASIC BLOCK if.then2665
%17406:	getelementptr	 %14110 XXX XXX
%17407:	load	 %17406
%17408:	add	 %17407 XXX
%17409:	store	 %17408 %17406
%17410:	zext	 %17408
%17411:	getelementptr	 %14110 XXX XXX
%17412:	load	 %17411
%17413:	getelementptr	 %17412 %17410
%17414:	bitcast	 %17413
%17415:	load	 %17414
%17416:	icmp	 %17415 XXX
%17417:	br	 %17416 if.end2677 if.then2676

BASIC BLOCK if.then2676
%17418:	br	 if.end2677

BASIC BLOCK if.end2677
%17419:	phi	 %17415 %17401
%17420:	getelementptr	 %14110 XXX XXX
%17421:	load	 %17420
%17422:	add	 %17421 XXX
%17423:	store	 %17422 %17420
%17424:	zext	 %17422
%17425:	getelementptr	 %14110 XXX XXX
%17426:	load	 %17425
%17427:	getelementptr	 %17426 %17424
%17428:	bitcast	 %17427
%17429:	load	 %17428
%17430:	getelementptr	 %14110 XXX XXX
%17431:	load	 %17430
%17432:	add	 %17431 XXX
%17433:	store	 %17432 %17430
%17434:	zext	 %17432
%17435:	getelementptr	 %14110 XXX XXX
%17436:	load	 %17435
%17437:	getelementptr	 %17436 %17434
%17438:	bitcast	 %17437
%17439:	load	 %17438
%17440:	sext	 %17439
%17441:	getelementptr	 %14110 XXX XXX
%17442:	load	 %17441
%17443:	add	 %17442 XXX
%17444:	store	 %17443 %17441
%17445:	zext	 %17443
%17446:	getelementptr	 %14110 XXX XXX
%17447:	load	 %17446
%17448:	getelementptr	 %17447 %17445
%17449:	bitcast	 %17448
%17450:	load	 %17449
%17451:	sext	 %17450
%17452:	br	 for.cond2698

BASIC BLOCK for.cond2698
%17453:	phi	 %17440 %17494
%17454:	icmp	 %17453 %17451
%17455:	br	 %17454 for.end2725 for.body2701

BASIC BLOCK for.body2701
%17456:	getelementptr	 %14221 %17453
%17457:	bitcast	 %17456
%17458:	getelementptr	 %14110 XXX XXX
%17459:	load	 %17458
%17460:	add	 %17459 XXX
%17461:	store	 %17460 %17458
%17462:	zext	 %17460
%17463:	getelementptr	 %14110 XXX XXX
%17464:	load	 %17463
%17465:	getelementptr	 %17464 %17462
%17466:	bitcast	 %17457
%17467:	bitcast	 %17465
%17468:	call	 %17466 %17467 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%17469:	getelementptr	 %14110 XXX XXX
%17470:	load	 %17469
%17471:	add	 %17470 XXX
%17472:	store	 %17471 %17469
%17473:	zext	 %17471
%17474:	getelementptr	 %14110 XXX XXX
%17475:	load	 %17474
%17476:	getelementptr	 %17475 %17473
%17477:	bitcast	 %17476
%17478:	load	 %17477
%17479:	getelementptr	 %14224 %17453
%17480:	store	 %17478 %17479
%17481:	getelementptr	 %14110 XXX XXX
%17482:	load	 %17481
%17483:	add	 %17482 XXX
%17484:	store	 %17483 %17481
%17485:	zext	 %17483
%17486:	getelementptr	 %14110 XXX XXX
%17487:	load	 %17486
%17488:	getelementptr	 %17487 %17485
%17489:	bitcast	 %17488
%17490:	load	 %17489
%17491:	getelementptr	 %14225 %17453
%17492:	store	 %17490 %17491
%17493:	br	 for.inc2723

BASIC BLOCK for.inc2723
%17494:	add	 %17453 XXX
%17495:	br	 for.cond2698

BASIC BLOCK for.end2725
%17496:	icmp	 %17429 XXX
%17497:	br	 %17496 if.then2727 if.end2728

BASIC BLOCK if.then2727
%17498:	br	 fail

BASIC BLOCK if.end2728
%17499:	icmp	 %17429 %14115
%17500:	br	 %17499 if.end2768 if.then2731

BASIC BLOCK if.then2731
%17501:	load	 %17429
%17502:	zext	 %17501
%17503:	switch	 %17502 sw.default2766 XXX sw.bb2734 XXX sw.bb2735 XXX sw.bb2735 XXX sw.bb2735

BASIC BLOCK sw.bb2734
%17504:	br	 sw.bb2735

BASIC BLOCK sw.bb2735
%17505:	phi	 XXX XXX XXX XXX
%17506:	getelementptr	 %17429 XXX
%17507:	store	 %17506 %14109
%17508:	br	 do.body2737

BASIC BLOCK do.body2737
%17509:	br	 do.body2738

BASIC BLOCK do.body2738
%17510:	load	 %14109
%17511:	load	 %17510
%17512:	zext	 %17511
%17513:	and	 %17512 XXX
%17514:	load	 %14109
%17515:	getelementptr	 %17514 XXX
%17516:	load	 %17515
%17517:	sext	 %17516
%17518:	shl	 %17517 XXX
%17519:	add	 %17513 %17518
%17520:	br	 do.end2746

BASIC BLOCK do.end2746
%17521:	load	 %14109
%17522:	getelementptr	 %17521 XXX
%17523:	store	 %17522 %14109
%17524:	br	 do.end2749

BASIC BLOCK do.end2749
%17525:	load	 %14109
%17526:	sext	 %17519
%17527:	getelementptr	 %17525 %17526
%17528:	store	 %17527 %14109
%17529:	sext	 %17505
%17530:	icmp	 %17529 XXX
%17531:	br	 %17530 lor.lhs.false2758 land.lhs.true2754

BASIC BLOCK land.lhs.true2754
%17532:	load	 %14109
%17533:	load	 %17532
%17534:	zext	 %17533
%17535:	icmp	 %17534 XXX
%17536:	br	 %17535 lor.lhs.false2758 if.then2764

BASIC BLOCK lor.lhs.false2758
%17537:	icmp	 %17505 XXX
%17538:	br	 %17537 land.lhs.true2760 if.end2765

BASIC BLOCK land.lhs.true2760
%17539:	load	 %14109
%17540:	load	 %17539
%17541:	zext	 %17540
%17542:	icmp	 %17541 XXX
%17543:	br	 %17542 if.end2765 if.then2764

BASIC BLOCK if.then2764
%17544:	br	 fail

BASIC BLOCK if.end2765
%17545:	br	 sw.epilog2767

BASIC BLOCK sw.default2766
%17546:	br	 sw.epilog2767

BASIC BLOCK sw.epilog2767
%17547:	br	 if.end2768

BASIC BLOCK if.end2768
%17548:	icmp	 %17419 %14318
%17549:	br	 %17548 if.end2775 land.lhs.true2771

BASIC BLOCK land.lhs.true2771
%17550:	icmp	 %17419 %14320
%17551:	br	 %17550 if.end2775 if.then2774

BASIC BLOCK if.then2774
%17552:	br	 if.end2775

BASIC BLOCK if.end2775
%17553:	phi	 %14335 %17400 %17400
%17554:	br	 if.end2777

BASIC BLOCK if.else2776
%17555:	br	 for.end2778

BASIC BLOCK if.end2777
%17556:	br	 for.cond156

BASIC BLOCK for.end2778
%17557:	icmp	 %17399 XXX
%17558:	br	 %17557 if.end2781 if.then2780

BASIC BLOCK if.then2780
%17559:	br	 restore_best_regs

BASIC BLOCK if.end2781
%17560:	br	 do.body2782

BASIC BLOCK do.body2782
%17561:	icmp	 %14225 XXX
%17562:	br	 %17561 if.end2785 if.then2784

BASIC BLOCK if.then2784
%17563:	br	 if.end2785

BASIC BLOCK if.end2785
%17564:	icmp	 %14224 XXX
%17565:	br	 %17564 if.end2788 if.then2787

BASIC BLOCK if.then2787
%17566:	br	 if.end2788

BASIC BLOCK if.end2788
%17567:	icmp	 %14223 XXX
%17568:	br	 %17567 if.end2791 if.then2790

BASIC BLOCK if.then2790
%17569:	br	 if.end2791

BASIC BLOCK if.end2791
%17570:	icmp	 %14222 XXX
%17571:	br	 %17570 if.end2794 if.then2793

BASIC BLOCK if.then2793
%17572:	br	 if.end2794

BASIC BLOCK if.end2794
%17573:	icmp	 %14220 XXX
%17574:	br	 %17573 if.end2797 if.then2796

BASIC BLOCK if.then2796
%17575:	br	 if.end2797

BASIC BLOCK if.end2797
%17576:	icmp	 %14219 XXX
%17577:	br	 %17576 if.end2800 if.then2799

BASIC BLOCK if.then2799
%17578:	br	 if.end2800

BASIC BLOCK if.end2800
%17579:	icmp	 %14221 XXX
%17580:	br	 %17579 if.end2803 if.then2802

BASIC BLOCK if.then2802
%17581:	br	 if.end2803

BASIC BLOCK if.end2803
%17582:	icmp	 %14218 XXX
%17583:	br	 %17582 if.end2806 if.then2805

BASIC BLOCK if.then2805
%17584:	br	 if.end2806

BASIC BLOCK if.end2806
%17585:	icmp	 %14217 XXX
%17586:	br	 %17585 if.end2809 if.then2808

BASIC BLOCK if.then2808
%17587:	br	 if.end2809

BASIC BLOCK if.end2809
%17588:	br	 do.end2811

BASIC BLOCK do.end2811
%17589:	br	 return

BASIC BLOCK return
%17590:	phi	 XXX XXX %14815 XXX XXX XXX XXX XXX XXX XXX XXX XXX
%17591:	ret	 %17590

FUNCTION group_match_null_string_p

BASIC BLOCK entry
%17592:	alloca	 XXX
%17593:	load	 p
%17594:	getelementptr	 %17593 XXX
%17595:	store	 %17594 %17592
%17596:	br	 while.cond

BASIC BLOCK while.cond
%17597:	load	 %17592
%17598:	icmp	 %17597 end
%17599:	br	 %17598 while.end70 while.body

BASIC BLOCK while.body
%17600:	load	 %17592
%17601:	load	 %17600
%17602:	zext	 %17601
%17603:	switch	 %17602 sw.default XXX sw.bb XXX sw.bb64

BASIC BLOCK sw.bb
%17604:	load	 %17592
%17605:	getelementptr	 %17604 XXX
%17606:	store	 %17605 %17592
%17607:	br	 do.body

BASIC BLOCK do.body
%17608:	br	 do.body1

BASIC BLOCK do.body1
%17609:	load	 %17592
%17610:	load	 %17609
%17611:	zext	 %17610
%17612:	and	 %17611 XXX
%17613:	load	 %17592
%17614:	getelementptr	 %17613 XXX
%17615:	load	 %17614
%17616:	sext	 %17615
%17617:	shl	 %17616 XXX
%17618:	add	 %17612 %17617
%17619:	br	 do.end

BASIC BLOCK do.end
%17620:	load	 %17592
%17621:	getelementptr	 %17620 XXX
%17622:	store	 %17621 %17592
%17623:	br	 do.end6

BASIC BLOCK do.end6
%17624:	icmp	 %17618 XXX
%17625:	br	 %17624 if.end63 if.then

BASIC BLOCK if.then
%17626:	br	 while.cond9

BASIC BLOCK while.cond9
%17627:	phi	 %17618 %17669
%17628:	sub	 %17627 XXX
%17629:	sext	 %17628
%17630:	load	 %17592
%17631:	getelementptr	 %17630 %17629
%17632:	load	 %17631
%17633:	zext	 %17632
%17634:	icmp	 %17633 XXX
%17635:	br	 %17634 while.end while.body13

BASIC BLOCK while.body13
%17636:	load	 %17592
%17637:	load	 %17592
%17638:	sext	 %17627
%17639:	getelementptr	 %17637 %17638
%17640:	getelementptr	 %17639 XXX
%17641:	call	 %17636 %17640 reg_info alt_match_null_string_p
%17642:	icmp	 %17641 XXX
%17643:	br	 %17642 if.then16 if.end

BASIC BLOCK if.then16
%17644:	br	 return

BASIC BLOCK if.end
%17645:	load	 %17592
%17646:	sext	 %17627
%17647:	getelementptr	 %17645 %17646
%17648:	store	 %17647 %17592
%17649:	load	 %17592
%17650:	load	 %17649
%17651:	zext	 %17650
%17652:	icmp	 %17651 XXX
%17653:	br	 %17652 if.end23 if.then22

BASIC BLOCK if.then22
%17654:	br	 while.end

BASIC BLOCK if.end23
%17655:	load	 %17592
%17656:	getelementptr	 %17655 XXX
%17657:	store	 %17656 %17592
%17658:	br	 do.body25

BASIC BLOCK do.body25
%17659:	br	 do.body26

BASIC BLOCK do.body26
%17660:	load	 %17592
%17661:	load	 %17660
%17662:	zext	 %17661
%17663:	and	 %17662 XXX
%17664:	load	 %17592
%17665:	getelementptr	 %17664 XXX
%17666:	load	 %17665
%17667:	sext	 %17666
%17668:	shl	 %17667 XXX
%17669:	add	 %17663 %17668
%17670:	br	 do.end33

BASIC BLOCK do.end33
%17671:	load	 %17592
%17672:	getelementptr	 %17671 XXX
%17673:	store	 %17672 %17592
%17674:	br	 do.end35

BASIC BLOCK do.end35
%17675:	sub	 %17669 XXX
%17676:	sext	 %17675
%17677:	load	 %17592
%17678:	getelementptr	 %17677 %17676
%17679:	load	 %17678
%17680:	zext	 %17679
%17681:	icmp	 %17680 XXX
%17682:	br	 %17681 if.end44 if.then42

BASIC BLOCK if.then42
%17683:	load	 %17592
%17684:	getelementptr	 %17683 XXX
%17685:	store	 %17684 %17592
%17686:	br	 while.end

BASIC BLOCK if.end44
%17687:	br	 while.cond9

BASIC BLOCK while.end
%17688:	br	 do.body45

BASIC BLOCK do.body45
%17689:	load	 %17592
%17690:	getelementptr	 %17689 XXX
%17691:	load	 %17690
%17692:	zext	 %17691
%17693:	and	 %17692 XXX
%17694:	load	 %17592
%17695:	getelementptr	 %17694 XXX
%17696:	getelementptr	 %17695 XXX
%17697:	load	 %17696
%17698:	sext	 %17697
%17699:	shl	 %17698 XXX
%17700:	add	 %17693 %17699
%17701:	br	 do.end54

BASIC BLOCK do.end54
%17702:	load	 %17592
%17703:	load	 %17592
%17704:	sext	 %17700
%17705:	getelementptr	 %17703 %17704
%17706:	call	 %17702 %17705 reg_info alt_match_null_string_p
%17707:	icmp	 %17706 XXX
%17708:	br	 %17707 if.then59 if.end60

BASIC BLOCK if.then59
%17709:	br	 return

BASIC BLOCK if.end60
%17710:	load	 %17592
%17711:	sext	 %17700
%17712:	getelementptr	 %17710 %17711
%17713:	store	 %17712 %17592
%17714:	br	 if.end63

BASIC BLOCK if.end63
%17715:	br	 sw.epilog

BASIC BLOCK sw.bb64
%17716:	load	 %17592
%17717:	getelementptr	 %17716 XXX
%17718:	store	 %17717 p
%17719:	br	 return

BASIC BLOCK sw.default
%17720:	call	 %17592 end reg_info common_op_match_null_string_p
%17721:	icmp	 %17720 XXX
%17722:	br	 %17721 if.then68 if.end69

BASIC BLOCK if.then68
%17723:	br	 return

BASIC BLOCK if.end69
%17724:	br	 sw.epilog

BASIC BLOCK sw.epilog
%17725:	br	 while.cond

BASIC BLOCK while.end70
%17726:	br	 return

BASIC BLOCK return
%17727:	phi	 XXX XXX XXX XXX XXX
%17728:	ret	 %17727

FUNCTION bcmp_translate

BASIC BLOCK entry
%17729:	br	 while.cond

BASIC BLOCK while.cond
%17730:	phi	 len %17750
%17731:	phi	 s1 %17735
%17732:	phi	 s2 %17741
%17733:	icmp	 %17730 XXX
%17734:	br	 %17733 while.end while.body

BASIC BLOCK while.body
%17735:	getelementptr	 %17731 XXX
%17736:	load	 %17731
%17737:	zext	 %17736
%17738:	getelementptr	 translate %17737
%17739:	load	 %17738
%17740:	sext	 %17739
%17741:	getelementptr	 %17732 XXX
%17742:	load	 %17732
%17743:	zext	 %17742
%17744:	getelementptr	 translate %17743
%17745:	load	 %17744
%17746:	sext	 %17745
%17747:	icmp	 %17740 %17746
%17748:	br	 %17747 if.end if.then

BASIC BLOCK if.then
%17749:	br	 return

BASIC BLOCK if.end
%17750:	add	 %17730 XXX
%17751:	br	 while.cond

BASIC BLOCK while.end
%17752:	br	 return

BASIC BLOCK return
%17753:	phi	 XXX XXX
%17754:	ret	 %17753

FUNCTION alt_match_null_string_p

BASIC BLOCK entry
%17755:	alloca	 XXX
%17756:	store	 p %17755
%17757:	br	 while.cond

BASIC BLOCK while.cond
%17758:	load	 %17755
%17759:	icmp	 %17758 end
%17760:	br	 %17759 while.end while.body

BASIC BLOCK while.body
%17761:	load	 %17755
%17762:	load	 %17761
%17763:	zext	 %17762
%17764:	switch	 %17763 sw.default XXX sw.bb

BASIC BLOCK sw.bb
%17765:	load	 %17755
%17766:	getelementptr	 %17765 XXX
%17767:	store	 %17766 %17755
%17768:	br	 do.body

BASIC BLOCK do.body
%17769:	br	 do.body1

BASIC BLOCK do.body1
%17770:	load	 %17755
%17771:	load	 %17770
%17772:	zext	 %17771
%17773:	and	 %17772 XXX
%17774:	load	 %17755
%17775:	getelementptr	 %17774 XXX
%17776:	load	 %17775
%17777:	sext	 %17776
%17778:	shl	 %17777 XXX
%17779:	add	 %17773 %17778
%17780:	br	 do.end

BASIC BLOCK do.end
%17781:	load	 %17755
%17782:	getelementptr	 %17781 XXX
%17783:	store	 %17782 %17755
%17784:	br	 do.end5

BASIC BLOCK do.end5
%17785:	load	 %17755
%17786:	sext	 %17779
%17787:	getelementptr	 %17785 %17786
%17788:	store	 %17787 %17755
%17789:	br	 sw.epilog

BASIC BLOCK sw.default
%17790:	call	 %17755 end reg_info common_op_match_null_string_p
%17791:	icmp	 %17790 XXX
%17792:	br	 %17791 if.then if.end

BASIC BLOCK if.then
%17793:	br	 return

BASIC BLOCK if.end
%17794:	br	 sw.epilog

BASIC BLOCK sw.epilog
%17795:	br	 while.cond

BASIC BLOCK while.end
%17796:	br	 return

BASIC BLOCK return
%17797:	phi	 XXX XXX
%17798:	ret	 %17797

FUNCTION common_op_match_null_string_p

BASIC BLOCK entry
%17799:	alloca	 XXX
%17800:	load	 p
%17801:	store	 %17800 %17799
%17802:	load	 %17799
%17803:	getelementptr	 %17802 XXX
%17804:	store	 %17803 %17799
%17805:	load	 %17802
%17806:	zext	 %17805
%17807:	switch	 %17806 sw.default XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb1 XXX sw.bb12 XXX sw.bb23 XXX sw.bb55 XXX sw.bb65

BASIC BLOCK sw.bb
%17808:	br	 sw.epilog

BASIC BLOCK sw.bb1
%17809:	load	 %17799
%17810:	load	 %17809
%17811:	zext	 %17810
%17812:	call	 %17799 end reg_info group_match_null_string_p
%17813:	sext	 %17811
%17814:	getelementptr	 reg_info %17813
%17815:	bitcast	 %17814
%17816:	bitcast	 %17815
%17817:	load	 %17816
%17818:	and	 %17817 XXX
%17819:	zext	 %17818
%17820:	icmp	 %17819 XXX
%17821:	br	 %17820 if.end if.then

BASIC BLOCK if.then
%17822:	sext	 %17812
%17823:	sext	 %17811
%17824:	getelementptr	 reg_info %17823
%17825:	bitcast	 %17824
%17826:	bitcast	 %17825
%17827:	trunc	 %17822
%17828:	load	 %17826
%17829:	and	 %17827 XXX
%17830:	and	 %17828 XXX
%17831:	or	 %17830 %17829
%17832:	store	 %17831 %17826
%17833:	br	 if.end

BASIC BLOCK if.end
%17834:	icmp	 %17812 XXX
%17835:	br	 %17834 if.then10 if.end11

BASIC BLOCK if.then10
%17836:	br	 return

BASIC BLOCK if.end11
%17837:	br	 sw.epilog

BASIC BLOCK sw.bb12
%17838:	br	 do.body

BASIC BLOCK do.body
%17839:	br	 do.body13

BASIC BLOCK do.body13
%17840:	load	 %17799
%17841:	load	 %17840
%17842:	zext	 %17841
%17843:	and	 %17842 XXX
%17844:	load	 %17799
%17845:	getelementptr	 %17844 XXX
%17846:	load	 %17845
%17847:	sext	 %17846
%17848:	shl	 %17847 XXX
%17849:	add	 %17843 %17848
%17850:	br	 do.end

BASIC BLOCK do.end
%17851:	load	 %17799
%17852:	getelementptr	 %17851 XXX
%17853:	store	 %17852 %17799
%17854:	br	 do.end17

BASIC BLOCK do.end17
%17855:	icmp	 %17849 XXX
%17856:	br	 %17855 if.else if.then20

BASIC BLOCK if.then20
%17857:	load	 %17799
%17858:	sext	 %17849
%17859:	getelementptr	 %17857 %17858
%17860:	store	 %17859 %17799
%17861:	br	 if.end22

BASIC BLOCK if.else
%17862:	br	 return

BASIC BLOCK if.end22
%17863:	br	 sw.epilog

BASIC BLOCK sw.bb23
%17864:	load	 %17799
%17865:	getelementptr	 %17864 XXX
%17866:	store	 %17865 %17799
%17867:	br	 do.body25

BASIC BLOCK do.body25
%17868:	br	 do.body26

BASIC BLOCK do.body26
%17869:	load	 %17799
%17870:	load	 %17869
%17871:	zext	 %17870
%17872:	and	 %17871 XXX
%17873:	load	 %17799
%17874:	getelementptr	 %17873 XXX
%17875:	load	 %17874
%17876:	sext	 %17875
%17877:	shl	 %17876 XXX
%17878:	add	 %17872 %17877
%17879:	br	 do.end33

BASIC BLOCK do.end33
%17880:	load	 %17799
%17881:	getelementptr	 %17880 XXX
%17882:	store	 %17881 %17799
%17883:	br	 do.end35

BASIC BLOCK do.end35
%17884:	icmp	 %17878 XXX
%17885:	br	 %17884 if.else53 if.then38

BASIC BLOCK if.then38
%17886:	load	 %17799
%17887:	getelementptr	 %17886 XXX
%17888:	store	 %17887 %17799
%17889:	br	 do.body40

BASIC BLOCK do.body40
%17890:	br	 do.body41

BASIC BLOCK do.body41
%17891:	load	 %17799
%17892:	load	 %17891
%17893:	zext	 %17892
%17894:	and	 %17893 XXX
%17895:	load	 %17799
%17896:	getelementptr	 %17895 XXX
%17897:	load	 %17896
%17898:	sext	 %17897
%17899:	shl	 %17898 XXX
%17900:	add	 %17894 %17899
%17901:	br	 do.end48

BASIC BLOCK do.end48
%17902:	load	 %17799
%17903:	getelementptr	 %17902 XXX
%17904:	store	 %17903 %17799
%17905:	br	 do.end50

BASIC BLOCK do.end50
%17906:	load	 %17799
%17907:	sext	 %17900
%17908:	getelementptr	 %17906 %17907
%17909:	store	 %17908 %17799
%17910:	br	 if.end54

BASIC BLOCK if.else53
%17911:	br	 return

BASIC BLOCK if.end54
%17912:	br	 sw.epilog

BASIC BLOCK sw.bb55
%17913:	load	 %17799
%17914:	load	 %17913
%17915:	zext	 %17914
%17916:	getelementptr	 reg_info %17915
%17917:	bitcast	 %17916
%17918:	bitcast	 %17917
%17919:	load	 %17918
%17920:	and	 %17919 XXX
%17921:	zext	 %17920
%17922:	icmp	 %17921 XXX
%17923:	br	 %17922 if.then63 if.end64

BASIC BLOCK if.then63
%17924:	br	 return

BASIC BLOCK if.end64
%17925:	br	 sw.epilog

BASIC BLOCK sw.bb65
%17926:	load	 %17799
%17927:	getelementptr	 %17926 XXX
%17928:	store	 %17927 %17799
%17929:	br	 sw.default

BASIC BLOCK sw.default
%17930:	br	 return

BASIC BLOCK sw.epilog
%17931:	load	 %17799
%17932:	store	 %17931 p
%17933:	br	 return

BASIC BLOCK return
%17934:	phi	 XXX XXX XXX XXX XXX XXX
%17935:	ret	 %17934

FUNCTION kwsinit

BASIC BLOCK entry
%17936:	load	 match_icase
%17937:	icmp	 %17936 XXX
%17938:	br	 %17937 if.end if.then

BASIC BLOCK if.then
%17939:	br	 for.cond

BASIC BLOCK for.cond
%17940:	phi	 XXX %17961
%17941:	icmp	 %17940 XXX
%17942:	br	 %17941 for.end for.body

BASIC BLOCK for.body
%17943:	sext	 %17940
%17944:	call	 __ctype_b_loc
%17945:	load	 %17944
%17946:	getelementptr	 %17945 %17943
%17947:	load	 %17946
%17948:	zext	 %17947
%17949:	and	 %17948 XXX
%17950:	icmp	 %17949 XXX
%17951:	br	 %17950 cond.false cond.true

BASIC BLOCK cond.true
%17952:	call	 %17940 tolower
%17953:	br	 cond.end

BASIC BLOCK cond.false
%17954:	br	 cond.end

BASIC BLOCK cond.end
%17955:	phi	 %17952 %17940
%17956:	trunc	 %17955
%17957:	sext	 %17940
%17958:	getelementptr	 kwsinit.trans XXX %17957
%17959:	store	 %17956 %17958
%17960:	br	 for.inc

BASIC BLOCK for.inc
%17961:	add	 %17940 XXX
%17962:	br	 for.cond

BASIC BLOCK for.end
%17963:	br	 if.end

BASIC BLOCK if.end
%17964:	load	 match_icase
%17965:	icmp	 %17964 XXX
%17966:	select	 %17965 XXX XXX
%17967:	call	 %17966 kwsalloc
%17968:	store	 %17967 kwset
%17969:	icmp	 %17967 XXX
%17970:	br	 %17969 if.then10 if.end11

BASIC BLOCK if.then10
%17971:	call	 XXX XXX fatal
%17972:	br	 if.end11

BASIC BLOCK if.end11
%17973:	ret	

FUNCTION kwsmusts

BASIC BLOCK entry
%17974:	load	 XXX
%17975:	icmp	 %17974 XXX
%17976:	br	 %17975 if.end29 if.then

BASIC BLOCK if.then
%17977:	call	 kwsinit
%17978:	load	 XXX
%17979:	br	 for.cond

BASIC BLOCK for.cond
%17980:	phi	 %17978 %18004
%17981:	icmp	 %17980 XXX
%17982:	br	 %17981 for.end for.body

BASIC BLOCK for.body
%17983:	getelementptr	 %17980 XXX XXX
%17984:	load	 %17983
%17985:	icmp	 %17984 XXX
%17986:	br	 %17985 if.then3 if.end

BASIC BLOCK if.then3
%17987:	br	 for.inc

BASIC BLOCK if.end
%17988:	load	 lastexact
%17989:	add	 %17988 XXX
%17990:	store	 %17989 lastexact
%17991:	load	 kwset
%17992:	getelementptr	 %17980 XXX XXX
%17993:	load	 %17992
%17994:	getelementptr	 %17980 XXX XXX
%17995:	load	 %17994
%17996:	call	 %17995 strlen
%17997:	call	 %17991 %17993 %17996 kwsincr
%17998:	icmp	 %17997 XXX
%17999:	br	 %17998 if.end7 if.then6

BASIC BLOCK if.then6
%18000:	call	 %17997 XXX fatal
%18001:	br	 if.end7

BASIC BLOCK if.end7
%18002:	br	 for.inc

BASIC BLOCK for.inc
%18003:	getelementptr	 %17980 XXX XXX
%18004:	load	 %18003
%18005:	br	 for.cond

BASIC BLOCK for.end
%18006:	load	 XXX
%18007:	br	 for.cond8

BASIC BLOCK for.cond8
%18008:	phi	 %18006 %18029
%18009:	icmp	 %18008 XXX
%18010:	br	 %18009 for.end24 for.body10

BASIC BLOCK for.body10
%18011:	getelementptr	 %18008 XXX XXX
%18012:	load	 %18011
%18013:	icmp	 %18012 XXX
%18014:	br	 %18013 if.end14 if.then13

BASIC BLOCK if.then13
%18015:	br	 for.inc22

BASIC BLOCK if.end14
%18016:	load	 kwset
%18017:	getelementptr	 %18008 XXX XXX
%18018:	load	 %18017
%18019:	getelementptr	 %18008 XXX XXX
%18020:	load	 %18019
%18021:	call	 %18020 strlen
%18022:	call	 %18016 %18018 %18021 kwsincr
%18023:	icmp	 %18022 XXX
%18024:	br	 %18023 if.end21 if.then20

BASIC BLOCK if.then20
%18025:	call	 %18022 XXX fatal
%18026:	br	 if.end21

BASIC BLOCK if.end21
%18027:	br	 for.inc22

BASIC BLOCK for.inc22
%18028:	getelementptr	 %18008 XXX XXX
%18029:	load	 %18028
%18030:	br	 for.cond8

BASIC BLOCK for.end24
%18031:	load	 kwset
%18032:	call	 %18031 kwsprep
%18033:	icmp	 %18032 XXX
%18034:	br	 %18033 if.end28 if.then27

BASIC BLOCK if.then27
%18035:	call	 %18032 XXX fatal
%18036:	br	 if.end28

BASIC BLOCK if.end28
%18037:	br	 if.end29

BASIC BLOCK if.end29
%18038:	ret	

FUNCTION resetmust

BASIC BLOCK entry
%18039:	getelementptr	 mp XXX XXX
%18040:	load	 %18039
%18041:	getelementptr	 %18040 XXX
%18042:	store	 XXX %18041
%18043:	getelementptr	 mp XXX XXX
%18044:	load	 %18043
%18045:	getelementptr	 %18044 XXX
%18046:	store	 XXX %18045
%18047:	getelementptr	 mp XXX XXX
%18048:	load	 %18047
%18049:	getelementptr	 %18048 XXX
%18050:	store	 XXX %18049
%18051:	getelementptr	 mp XXX XXX
%18052:	load	 %18051
%18053:	call	 %18052 freelist
%18054:	ret	

FUNCTION inboth

BASIC BLOCK entry
%18055:	icmp	 left XXX
%18056:	br	 %18055 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%18057:	icmp	 right XXX
%18058:	br	 %18057 if.end if.then

BASIC BLOCK if.then
%18059:	br	 return

BASIC BLOCK if.end
%18060:	call	 XXX malloc
%18061:	bitcast	 %18060
%18062:	icmp	 %18061 XXX
%18063:	br	 %18062 if.end4 if.then3

BASIC BLOCK if.then3
%18064:	br	 return

BASIC BLOCK if.end4
%18065:	getelementptr	 %18061 XXX
%18066:	store	 XXX %18065
%18067:	br	 for.cond

BASIC BLOCK for.cond
%18068:	phi	 %18061 %18076
%18069:	phi	 XXX %18105
%18070:	sext	 %18069
%18071:	getelementptr	 left %18070
%18072:	load	 %18071
%18073:	icmp	 %18072 XXX
%18074:	br	 %18073 for.end26 for.body

BASIC BLOCK for.body
%18075:	br	 for.cond7

BASIC BLOCK for.cond7
%18076:	phi	 %18068 %18094
%18077:	phi	 XXX %18102
%18078:	sext	 %18077
%18079:	getelementptr	 right %18078
%18080:	load	 %18079
%18081:	icmp	 %18080 XXX
%18082:	br	 %18081 for.end for.body11

BASIC BLOCK for.body11
%18083:	sext	 %18069
%18084:	getelementptr	 left %18083
%18085:	load	 %18084
%18086:	sext	 %18077
%18087:	getelementptr	 right %18086
%18088:	load	 %18087
%18089:	call	 %18085 %18088 comsubs
%18090:	icmp	 %18089 XXX
%18091:	br	 %18090 if.end19 if.then18

BASIC BLOCK if.then18
%18092:	call	 %18076 freelist
%18093:	br	 return

BASIC BLOCK if.end19
%18094:	call	 %18076 %18089 addlists
%18095:	call	 %18089 freelist
%18096:	bitcast	 %18089
%18097:	call	 %18096 free
%18098:	icmp	 %18094 XXX
%18099:	br	 %18098 if.end23 if.then22

BASIC BLOCK if.then22
%18100:	br	 return

BASIC BLOCK if.end23
%18101:	br	 for.inc

BASIC BLOCK for.inc
%18102:	add	 %18077 XXX
%18103:	br	 for.cond7

BASIC BLOCK for.end
%18104:	br	 for.inc24

BASIC BLOCK for.inc24
%18105:	add	 %18069 XXX
%18106:	br	 for.cond

BASIC BLOCK for.end26
%18107:	br	 return

BASIC BLOCK return
%18108:	phi	 XXX XXX XXX XXX %18068
%18109:	ret	 %18108

FUNCTION freelist

BASIC BLOCK entry
%18110:	icmp	 cpp XXX
%18111:	br	 %18110 if.end if.then

BASIC BLOCK if.then
%18112:	br	 for.end

BASIC BLOCK if.end
%18113:	br	 for.cond

BASIC BLOCK for.cond
%18114:	phi	 XXX %18128
%18115:	sext	 %18114
%18116:	getelementptr	 cpp %18115
%18117:	load	 %18116
%18118:	icmp	 %18117 XXX
%18119:	br	 %18118 for.end for.body

BASIC BLOCK for.body
%18120:	sext	 %18114
%18121:	getelementptr	 cpp %18120
%18122:	load	 %18121
%18123:	call	 %18122 free
%18124:	sext	 %18114
%18125:	getelementptr	 cpp %18124
%18126:	store	 XXX %18125
%18127:	br	 for.inc

BASIC BLOCK for.inc
%18128:	add	 %18114 XXX
%18129:	br	 for.cond

BASIC BLOCK for.end
%18130:	ret	

FUNCTION addlists

BASIC BLOCK entry
%18131:	icmp	 old XXX
%18132:	br	 %18131 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%18133:	icmp	 new XXX
%18134:	br	 %18133 if.end if.then

BASIC BLOCK if.then
%18135:	br	 return

BASIC BLOCK if.end
%18136:	br	 for.cond

BASIC BLOCK for.cond
%18137:	phi	 XXX %18156
%18138:	phi	 old %18151
%18139:	sext	 %18137
%18140:	getelementptr	 new %18139
%18141:	load	 %18140
%18142:	icmp	 %18141 XXX
%18143:	br	 %18142 for.end for.body

BASIC BLOCK for.body
%18144:	sext	 %18137
%18145:	getelementptr	 new %18144
%18146:	load	 %18145
%18147:	sext	 %18137
%18148:	getelementptr	 new %18147
%18149:	load	 %18148
%18150:	call	 %18149 strlen
%18151:	call	 %18138 %18146 %18150 enlist
%18152:	icmp	 %18151 XXX
%18153:	br	 %18152 if.end10 if.then9

BASIC BLOCK if.then9
%18154:	br	 for.end

BASIC BLOCK if.end10
%18155:	br	 for.inc

BASIC BLOCK for.inc
%18156:	add	 %18137 XXX
%18157:	br	 for.cond

BASIC BLOCK for.end
%18158:	phi	 %18151 %18138
%18159:	br	 return

BASIC BLOCK return
%18160:	phi	 XXX %18158
%18161:	ret	 %18160

FUNCTION icpyalloc

BASIC BLOCK entry
%18162:	call	 XXX string icatalloc
%18163:	ret	 %18162

FUNCTION icatalloc

BASIC BLOCK entry
%18164:	icmp	 new XXX
%18165:	br	 %18164 cond.false cond.true

BASIC BLOCK cond.true
%18166:	br	 cond.end

BASIC BLOCK cond.false
%18167:	call	 new strlen
%18168:	br	 cond.end

BASIC BLOCK cond.end
%18169:	phi	 XXX %18167
%18170:	icmp	 old XXX
%18171:	br	 %18170 if.else if.then

BASIC BLOCK if.then
%18172:	br	 if.end6

BASIC BLOCK if.else
%18173:	icmp	 %18169 XXX
%18174:	br	 %18173 if.else4 if.then3

BASIC BLOCK if.then3
%18175:	br	 return

BASIC BLOCK if.else4
%18176:	call	 old strlen
%18177:	br	 if.end

BASIC BLOCK if.end
%18178:	br	 if.end6

BASIC BLOCK if.end6
%18179:	phi	 XXX %18176
%18180:	icmp	 old XXX
%18181:	br	 %18180 if.else10 if.then8

BASIC BLOCK if.then8
%18182:	add	 %18169 XXX
%18183:	call	 %18182 malloc
%18184:	br	 if.end14

BASIC BLOCK if.else10
%18185:	add	 %18179 %18169
%18186:	add	 %18185 XXX
%18187:	call	 old %18186 realloc
%18188:	br	 if.end14

BASIC BLOCK if.end14
%18189:	phi	 %18183 %18187
%18190:	icmp	 %18189 XXX
%18191:	br	 %18190 if.end19 land.lhs.true

BASIC BLOCK land.lhs.true
%18192:	icmp	 new XXX
%18193:	br	 %18192 if.end19 if.then17

BASIC BLOCK if.then17
%18194:	getelementptr	 %18189 %18179
%18195:	call	 %18194 new strcpy
%18196:	br	 if.end19

BASIC BLOCK if.end19
%18197:	br	 return

BASIC BLOCK return
%18198:	phi	 %18189 old
%18199:	ret	 %18198

FUNCTION enlist

BASIC BLOCK entry
%18200:	icmp	 cpp XXX
%18201:	br	 %18200 if.end if.then

BASIC BLOCK if.then
%18202:	br	 return

BASIC BLOCK if.end
%18203:	call	 new icpyalloc
%18204:	icmp	 %18203 XXX
%18205:	br	 %18204 if.end3 if.then2

BASIC BLOCK if.then2
%18206:	call	 cpp freelist
%18207:	br	 return

BASIC BLOCK if.end3
%18208:	getelementptr	 %18203 len
%18209:	store	 XXX %18208
%18210:	br	 for.cond

BASIC BLOCK for.cond
%18211:	phi	 XXX %18226
%18212:	sext	 %18211
%18213:	getelementptr	 cpp %18212
%18214:	load	 %18213
%18215:	icmp	 %18214 XXX
%18216:	br	 %18215 for.end for.body

BASIC BLOCK for.body
%18217:	sext	 %18211
%18218:	getelementptr	 cpp %18217
%18219:	load	 %18218
%18220:	call	 %18219 %18203 istrstr
%18221:	icmp	 %18220 XXX
%18222:	br	 %18221 if.end11 if.then10

BASIC BLOCK if.then10
%18223:	call	 %18203 free
%18224:	br	 return

BASIC BLOCK if.end11
%18225:	br	 for.inc

BASIC BLOCK for.inc
%18226:	add	 %18211 XXX
%18227:	br	 for.cond

BASIC BLOCK for.end
%18228:	br	 while.cond

BASIC BLOCK while.cond
%18229:	phi	 %18211 %18262
%18230:	phi	 XXX %18263
%18231:	sext	 %18230
%18232:	getelementptr	 cpp %18231
%18233:	load	 %18232
%18234:	icmp	 %18233 XXX
%18235:	br	 %18234 while.end while.body

BASIC BLOCK while.body
%18236:	sext	 %18230
%18237:	getelementptr	 cpp %18236
%18238:	load	 %18237
%18239:	call	 %18203 %18238 istrstr
%18240:	icmp	 %18239 XXX
%18241:	br	 %18240 if.else if.then19

BASIC BLOCK if.then19
%18242:	add	 %18230 XXX
%18243:	br	 if.end32

BASIC BLOCK if.else
%18244:	sext	 %18230
%18245:	getelementptr	 cpp %18244
%18246:	load	 %18245
%18247:	call	 %18246 free
%18248:	add	 %18229 XXX
%18249:	icmp	 %18248 %18230
%18250:	br	 %18249 if.end25 if.then24

BASIC BLOCK if.then24
%18251:	br	 while.end

BASIC BLOCK if.end25
%18252:	sext	 %18248
%18253:	getelementptr	 cpp %18252
%18254:	load	 %18253
%18255:	sext	 %18230
%18256:	getelementptr	 cpp %18255
%18257:	store	 %18254 %18256
%18258:	sext	 %18248
%18259:	getelementptr	 cpp %18258
%18260:	store	 XXX %18259
%18261:	br	 if.end32

BASIC BLOCK if.end32
%18262:	phi	 %18229 %18248
%18263:	phi	 %18242 %18230
%18264:	br	 while.cond

BASIC BLOCK while.end
%18265:	phi	 %18248 %18229
%18266:	bitcast	 cpp
%18267:	add	 %18265 XXX
%18268:	sext	 %18267
%18269:	mul	 %18268 XXX
%18270:	call	 %18266 %18269 realloc
%18271:	bitcast	 %18270
%18272:	icmp	 %18271 XXX
%18273:	br	 %18272 if.end37 if.then36

BASIC BLOCK if.then36
%18274:	br	 return

BASIC BLOCK if.end37
%18275:	sext	 %18265
%18276:	getelementptr	 %18271 %18275
%18277:	store	 %18203 %18276
%18278:	add	 %18265 XXX
%18279:	sext	 %18278
%18280:	getelementptr	 %18271 %18279
%18281:	store	 XXX %18280
%18282:	br	 return

BASIC BLOCK return
%18283:	phi	 XXX XXX cpp XXX %18271
%18284:	ret	 %18283

FUNCTION ifree

BASIC BLOCK entry
%18285:	icmp	 cp XXX
%18286:	br	 %18285 if.end if.then

BASIC BLOCK if.then
%18287:	call	 cp free
%18288:	br	 if.end

BASIC BLOCK if.end
%18289:	ret	

FUNCTION istrstr

BASIC BLOCK entry
%18290:	call	 lookfor strlen
%18291:	br	 for.cond

BASIC BLOCK for.cond
%18292:	phi	 lookin %18302
%18293:	load	 %18292
%18294:	sext	 %18293
%18295:	icmp	 %18294 XXX
%18296:	br	 %18295 for.end for.body

BASIC BLOCK for.body
%18297:	call	 %18292 lookfor %18290 strncmp
%18298:	icmp	 %18297 XXX
%18299:	br	 %18298 if.end if.then

BASIC BLOCK if.then
%18300:	br	 return

BASIC BLOCK if.end
%18301:	br	 for.inc

BASIC BLOCK for.inc
%18302:	getelementptr	 %18292 XXX
%18303:	br	 for.cond

BASIC BLOCK for.end
%18304:	br	 return

BASIC BLOCK return
%18305:	phi	 %18292 XXX
%18306:	ret	 %18305

FUNCTION comsubs

BASIC BLOCK entry
%18307:	icmp	 left XXX
%18308:	br	 %18307 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%18309:	icmp	 right XXX
%18310:	br	 %18309 if.end if.then

BASIC BLOCK if.then
%18311:	br	 return

BASIC BLOCK if.end
%18312:	call	 XXX malloc
%18313:	bitcast	 %18312
%18314:	icmp	 %18313 XXX
%18315:	br	 %18314 if.end4 if.then3

BASIC BLOCK if.then3
%18316:	br	 return

BASIC BLOCK if.end4
%18317:	getelementptr	 %18313 XXX
%18318:	store	 XXX %18317
%18319:	br	 for.cond

BASIC BLOCK for.cond
%18320:	phi	 left %18372
%18321:	phi	 %18313 %18371
%18322:	load	 %18320
%18323:	sext	 %18322
%18324:	icmp	 %18323 XXX
%18325:	br	 %18324 for.end39 for.body

BASIC BLOCK for.body
%18326:	load	 %18320
%18327:	sext	 %18326
%18328:	call	 right %18327 strchr
%18329:	br	 while.cond

BASIC BLOCK while.cond
%18330:	phi	 %18328 %18361
%18331:	phi	 XXX %18357
%18332:	icmp	 %18330 XXX
%18333:	br	 %18332 while.end while.body

BASIC BLOCK while.body
%18334:	br	 for.cond11

BASIC BLOCK for.cond11
%18335:	phi	 XXX %18352
%18336:	getelementptr	 %18320 %18335
%18337:	load	 %18336
%18338:	sext	 %18337
%18339:	icmp	 %18338 XXX
%18340:	br	 %18339 land.end land.rhs

BASIC BLOCK land.rhs
%18341:	getelementptr	 %18320 %18335
%18342:	load	 %18341
%18343:	sext	 %18342
%18344:	getelementptr	 %18330 %18335
%18345:	load	 %18344
%18346:	sext	 %18345
%18347:	icmp	 %18343 %18346
%18348:	br	 land.end

BASIC BLOCK land.end
%18349:	phi	 XXX %18347
%18350:	br	 %18349 for.end for.body22

BASIC BLOCK for.body22
%18351:	br	 for.inc

BASIC BLOCK for.inc
%18352:	add	 %18335 XXX
%18353:	br	 for.cond11

BASIC BLOCK for.end
%18354:	icmp	 %18335 %18331
%18355:	br	 %18354 if.end26 if.then25

BASIC BLOCK if.then25
%18356:	br	 if.end26

BASIC BLOCK if.end26
%18357:	phi	 %18335 %18331
%18358:	getelementptr	 %18330 XXX
%18359:	load	 %18320
%18360:	sext	 %18359
%18361:	call	 %18358 %18360 strchr
%18362:	br	 while.cond

BASIC BLOCK while.end
%18363:	icmp	 %18331 XXX
%18364:	br	 %18363 if.end32 if.then31

BASIC BLOCK if.then31
%18365:	br	 for.inc38

BASIC BLOCK if.end32
%18366:	call	 %18321 %18320 %18331 enlist
%18367:	icmp	 %18366 XXX
%18368:	br	 %18367 if.end37 if.then36

BASIC BLOCK if.then36
%18369:	br	 for.end39

BASIC BLOCK if.end37
%18370:	br	 for.inc38

BASIC BLOCK for.inc38
%18371:	phi	 %18321 %18366
%18372:	getelementptr	 %18320 XXX
%18373:	br	 for.cond

BASIC BLOCK for.end39
%18374:	phi	 %18366 %18321
%18375:	br	 return

BASIC BLOCK return
%18376:	phi	 XXX XXX %18374
%18377:	ret	 %18376

FUNCTION delete

BASIC BLOCK entry
%18378:	alloca	 XXX
%18379:	bitcast	 %18378
%18380:	store	 p.coerce %18379
%18381:	br	 for.cond

BASIC BLOCK for.cond
%18382:	phi	 XXX %18399
%18383:	getelementptr	 s XXX XXX
%18384:	load	 %18383
%18385:	icmp	 %18382 %18384
%18386:	br	 %18385 for.end for.body

BASIC BLOCK for.body
%18387:	getelementptr	 %18378 XXX XXX
%18388:	load	 %18387
%18389:	sext	 %18382
%18390:	getelementptr	 s XXX XXX
%18391:	load	 %18390
%18392:	getelementptr	 %18391 %18389
%18393:	getelementptr	 %18392 XXX XXX
%18394:	load	 %18393
%18395:	icmp	 %18388 %18394
%18396:	br	 %18395 if.end if.then

BASIC BLOCK if.then
%18397:	br	 for.end

BASIC BLOCK if.end
%18398:	br	 for.inc

BASIC BLOCK for.inc
%18399:	add	 %18382 XXX
%18400:	br	 for.cond

BASIC BLOCK for.end
%18401:	getelementptr	 s XXX XXX
%18402:	load	 %18401
%18403:	icmp	 %18382 %18402
%18404:	br	 %18403 if.end20 if.then5

BASIC BLOCK if.then5
%18405:	getelementptr	 s XXX XXX
%18406:	load	 %18405
%18407:	add	 %18406 XXX
%18408:	store	 %18407 %18405
%18409:	br	 for.cond7

BASIC BLOCK for.cond7
%18410:	phi	 %18382 %18428
%18411:	getelementptr	 s XXX XXX
%18412:	load	 %18411
%18413:	icmp	 %18410 %18412
%18414:	br	 %18413 for.end19 for.body10

BASIC BLOCK for.body10
%18415:	sext	 %18410
%18416:	getelementptr	 s XXX XXX
%18417:	load	 %18416
%18418:	getelementptr	 %18417 %18415
%18419:	add	 %18410 XXX
%18420:	sext	 %18419
%18421:	getelementptr	 s XXX XXX
%18422:	load	 %18421
%18423:	getelementptr	 %18422 %18420
%18424:	bitcast	 %18418
%18425:	bitcast	 %18423
%18426:	call	 %18424 %18425 XXX XXX XXX llvm.memcpy.p0i8.p0i8.i64
%18427:	br	 for.inc17

BASIC BLOCK for.inc17
%18428:	add	 %18410 XXX
%18429:	br	 for.cond7

BASIC BLOCK for.end19
%18430:	br	 if.end20

BASIC BLOCK if.end20
%18431:	ret	

FUNCTION branch

BASIC BLOCK entry
%18432:	call	 closure
%18433:	br	 while.cond

BASIC BLOCK while.cond
%18434:	load	 tok
%18435:	icmp	 %18434 XXX
%18436:	br	 %18435 land.end land.lhs.true

BASIC BLOCK land.lhs.true
%18437:	load	 tok
%18438:	icmp	 %18437 XXX
%18439:	br	 %18438 land.end land.rhs

BASIC BLOCK land.rhs
%18440:	load	 tok
%18441:	icmp	 %18440 XXX
%18442:	br	 land.end

BASIC BLOCK land.end
%18443:	phi	 XXX XXX %18441
%18444:	br	 %18443 while.end while.body

BASIC BLOCK while.body
%18445:	call	 closure
%18446:	call	 XXX addtok
%18447:	br	 while.cond

BASIC BLOCK while.end
%18448:	ret	

FUNCTION closure

BASIC BLOCK entry
%18449:	call	 atom
%18450:	br	 while.cond

BASIC BLOCK while.cond
%18451:	load	 tok
%18452:	icmp	 %18451 XXX
%18453:	br	 %18452 lor.lhs.false lor.end

BASIC BLOCK lor.lhs.false
%18454:	load	 tok
%18455:	icmp	 %18454 XXX
%18456:	br	 %18455 lor.lhs.false2 lor.end

BASIC BLOCK lor.lhs.false2
%18457:	load	 tok
%18458:	icmp	 %18457 XXX
%18459:	br	 %18458 lor.rhs lor.end

BASIC BLOCK lor.rhs
%18460:	load	 tok
%18461:	icmp	 %18460 XXX
%18462:	br	 lor.end

BASIC BLOCK lor.end
%18463:	phi	 XXX XXX XXX %18461
%18464:	br	 %18463 while.end while.body

BASIC BLOCK while.body
%18465:	load	 tok
%18466:	icmp	 %18465 XXX
%18467:	br	 %18466 if.else if.then

BASIC BLOCK if.then
%18468:	load	 dfa
%18469:	getelementptr	 %18468 XXX XXX
%18470:	load	 %18469
%18471:	call	 %18470 nsubtoks
%18472:	load	 dfa
%18473:	getelementptr	 %18472 XXX XXX
%18474:	load	 %18473
%18475:	sub	 %18474 %18471
%18476:	load	 maxrep
%18477:	icmp	 %18476 XXX
%18478:	br	 %18477 if.end if.then9

BASIC BLOCK if.then9
%18479:	call	 XXX addtok
%18480:	br	 if.end

BASIC BLOCK if.end
%18481:	load	 minrep
%18482:	icmp	 %18481 XXX
%18483:	br	 %18482 if.end12 if.then11

BASIC BLOCK if.then11
%18484:	call	 XXX addtok
%18485:	br	 if.end12

BASIC BLOCK if.end12
%18486:	br	 for.cond

BASIC BLOCK for.cond
%18487:	phi	 XXX %18494
%18488:	load	 minrep
%18489:	icmp	 %18487 %18488
%18490:	br	 %18489 for.end for.body

BASIC BLOCK for.body
%18491:	call	 %18475 %18471 copytoks
%18492:	call	 XXX addtok
%18493:	br	 for.inc

BASIC BLOCK for.inc
%18494:	add	 %18487 XXX
%18495:	br	 for.cond

BASIC BLOCK for.end
%18496:	br	 for.cond14

BASIC BLOCK for.cond14
%18497:	phi	 %18487 %18505
%18498:	load	 maxrep
%18499:	icmp	 %18497 %18498
%18500:	br	 %18499 for.end19 for.body16

BASIC BLOCK for.body16
%18501:	call	 %18475 %18471 copytoks
%18502:	call	 XXX addtok
%18503:	call	 XXX addtok
%18504:	br	 for.inc17

BASIC BLOCK for.inc17
%18505:	add	 %18497 XXX
%18506:	br	 for.cond14

BASIC BLOCK for.end19
%18507:	call	 lex
%18508:	store	 %18507 tok
%18509:	br	 if.end22

BASIC BLOCK if.else
%18510:	load	 tok
%18511:	call	 %18510 addtok
%18512:	call	 lex
%18513:	store	 %18512 tok
%18514:	br	 if.end22

BASIC BLOCK if.end22
%18515:	br	 while.cond

BASIC BLOCK while.end
%18516:	ret	

FUNCTION atom

BASIC BLOCK entry
%18517:	load	 tok
%18518:	icmp	 %18517 XXX
%18519:	br	 %18518 lor.lhs.false land.lhs.true

BASIC BLOCK land.lhs.true
%18520:	load	 tok
%18521:	icmp	 %18520 XXX
%18522:	br	 %18521 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%18523:	load	 tok
%18524:	icmp	 %18523 XXX
%18525:	br	 %18524 lor.lhs.false3 if.then

BASIC BLOCK lor.lhs.false3
%18526:	load	 tok
%18527:	icmp	 %18526 XXX
%18528:	br	 %18527 lor.lhs.false5 if.then

BASIC BLOCK lor.lhs.false5
%18529:	load	 tok
%18530:	icmp	 %18529 XXX
%18531:	br	 %18530 lor.lhs.false7 if.then

BASIC BLOCK lor.lhs.false7
%18532:	load	 tok
%18533:	icmp	 %18532 XXX
%18534:	br	 %18533 lor.lhs.false9 if.then

BASIC BLOCK lor.lhs.false9
%18535:	load	 tok
%18536:	icmp	 %18535 XXX
%18537:	br	 %18536 lor.lhs.false11 if.then

BASIC BLOCK lor.lhs.false11
%18538:	load	 tok
%18539:	icmp	 %18538 XXX
%18540:	br	 %18539 lor.lhs.false13 if.then

BASIC BLOCK lor.lhs.false13
%18541:	load	 tok
%18542:	icmp	 %18541 XXX
%18543:	br	 %18542 lor.lhs.false15 if.then

BASIC BLOCK lor.lhs.false15
%18544:	load	 tok
%18545:	icmp	 %18544 XXX
%18546:	br	 %18545 if.else if.then

BASIC BLOCK if.then
%18547:	load	 tok
%18548:	call	 %18547 addtok
%18549:	call	 lex
%18550:	store	 %18549 tok
%18551:	br	 if.end26

BASIC BLOCK if.else
%18552:	load	 tok
%18553:	icmp	 %18552 XXX
%18554:	br	 %18553 if.else24 if.then18

BASIC BLOCK if.then18
%18555:	call	 lex
%18556:	store	 %18555 tok
%18557:	call	 XXX regexp
%18558:	load	 tok
%18559:	icmp	 %18558 XXX
%18560:	br	 %18559 if.end if.then21

BASIC BLOCK if.then21
%18561:	call	 XXX gettext
%18562:	call	 %18561 dfaerror
%18563:	br	 if.end

BASIC BLOCK if.end
%18564:	call	 lex
%18565:	store	 %18564 tok
%18566:	br	 if.end25

BASIC BLOCK if.else24
%18567:	call	 XXX addtok
%18568:	br	 if.end25

BASIC BLOCK if.end25
%18569:	br	 if.end26

BASIC BLOCK if.end26
%18570:	ret	

FUNCTION nsubtoks

BASIC BLOCK entry
%18571:	sub	 tindex XXX
%18572:	sext	 %18571
%18573:	load	 dfa
%18574:	getelementptr	 %18573 XXX XXX
%18575:	load	 %18574
%18576:	getelementptr	 %18575 %18572
%18577:	load	 %18576
%18578:	switch	 %18577 sw.default XXX sw.bb XXX sw.bb XXX sw.bb XXX sw.bb2 XXX sw.bb2 XXX sw.bb2

BASIC BLOCK sw.default
%18579:	br	 return

BASIC BLOCK sw.bb
%18580:	sub	 tindex XXX
%18581:	call	 %18580 nsubtoks
%18582:	add	 XXX %18581
%18583:	br	 return

BASIC BLOCK sw.bb2
%18584:	sub	 tindex XXX
%18585:	call	 %18584 nsubtoks
%18586:	add	 XXX %18585
%18587:	sub	 tindex XXX
%18588:	sub	 %18587 %18585
%18589:	call	 %18588 nsubtoks
%18590:	add	 %18586 %18589
%18591:	br	 return

BASIC BLOCK return
%18592:	phi	 XXX %18590 %18582
%18593:	ret	 %18592

FUNCTION copytoks

BASIC BLOCK entry
%18594:	br	 for.cond

BASIC BLOCK for.cond
%18595:	phi	 XXX %18607
%18596:	icmp	 %18595 ntokens
%18597:	br	 %18596 for.end for.body

BASIC BLOCK for.body
%18598:	add	 tindex %18595
%18599:	sext	 %18598
%18600:	load	 dfa
%18601:	getelementptr	 %18600 XXX XXX
%18602:	load	 %18601
%18603:	getelementptr	 %18602 %18599
%18604:	load	 %18603
%18605:	call	 %18604 addtok
%18606:	br	 for.inc

BASIC BLOCK for.inc
%18607:	add	 %18595 XXX
%18608:	br	 for.cond

BASIC BLOCK for.end
%18609:	ret	

FUNCTION notset

BASIC BLOCK entry
%18610:	br	 for.cond

BASIC BLOCK for.cond
%18611:	phi	 XXX %18623
%18612:	sext	 %18611
%18613:	icmp	 %18612 XXX
%18614:	br	 %18613 for.end for.body

BASIC BLOCK for.body
%18615:	sext	 %18611
%18616:	getelementptr	 s %18615
%18617:	load	 %18616
%18618:	xor	 %18617 XXX
%18619:	sext	 %18611
%18620:	getelementptr	 s %18619
%18621:	store	 %18618 %18620
%18622:	br	 for.inc

BASIC BLOCK for.inc
%18623:	add	 %18611 XXX
%18624:	br	 for.cond

BASIC BLOCK for.end
%18625:	ret	

FUNCTION charclass_index

BASIC BLOCK entry
%18626:	br	 for.cond

BASIC BLOCK for.cond
%18627:	phi	 XXX %18644
%18628:	load	 dfa
%18629:	getelementptr	 %18628 XXX XXX
%18630:	load	 %18629
%18631:	icmp	 %18627 %18630
%18632:	br	 %18631 for.end for.body

BASIC BLOCK for.body
%18633:	sext	 %18627
%18634:	load	 dfa
%18635:	getelementptr	 %18634 XXX XXX
%18636:	load	 %18635
%18637:	getelementptr	 %18636 %18633
%18638:	getelementptr	 %18637 XXX XXX
%18639:	call	 s %18638 equal
%18640:	icmp	 %18639 XXX
%18641:	br	 %18640 if.end if.then

BASIC BLOCK if.then
%18642:	br	 return

BASIC BLOCK if.end
%18643:	br	 for.inc

BASIC BLOCK for.inc
%18644:	add	 %18627 XXX
%18645:	br	 for.cond

BASIC BLOCK for.end
%18646:	load	 dfa
%18647:	getelementptr	 %18646 XXX XXX
%18648:	load	 %18647
%18649:	load	 dfa
%18650:	getelementptr	 %18649 XXX XXX
%18651:	load	 %18650
%18652:	icmp	 %18648 %18651
%18653:	br	 %18652 if.end13 if.then3

BASIC BLOCK if.then3
%18654:	br	 while.cond

BASIC BLOCK while.cond
%18655:	load	 dfa
%18656:	getelementptr	 %18655 XXX XXX
%18657:	load	 %18656
%18658:	load	 dfa
%18659:	getelementptr	 %18658 XXX XXX
%18660:	load	 %18659
%18661:	icmp	 %18657 %18660
%18662:	br	 %18661 while.end while.body

BASIC BLOCK while.body
%18663:	load	 dfa
%18664:	getelementptr	 %18663 XXX XXX
%18665:	load	 %18664
%18666:	mul	 %18665 XXX
%18667:	store	 %18666 %18664
%18668:	br	 while.cond

BASIC BLOCK while.end
%18669:	load	 dfa
%18670:	getelementptr	 %18669 XXX XXX
%18671:	load	 %18670
%18672:	bitcast	 %18671
%18673:	load	 dfa
%18674:	getelementptr	 %18673 XXX XXX
%18675:	load	 %18674
%18676:	sext	 %18675
%18677:	mul	 %18676 XXX
%18678:	call	 %18672 %18677 xrealloc_1
%18679:	bitcast	 %18678
%18680:	load	 dfa
%18681:	getelementptr	 %18680 XXX XXX
%18682:	store	 %18679 %18681
%18683:	br	 if.end13

BASIC BLOCK if.end13
%18684:	load	 dfa
%18685:	getelementptr	 %18684 XXX XXX
%18686:	load	 %18685
%18687:	add	 %18686 XXX
%18688:	store	 %18687 %18685
%18689:	sext	 %18627
%18690:	load	 dfa
%18691:	getelementptr	 %18690 XXX XXX
%18692:	load	 %18691
%18693:	getelementptr	 %18692 %18689
%18694:	getelementptr	 %18693 XXX XXX
%18695:	call	 s %18694 copyset
%18696:	br	 return

BASIC BLOCK return
%18697:	ret	 %18627

FUNCTION looking_at

BASIC BLOCK entry
%18698:	call	 s strlen
%18699:	load	 lexleft
%18700:	sext	 %18699
%18701:	icmp	 %18700 %18698
%18702:	br	 %18701 if.end if.then

BASIC BLOCK if.then
%18703:	br	 return

BASIC BLOCK if.end
%18704:	load	 lexptr
%18705:	call	 s %18704 %18698 strncmp
%18706:	icmp	 %18705 XXX
%18707:	zext	 %18706
%18708:	br	 return

BASIC BLOCK return
%18709:	phi	 XXX %18707
%18710:	ret	 %18709

FUNCTION is_upper

BASIC BLOCK entry
%18711:	sext	 c
%18712:	call	 __ctype_b_loc
%18713:	load	 %18712
%18714:	getelementptr	 %18713 %18711
%18715:	load	 %18714
%18716:	zext	 %18715
%18717:	and	 %18716 XXX
%18718:	ret	 %18717

FUNCTION is_lower

BASIC BLOCK entry
%18719:	sext	 c
%18720:	call	 __ctype_b_loc
%18721:	load	 %18720
%18722:	getelementptr	 %18721 %18719
%18723:	load	 %18722
%18724:	zext	 %18723
%18725:	and	 %18724 XXX
%18726:	ret	 %18725

FUNCTION is_alpha

BASIC BLOCK entry
%18727:	sext	 c
%18728:	call	 __ctype_b_loc
%18729:	load	 %18728
%18730:	getelementptr	 %18729 %18727
%18731:	load	 %18730
%18732:	zext	 %18731
%18733:	and	 %18732 XXX
%18734:	ret	 %18733

FUNCTION is_digit

BASIC BLOCK entry
%18735:	sext	 c
%18736:	call	 __ctype_b_loc
%18737:	load	 %18736
%18738:	getelementptr	 %18737 %18735
%18739:	load	 %18738
%18740:	zext	 %18739
%18741:	and	 %18740 XXX
%18742:	ret	 %18741

FUNCTION is_xdigit

BASIC BLOCK entry
%18743:	sext	 c
%18744:	call	 __ctype_b_loc
%18745:	load	 %18744
%18746:	getelementptr	 %18745 %18743
%18747:	load	 %18746
%18748:	zext	 %18747
%18749:	and	 %18748 XXX
%18750:	ret	 %18749

FUNCTION is_space

BASIC BLOCK entry
%18751:	sext	 c
%18752:	call	 __ctype_b_loc
%18753:	load	 %18752
%18754:	getelementptr	 %18753 %18751
%18755:	load	 %18754
%18756:	zext	 %18755
%18757:	and	 %18756 XXX
%18758:	ret	 %18757

FUNCTION is_punct

BASIC BLOCK entry
%18759:	sext	 c
%18760:	call	 __ctype_b_loc
%18761:	load	 %18760
%18762:	getelementptr	 %18761 %18759
%18763:	load	 %18762
%18764:	zext	 %18763
%18765:	and	 %18764 XXX
%18766:	ret	 %18765

FUNCTION is_alnum

BASIC BLOCK entry
%18767:	sext	 c
%18768:	call	 __ctype_b_loc
%18769:	load	 %18768
%18770:	getelementptr	 %18769 %18767
%18771:	load	 %18770
%18772:	zext	 %18771
%18773:	and	 %18772 XXX
%18774:	ret	 %18773

FUNCTION is_print

BASIC BLOCK entry
%18775:	sext	 c
%18776:	call	 __ctype_b_loc
%18777:	load	 %18776
%18778:	getelementptr	 %18777 %18775
%18779:	load	 %18778
%18780:	zext	 %18779
%18781:	and	 %18780 XXX
%18782:	ret	 %18781

FUNCTION is_graph

BASIC BLOCK entry
%18783:	sext	 c
%18784:	call	 __ctype_b_loc
%18785:	load	 %18784
%18786:	getelementptr	 %18785 %18783
%18787:	load	 %18786
%18788:	zext	 %18787
%18789:	and	 %18788 XXX
%18790:	ret	 %18789

FUNCTION is_cntrl

BASIC BLOCK entry
%18791:	sext	 c
%18792:	call	 __ctype_b_loc
%18793:	load	 %18792
%18794:	getelementptr	 %18793 %18791
%18795:	load	 %18794
%18796:	zext	 %18795
%18797:	and	 %18796 XXX
%18798:	ret	 %18797

FUNCTION is_blank

BASIC BLOCK entry
%18799:	icmp	 c XXX
%18800:	br	 %18799 lor.rhs lor.end

BASIC BLOCK lor.rhs
%18801:	icmp	 c XXX
%18802:	br	 lor.end

BASIC BLOCK lor.end
%18803:	phi	 XXX %18801
%18804:	zext	 %18803
%18805:	ret	 %18804

FUNCTION equal

BASIC BLOCK entry
%18806:	br	 for.cond

BASIC BLOCK for.cond
%18807:	phi	 XXX %18821
%18808:	sext	 %18807
%18809:	icmp	 %18808 XXX
%18810:	br	 %18809 for.end for.body

BASIC BLOCK for.body
%18811:	sext	 %18807
%18812:	getelementptr	 s1 %18811
%18813:	load	 %18812
%18814:	sext	 %18807
%18815:	getelementptr	 s2 %18814
%18816:	load	 %18815
%18817:	icmp	 %18813 %18816
%18818:	br	 %18817 if.end if.then

BASIC BLOCK if.then
%18819:	br	 return

BASIC BLOCK if.end
%18820:	br	 for.inc

BASIC BLOCK for.inc
%18821:	add	 %18807 XXX
%18822:	br	 for.cond

BASIC BLOCK for.end
%18823:	br	 return

BASIC BLOCK return
%18824:	phi	 XXX XXX
%18825:	ret	 %18824

FUNCTION reset

BASIC BLOCK entry
%18826:	load	 reset.initialized
%18827:	icmp	 %18826 XXX
%18828:	br	 %18827 if.then if.end6

BASIC BLOCK if.then
%18829:	store	 XXX reset.initialized
%18830:	call	 getpagesize
%18831:	icmp	 XXX %18830
%18832:	br	 %18831 cond.false cond.true

BASIC BLOCK cond.true
%18833:	br	 cond.end

BASIC BLOCK cond.false
%18834:	call	 getpagesize
%18835:	br	 cond.end

BASIC BLOCK cond.end
%18836:	phi	 XXX %18834
%18837:	sext	 %18836
%18838:	store	 %18837 bufsalloc
%18839:	load	 bufsalloc
%18840:	mul	 XXX %18839
%18841:	store	 %18840 bufalloc
%18842:	load	 bufalloc
%18843:	add	 %18842 XXX
%18844:	call	 %18843 XXX
%18845:	store	 %18844 buffer
%18846:	load	 buffer
%18847:	icmp	 %18846 XXX
%18848:	br	 %18847 if.then4 if.end

BASIC BLOCK if.then4
%18849:	call	 XXX gettext
%18850:	call	 %18849 XXX fatal
%18851:	br	 if.end

BASIC BLOCK if.end
%18852:	load	 buffer
%18853:	store	 %18852 bufbeg
%18854:	load	 buffer
%18855:	store	 %18854 buflim
%18856:	br	 if.end6

BASIC BLOCK if.end6
%18857:	store	 fd bufdesc
%18858:	call	 fd bufstat fstat
%18859:	icmp	 %18858 XXX
%18860:	br	 %18859 lor.lhs.false if.then12

BASIC BLOCK lor.lhs.false
%18861:	load	 XXX
%18862:	and	 %18861 XXX
%18863:	icmp	 %18862 XXX
%18864:	br	 %18863 if.then12 if.else

BASIC BLOCK if.then12
%18865:	store	 XXX bufmapped
%18866:	br	 if.end14

BASIC BLOCK if.else
%18867:	store	 XXX bufmapped
%18868:	call	 fd XXX XXX lseek
%18869:	store	 %18868 bufoffset
%18870:	br	 if.end14

BASIC BLOCK if.end14
%18871:	ret	

FUNCTION fillbuf

BASIC BLOCK entry
%18872:	load	 fillbuf.pagesize
%18873:	icmp	 %18872 XXX
%18874:	br	 %18873 if.end land.lhs.true

BASIC BLOCK land.lhs.true
%18875:	call	 getpagesize
%18876:	store	 %18875 fillbuf.pagesize
%18877:	icmp	 %18875 XXX
%18878:	br	 %18877 if.end if.then

BASIC BLOCK if.then
%18879:	call	 abort
%18880:	unreachable	

BASIC BLOCK if.end
%18881:	load	 bufsalloc
%18882:	icmp	 save %18881
%18883:	br	 %18882 if.else if.then3

BASIC BLOCK if.then3
%18884:	br	 while.cond

BASIC BLOCK while.cond
%18885:	load	 bufsalloc
%18886:	icmp	 save %18885
%18887:	br	 %18886 while.end while.body

BASIC BLOCK while.body
%18888:	load	 bufsalloc
%18889:	mul	 %18888 XXX
%18890:	store	 %18889 bufsalloc
%18891:	br	 while.cond

BASIC BLOCK while.end
%18892:	load	 bufsalloc
%18893:	mul	 XXX %18892
%18894:	store	 %18893 bufalloc
%18895:	load	 bufalloc
%18896:	add	 %18895 XXX
%18897:	call	 %18896 XXX
%18898:	icmp	 %18897 XXX
%18899:	br	 %18898 if.then7 if.end9

BASIC BLOCK if.then7
%18900:	call	 XXX gettext
%18901:	call	 %18900 XXX fatal
%18902:	br	 if.end9

BASIC BLOCK if.end9
%18903:	br	 if.end10

BASIC BLOCK if.else
%18904:	load	 buffer
%18905:	br	 if.end10

BASIC BLOCK if.end10
%18906:	phi	 %18897 %18904
%18907:	load	 buflim
%18908:	sub	 XXX save
%18909:	getelementptr	 %18907 %18908
%18910:	load	 bufsalloc
%18911:	getelementptr	 %18906 %18910
%18912:	sub	 XXX save
%18913:	getelementptr	 %18911 %18912
%18914:	store	 %18913 bufbeg
%18915:	br	 while.cond14

BASIC BLOCK while.cond14
%18916:	phi	 %18909 %18922
%18917:	phi	 %18913 %18924
%18918:	phi	 save %18919
%18919:	add	 %18918 XXX
%18920:	icmp	 %18918 XXX
%18921:	br	 %18920 while.end18 while.body16

BASIC BLOCK while.body16
%18922:	getelementptr	 %18916 XXX
%18923:	load	 %18916
%18924:	getelementptr	 %18917 XXX
%18925:	store	 %18923 %18917
%18926:	br	 while.cond14

BASIC BLOCK while.end18
%18927:	store	 %18906 buffer
%18928:	load	 bufmapped
%18929:	icmp	 %18928 XXX
%18930:	br	 %18929 if.else39 land.lhs.true20

BASIC BLOCK land.lhs.true20
%18931:	load	 bufoffset
%18932:	load	 fillbuf.pagesize
%18933:	sext	 %18932
%18934:	srem	 %18931 %18933
%18935:	icmp	 %18934 XXX
%18936:	br	 %18935 if.else39 land.lhs.true23

BASIC BLOCK land.lhs.true23
%18937:	load	 XXX
%18938:	load	 bufoffset
%18939:	sub	 %18937 %18938
%18940:	load	 bufalloc
%18941:	load	 bufsalloc
%18942:	sub	 %18940 %18941
%18943:	icmp	 %18939 %18942
%18944:	br	 %18943 if.else39 if.then27

BASIC BLOCK if.then27
%18945:	load	 buffer
%18946:	load	 bufsalloc
%18947:	getelementptr	 %18945 %18946
%18948:	load	 bufalloc
%18949:	load	 bufsalloc
%18950:	sub	 %18948 %18949
%18951:	load	 bufdesc
%18952:	load	 bufoffset
%18953:	call	 %18947 %18950 XXX XXX %18951 %18952 mmap
%18954:	icmp	 %18953 XXX
%18955:	br	 %18954 if.end34 if.then33

BASIC BLOCK if.then33
%18956:	br	 tryread

BASIC BLOCK if.end34
%18957:	load	 bufalloc
%18958:	load	 bufsalloc
%18959:	sub	 %18957 %18958
%18960:	trunc	 %18959
%18961:	sext	 %18960
%18962:	load	 bufoffset
%18963:	add	 %18962 %18961
%18964:	store	 %18963 bufoffset
%18965:	br	 if.end48

BASIC BLOCK if.else39
%18966:	br	 tryread

BASIC BLOCK tryread
%18967:	load	 bufmapped
%18968:	icmp	 %18967 XXX
%18969:	br	 %18968 if.end43 if.then41

BASIC BLOCK if.then41
%18970:	store	 XXX bufmapped
%18971:	load	 bufdesc
%18972:	load	 bufoffset
%18973:	call	 %18971 %18972 XXX lseek
%18974:	br	 if.end43

BASIC BLOCK if.end43
%18975:	load	 bufdesc
%18976:	load	 buffer
%18977:	load	 bufsalloc
%18978:	getelementptr	 %18976 %18977
%18979:	load	 bufalloc
%18980:	load	 bufsalloc
%18981:	sub	 %18979 %18980
%18982:	call	 %18975 %18978 %18981 read
%18983:	trunc	 %18982
%18984:	br	 if.end48

BASIC BLOCK if.end48
%18985:	phi	 %18983 %18960
%18986:	icmp	 %18985 XXX
%18987:	br	 %18986 if.else54 if.then51

BASIC BLOCK if.then51
%18988:	load	 buffer
%18989:	load	 bufsalloc
%18990:	getelementptr	 %18988 %18989
%18991:	sext	 %18985
%18992:	getelementptr	 %18990 %18991
%18993:	store	 %18992 buflim
%18994:	br	 if.end56

BASIC BLOCK if.else54
%18995:	load	 buffer
%18996:	load	 bufsalloc
%18997:	getelementptr	 %18995 %18996
%18998:	store	 %18997 buflim
%18999:	br	 if.end56

BASIC BLOCK if.end56
%19000:	ret	 %18985

FUNCTION grepbuf

BASIC BLOCK entry
%19001:	alloca	 XXX
%19002:	alloca	 XXX
%19003:	br	 while.cond

BASIC BLOCK while.cond
%19004:	phi	 XXX %19044
%19005:	phi	 beg %19045
%19006:	load	 execute
%19007:	ptrtoint	 lim
%19008:	ptrtoint	 %19005
%19009:	sub	 %19007 %19008
%19010:	call	 %19005 %19009 %19002 %19006
%19011:	icmp	 %19010 XXX
%19012:	br	 %19011 while.end while.body

BASIC BLOCK while.body
%19013:	icmp	 %19010 lim
%19014:	br	 %19013 if.end land.lhs.true

BASIC BLOCK land.lhs.true
%19015:	icmp	 %19010 beg
%19016:	br	 %19015 lor.lhs.false land.lhs.true3

BASIC BLOCK land.lhs.true3
%19017:	getelementptr	 %19010 XXX
%19018:	load	 %19017
%19019:	sext	 %19018
%19020:	icmp	 %19019 XXX
%19021:	br	 %19020 lor.lhs.false if.then

BASIC BLOCK lor.lhs.false
%19022:	icmp	 %19010 beg
%19023:	br	 %19022 if.end if.then

BASIC BLOCK if.then
%19024:	br	 while.end

BASIC BLOCK if.end
%19025:	load	 out_invert
%19026:	icmp	 %19025 XXX
%19027:	br	 %19026 if.then8 if.else

BASIC BLOCK if.then8
%19028:	load	 %19002
%19029:	call	 %19010 %19028 XXX prtext
%19030:	add	 %19004 XXX
%19031:	load	 done_on_match
%19032:	icmp	 %19031 XXX
%19033:	br	 %19032 if.end11 if.then10

BASIC BLOCK if.then10
%19034:	br	 return

BASIC BLOCK if.end11
%19035:	br	 if.end17

BASIC BLOCK if.else
%19036:	icmp	 %19005 %19010
%19037:	br	 %19036 if.end16 if.then14

BASIC BLOCK if.then14
%19038:	call	 %19005 %19010 %19001 prtext
%19039:	load	 %19001
%19040:	add	 %19004 %19039
%19041:	br	 if.end16

BASIC BLOCK if.end16
%19042:	phi	 %19040 %19004
%19043:	br	 if.end17

BASIC BLOCK if.end17
%19044:	phi	 %19042 %19030
%19045:	load	 %19002
%19046:	br	 while.cond

BASIC BLOCK while.end
%19047:	load	 out_invert
%19048:	icmp	 %19047 XXX
%19049:	br	 %19048 if.end24 land.lhs.true19

BASIC BLOCK land.lhs.true19
%19050:	icmp	 %19005 lim
%19051:	br	 %19050 if.end24 if.then22

BASIC BLOCK if.then22
%19052:	call	 %19005 lim %19001 prtext
%19053:	load	 %19001
%19054:	add	 %19004 %19053
%19055:	br	 if.end24

BASIC BLOCK if.end24
%19056:	phi	 %19054 %19004 %19004
%19057:	br	 return

BASIC BLOCK return
%19058:	phi	 %19056 %19030
%19059:	ret	 %19058

FUNCTION prpending

BASIC BLOCK entry
%19060:	load	 lastout
%19061:	icmp	 %19060 XXX
%19062:	br	 %19061 if.then if.end

BASIC BLOCK if.then
%19063:	load	 bufbeg
%19064:	store	 %19063 lastout
%19065:	br	 if.end

BASIC BLOCK if.end
%19066:	br	 while.cond

BASIC BLOCK while.cond
%19067:	load	 pending
%19068:	icmp	 %19067 XXX
%19069:	br	 %19068 land.end land.rhs

BASIC BLOCK land.rhs
%19070:	load	 lastout
%19071:	icmp	 %19070 lim
%19072:	br	 land.end

BASIC BLOCK land.end
%19073:	phi	 XXX %19071
%19074:	br	 %19073 while.end while.body

BASIC BLOCK while.body
%19075:	load	 pending
%19076:	add	 %19075 XXX
%19077:	store	 %19076 pending
%19078:	load	 lastout
%19079:	load	 lastout
%19080:	ptrtoint	 lim
%19081:	ptrtoint	 %19079
%19082:	sub	 %19080 %19081
%19083:	call	 %19078 XXX %19082 memchr
%19084:	icmp	 %19083 XXX
%19085:	br	 %19084 if.else if.then3

BASIC BLOCK if.then3
%19086:	getelementptr	 %19083 XXX
%19087:	br	 if.end4

BASIC BLOCK if.else
%19088:	br	 if.end4

BASIC BLOCK if.end4
%19089:	phi	 %19086 lim
%19090:	load	 lastout
%19091:	call	 %19090 %19089 XXX prline
%19092:	br	 while.cond

BASIC BLOCK while.end
%19093:	ret	

FUNCTION nlscan

BASIC BLOCK entry
%19094:	load	 lastnl
%19095:	br	 for.cond

BASIC BLOCK for.cond
%19096:	phi	 %19094 %19108
%19097:	icmp	 %19096 lim
%19098:	br	 %19097 for.end for.body

BASIC BLOCK for.body
%19099:	load	 %19096
%19100:	sext	 %19099
%19101:	icmp	 %19100 XXX
%19102:	br	 %19101 if.end if.then

BASIC BLOCK if.then
%19103:	load	 totalnl
%19104:	add	 %19103 XXX
%19105:	store	 %19104 totalnl
%19106:	br	 if.end

BASIC BLOCK if.end
%19107:	br	 for.inc

BASIC BLOCK for.inc
%19108:	getelementptr	 %19096 XXX
%19109:	br	 for.cond

BASIC BLOCK for.end
%19110:	store	 %19096 lastnl
%19111:	ret	

FUNCTION prline

BASIC BLOCK entry
%19112:	load	 out_file
%19113:	icmp	 %19112 XXX
%19114:	br	 %19113 if.end if.then

BASIC BLOCK if.then
%19115:	load	 filename
%19116:	call	 XXX %19115 sep printf
%19117:	br	 if.end

BASIC BLOCK if.end
%19118:	load	 out_line
%19119:	icmp	 %19118 XXX
%19120:	br	 %19119 if.end4 if.then2

BASIC BLOCK if.then2
%19121:	call	 beg nlscan
%19122:	load	 totalnl
%19123:	add	 %19122 XXX
%19124:	store	 %19123 totalnl
%19125:	trunc	 %19123
%19126:	call	 XXX %19125 sep printf
%19127:	store	 lim lastnl
%19128:	br	 if.end4

BASIC BLOCK if.end4
%19129:	load	 out_byte
%19130:	icmp	 %19129 XXX
%19131:	br	 %19130 if.end8 if.then6

BASIC BLOCK if.then6
%19132:	load	 totalcc
%19133:	load	 bufbeg
%19134:	ptrtoint	 beg
%19135:	ptrtoint	 %19133
%19136:	sub	 %19134 %19135
%19137:	add	 %19132 %19136
%19138:	call	 XXX %19137 sep printf
%19139:	br	 if.end8

BASIC BLOCK if.end8
%19140:	ptrtoint	 lim
%19141:	ptrtoint	 beg
%19142:	sub	 %19140 %19141
%19143:	load	 stdout
%19144:	call	 beg XXX %19142 %19143 fwrite
%19145:	load	 stdout
%19146:	call	 %19145 ferror
%19147:	icmp	 %19146 XXX
%19148:	br	 %19147 if.end18 if.then15

BASIC BLOCK if.then15
%19149:	call	 XXX gettext
%19150:	call	 __errno_location
%19151:	load	 %19150
%19152:	call	 %19149 %19151 error
%19153:	br	 if.end18

BASIC BLOCK if.end18
%19154:	store	 lim lastout
%19155:	ret	

FUNCTION prtext

BASIC BLOCK entry
%19156:	load	 out_quiet
%19157:	icmp	 %19156 XXX
%19158:	br	 %19157 land.lhs.true if.end

BASIC BLOCK land.lhs.true
%19159:	load	 pending
%19160:	icmp	 %19159 XXX
%19161:	br	 %19160 if.end if.then

BASIC BLOCK if.then
%19162:	call	 beg prpending
%19163:	br	 if.end

BASIC BLOCK if.end
%19164:	load	 out_quiet
%19165:	icmp	 %19164 XXX
%19166:	br	 %19165 if.then2 if.end24

BASIC BLOCK if.then2
%19167:	load	 lastout
%19168:	icmp	 %19167 XXX
%19169:	br	 %19168 cond.false cond.true

BASIC BLOCK cond.true
%19170:	load	 lastout
%19171:	br	 cond.end

BASIC BLOCK cond.false
%19172:	load	 bufbeg
%19173:	br	 cond.end

BASIC BLOCK cond.end
%19174:	phi	 %19170 %19172
%19175:	br	 for.cond

BASIC BLOCK for.cond
%19176:	phi	 beg %19197
%19177:	phi	 XXX %19199
%19178:	load	 out_before
%19179:	icmp	 %19177 %19178
%19180:	br	 %19179 for.end for.body

BASIC BLOCK for.body
%19181:	icmp	 %19176 %19174
%19182:	br	 %19181 if.end10 if.then6

BASIC BLOCK if.then6
%19183:	br	 do.body

BASIC BLOCK do.body
%19184:	phi	 %19176 %19185
%19185:	getelementptr	 %19184 XXX
%19186:	br	 do.cond

BASIC BLOCK do.cond
%19187:	icmp	 %19185 %19174
%19188:	br	 %19187 land.end land.rhs

BASIC BLOCK land.rhs
%19189:	getelementptr	 %19185 XXX
%19190:	load	 %19189
%19191:	sext	 %19190
%19192:	icmp	 %19191 XXX
%19193:	br	 land.end

BASIC BLOCK land.end
%19194:	phi	 XXX %19192
%19195:	br	 %19194 do.end do.body

BASIC BLOCK do.end
%19196:	br	 if.end10

BASIC BLOCK if.end10
%19197:	phi	 %19185 %19176
%19198:	br	 for.inc

BASIC BLOCK for.inc
%19199:	add	 %19177 XXX
%19200:	br	 for.cond

BASIC BLOCK for.end
%19201:	load	 out_before
%19202:	icmp	 %19201 XXX
%19203:	br	 %19202 lor.lhs.false land.lhs.true13

BASIC BLOCK lor.lhs.false
%19204:	load	 out_after
%19205:	icmp	 %19204 XXX
%19206:	br	 %19205 if.end19 land.lhs.true13

BASIC BLOCK land.lhs.true13
%19207:	load	 prtext.used
%19208:	icmp	 %19207 XXX
%19209:	br	 %19208 if.end19 land.lhs.true15

BASIC BLOCK land.lhs.true15
%19210:	load	 lastout
%19211:	icmp	 %19176 %19210
%19212:	br	 %19211 if.end19 if.then18

BASIC BLOCK if.then18
%19213:	call	 XXX puts
%19214:	br	 if.end19

BASIC BLOCK if.end19
%19215:	br	 while.cond

BASIC BLOCK while.cond
%19216:	phi	 %19176 %19225
%19217:	icmp	 %19216 beg
%19218:	br	 %19217 while.end while.body

BASIC BLOCK while.body
%19219:	ptrtoint	 beg
%19220:	ptrtoint	 %19216
%19221:	sub	 %19219 %19220
%19222:	call	 %19216 XXX %19221 memchr
%19223:	getelementptr	 %19222 XXX
%19224:	call	 %19216 %19223 XXX prline
%19225:	getelementptr	 %19222 XXX
%19226:	br	 while.cond

BASIC BLOCK while.end
%19227:	br	 if.end24

BASIC BLOCK if.end24
%19228:	phi	 beg %19216
%19229:	icmp	 nlinesp XXX
%19230:	br	 %19229 if.else46 if.then26

BASIC BLOCK if.then26
%19231:	br	 for.cond27

BASIC BLOCK for.cond27
%19232:	phi	 %19228 %19245
%19233:	phi	 XXX %19252
%19234:	icmp	 %19232 lim
%19235:	br	 %19234 for.end45 for.body30

BASIC BLOCK for.body30
%19236:	ptrtoint	 lim
%19237:	ptrtoint	 %19232
%19238:	sub	 %19236 %19237
%19239:	call	 %19232 XXX %19238 memchr
%19240:	icmp	 %19239 XXX
%19241:	br	 %19240 if.else if.then37

BASIC BLOCK if.then37
%19242:	getelementptr	 %19239 XXX
%19243:	br	 if.end39

BASIC BLOCK if.else
%19244:	br	 if.end39

BASIC BLOCK if.end39
%19245:	phi	 %19242 lim
%19246:	load	 out_quiet
%19247:	icmp	 %19246 XXX
%19248:	br	 %19247 if.then41 if.end42

BASIC BLOCK if.then41
%19249:	call	 %19232 %19245 XXX prline
%19250:	br	 if.end42

BASIC BLOCK if.end42
%19251:	br	 for.inc43

BASIC BLOCK for.inc43
%19252:	add	 %19233 XXX
%19253:	br	 for.cond27

BASIC BLOCK for.end45
%19254:	store	 %19233 nlinesp
%19255:	br	 if.end50

BASIC BLOCK if.else46
%19256:	load	 out_quiet
%19257:	icmp	 %19256 XXX
%19258:	br	 %19257 if.then48 if.end49

BASIC BLOCK if.then48
%19259:	call	 beg lim XXX prline
%19260:	br	 if.end49

BASIC BLOCK if.end49
%19261:	br	 if.end50

BASIC BLOCK if.end50
%19262:	load	 out_after
%19263:	store	 %19262 pending
%19264:	store	 XXX prtext.used
%19265:	ret	
