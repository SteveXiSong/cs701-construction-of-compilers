
FUNCTION mygetline

BASIC BLOCK entry
%1:	alloca	 XXX
%2:	alloca	 XXX
%3:	alloca	 XXX
%4:	store	 s %1
%5:	store	 maxsize %2
%6:	load	 %1
%7:	load	 %2
%8:	load	 stdin
%9:	call	 %6 %7 %8 fgets
%10:	store	 %9 %3
%11:	icmp	 %9 XXX
%12:	zext	 %11
%13:	trunc	 %12
%14:	ret	 %13

FUNCTION addstr

BASIC BLOCK entry
%15:	alloca	 XXX
%16:	alloca	 XXX
%17:	alloca	 XXX
%18:	alloca	 XXX
%19:	alloca	 XXX
%20:	trunc	 XXX
%21:	store	 %20 %15
%22:	store	 outset %16
%23:	store	 j %17
%24:	store	 maxset %18
%25:	load	 %17
%26:	load	 %25
%27:	load	 %18
%28:	icmp	 %26 %27
%29:	br	 %28 if.else if.then

BASIC BLOCK if.then
%30:	store	 XXX %19
%31:	br	 if.end

BASIC BLOCK if.else
%32:	load	 %15
%33:	load	 %17
%34:	load	 %33
%35:	sext	 %34
%36:	load	 %16
%37:	getelementptr	 %36 %35
%38:	store	 %32 %37
%39:	load	 %17
%40:	load	 %39
%41:	add	 %40 XXX
%42:	load	 %17
%43:	store	 %41 %42
%44:	store	 XXX %19
%45:	br	 if.end

BASIC BLOCK if.end
%46:	load	 %19
%47:	sext	 %46
%48:	ret	 %47

FUNCTION esc

BASIC BLOCK entry
%49:	alloca	 XXX
%50:	alloca	 XXX
%51:	alloca	 XXX
%52:	store	 s %49
%53:	store	 i %50
%54:	load	 i
%55:	sext	 %54
%56:	load	 %49
%57:	getelementptr	 %56 %55
%58:	load	 %57
%59:	sext	 %58
%60:	icmp	 %59 XXX
%61:	br	 %60 if.else if.then

BASIC BLOCK if.then
%62:	load	 %50
%63:	load	 %62
%64:	sext	 %63
%65:	load	 %49
%66:	getelementptr	 %65 %64
%67:	load	 %66
%68:	store	 %67 %51
%69:	br	 if.end30

BASIC BLOCK if.else
%70:	load	 %50
%71:	load	 %70
%72:	add	 %71 XXX
%73:	sext	 %72
%74:	load	 %49
%75:	getelementptr	 %74 %73
%76:	load	 %75
%77:	sext	 %76
%78:	icmp	 %77 XXX
%79:	br	 %78 if.else10 if.then9

BASIC BLOCK if.then9
%80:	store	 XXX %51
%81:	br	 if.end29

BASIC BLOCK if.else10
%82:	load	 %50
%83:	load	 %82
%84:	add	 %83 XXX
%85:	load	 %50
%86:	store	 %84 %85
%87:	load	 %50
%88:	load	 %87
%89:	sext	 %88
%90:	load	 %49
%91:	getelementptr	 %90 %89
%92:	load	 %91
%93:	sext	 %92
%94:	icmp	 %93 XXX
%95:	br	 %94 if.else18 if.then17

BASIC BLOCK if.then17
%96:	store	 XXX %51
%97:	br	 if.end28

BASIC BLOCK if.else18
%98:	load	 %50
%99:	load	 %98
%100:	sext	 %99
%101:	load	 %49
%102:	getelementptr	 %101 %100
%103:	load	 %102
%104:	sext	 %103
%105:	icmp	 %104 XXX
%106:	br	 %105 if.else25 if.then24

BASIC BLOCK if.then24
%107:	store	 XXX %51
%108:	br	 if.end

BASIC BLOCK if.else25
%109:	load	 %50
%110:	load	 %109
%111:	sext	 %110
%112:	load	 %49
%113:	getelementptr	 %112 %111
%114:	load	 %113
%115:	store	 %114 %51
%116:	br	 if.end

BASIC BLOCK if.end
%117:	br	 if.end28

BASIC BLOCK if.end28
%118:	br	 if.end29

BASIC BLOCK if.end29
%119:	br	 if.end30

BASIC BLOCK if.end30
%120:	load	 %51
%121:	ret	 %120

FUNCTION dodash

BASIC BLOCK entry
%122:	alloca	 XXX
%123:	alloca	 XXX
%124:	alloca	 XXX
%125:	alloca	 XXX
%126:	alloca	 XXX
%127:	alloca	 XXX
%128:	alloca	 XXX
%129:	alloca	 XXX
%130:	alloca	 XXX
%131:	trunc	 XXX
%132:	store	 %131 %122
%133:	store	 src %123
%134:	store	 i %124
%135:	store	 dest %125
%136:	store	 j %126
%137:	store	 maxset %127
%138:	br	 while.cond

BASIC BLOCK while.cond
%139:	load	 %124
%140:	load	 %139
%141:	sext	 %140
%142:	load	 %123
%143:	getelementptr	 %142 %141
%144:	load	 %143
%145:	sext	 %144
%146:	load	 %122
%147:	sext	 %146
%148:	icmp	 %145 %147
%149:	br	 %148 land.end land.rhs

BASIC BLOCK land.rhs
%150:	load	 %124
%151:	load	 %150
%152:	sext	 %151
%153:	load	 %123
%154:	getelementptr	 %153 %152
%155:	load	 %154
%156:	sext	 %155
%157:	icmp	 %156 XXX
%158:	br	 land.end

BASIC BLOCK land.end
%159:	phi	 XXX %157
%160:	br	 %159 while.end while.body

BASIC BLOCK while.body
%161:	load	 %124
%162:	load	 %161
%163:	sub	 %162 XXX
%164:	sext	 %163
%165:	load	 %123
%166:	getelementptr	 %165 %164
%167:	load	 %166
%168:	sext	 %167
%169:	icmp	 %168 XXX
%170:	br	 %169 if.else if.then

BASIC BLOCK if.then
%171:	load	 %123
%172:	load	 %124
%173:	call	 %171 %172 esc
%174:	store	 %173 %130
%175:	sext	 %173
%176:	load	 %125
%177:	load	 %126
%178:	load	 %127
%179:	call	 %175 %176 %177 %178 addstr
%180:	trunc	 %179
%181:	store	 %180 %129
%182:	br	 if.end88

BASIC BLOCK if.else
%183:	load	 %124
%184:	load	 %183
%185:	sext	 %184
%186:	load	 %123
%187:	getelementptr	 %186 %185
%188:	load	 %187
%189:	sext	 %188
%190:	icmp	 %189 XXX
%191:	br	 %190 if.else27 if.then21

BASIC BLOCK if.then21
%192:	load	 %124
%193:	load	 %192
%194:	sext	 %193
%195:	load	 %123
%196:	getelementptr	 %195 %194
%197:	load	 %196
%198:	sext	 %197
%199:	load	 %125
%200:	load	 %126
%201:	load	 %127
%202:	call	 %198 %199 %200 %201 addstr
%203:	trunc	 %202
%204:	store	 %203 %129
%205:	br	 if.end87

BASIC BLOCK if.else27
%206:	load	 %126
%207:	load	 %206
%208:	icmp	 %207 XXX
%209:	br	 %208 lor.lhs.false if.then35

BASIC BLOCK lor.lhs.false
%210:	load	 %124
%211:	load	 %210
%212:	add	 %211 XXX
%213:	sext	 %212
%214:	load	 %123
%215:	getelementptr	 %214 %213
%216:	load	 %215
%217:	sext	 %216
%218:	icmp	 %217 XXX
%219:	br	 %218 if.else38 if.then35

BASIC BLOCK if.then35
%220:	load	 %125
%221:	load	 %126
%222:	load	 %127
%223:	call	 XXX %220 %221 %222 addstr
%224:	trunc	 %223
%225:	store	 %224 %129
%226:	br	 if.end86

BASIC BLOCK if.else38
%227:	load	 %124
%228:	load	 %227
%229:	sub	 %228 XXX
%230:	sext	 %229
%231:	load	 %123
%232:	getelementptr	 %231 %230
%233:	load	 %232
%234:	sext	 %233
%235:	sext	 %234
%236:	call	 __ctype_b_loc
%237:	load	 %236
%238:	getelementptr	 %237 %235
%239:	load	 %238
%240:	zext	 %239
%241:	and	 %240 XXX
%242:	icmp	 %241 XXX
%243:	br	 %242 if.else83 land.lhs.true

BASIC BLOCK land.lhs.true
%244:	load	 %124
%245:	load	 %244
%246:	add	 %245 XXX
%247:	sext	 %246
%248:	load	 %123
%249:	getelementptr	 %248 %247
%250:	load	 %249
%251:	sext	 %250
%252:	sext	 %251
%253:	call	 __ctype_b_loc
%254:	load	 %253
%255:	getelementptr	 %254 %252
%256:	load	 %255
%257:	zext	 %256
%258:	and	 %257 XXX
%259:	icmp	 %258 XXX
%260:	br	 %259 if.else83 land.lhs.true57

BASIC BLOCK land.lhs.true57
%261:	load	 %124
%262:	load	 %261
%263:	sub	 %262 XXX
%264:	sext	 %263
%265:	load	 %123
%266:	getelementptr	 %265 %264
%267:	load	 %266
%268:	sext	 %267
%269:	load	 %124
%270:	load	 %269
%271:	add	 %270 XXX
%272:	sext	 %271
%273:	load	 %123
%274:	getelementptr	 %273 %272
%275:	load	 %274
%276:	sext	 %275
%277:	icmp	 %268 %276
%278:	br	 %277 if.else83 if.then68

BASIC BLOCK if.then68
%279:	load	 %124
%280:	load	 %279
%281:	sub	 %280 XXX
%282:	sext	 %281
%283:	load	 %123
%284:	getelementptr	 %283 %282
%285:	load	 %284
%286:	sext	 %285
%287:	add	 %286 XXX
%288:	store	 %287 %128
%289:	br	 for.cond

BASIC BLOCK for.cond
%290:	load	 %128
%291:	load	 %124
%292:	load	 %291
%293:	add	 %292 XXX
%294:	sext	 %293
%295:	load	 %123
%296:	getelementptr	 %295 %294
%297:	load	 %296
%298:	sext	 %297
%299:	icmp	 %290 %298
%300:	br	 %299 for.end for.body

BASIC BLOCK for.body
%301:	load	 %128
%302:	load	 %125
%303:	load	 %126
%304:	load	 %127
%305:	call	 %301 %302 %303 %304 addstr
%306:	trunc	 %305
%307:	store	 %306 %129
%308:	br	 for.inc

BASIC BLOCK for.inc
%309:	load	 %128
%310:	add	 %309 XXX
%311:	store	 %310 %128
%312:	br	 for.cond

BASIC BLOCK for.end
%313:	load	 %124
%314:	load	 %313
%315:	add	 %314 XXX
%316:	load	 %124
%317:	store	 %315 %316
%318:	br	 if.end

BASIC BLOCK if.else83
%319:	load	 %125
%320:	load	 %126
%321:	load	 %127
%322:	call	 XXX %319 %320 %321 addstr
%323:	trunc	 %322
%324:	store	 %323 %129
%325:	br	 if.end

BASIC BLOCK if.end
%326:	br	 if.end86

BASIC BLOCK if.end86
%327:	br	 if.end87

BASIC BLOCK if.end87
%328:	br	 if.end88

BASIC BLOCK if.end88
%329:	load	 %124
%330:	load	 %329
%331:	add	 %330 XXX
%332:	load	 %124
%333:	store	 %331 %332
%334:	br	 while.cond

BASIC BLOCK while.end
%335:	ret	

FUNCTION getccl

BASIC BLOCK entry
%336:	alloca	 XXX
%337:	alloca	 XXX
%338:	alloca	 XXX
%339:	alloca	 XXX
%340:	alloca	 XXX
%341:	alloca	 XXX
%342:	store	 arg %336
%343:	store	 i %337
%344:	store	 pat %338
%345:	store	 j %339
%346:	load	 %337
%347:	load	 %346
%348:	add	 %347 XXX
%349:	load	 %337
%350:	store	 %348 %349
%351:	load	 %337
%352:	load	 %351
%353:	sext	 %352
%354:	load	 %336
%355:	getelementptr	 %354 %353
%356:	load	 %355
%357:	sext	 %356
%358:	icmp	 %357 XXX
%359:	br	 %358 if.else if.then

BASIC BLOCK if.then
%360:	load	 %338
%361:	load	 %339
%362:	call	 XXX %360 %361 XXX addstr
%363:	trunc	 %362
%364:	store	 %363 %341
%365:	load	 %337
%366:	load	 %365
%367:	add	 %366 XXX
%368:	load	 %337
%369:	store	 %367 %368
%370:	br	 if.end

BASIC BLOCK if.else
%371:	load	 %338
%372:	load	 %339
%373:	call	 XXX %371 %372 XXX addstr
%374:	trunc	 %373
%375:	store	 %374 %341
%376:	br	 if.end

BASIC BLOCK if.end
%377:	load	 %339
%378:	load	 %377
%379:	store	 %378 %340
%380:	load	 %338
%381:	load	 %339
%382:	call	 XXX %380 %381 XXX addstr
%383:	trunc	 %382
%384:	store	 %383 %341
%385:	load	 %336
%386:	load	 %337
%387:	load	 %338
%388:	load	 %339
%389:	call	 XXX %385 %386 %387 %388 XXX dodash
%390:	load	 %339
%391:	load	 %390
%392:	load	 %340
%393:	sub	 %391 %392
%394:	sub	 %393 XXX
%395:	trunc	 %394
%396:	load	 %340
%397:	sext	 %396
%398:	load	 %338
%399:	getelementptr	 %398 %397
%400:	store	 %395 %399
%401:	load	 %337
%402:	load	 %401
%403:	sext	 %402
%404:	load	 %336
%405:	getelementptr	 %404 %403
%406:	load	 %405
%407:	sext	 %406
%408:	icmp	 %407 XXX
%409:	zext	 %408
%410:	trunc	 %409
%411:	ret	 %410

FUNCTION stclose

BASIC BLOCK entry
%412:	alloca	 XXX
%413:	alloca	 XXX
%414:	alloca	 XXX
%415:	alloca	 XXX
%416:	alloca	 XXX
%417:	alloca	 XXX
%418:	store	 pat %412
%419:	store	 j %413
%420:	store	 lastj %414
%421:	load	 %413
%422:	load	 %421
%423:	sub	 %422 XXX
%424:	store	 %423 %416
%425:	br	 for.cond

BASIC BLOCK for.cond
%426:	load	 %416
%427:	load	 %414
%428:	icmp	 %426 %427
%429:	br	 %428 for.end for.body

BASIC BLOCK for.body
%430:	load	 %416
%431:	add	 %430 XXX
%432:	store	 %431 %415
%433:	load	 %416
%434:	sext	 %433
%435:	load	 %412
%436:	getelementptr	 %435 %434
%437:	load	 %436
%438:	sext	 %437
%439:	load	 %412
%440:	call	 %438 %439 %415 XXX addstr
%441:	trunc	 %440
%442:	store	 %441 %417
%443:	br	 for.inc

BASIC BLOCK for.inc
%444:	load	 %416
%445:	add	 %444 XXX
%446:	store	 %445 %416
%447:	br	 for.cond

BASIC BLOCK for.end
%448:	load	 %413
%449:	load	 %448
%450:	add	 %449 XXX
%451:	load	 %413
%452:	store	 %450 %451
%453:	load	 %414
%454:	sext	 %453
%455:	load	 %412
%456:	getelementptr	 %455 %454
%457:	store	 XXX %456
%458:	ret	

FUNCTION in_set_2

BASIC BLOCK entry
%459:	alloca	 XXX
%460:	trunc	 XXX
%461:	store	 %460 %459
%462:	sext	 %460
%463:	icmp	 %462 XXX
%464:	br	 %463 lor.lhs.false lor.end

BASIC BLOCK lor.lhs.false
%465:	load	 %459
%466:	sext	 %465
%467:	icmp	 %466 XXX
%468:	br	 %467 lor.rhs lor.end

BASIC BLOCK lor.rhs
%469:	load	 %459
%470:	sext	 %469
%471:	icmp	 %470 XXX
%472:	br	 lor.end

BASIC BLOCK lor.end
%473:	phi	 XXX XXX %471
%474:	zext	 %473
%475:	trunc	 %474
%476:	ret	 %475

FUNCTION in_pat_set

BASIC BLOCK entry
%477:	alloca	 XXX
%478:	trunc	 XXX
%479:	store	 %478 %477
%480:	sext	 %478
%481:	icmp	 %480 XXX
%482:	br	 %481 lor.lhs.false lor.end

BASIC BLOCK lor.lhs.false
%483:	load	 %477
%484:	sext	 %483
%485:	icmp	 %484 XXX
%486:	br	 %485 lor.lhs.false5 lor.end

BASIC BLOCK lor.lhs.false5
%487:	load	 %477
%488:	sext	 %487
%489:	icmp	 %488 XXX
%490:	br	 %489 lor.lhs.false9 lor.end

BASIC BLOCK lor.lhs.false9
%491:	load	 %477
%492:	sext	 %491
%493:	icmp	 %492 XXX
%494:	br	 %493 lor.lhs.false13 lor.end

BASIC BLOCK lor.lhs.false13
%495:	load	 %477
%496:	sext	 %495
%497:	icmp	 %496 XXX
%498:	br	 %497 lor.lhs.false17 lor.end

BASIC BLOCK lor.lhs.false17
%499:	load	 %477
%500:	sext	 %499
%501:	icmp	 %500 XXX
%502:	br	 %501 lor.rhs lor.end

BASIC BLOCK lor.rhs
%503:	load	 %477
%504:	sext	 %503
%505:	icmp	 %504 XXX
%506:	br	 lor.end

BASIC BLOCK lor.end
%507:	phi	 XXX XXX XXX XXX XXX XXX %505
%508:	zext	 %507
%509:	trunc	 %508
%510:	ret	 %509

FUNCTION makepat

BASIC BLOCK entry
%511:	alloca	 XXX
%512:	alloca	 XXX
%513:	alloca	 XXX
%514:	alloca	 XXX
%515:	alloca	 XXX
%516:	alloca	 XXX
%517:	alloca	 XXX
%518:	alloca	 XXX
%519:	alloca	 XXX
%520:	alloca	 XXX
%521:	alloca	 XXX
%522:	alloca	 XXX
%523:	alloca	 XXX
%524:	store	 arg %511
%525:	store	 start %512
%526:	trunc	 XXX
%527:	store	 %526 %513
%528:	store	 pat %514
%529:	store	 XXX %517
%530:	load	 %512
%531:	store	 %530 %516
%532:	store	 XXX %518
%533:	store	 XXX %520
%534:	br	 while.cond

BASIC BLOCK while.cond
%535:	load	 %520
%536:	icmp	 %535 XXX
%537:	br	 %536 land.lhs.true land.end

BASIC BLOCK land.lhs.true
%538:	load	 %516
%539:	sext	 %538
%540:	load	 %511
%541:	getelementptr	 %540 %539
%542:	load	 %541
%543:	sext	 %542
%544:	load	 %513
%545:	sext	 %544
%546:	icmp	 %543 %545
%547:	br	 %546 land.end land.rhs

BASIC BLOCK land.rhs
%548:	load	 %516
%549:	sext	 %548
%550:	load	 %511
%551:	getelementptr	 %550 %549
%552:	load	 %551
%553:	sext	 %552
%554:	icmp	 %553 XXX
%555:	br	 land.end

BASIC BLOCK land.end
%556:	phi	 XXX XXX %554
%557:	br	 %556 while.end while.body

BASIC BLOCK while.body
%558:	load	 %517
%559:	store	 %558 %519
%560:	load	 %516
%561:	sext	 %560
%562:	load	 %511
%563:	getelementptr	 %562 %561
%564:	load	 %563
%565:	sext	 %564
%566:	icmp	 %565 XXX
%567:	br	 %566 if.else if.then

BASIC BLOCK if.then
%568:	load	 %514
%569:	call	 XXX %568 %517 XXX addstr
%570:	trunc	 %569
%571:	store	 %570 %521
%572:	br	 if.end81

BASIC BLOCK if.else
%573:	load	 %516
%574:	sext	 %573
%575:	load	 %511
%576:	getelementptr	 %575 %574
%577:	load	 %576
%578:	sext	 %577
%579:	icmp	 %578 XXX
%580:	br	 %579 if.else25 land.lhs.true19

BASIC BLOCK land.lhs.true19
%581:	load	 %516
%582:	load	 %512
%583:	icmp	 %581 %582
%584:	br	 %583 if.else25 if.then22

BASIC BLOCK if.then22
%585:	load	 %514
%586:	call	 XXX %585 %517 XXX addstr
%587:	trunc	 %586
%588:	store	 %587 %521
%589:	br	 if.end80

BASIC BLOCK if.else25
%590:	load	 %516
%591:	sext	 %590
%592:	load	 %511
%593:	getelementptr	 %592 %591
%594:	load	 %593
%595:	sext	 %594
%596:	icmp	 %595 XXX
%597:	br	 %596 if.else41 land.lhs.true31

BASIC BLOCK land.lhs.true31
%598:	load	 %516
%599:	add	 %598 XXX
%600:	sext	 %599
%601:	load	 %511
%602:	getelementptr	 %601 %600
%603:	load	 %602
%604:	sext	 %603
%605:	load	 %513
%606:	sext	 %605
%607:	icmp	 %604 %606
%608:	br	 %607 if.else41 if.then38

BASIC BLOCK if.then38
%609:	load	 %514
%610:	call	 XXX %609 %517 XXX addstr
%611:	trunc	 %610
%612:	store	 %611 %521
%613:	br	 if.end79

BASIC BLOCK if.else41
%614:	load	 %516
%615:	sext	 %614
%616:	load	 %511
%617:	getelementptr	 %616 %615
%618:	load	 %617
%619:	sext	 %618
%620:	icmp	 %619 XXX
%621:	br	 %620 if.else53 if.then47

BASIC BLOCK if.then47
%622:	load	 %511
%623:	load	 %514
%624:	call	 %622 %516 %623 %517 getccl
%625:	store	 %624 %522
%626:	sext	 %624
%627:	icmp	 %626 XXX
%628:	zext	 %627
%629:	trunc	 %628
%630:	store	 %629 %520
%631:	br	 if.end78

BASIC BLOCK if.else53
%632:	load	 %516
%633:	sext	 %632
%634:	load	 %511
%635:	getelementptr	 %634 %633
%636:	load	 %635
%637:	sext	 %636
%638:	icmp	 %637 XXX
%639:	br	 %638 if.else70 land.lhs.true59

BASIC BLOCK land.lhs.true59
%640:	load	 %516
%641:	load	 %512
%642:	icmp	 %640 %641
%643:	br	 %642 if.else70 if.then62

BASIC BLOCK if.then62
%644:	load	 %518
%645:	store	 %644 %519
%646:	sext	 %644
%647:	load	 %514
%648:	getelementptr	 %647 %646
%649:	load	 %648
%650:	sext	 %649
%651:	call	 %650 in_set_2
%652:	icmp	 %651 XXX
%653:	br	 %652 if.else69 if.then68

BASIC BLOCK if.then68
%654:	store	 XXX %520
%655:	br	 if.end

BASIC BLOCK if.else69
%656:	load	 %514
%657:	load	 %518
%658:	call	 %656 %517 %657 stclose
%659:	br	 if.end

BASIC BLOCK if.end
%660:	br	 if.end77

BASIC BLOCK if.else70
%661:	load	 %514
%662:	call	 XXX %661 %517 XXX addstr
%663:	trunc	 %662
%664:	store	 %663 %521
%665:	load	 %511
%666:	call	 %665 %516 esc
%667:	store	 %666 %523
%668:	sext	 %666
%669:	load	 %514
%670:	call	 %668 %669 %517 XXX addstr
%671:	trunc	 %670
%672:	store	 %671 %521
%673:	br	 if.end77

BASIC BLOCK if.end77
%674:	br	 if.end78

BASIC BLOCK if.end78
%675:	br	 if.end79

BASIC BLOCK if.end79
%676:	br	 if.end80

BASIC BLOCK if.end80
%677:	br	 if.end81

BASIC BLOCK if.end81
%678:	load	 %519
%679:	store	 %678 %518
%680:	load	 %520
%681:	icmp	 %680 XXX
%682:	br	 %681 if.then83 if.end85

BASIC BLOCK if.then83
%683:	load	 %516
%684:	add	 %683 XXX
%685:	store	 %684 %516
%686:	br	 if.end85

BASIC BLOCK if.end85
%687:	br	 while.cond

BASIC BLOCK while.end
%688:	load	 %514
%689:	call	 XXX %688 %517 XXX addstr
%690:	trunc	 %689
%691:	store	 %690 %521
%692:	load	 %520
%693:	sext	 %692
%694:	icmp	 %693 XXX
%695:	br	 %694 lor.lhs.false if.then96

BASIC BLOCK lor.lhs.false
%696:	load	 %516
%697:	sext	 %696
%698:	load	 %511
%699:	getelementptr	 %698 %697
%700:	load	 %699
%701:	sext	 %700
%702:	load	 %513
%703:	sext	 %702
%704:	icmp	 %701 %703
%705:	br	 %704 if.else97 if.then96

BASIC BLOCK if.then96
%706:	store	 XXX %515
%707:	br	 if.end102

BASIC BLOCK if.else97
%708:	load	 %521
%709:	icmp	 %708 XXX
%710:	br	 %709 if.then99 if.else100

BASIC BLOCK if.then99
%711:	store	 XXX %515
%712:	br	 if.end101

BASIC BLOCK if.else100
%713:	load	 %516
%714:	store	 %713 %515
%715:	br	 if.end101

BASIC BLOCK if.end101
%716:	br	 if.end102

BASIC BLOCK if.end102
%717:	load	 %515
%718:	ret	 %717

FUNCTION getpat

BASIC BLOCK entry
%719:	alloca	 XXX
%720:	alloca	 XXX
%721:	alloca	 XXX
%722:	store	 arg %719
%723:	store	 pat %720
%724:	load	 %719
%725:	load	 %720
%726:	call	 %724 XXX XXX %725 makepat
%727:	store	 %726 %721
%728:	icmp	 %726 XXX
%729:	zext	 %728
%730:	ret	 %729

FUNCTION makesub

BASIC BLOCK entry
%731:	alloca	 XXX
%732:	alloca	 XXX
%733:	alloca	 XXX
%734:	alloca	 XXX
%735:	alloca	 XXX
%736:	alloca	 XXX
%737:	alloca	 XXX
%738:	alloca	 XXX
%739:	alloca	 XXX
%740:	store	 arg %731
%741:	store	 from %732
%742:	trunc	 XXX
%743:	store	 %742 %733
%744:	store	 sub %734
%745:	store	 XXX %737
%746:	load	 %732
%747:	store	 %746 %736
%748:	br	 while.cond

BASIC BLOCK while.cond
%749:	load	 %736
%750:	sext	 %749
%751:	load	 %731
%752:	getelementptr	 %751 %750
%753:	load	 %752
%754:	sext	 %753
%755:	load	 %733
%756:	sext	 %755
%757:	icmp	 %754 %756
%758:	br	 %757 land.end land.rhs

BASIC BLOCK land.rhs
%759:	load	 %736
%760:	sext	 %759
%761:	load	 %731
%762:	getelementptr	 %761 %760
%763:	load	 %762
%764:	sext	 %763
%765:	icmp	 %764 XXX
%766:	br	 land.end

BASIC BLOCK land.end
%767:	phi	 XXX %765
%768:	br	 %767 while.end while.body

BASIC BLOCK while.body
%769:	load	 %736
%770:	sext	 %769
%771:	load	 %731
%772:	getelementptr	 %771 %770
%773:	load	 %772
%774:	sext	 %773
%775:	icmp	 %774 XXX
%776:	br	 %775 if.else if.then

BASIC BLOCK if.then
%777:	load	 %734
%778:	call	 XXX %777 %737 XXX addstr
%779:	trunc	 %778
%780:	store	 %779 %738
%781:	br	 if.end

BASIC BLOCK if.else
%782:	load	 %731
%783:	call	 %782 %736 esc
%784:	store	 %783 %739
%785:	sext	 %783
%786:	load	 %734
%787:	call	 %785 %786 %737 XXX addstr
%788:	trunc	 %787
%789:	store	 %788 %738
%790:	br	 if.end

BASIC BLOCK if.end
%791:	load	 %736
%792:	add	 %791 XXX
%793:	store	 %792 %736
%794:	br	 while.cond

BASIC BLOCK while.end
%795:	load	 %736
%796:	sext	 %795
%797:	load	 %731
%798:	getelementptr	 %797 %796
%799:	load	 %798
%800:	sext	 %799
%801:	load	 %733
%802:	sext	 %801
%803:	icmp	 %800 %802
%804:	br	 %803 if.else25 if.then24

BASIC BLOCK if.then24
%805:	store	 XXX %735
%806:	br	 if.end31

BASIC BLOCK if.else25
%807:	load	 %734
%808:	call	 XXX %807 %737 XXX addstr
%809:	trunc	 %808
%810:	store	 %809 %738
%811:	icmp	 %809 XXX
%812:	br	 %811 if.then28 if.else29

BASIC BLOCK if.then28
%813:	store	 XXX %735
%814:	br	 if.end30

BASIC BLOCK if.else29
%815:	load	 %736
%816:	store	 %815 %735
%817:	br	 if.end30

BASIC BLOCK if.end30
%818:	br	 if.end31

BASIC BLOCK if.end31
%819:	load	 %735
%820:	ret	 %819

FUNCTION getsub

BASIC BLOCK entry
%821:	alloca	 XXX
%822:	alloca	 XXX
%823:	alloca	 XXX
%824:	store	 arg %821
%825:	store	 sub %822
%826:	load	 %821
%827:	load	 %822
%828:	call	 %826 XXX XXX %827 makesub
%829:	store	 %828 %823
%830:	icmp	 %828 XXX
%831:	zext	 %830
%832:	trunc	 %831
%833:	ret	 %832

FUNCTION locate

BASIC BLOCK entry
%834:	alloca	 XXX
%835:	alloca	 XXX
%836:	alloca	 XXX
%837:	alloca	 XXX
%838:	alloca	 XXX
%839:	trunc	 XXX
%840:	store	 %839 %834
%841:	store	 pat %835
%842:	store	 offset %836
%843:	store	 XXX %838
%844:	load	 %836
%845:	load	 %836
%846:	sext	 %845
%847:	load	 %835
%848:	getelementptr	 %847 %846
%849:	load	 %848
%850:	sext	 %849
%851:	add	 %844 %850
%852:	store	 %851 %837
%853:	br	 while.cond

BASIC BLOCK while.cond
%854:	load	 %837
%855:	load	 %836
%856:	icmp	 %854 %855
%857:	br	 %856 while.end while.body

BASIC BLOCK while.body
%858:	load	 %834
%859:	sext	 %858
%860:	load	 %837
%861:	sext	 %860
%862:	load	 %835
%863:	getelementptr	 %862 %861
%864:	load	 %863
%865:	sext	 %864
%866:	icmp	 %859 %865
%867:	br	 %866 if.else if.then

BASIC BLOCK if.then
%868:	store	 XXX %838
%869:	load	 %836
%870:	store	 %869 %837
%871:	br	 if.end

BASIC BLOCK if.else
%872:	load	 %837
%873:	sub	 %872 XXX
%874:	store	 %873 %837
%875:	br	 if.end

BASIC BLOCK if.end
%876:	br	 while.cond

BASIC BLOCK while.end
%877:	load	 %838
%878:	ret	 %877

FUNCTION omatch

BASIC BLOCK entry
%879:	alloca	 XXX
%880:	alloca	 XXX
%881:	alloca	 XXX
%882:	alloca	 XXX
%883:	alloca	 XXX
%884:	alloca	 XXX
%885:	store	 lin %879
%886:	store	 i %880
%887:	store	 pat %881
%888:	store	 j %882
%889:	store	 XXX %883
%890:	load	 %880
%891:	load	 %890
%892:	sext	 %891
%893:	load	 %879
%894:	getelementptr	 %893 %892
%895:	load	 %894
%896:	sext	 %895
%897:	icmp	 %896 XXX
%898:	br	 %897 if.else if.then

BASIC BLOCK if.then
%899:	store	 XXX %884
%900:	br	 if.end68

BASIC BLOCK if.else
%901:	load	 %882
%902:	sext	 %901
%903:	load	 %881
%904:	getelementptr	 %903 %902
%905:	load	 %904
%906:	sext	 %905
%907:	call	 %906 in_pat_set
%908:	icmp	 %907 XXX
%909:	br	 %908 if.then5 if.else7

BASIC BLOCK if.then5
%910:	load	 stdout
%911:	call	 %910 XXX fprintf
%912:	call	 abort
%913:	unreachable	

BASIC BLOCK if.else7
%914:	load	 %882
%915:	sext	 %914
%916:	load	 %881
%917:	getelementptr	 %916 %915
%918:	load	 %917
%919:	sext	 %918
%920:	switch	 %919 sw.default XXX sw.bb XXX sw.bb20 XXX sw.bb25 XXX sw.bb33 XXX sw.bb41 XXX sw.bb50

BASIC BLOCK sw.bb
%921:	load	 %880
%922:	load	 %921
%923:	sext	 %922
%924:	load	 %879
%925:	getelementptr	 %924 %923
%926:	load	 %925
%927:	sext	 %926
%928:	load	 %882
%929:	add	 %928 XXX
%930:	sext	 %929
%931:	load	 %881
%932:	getelementptr	 %931 %930
%933:	load	 %932
%934:	sext	 %933
%935:	icmp	 %927 %934
%936:	br	 %935 if.end if.then19

BASIC BLOCK if.then19
%937:	store	 XXX %883
%938:	br	 if.end

BASIC BLOCK if.end
%939:	br	 sw.epilog

BASIC BLOCK sw.bb20
%940:	load	 %880
%941:	load	 %940
%942:	icmp	 %941 XXX
%943:	br	 %942 if.end24 if.then23

BASIC BLOCK if.then23
%944:	store	 XXX %883
%945:	br	 if.end24

BASIC BLOCK if.end24
%946:	br	 sw.epilog

BASIC BLOCK sw.bb25
%947:	load	 %880
%948:	load	 %947
%949:	sext	 %948
%950:	load	 %879
%951:	getelementptr	 %950 %949
%952:	load	 %951
%953:	sext	 %952
%954:	icmp	 %953 XXX
%955:	br	 %954 if.end32 if.then31

BASIC BLOCK if.then31
%956:	store	 XXX %883
%957:	br	 if.end32

BASIC BLOCK if.end32
%958:	br	 sw.epilog

BASIC BLOCK sw.bb33
%959:	load	 %880
%960:	load	 %959
%961:	sext	 %960
%962:	load	 %879
%963:	getelementptr	 %962 %961
%964:	load	 %963
%965:	sext	 %964
%966:	icmp	 %965 XXX
%967:	br	 %966 if.end40 if.then39

BASIC BLOCK if.then39
%968:	store	 XXX %883
%969:	br	 if.end40

BASIC BLOCK if.end40
%970:	br	 sw.epilog

BASIC BLOCK sw.bb41
%971:	load	 %880
%972:	load	 %971
%973:	sext	 %972
%974:	load	 %879
%975:	getelementptr	 %974 %973
%976:	load	 %975
%977:	sext	 %976
%978:	load	 %881
%979:	load	 %882
%980:	add	 %979 XXX
%981:	call	 %977 %978 %980 locate
%982:	icmp	 %981 XXX
%983:	br	 %982 if.end49 if.then48

BASIC BLOCK if.then48
%984:	store	 XXX %883
%985:	br	 if.end49

BASIC BLOCK if.end49
%986:	br	 sw.epilog

BASIC BLOCK sw.bb50
%987:	load	 %880
%988:	load	 %987
%989:	sext	 %988
%990:	load	 %879
%991:	getelementptr	 %990 %989
%992:	load	 %991
%993:	sext	 %992
%994:	icmp	 %993 XXX
%995:	br	 %994 if.end63 land.lhs.true

BASIC BLOCK land.lhs.true
%996:	load	 %880
%997:	load	 %996
%998:	sext	 %997
%999:	load	 %879
%1000:	getelementptr	 %999 %998
%1001:	load	 %1000
%1002:	sext	 %1001
%1003:	load	 %881
%1004:	load	 %882
%1005:	add	 %1004 XXX
%1006:	call	 %1002 %1003 %1005 locate
%1007:	icmp	 %1006 XXX
%1008:	br	 %1007 if.then62 if.end63

BASIC BLOCK if.then62
%1009:	store	 XXX %883
%1010:	br	 if.end63

BASIC BLOCK if.end63
%1011:	br	 sw.epilog

BASIC BLOCK sw.default
%1012:	load	 %882
%1013:	sext	 %1012
%1014:	load	 %881
%1015:	getelementptr	 %1014 %1013
%1016:	load	 %1015
%1017:	sext	 %1016
%1018:	call	 %1017 Caseerror
%1019:	br	 sw.epilog

BASIC BLOCK sw.epilog
%1020:	br	 if.end67

BASIC BLOCK if.end67
%1021:	br	 if.end68

BASIC BLOCK if.end68
%1022:	load	 %883
%1023:	sext	 %1022
%1024:	icmp	 %1023 XXX
%1025:	br	 %1024 if.else75 if.then72

BASIC BLOCK if.then72
%1026:	load	 %880
%1027:	load	 %1026
%1028:	load	 %883
%1029:	sext	 %1028
%1030:	add	 %1027 %1029
%1031:	load	 %880
%1032:	store	 %1030 %1031
%1033:	store	 XXX %884
%1034:	br	 if.end76

BASIC BLOCK if.else75
%1035:	store	 XXX %884
%1036:	br	 if.end76

BASIC BLOCK if.end76
%1037:	load	 %884
%1038:	ret	 %1037

FUNCTION patsize

BASIC BLOCK entry
%1039:	alloca	 XXX
%1040:	alloca	 XXX
%1041:	alloca	 XXX
%1042:	store	 pat %1039
%1043:	store	 n %1040
%1044:	sext	 n
%1045:	load	 %1039
%1046:	getelementptr	 %1045 %1044
%1047:	load	 %1046
%1048:	sext	 %1047
%1049:	call	 %1048 in_pat_set
%1050:	icmp	 %1049 XXX
%1051:	br	 %1050 if.then if.else

BASIC BLOCK if.then
%1052:	load	 stdout
%1053:	call	 %1052 XXX fprintf
%1054:	call	 abort
%1055:	unreachable	

BASIC BLOCK if.else
%1056:	load	 %1040
%1057:	sext	 %1056
%1058:	load	 %1039
%1059:	getelementptr	 %1058 %1057
%1060:	load	 %1059
%1061:	sext	 %1060
%1062:	switch	 %1061 sw.default XXX sw.bb XXX sw.bb5 XXX sw.bb5 XXX sw.bb5 XXX sw.bb6 XXX sw.bb6 XXX sw.bb11

BASIC BLOCK sw.bb
%1063:	store	 XXX %1041
%1064:	br	 sw.epilog

BASIC BLOCK sw.bb5
%1065:	store	 XXX %1041
%1066:	br	 sw.epilog

BASIC BLOCK sw.bb6
%1067:	load	 %1040
%1068:	add	 %1067 XXX
%1069:	sext	 %1068
%1070:	load	 %1039
%1071:	getelementptr	 %1070 %1069
%1072:	load	 %1071
%1073:	sext	 %1072
%1074:	add	 %1073 XXX
%1075:	store	 %1074 %1041
%1076:	br	 sw.epilog

BASIC BLOCK sw.bb11
%1077:	store	 XXX %1041
%1078:	br	 sw.epilog

BASIC BLOCK sw.default
%1079:	load	 %1040
%1080:	sext	 %1079
%1081:	load	 %1039
%1082:	getelementptr	 %1081 %1080
%1083:	load	 %1082
%1084:	sext	 %1083
%1085:	call	 %1084 Caseerror
%1086:	br	 sw.epilog

BASIC BLOCK sw.epilog
%1087:	br	 if.end

BASIC BLOCK if.end
%1088:	load	 %1041
%1089:	ret	 %1088

FUNCTION amatch

BASIC BLOCK entry
%1090:	alloca	 XXX
%1091:	alloca	 XXX
%1092:	alloca	 XXX
%1093:	alloca	 XXX
%1094:	alloca	 XXX
%1095:	alloca	 XXX
%1096:	alloca	 XXX
%1097:	alloca	 XXX
%1098:	store	 lin %1090
%1099:	store	 offset %1091
%1100:	store	 pat %1092
%1101:	store	 j %1093
%1102:	store	 XXX %1097
%1103:	br	 while.cond

BASIC BLOCK while.cond
%1104:	load	 %1097
%1105:	icmp	 %1104 XXX
%1106:	br	 %1105 land.rhs land.end

BASIC BLOCK land.rhs
%1107:	load	 %1093
%1108:	sext	 %1107
%1109:	load	 %1092
%1110:	getelementptr	 %1109 %1108
%1111:	load	 %1110
%1112:	sext	 %1111
%1113:	icmp	 %1112 XXX
%1114:	br	 land.end

BASIC BLOCK land.end
%1115:	phi	 XXX %1113
%1116:	br	 %1115 while.end44 while.body

BASIC BLOCK while.body
%1117:	load	 %1093
%1118:	sext	 %1117
%1119:	load	 %1092
%1120:	getelementptr	 %1119 %1118
%1121:	load	 %1120
%1122:	sext	 %1121
%1123:	icmp	 %1122 XXX
%1124:	br	 %1123 if.else35 if.then

BASIC BLOCK if.then
%1125:	load	 %1093
%1126:	load	 %1092
%1127:	load	 %1093
%1128:	call	 %1126 %1127 patsize
%1129:	add	 %1125 %1128
%1130:	store	 %1129 %1093
%1131:	load	 %1091
%1132:	store	 %1131 %1094
%1133:	br	 while.cond7

BASIC BLOCK while.cond7
%1134:	load	 %1097
%1135:	icmp	 %1134 XXX
%1136:	br	 %1135 land.rhs9 land.end15

BASIC BLOCK land.rhs9
%1137:	load	 %1094
%1138:	sext	 %1137
%1139:	load	 %1090
%1140:	getelementptr	 %1139 %1138
%1141:	load	 %1140
%1142:	sext	 %1141
%1143:	icmp	 %1142 XXX
%1144:	br	 land.end15

BASIC BLOCK land.end15
%1145:	phi	 XXX %1143
%1146:	br	 %1145 while.end while.body16

BASIC BLOCK while.body16
%1147:	load	 %1090
%1148:	load	 %1092
%1149:	load	 %1093
%1150:	call	 %1147 %1094 %1148 %1149 omatch
%1151:	store	 %1150 %1096
%1152:	icmp	 %1150 XXX
%1153:	br	 %1152 if.then19 if.end

BASIC BLOCK if.then19
%1154:	store	 XXX %1097
%1155:	br	 if.end

BASIC BLOCK if.end
%1156:	br	 while.cond7

BASIC BLOCK while.end
%1157:	store	 XXX %1097
%1158:	br	 while.cond20

BASIC BLOCK while.cond20
%1159:	load	 %1097
%1160:	icmp	 %1159 XXX
%1161:	br	 %1160 land.rhs22 land.end25

BASIC BLOCK land.rhs22
%1162:	load	 %1094
%1163:	load	 %1091
%1164:	icmp	 %1162 %1163
%1165:	br	 land.end25

BASIC BLOCK land.end25
%1166:	phi	 XXX %1164
%1167:	br	 %1166 while.end34 while.body26

BASIC BLOCK while.body26
%1168:	load	 %1090
%1169:	load	 %1094
%1170:	load	 %1092
%1171:	load	 %1093
%1172:	load	 %1092
%1173:	load	 %1093
%1174:	call	 %1172 %1173 patsize
%1175:	add	 %1171 %1174
%1176:	call	 %1168 %1169 %1170 %1175 amatch
%1177:	store	 %1176 %1095
%1178:	icmp	 %1176 XXX
%1179:	br	 %1178 if.else if.then32

BASIC BLOCK if.then32
%1180:	store	 XXX %1097
%1181:	br	 if.end33

BASIC BLOCK if.else
%1182:	load	 %1094
%1183:	sub	 %1182 XXX
%1184:	store	 %1183 %1094
%1185:	br	 if.end33

BASIC BLOCK if.end33
%1186:	br	 while.cond20

BASIC BLOCK while.end34
%1187:	load	 %1095
%1188:	store	 %1187 %1091
%1189:	store	 XXX %1097
%1190:	br	 if.end43

BASIC BLOCK if.else35
%1191:	load	 %1090
%1192:	load	 %1092
%1193:	load	 %1093
%1194:	call	 %1191 %1091 %1192 %1193 omatch
%1195:	store	 %1194 %1096
%1196:	icmp	 %1194 XXX
%1197:	br	 %1196 if.then38 if.else39

BASIC BLOCK if.then38
%1198:	store	 XXX %1091
%1199:	store	 XXX %1097
%1200:	br	 if.end42

BASIC BLOCK if.else39
%1201:	load	 %1093
%1202:	load	 %1092
%1203:	load	 %1093
%1204:	call	 %1202 %1203 patsize
%1205:	add	 %1201 %1204
%1206:	store	 %1205 %1093
%1207:	br	 if.end42

BASIC BLOCK if.end42
%1208:	br	 if.end43

BASIC BLOCK if.end43
%1209:	br	 while.cond

BASIC BLOCK while.end44
%1210:	load	 %1091
%1211:	ret	 %1210

FUNCTION putsub

BASIC BLOCK entry
%1212:	alloca	 XXX
%1213:	alloca	 XXX
%1214:	alloca	 XXX
%1215:	alloca	 XXX
%1216:	alloca	 XXX
%1217:	alloca	 XXX
%1218:	store	 lin %1212
%1219:	store	 s1 %1213
%1220:	store	 s2 %1214
%1221:	store	 sub %1215
%1222:	store	 XXX %1216
%1223:	br	 while.cond

BASIC BLOCK while.cond
%1224:	load	 %1216
%1225:	sext	 %1224
%1226:	load	 %1215
%1227:	getelementptr	 %1226 %1225
%1228:	load	 %1227
%1229:	sext	 %1228
%1230:	icmp	 %1229 XXX
%1231:	br	 %1230 while.end while.body

BASIC BLOCK while.body
%1232:	load	 %1216
%1233:	sext	 %1232
%1234:	load	 %1215
%1235:	getelementptr	 %1234 %1233
%1236:	load	 %1235
%1237:	sext	 %1236
%1238:	icmp	 %1237 XXX
%1239:	br	 %1238 if.else if.then

BASIC BLOCK if.then
%1240:	load	 %1213
%1241:	store	 %1240 %1217
%1242:	br	 for.cond

BASIC BLOCK for.cond
%1243:	load	 %1217
%1244:	load	 %1214
%1245:	icmp	 %1243 %1244
%1246:	br	 %1245 for.end for.body

BASIC BLOCK for.body
%1247:	load	 %1217
%1248:	sext	 %1247
%1249:	load	 %1212
%1250:	getelementptr	 %1249 %1248
%1251:	load	 %1250
%1252:	sext	 %1251
%1253:	load	 stdout
%1254:	call	 %1252 %1253 fputc
%1255:	br	 for.inc

BASIC BLOCK for.inc
%1256:	load	 %1217
%1257:	add	 %1256 XXX
%1258:	store	 %1257 %1217
%1259:	br	 for.cond

BASIC BLOCK for.end
%1260:	br	 if.end

BASIC BLOCK if.else
%1261:	load	 %1216
%1262:	sext	 %1261
%1263:	load	 %1215
%1264:	getelementptr	 %1263 %1262
%1265:	load	 %1264
%1266:	sext	 %1265
%1267:	load	 stdout
%1268:	call	 %1266 %1267 fputc
%1269:	br	 if.end

BASIC BLOCK if.end
%1270:	load	 %1216
%1271:	add	 %1270 XXX
%1272:	store	 %1271 %1216
%1273:	br	 while.cond

BASIC BLOCK while.end
%1274:	ret	

FUNCTION subline

BASIC BLOCK entry
%1275:	alloca	 XXX
%1276:	alloca	 XXX
%1277:	alloca	 XXX
%1278:	alloca	 XXX
%1279:	alloca	 XXX
%1280:	alloca	 XXX
%1281:	store	 lin %1275
%1282:	store	 pat %1276
%1283:	store	 sub %1277
%1284:	store	 XXX %1279
%1285:	store	 XXX %1278
%1286:	br	 while.cond

BASIC BLOCK while.cond
%1287:	load	 %1278
%1288:	sext	 %1287
%1289:	load	 %1275
%1290:	getelementptr	 %1289 %1288
%1291:	load	 %1290
%1292:	sext	 %1291
%1293:	icmp	 %1292 XXX
%1294:	br	 %1293 while.end while.body

BASIC BLOCK while.body
%1295:	load	 %1275
%1296:	load	 %1278
%1297:	load	 %1276
%1298:	call	 %1295 %1296 %1297 XXX amatch
%1299:	store	 %1298 %1280
%1300:	icmp	 %1298 XXX
%1301:	br	 %1300 if.end land.lhs.true

BASIC BLOCK land.lhs.true
%1302:	load	 %1279
%1303:	load	 %1280
%1304:	icmp	 %1302 %1303
%1305:	br	 %1304 if.end if.then

BASIC BLOCK if.then
%1306:	load	 %1275
%1307:	load	 %1278
%1308:	load	 %1280
%1309:	load	 %1277
%1310:	call	 %1306 %1307 %1308 %1309 putsub
%1311:	load	 %1280
%1312:	store	 %1311 %1279
%1313:	br	 if.end

BASIC BLOCK if.end
%1314:	load	 %1280
%1315:	icmp	 %1314 XXX
%1316:	br	 %1315 lor.lhs.false if.then10

BASIC BLOCK lor.lhs.false
%1317:	load	 %1280
%1318:	load	 %1278
%1319:	icmp	 %1317 %1318
%1320:	br	 %1319 if.else if.then10

BASIC BLOCK if.then10
%1321:	load	 %1278
%1322:	sext	 %1321
%1323:	load	 %1275
%1324:	getelementptr	 %1323 %1322
%1325:	load	 %1324
%1326:	sext	 %1325
%1327:	load	 stdout
%1328:	call	 %1326 %1327 fputc
%1329:	load	 %1278
%1330:	add	 %1329 XXX
%1331:	store	 %1330 %1278
%1332:	br	 if.end15

BASIC BLOCK if.else
%1333:	load	 %1280
%1334:	store	 %1333 %1278
%1335:	br	 if.end15

BASIC BLOCK if.end15
%1336:	br	 while.cond

BASIC BLOCK while.end
%1337:	ret	

FUNCTION change

BASIC BLOCK entry
%1338:	alloca	 XXX
%1339:	alloca	 XXX
%1340:	alloca	 XXX
%1341:	alloca	 XXX
%1342:	store	 pat %1338
%1343:	store	 sub %1339
%1344:	getelementptr	 %1340 XXX XXX
%1345:	call	 %1344 XXX mygetline
%1346:	store	 %1345 %1341
%1347:	br	 while.cond

BASIC BLOCK while.cond
%1348:	load	 %1341
%1349:	icmp	 %1348 XXX
%1350:	br	 %1349 while.end while.body

BASIC BLOCK while.body
%1351:	getelementptr	 %1340 XXX XXX
%1352:	load	 %1338
%1353:	load	 %1339
%1354:	call	 %1351 %1352 %1353 subline
%1355:	getelementptr	 %1340 XXX XXX
%1356:	call	 %1355 XXX mygetline
%1357:	store	 %1356 %1341
%1358:	br	 while.cond

BASIC BLOCK while.end
%1359:	ret	

FUNCTION main

BASIC BLOCK entry
%1360:	alloca	 XXX
%1361:	alloca	 XXX
%1362:	alloca	 XXX
%1363:	alloca	 XXX
%1364:	alloca	 XXX
%1365:	alloca	 XXX
%1366:	store	 XXX %1360
%1367:	store	 argc %1361
%1368:	store	 argv %1362
%1369:	load	 %1361
%1370:	icmp	 %1369 XXX
%1371:	br	 %1370 if.end if.then

BASIC BLOCK if.then
%1372:	load	 stdout
%1373:	call	 %1372 XXX fprintf
%1374:	call	 XXX exit
%1375:	unreachable	

BASIC BLOCK if.end
%1376:	load	 %1362
%1377:	getelementptr	 %1376 XXX
%1378:	load	 %1377
%1379:	getelementptr	 %1363 XXX XXX
%1380:	call	 %1378 %1379 getpat
%1381:	trunc	 %1380
%1382:	store	 %1381 %1365
%1383:	icmp	 %1381 XXX
%1384:	br	 %1383 if.then2 if.end4

BASIC BLOCK if.then2
%1385:	load	 stdout
%1386:	call	 %1385 XXX fprintf
%1387:	call	 XXX exit
%1388:	unreachable	

BASIC BLOCK if.end4
%1389:	load	 %1361
%1390:	icmp	 %1389 XXX
%1391:	br	 %1390 if.else if.then7

BASIC BLOCK if.then7
%1392:	load	 %1362
%1393:	getelementptr	 %1392 XXX
%1394:	load	 %1393
%1395:	getelementptr	 %1364 XXX XXX
%1396:	call	 %1394 %1395 getsub
%1397:	store	 %1396 %1365
%1398:	icmp	 %1396 XXX
%1399:	br	 %1398 if.then12 if.end14

BASIC BLOCK if.then12
%1400:	load	 stdout
%1401:	call	 %1400 XXX fprintf
%1402:	call	 XXX exit
%1403:	unreachable	

BASIC BLOCK if.end14
%1404:	br	 if.end16

BASIC BLOCK if.else
%1405:	getelementptr	 %1364 XXX XXX
%1406:	store	 XXX %1405
%1407:	br	 if.end16

BASIC BLOCK if.end16
%1408:	getelementptr	 %1363 XXX XXX
%1409:	getelementptr	 %1364 XXX XXX
%1410:	call	 %1408 %1409 change
%1411:	ret	 XXX

FUNCTION Caseerror

BASIC BLOCK entry
%1412:	alloca	 XXX
%1413:	store	 n %1412
%1414:	load	 stdout
%1415:	load	 %1412
%1416:	call	 %1414 XXX %1415 fprintf
%1417:	call	 XXX exit
%1418:	unreachable	

BASIC BLOCK return
%1419:	ret	
